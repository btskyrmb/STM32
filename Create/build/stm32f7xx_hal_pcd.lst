ARM GAS  /tmp/cc1DR21h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f7xx_hal_pcd.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.PCD_WriteEmptyTxFifo,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	PCD_WriteEmptyTxFifo:
  26              	.LFB168:
  27              		.file 1 "HALLIB/Src/stm32f7xx_hal_pcd.c"
   1:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
   2:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ******************************************************************************
   3:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @file    stm32f7xx_hal_pcd.c
   4:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @author  MCD Application Team
   5:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief   PCD HAL module driver.
   6:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *          This file provides firmware functions to manage the following
   7:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *          functionalities of the USB Peripheral Controller:
   8:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *           + Initialization and de-initialization functions
   9:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *           + IO operation functions
  10:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *           + Peripheral Control functions
  11:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *           + Peripheral State functions
  12:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *
  13:HALLIB/Src/stm32f7xx_hal_pcd.c ****   @verbatim
  14:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ==============================================================================
  15:HALLIB/Src/stm32f7xx_hal_pcd.c ****                     ##### How to use this driver #####
  16:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ==============================================================================
  17:HALLIB/Src/stm32f7xx_hal_pcd.c ****     [..]
  18:HALLIB/Src/stm32f7xx_hal_pcd.c ****       The PCD HAL driver can be used as follows:
  19:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  20:HALLIB/Src/stm32f7xx_hal_pcd.c ****      (#) Declare a PCD_HandleTypeDef handle structure, for example:
  21:HALLIB/Src/stm32f7xx_hal_pcd.c ****          PCD_HandleTypeDef  hpcd;
  22:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  23:HALLIB/Src/stm32f7xx_hal_pcd.c ****      (#) Fill parameters of Init structure in HCD handle
  24:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  25:HALLIB/Src/stm32f7xx_hal_pcd.c ****      (#) Call HAL_PCD_Init() API to initialize the PCD peripheral (Core, Device core, ...)
  26:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  27:HALLIB/Src/stm32f7xx_hal_pcd.c ****      (#) Initialize the PCD low level resources through the HAL_PCD_MspInit() API:
  28:HALLIB/Src/stm32f7xx_hal_pcd.c ****          (##) Enable the PCD/USB Low Level interface clock using
  29:HALLIB/Src/stm32f7xx_hal_pcd.c ****               (+++) __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  30:HALLIB/Src/stm32f7xx_hal_pcd.c ****               (+++) __HAL_RCC_USB_OTG_HS_CLK_ENABLE(); (For High Speed Mode)
  31:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
ARM GAS  /tmp/cc1DR21h.s 			page 2


  32:HALLIB/Src/stm32f7xx_hal_pcd.c ****          (##) Initialize the related GPIO clocks
  33:HALLIB/Src/stm32f7xx_hal_pcd.c ****          (##) Configure PCD pin-out
  34:HALLIB/Src/stm32f7xx_hal_pcd.c ****          (##) Configure PCD NVIC interrupt
  35:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  36:HALLIB/Src/stm32f7xx_hal_pcd.c ****      (#)Associate the Upper USB device stack to the HAL PCD Driver:
  37:HALLIB/Src/stm32f7xx_hal_pcd.c ****          (##) hpcd.pData = pdev;
  38:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  39:HALLIB/Src/stm32f7xx_hal_pcd.c ****      (#)Enable PCD transmission and reception:
  40:HALLIB/Src/stm32f7xx_hal_pcd.c ****          (##) HAL_PCD_Start();
  41:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  42:HALLIB/Src/stm32f7xx_hal_pcd.c ****   @endverbatim
  43:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ******************************************************************************
  44:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @attention
  45:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *
  46:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  47:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *
  48:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * Redistribution and use in source and binary forms, with or without modification,
  49:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * are permitted provided that the following conditions are met:
  50:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  51:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *      this list of conditions and the following disclaimer.
  52:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  53:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *      this list of conditions and the following disclaimer in the documentation
  54:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *      and/or other materials provided with the distribution.
  55:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  56:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *      may be used to endorse or promote products derived from this software
  57:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *      without specific prior written permission.
  58:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *
  59:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  60:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  61:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  62:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  63:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  64:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  65:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  66:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  67:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  68:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  69:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *
  70:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ******************************************************************************
  71:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
  72:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  73:HALLIB/Src/stm32f7xx_hal_pcd.c **** /* Includes ------------------------------------------------------------------*/
  74:HALLIB/Src/stm32f7xx_hal_pcd.c **** #include "stm32f7xx_hal.h"
  75:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  76:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @addtogroup STM32F7xx_HAL_Driver
  77:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
  78:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
  79:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  80:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @defgroup PCD PCD
  81:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief PCD HAL module driver
  82:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
  83:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
  84:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  85:HALLIB/Src/stm32f7xx_hal_pcd.c **** #ifdef HAL_PCD_MODULE_ENABLED
  86:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
  87:HALLIB/Src/stm32f7xx_hal_pcd.c **** /* Private types -------------------------------------------------------------*/
  88:HALLIB/Src/stm32f7xx_hal_pcd.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /tmp/cc1DR21h.s 			page 3


  89:HALLIB/Src/stm32f7xx_hal_pcd.c **** /* Private constants ---------------------------------------------------------*/
  90:HALLIB/Src/stm32f7xx_hal_pcd.c **** /* Private macros ------------------------------------------------------------*/
  91:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @defgroup PCD_Private_Macros PCD Private Macros
  92:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
  93:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
  94:HALLIB/Src/stm32f7xx_hal_pcd.c **** #define PCD_MIN(a, b)  (((a) < (b)) ? (a) : (b))
  95:HALLIB/Src/stm32f7xx_hal_pcd.c **** #define PCD_MAX(a, b)  (((a) > (b)) ? (a) : (b))
  96:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
  97:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @}
  98:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
  99:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 100:HALLIB/Src/stm32f7xx_hal_pcd.c **** /* Private functions prototypes ----------------------------------------------*/
 101:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @defgroup PCD_Private_Functions PCD Private Functions
 102:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
 103:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 104:HALLIB/Src/stm32f7xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum);
 105:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 106:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @}
 107:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 108:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 109:HALLIB/Src/stm32f7xx_hal_pcd.c **** /* Exported functions --------------------------------------------------------*/
 110:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions PCD Exported Functions
 111:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
 112:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 113:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 114:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions_Group1 Initialization and de-initialization functions
 115:HALLIB/Src/stm32f7xx_hal_pcd.c ****  *  @brief    Initialization and Configuration functions
 116:HALLIB/Src/stm32f7xx_hal_pcd.c ****  *
 117:HALLIB/Src/stm32f7xx_hal_pcd.c **** @verbatim
 118:HALLIB/Src/stm32f7xx_hal_pcd.c ****  ===============================================================================
 119:HALLIB/Src/stm32f7xx_hal_pcd.c ****             ##### Initialization and de-initialization functions #####
 120:HALLIB/Src/stm32f7xx_hal_pcd.c ****  ===============================================================================
 121:HALLIB/Src/stm32f7xx_hal_pcd.c ****     [..]  This section provides functions allowing to:
 122:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 123:HALLIB/Src/stm32f7xx_hal_pcd.c **** @endverbatim
 124:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
 125:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 126:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 127:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 128:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Initializes the PCD according to the specified
 129:HALLIB/Src/stm32f7xx_hal_pcd.c ****   *         parameters in the PCD_InitTypeDef and create the associated handle.
 130:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 131:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 132:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 133:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
 134:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 135:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t i = 0;
 136:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 137:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Check the PCD handle allocation */
 138:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if(hpcd == NULL)
 139:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 140:HALLIB/Src/stm32f7xx_hal_pcd.c ****     return HAL_ERROR;
 141:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 142:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 143:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Check the parameters */
 144:HALLIB/Src/stm32f7xx_hal_pcd.c ****   assert_param(IS_PCD_ALL_INSTANCE(hpcd->Instance));
 145:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
ARM GAS  /tmp/cc1DR21h.s 			page 4


 146:HALLIB/Src/stm32f7xx_hal_pcd.c ****   hpcd->State = HAL_PCD_STATE_BUSY;
 147:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 148:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 149:HALLIB/Src/stm32f7xx_hal_pcd.c ****   HAL_PCD_MspInit(hpcd);
 150:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 151:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Disable the Interrupts */
 152:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __HAL_PCD_DISABLE(hpcd);
 153:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 154:HALLIB/Src/stm32f7xx_hal_pcd.c ****  /*Init the Core (common init.) */
 155:HALLIB/Src/stm32f7xx_hal_pcd.c ****  USB_CoreInit(hpcd->Instance, hpcd->Init);
 156:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 157:HALLIB/Src/stm32f7xx_hal_pcd.c ****  /* Force Device Mode*/
 158:HALLIB/Src/stm32f7xx_hal_pcd.c ****  USB_SetCurrentMode(hpcd->Instance , USB_OTG_DEVICE_MODE);
 159:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 160:HALLIB/Src/stm32f7xx_hal_pcd.c ****  /* Init endpoints structures */
 161:HALLIB/Src/stm32f7xx_hal_pcd.c ****  for (i = 0; i < 15 ; i++)
 162:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 163:HALLIB/Src/stm32f7xx_hal_pcd.c ****    /* Init ep structure */
 164:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].is_in = 1;
 165:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].num = i;
 166:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].tx_fifo_num = i;
 167:HALLIB/Src/stm32f7xx_hal_pcd.c ****    /* Control until ep is activated */
 168:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 169:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].maxpacket =  0;
 170:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].xfer_buff = 0;
 171:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].xfer_len = 0;
 172:HALLIB/Src/stm32f7xx_hal_pcd.c ****  }
 173:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 174:HALLIB/Src/stm32f7xx_hal_pcd.c ****  for (i = 0; i < 15 ; i++)
 175:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 176:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].is_in = 0;
 177:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].num = i;
 178:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].tx_fifo_num = i;
 179:HALLIB/Src/stm32f7xx_hal_pcd.c ****    /* Control until ep is activated */
 180:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 181:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].maxpacket = 0;
 182:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].xfer_buff = 0;
 183:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].xfer_len = 0;
 184:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 185:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->Instance->DIEPTXF[i] = 0;
 186:HALLIB/Src/stm32f7xx_hal_pcd.c ****  }
 187:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 188:HALLIB/Src/stm32f7xx_hal_pcd.c ****  /* Init Device */
 189:HALLIB/Src/stm32f7xx_hal_pcd.c ****  USB_DevInit(hpcd->Instance, hpcd->Init);
 190:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 191:HALLIB/Src/stm32f7xx_hal_pcd.c ****  hpcd->State= HAL_PCD_STATE_READY;
 192:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 193:HALLIB/Src/stm32f7xx_hal_pcd.c ****  /* Activate LPM */
 194:HALLIB/Src/stm32f7xx_hal_pcd.c ****  if (hpcd->Init.lpm_enable ==1)
 195:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 196:HALLIB/Src/stm32f7xx_hal_pcd.c ****    HAL_PCDEx_ActivateLPM(hpcd);
 197:HALLIB/Src/stm32f7xx_hal_pcd.c ****  }
 198:HALLIB/Src/stm32f7xx_hal_pcd.c **** #if defined (USB_OTG_GCCFG_BCDEN)
 199:HALLIB/Src/stm32f7xx_hal_pcd.c ****  /* Activate Battery charging */
 200:HALLIB/Src/stm32f7xx_hal_pcd.c ****  if (hpcd->Init.battery_charging_enable ==1)
 201:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 202:HALLIB/Src/stm32f7xx_hal_pcd.c ****    HAL_PCDEx_ActivateBCD(hpcd);
ARM GAS  /tmp/cc1DR21h.s 			page 5


 203:HALLIB/Src/stm32f7xx_hal_pcd.c ****  }
 204:HALLIB/Src/stm32f7xx_hal_pcd.c **** #endif /* USB_OTG_GCCFG_BCDEN */
 205:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 206:HALLIB/Src/stm32f7xx_hal_pcd.c ****  USB_DevDisconnect (hpcd->Instance);
 207:HALLIB/Src/stm32f7xx_hal_pcd.c ****  return HAL_OK;
 208:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 209:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 210:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 211:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  DeInitializes the PCD peripheral.
 212:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 213:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 214:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 215:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_DeInit(PCD_HandleTypeDef *hpcd)
 216:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 217:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Check the PCD handle allocation */
 218:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if(hpcd == NULL)
 219:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 220:HALLIB/Src/stm32f7xx_hal_pcd.c ****     return HAL_ERROR;
 221:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 222:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 223:HALLIB/Src/stm32f7xx_hal_pcd.c ****   hpcd->State = HAL_PCD_STATE_BUSY;
 224:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 225:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Stop Device */
 226:HALLIB/Src/stm32f7xx_hal_pcd.c ****   HAL_PCD_Stop(hpcd);
 227:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 228:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* DeInit the low level hardware */
 229:HALLIB/Src/stm32f7xx_hal_pcd.c ****   HAL_PCD_MspDeInit(hpcd);
 230:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 231:HALLIB/Src/stm32f7xx_hal_pcd.c ****   hpcd->State = HAL_PCD_STATE_RESET;
 232:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 233:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 234:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 235:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 236:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 237:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Initializes the PCD MSP.
 238:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 239:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 240:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 241:HALLIB/Src/stm32f7xx_hal_pcd.c **** __weak void HAL_PCD_MspInit(PCD_HandleTypeDef *hpcd)
 242:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 243:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 244:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 245:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 246:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 247:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_MspInit could be implemented in the user file
 248:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 249:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 250:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 251:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 252:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  DeInitializes PCD MSP.
 253:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 254:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 255:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 256:HALLIB/Src/stm32f7xx_hal_pcd.c **** __weak void HAL_PCD_MspDeInit(PCD_HandleTypeDef *hpcd)
 257:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 258:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 259:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
ARM GAS  /tmp/cc1DR21h.s 			page 6


 260:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 261:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 262:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_MspDeInit could be implemented in the user file
 263:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 264:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 265:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 266:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 267:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @}
 268:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 269:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 270:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions_Group2 Input and Output operation functions
 271:HALLIB/Src/stm32f7xx_hal_pcd.c ****  *  @brief   Data transfers functions
 272:HALLIB/Src/stm32f7xx_hal_pcd.c ****  *
 273:HALLIB/Src/stm32f7xx_hal_pcd.c **** @verbatim
 274:HALLIB/Src/stm32f7xx_hal_pcd.c ****  ===============================================================================
 275:HALLIB/Src/stm32f7xx_hal_pcd.c ****                       ##### IO operation functions #####
 276:HALLIB/Src/stm32f7xx_hal_pcd.c ****  ===============================================================================
 277:HALLIB/Src/stm32f7xx_hal_pcd.c ****     [..]
 278:HALLIB/Src/stm32f7xx_hal_pcd.c ****     This subsection provides a set of functions allowing to manage the PCD data
 279:HALLIB/Src/stm32f7xx_hal_pcd.c ****     transfers.
 280:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 281:HALLIB/Src/stm32f7xx_hal_pcd.c **** @endverbatim
 282:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
 283:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 284:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 285:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 286:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Start The USB OTG Device.
 287:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 288:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 289:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 290:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
 291:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 292:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 293:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevConnect (hpcd->Instance);
 294:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_PCD_ENABLE(hpcd);
 295:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 296:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 297:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 298:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 299:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 300:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Stop The USB OTG Device.
 301:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 302:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 303:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 304:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_Stop(PCD_HandleTypeDef *hpcd)
 305:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 306:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 307:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_PCD_DISABLE(hpcd);
 308:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_StopDevice(hpcd->Instance);
 309:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevDisconnect (hpcd->Instance);
 310:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 311:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 312:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 313:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 314:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 315:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Handle PCD interrupt request.
 316:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
ARM GAS  /tmp/cc1DR21h.s 			page 7


 317:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 318:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 319:HALLIB/Src/stm32f7xx_hal_pcd.c **** void HAL_PCD_IRQHandler(PCD_HandleTypeDef *hpcd)
 320:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 321:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 322:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t i = 0, ep_intr = 0, epint = 0, epnum = 0;
 323:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t fifoemptymsk = 0, temp = 0;
 324:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep = NULL;
 325:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t hclk = 200000000;
 326:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 327:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* ensure that we are in device mode */
 328:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 329:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 330:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* avoid spurious interrupt */
 331:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 332:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 333:HALLIB/Src/stm32f7xx_hal_pcd.c ****       return;
 334:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 335:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 336:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 337:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 338:HALLIB/Src/stm32f7xx_hal_pcd.c ****      /* incorrect mode, acknowledge the interrupt */
 339:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 340:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 341:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 342:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 343:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 344:HALLIB/Src/stm32f7xx_hal_pcd.c ****       epnum = 0;
 345:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 346:HALLIB/Src/stm32f7xx_hal_pcd.c ****       /* Read in the device interrupt bits */
 347:HALLIB/Src/stm32f7xx_hal_pcd.c ****       ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 348:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 349:HALLIB/Src/stm32f7xx_hal_pcd.c ****       while ( ep_intr )
 350:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 351:HALLIB/Src/stm32f7xx_hal_pcd.c ****         if (ep_intr & 0x1)
 352:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 353:HALLIB/Src/stm32f7xx_hal_pcd.c ****           epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, epnum);
 354:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 355:HALLIB/Src/stm32f7xx_hal_pcd.c ****           if(( epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 356:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 357:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 358:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 359:HALLIB/Src/stm32f7xx_hal_pcd.c ****             /* setup/out transaction management for Core ID >= 310A */
 360:HALLIB/Src/stm32f7xx_hal_pcd.c ****             if (hpcd->Init.dma_enable == 1)
 361:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 362:HALLIB/Src/stm32f7xx_hal_pcd.c ****               if (USBx_OUTEP(0)->DOEPINT & (1 << 15))
 363:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 364:HALLIB/Src/stm32f7xx_hal_pcd.c ****                 CLEAR_OUT_EP_INTR(epnum, (1 << 15));
 365:HALLIB/Src/stm32f7xx_hal_pcd.c ****               }
 366:HALLIB/Src/stm32f7xx_hal_pcd.c ****             }
 367:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 368:HALLIB/Src/stm32f7xx_hal_pcd.c ****             if(hpcd->Init.dma_enable == 1)
 369:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 370:HALLIB/Src/stm32f7xx_hal_pcd.c ****               hpcd->OUT_ep[epnum].xfer_count = hpcd->OUT_ep[epnum].maxpacket- (USBx_OUTEP(epnum)->D
 371:HALLIB/Src/stm32f7xx_hal_pcd.c ****               hpcd->OUT_ep[epnum].xfer_buff += hpcd->OUT_ep[epnum].maxpacket;
 372:HALLIB/Src/stm32f7xx_hal_pcd.c ****             }
 373:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
ARM GAS  /tmp/cc1DR21h.s 			page 8


 374:HALLIB/Src/stm32f7xx_hal_pcd.c ****             HAL_PCD_DataOutStageCallback(hpcd, epnum);
 375:HALLIB/Src/stm32f7xx_hal_pcd.c ****             if(hpcd->Init.dma_enable == 1)
 376:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 377:HALLIB/Src/stm32f7xx_hal_pcd.c ****               if((epnum == 0) && (hpcd->OUT_ep[epnum].xfer_len == 0))
 378:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 379:HALLIB/Src/stm32f7xx_hal_pcd.c ****                  /* this is ZLP, so prepare EP0 for next setup */
 380:HALLIB/Src/stm32f7xx_hal_pcd.c ****                 USB_EP0_OutStart(hpcd->Instance, 1, (uint8_t *)hpcd->Setup);
 381:HALLIB/Src/stm32f7xx_hal_pcd.c ****               }
 382:HALLIB/Src/stm32f7xx_hal_pcd.c ****             }
 383:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 384:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 385:HALLIB/Src/stm32f7xx_hal_pcd.c ****           if(( epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 386:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 387:HALLIB/Src/stm32f7xx_hal_pcd.c ****             /* setup/out transaction management for Core ID >= 310A */
 388:HALLIB/Src/stm32f7xx_hal_pcd.c ****             if (hpcd->Init.dma_enable == 1)
 389:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 390:HALLIB/Src/stm32f7xx_hal_pcd.c ****               if (USBx_OUTEP(0)->DOEPINT & (1 << 15))
 391:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 392:HALLIB/Src/stm32f7xx_hal_pcd.c ****                 CLEAR_OUT_EP_INTR(epnum, (1 << 15));
 393:HALLIB/Src/stm32f7xx_hal_pcd.c ****               }
 394:HALLIB/Src/stm32f7xx_hal_pcd.c ****             }
 395:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 396:HALLIB/Src/stm32f7xx_hal_pcd.c ****             /* Inform the upper layer that a setup packet is available */
 397:HALLIB/Src/stm32f7xx_hal_pcd.c ****             HAL_PCD_SetupStageCallback(hpcd);
 398:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 399:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 400:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 401:HALLIB/Src/stm32f7xx_hal_pcd.c ****           if(( epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 402:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 403:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 404:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 405:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* Clear Status Phase Received interrupt */
 406:HALLIB/Src/stm32f7xx_hal_pcd.c ****           if(( epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 407:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 408:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 409:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 410:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 411:HALLIB/Src/stm32f7xx_hal_pcd.c ****         epnum++;
 412:HALLIB/Src/stm32f7xx_hal_pcd.c ****         ep_intr >>= 1;
 413:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 414:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 415:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 416:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 417:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 418:HALLIB/Src/stm32f7xx_hal_pcd.c ****       /* Read in the device interrupt bits */
 419:HALLIB/Src/stm32f7xx_hal_pcd.c ****       ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 420:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 421:HALLIB/Src/stm32f7xx_hal_pcd.c ****       epnum = 0;
 422:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 423:HALLIB/Src/stm32f7xx_hal_pcd.c ****       while ( ep_intr )
 424:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 425:HALLIB/Src/stm32f7xx_hal_pcd.c ****         if (ep_intr & 0x1) /* In ITR */
 426:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 427:HALLIB/Src/stm32f7xx_hal_pcd.c ****           epint = USB_ReadDevInEPInterrupt(hpcd->Instance, epnum);
 428:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 429:HALLIB/Src/stm32f7xx_hal_pcd.c ****            if(( epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 430:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
ARM GAS  /tmp/cc1DR21h.s 			page 9


 431:HALLIB/Src/stm32f7xx_hal_pcd.c ****             fifoemptymsk = 0x1 << epnum;
 432:HALLIB/Src/stm32f7xx_hal_pcd.c ****             USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 433:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 434:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 435:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 436:HALLIB/Src/stm32f7xx_hal_pcd.c ****             if (hpcd->Init.dma_enable == 1)
 437:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 438:HALLIB/Src/stm32f7xx_hal_pcd.c ****               hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 439:HALLIB/Src/stm32f7xx_hal_pcd.c ****             }
 440:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 441:HALLIB/Src/stm32f7xx_hal_pcd.c ****             HAL_PCD_DataInStageCallback(hpcd, epnum);
 442:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 443:HALLIB/Src/stm32f7xx_hal_pcd.c ****             if (hpcd->Init.dma_enable == 1)
 444:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 445:HALLIB/Src/stm32f7xx_hal_pcd.c ****               /* this is ZLP, so prepare EP0 for next setup */
 446:HALLIB/Src/stm32f7xx_hal_pcd.c ****               if((epnum == 0) && (hpcd->IN_ep[epnum].xfer_len == 0))
 447:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 448:HALLIB/Src/stm32f7xx_hal_pcd.c ****                 /* prepare to rx more setup packets */
 449:HALLIB/Src/stm32f7xx_hal_pcd.c ****                 USB_EP0_OutStart(hpcd->Instance, 1, (uint8_t *)hpcd->Setup);
 450:HALLIB/Src/stm32f7xx_hal_pcd.c ****               }
 451:HALLIB/Src/stm32f7xx_hal_pcd.c ****             }
 452:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 453:HALLIB/Src/stm32f7xx_hal_pcd.c ****            if(( epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 454:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 455:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 456:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 457:HALLIB/Src/stm32f7xx_hal_pcd.c ****           if(( epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 458:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 459:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 460:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 461:HALLIB/Src/stm32f7xx_hal_pcd.c ****           if(( epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 462:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 463:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 464:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 465:HALLIB/Src/stm32f7xx_hal_pcd.c ****           if(( epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 466:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 467:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 468:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 469:HALLIB/Src/stm32f7xx_hal_pcd.c ****           if(( epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 470:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 471:HALLIB/Src/stm32f7xx_hal_pcd.c ****             PCD_WriteEmptyTxFifo(hpcd , epnum);
 472:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 473:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 474:HALLIB/Src/stm32f7xx_hal_pcd.c ****         epnum++;
 475:HALLIB/Src/stm32f7xx_hal_pcd.c ****         ep_intr >>= 1;
 476:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 477:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 478:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 479:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle Resume Interrupt */
 480:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 481:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 482:HALLIB/Src/stm32f7xx_hal_pcd.c ****       /* Clear the Remote Wake-up Signaling */
 483:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 484:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 485:HALLIB/Src/stm32f7xx_hal_pcd.c ****       if(hpcd->LPM_State == LPM_L1)
 486:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 487:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->LPM_State = LPM_L0;
ARM GAS  /tmp/cc1DR21h.s 			page 10


 488:HALLIB/Src/stm32f7xx_hal_pcd.c ****         HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 489:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 490:HALLIB/Src/stm32f7xx_hal_pcd.c ****       else
 491:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 492:HALLIB/Src/stm32f7xx_hal_pcd.c ****         HAL_PCD_ResumeCallback(hpcd);
 493:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 494:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 495:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 496:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 497:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle Suspend Interrupt */
 498:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 499:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 500:HALLIB/Src/stm32f7xx_hal_pcd.c ****       if((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 501:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 502:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 503:HALLIB/Src/stm32f7xx_hal_pcd.c ****         HAL_PCD_SuspendCallback(hpcd);
 504:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 505:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 506:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 507:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 508:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle LPM Interrupt */
 509:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT))
 510:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 511:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT);
 512:HALLIB/Src/stm32f7xx_hal_pcd.c ****       if( hpcd->LPM_State == LPM_L0)
 513:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 514:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->LPM_State = LPM_L1;
 515:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->BESL = (hpcd->Instance->GLPMCFG & USB_OTG_GLPMCFG_BESL) >>2 ;
 516:HALLIB/Src/stm32f7xx_hal_pcd.c ****         HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
 517:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 518:HALLIB/Src/stm32f7xx_hal_pcd.c ****       else
 519:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 520:HALLIB/Src/stm32f7xx_hal_pcd.c ****         HAL_PCD_SuspendCallback(hpcd);
 521:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 522:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 523:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 524:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle Reset Interrupt */
 525:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 526:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 527:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 528:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USB_FlushTxFifo(hpcd->Instance, 0x10);
 529:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 530:HALLIB/Src/stm32f7xx_hal_pcd.c ****       for (i = 0; i < hpcd->Init.dev_endpoints ; i++)
 531:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 532:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_INEP(i)->DIEPINT = 0xFF;
 533:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 534:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_OUTEP(i)->DOEPINT = 0xFF;
 535:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 536:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 537:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USBx_DEVICE->DAINT = 0xFFFFFFFF;
 538:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USBx_DEVICE->DAINTMSK |= 0x10001;
 539:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 540:HALLIB/Src/stm32f7xx_hal_pcd.c ****       if(hpcd->Init.use_dedicated_ep1)
 541:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 542:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_DEVICE->DOUTEP1MSK |= (USB_OTG_DOEPMSK_STUPM | USB_OTG_DOEPMSK_XFRCM | USB_OTG_DOEPMSK
 543:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_DEVICE->DINEP1MSK |= (USB_OTG_DIEPMSK_TOM | USB_OTG_DIEPMSK_XFRCM | USB_OTG_DIEPMSK_EP
 544:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
ARM GAS  /tmp/cc1DR21h.s 			page 11


 545:HALLIB/Src/stm32f7xx_hal_pcd.c ****       else
 546:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 547:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_DEVICE->DOEPMSK |= (USB_OTG_DOEPMSK_STUPM | USB_OTG_DOEPMSK_XFRCM | USB_OTG_DOEPMSK_EP
 548:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_DEVICE->DIEPMSK |= (USB_OTG_DIEPMSK_TOM | USB_OTG_DIEPMSK_XFRCM | USB_OTG_DIEPMSK_EPDM
 549:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 550:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 551:HALLIB/Src/stm32f7xx_hal_pcd.c ****       /* Set Default Address to 0 */
 552:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 553:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 554:HALLIB/Src/stm32f7xx_hal_pcd.c ****       /* setup EP0 to receive SETUP packets */
 555:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USB_EP0_OutStart(hpcd->Instance, hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 556:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 557:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 558:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 559:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 560:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle Enumeration done Interrupt */
 561:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 562:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 563:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USB_ActivateSetup(hpcd->Instance);
 564:HALLIB/Src/stm32f7xx_hal_pcd.c ****       hpcd->Instance->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 565:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 566:HALLIB/Src/stm32f7xx_hal_pcd.c ****       if ( USB_GetDevSpeed(hpcd->Instance) == USB_OTG_SPEED_HIGH)
 567:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 568:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->Init.speed            = USB_OTG_SPEED_HIGH;
 569:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->Init.ep0_mps          = USB_OTG_HS_MAX_PACKET_SIZE ;
 570:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->Instance->GUSBCFG |= (uint32_t)((USBD_HS_TRDT_VALUE << 10) & USB_OTG_GUSBCFG_TRDT);
 571:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 572:HALLIB/Src/stm32f7xx_hal_pcd.c ****       else
 573:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 574:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->Init.speed            = USB_OTG_SPEED_FULL;
 575:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->Init.ep0_mps          = USB_OTG_FS_MAX_PACKET_SIZE ;
 576:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 577:HALLIB/Src/stm32f7xx_hal_pcd.c ****         /* The USBTRD is configured according to the tables below, depending on AHB frequency
 578:HALLIB/Src/stm32f7xx_hal_pcd.c ****         used by application. In the low AHB frequency range it is used to stretch enough the USB re
 579:HALLIB/Src/stm32f7xx_hal_pcd.c ****         time to IN tokens, the USB turnaround time, so to compensate for the longer AHB read access
 580:HALLIB/Src/stm32f7xx_hal_pcd.c ****         latency to the Data FIFO */
 581:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 582:HALLIB/Src/stm32f7xx_hal_pcd.c ****         /* Get hclk frequency value */
 583:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hclk = HAL_RCC_GetHCLKFreq();
 584:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 585:HALLIB/Src/stm32f7xx_hal_pcd.c **** 		if((hclk >= 14200000)&&(hclk < 15000000))
 586:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 587:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 14.2-15 MHz */
 588:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0xF << 10) & USB_OTG_GUSBCFG_TRDT);
 589:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 590:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 591:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else if((hclk >= 15000000)&&(hclk < 16000000))
 592:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 593:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 15-16 MHz */
 594:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0xE << 10) & USB_OTG_GUSBCFG_TRDT);
 595:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 596:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 597:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else if((hclk >= 16000000)&&(hclk < 17200000))
 598:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 599:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 16-17.2 MHz */
 600:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0xD << 10) & USB_OTG_GUSBCFG_TRDT);
 601:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
ARM GAS  /tmp/cc1DR21h.s 			page 12


 602:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 603:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else if((hclk >= 17200000)&&(hclk < 18500000))
 604:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 605:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 17.2-18.5 MHz */
 606:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0xC << 10) & USB_OTG_GUSBCFG_TRDT);
 607:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 608:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 609:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else if((hclk >= 18500000)&&(hclk < 20000000))
 610:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 611:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 18.5-20 MHz */
 612:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0xB << 10) & USB_OTG_GUSBCFG_TRDT);
 613:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 614:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 615:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else if((hclk >= 20000000)&&(hclk < 21800000))
 616:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 617:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 20-21.8 MHz */
 618:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0xA << 10) & USB_OTG_GUSBCFG_TRDT);
 619:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 620:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 621:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else if((hclk >= 21800000)&&(hclk < 24000000))
 622:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 623:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 21.8-24 MHz */
 624:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0x9 << 10) & USB_OTG_GUSBCFG_TRDT);
 625:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 626:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 627:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else if((hclk >= 24000000)&&(hclk < 27700000))
 628:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 629:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 24-27.7 MHz */
 630:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0x8 << 10) & USB_OTG_GUSBCFG_TRDT);
 631:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 632:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 633:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else if((hclk >= 27700000)&&(hclk < 32000000))
 634:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 635:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 27.7-32 MHz */
 636:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0x7 << 10) & USB_OTG_GUSBCFG_TRDT);
 637:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 638:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 639:HALLIB/Src/stm32f7xx_hal_pcd.c ****         else /* if(hclk >= 32000000) */
 640:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 641:HALLIB/Src/stm32f7xx_hal_pcd.c ****           /* hclk Clock Range between 32-200 MHz */
 642:HALLIB/Src/stm32f7xx_hal_pcd.c ****           hpcd->Instance->GUSBCFG |= (uint32_t)((0x6 << 10) & USB_OTG_GUSBCFG_TRDT);
 643:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 644:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 645:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 646:HALLIB/Src/stm32f7xx_hal_pcd.c ****       HAL_PCD_ResetCallback(hpcd);
 647:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 648:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 649:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 650:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 651:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle RxQLevel Interrupt */
 652:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 653:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 654:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 655:HALLIB/Src/stm32f7xx_hal_pcd.c ****       temp = USBx->GRXSTSP;
 656:HALLIB/Src/stm32f7xx_hal_pcd.c ****       ep = &hpcd->OUT_ep[temp & USB_OTG_GRXSTSP_EPNUM];
 657:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 658:HALLIB/Src/stm32f7xx_hal_pcd.c ****       if(((temp & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
ARM GAS  /tmp/cc1DR21h.s 			page 13


 659:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 660:HALLIB/Src/stm32f7xx_hal_pcd.c ****         if((temp & USB_OTG_GRXSTSP_BCNT) != 0)
 661:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 662:HALLIB/Src/stm32f7xx_hal_pcd.c ****           USB_ReadPacket(USBx, ep->xfer_buff, (temp & USB_OTG_GRXSTSP_BCNT) >> 4);
 663:HALLIB/Src/stm32f7xx_hal_pcd.c ****           ep->xfer_buff += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 664:HALLIB/Src/stm32f7xx_hal_pcd.c ****           ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 665:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 666:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 667:HALLIB/Src/stm32f7xx_hal_pcd.c ****       else if (((temp & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_SETUP_UPDT)
 668:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 669:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8);
 670:HALLIB/Src/stm32f7xx_hal_pcd.c ****         ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 671:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 672:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 673:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 674:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 675:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle SOF Interrupt */
 676:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 677:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 678:HALLIB/Src/stm32f7xx_hal_pcd.c ****       HAL_PCD_SOFCallback(hpcd);
 679:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 680:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 681:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 682:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle Incomplete ISO IN Interrupt */
 683:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 684:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 685:HALLIB/Src/stm32f7xx_hal_pcd.c ****       HAL_PCD_ISOINIncompleteCallback(hpcd, epnum);
 686:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 687:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 688:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 689:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle Incomplete ISO OUT Interrupt */
 690:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 691:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 692:HALLIB/Src/stm32f7xx_hal_pcd.c ****       HAL_PCD_ISOOUTIncompleteCallback(hpcd, epnum);
 693:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 694:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 695:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 696:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle Connection event Interrupt */
 697:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 698:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 699:HALLIB/Src/stm32f7xx_hal_pcd.c ****       HAL_PCD_ConnectCallback(hpcd);
 700:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 701:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 702:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 703:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Handle Disconnection event Interrupt */
 704:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if(__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 705:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 706:HALLIB/Src/stm32f7xx_hal_pcd.c ****       temp = hpcd->Instance->GOTGINT;
 707:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 708:HALLIB/Src/stm32f7xx_hal_pcd.c ****       if((temp & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 709:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 710:HALLIB/Src/stm32f7xx_hal_pcd.c ****         HAL_PCD_DisconnectCallback(hpcd);
 711:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 712:HALLIB/Src/stm32f7xx_hal_pcd.c ****       hpcd->Instance->GOTGINT |= temp;
 713:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 714:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 715:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
ARM GAS  /tmp/cc1DR21h.s 			page 14


 716:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 717:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 718:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Data OUT stage callback.
 719:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 720:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  epnum endpoint number
 721:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 722:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 723:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 724:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 725:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 726:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 727:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(epnum);
 728:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 729:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_DataOutStageCallback could be implemented in the user file
 730:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 731:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 732:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 733:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 734:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Data IN stage callback.
 735:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 736:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  epnum endpoint number
 737:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 738:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 739:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 740:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 741:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 742:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 743:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(epnum);
 744:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 745:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_DataInStageCallback could be implemented in the user file
 746:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 747:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 748:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 749:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Setup stage callback.
 750:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 751:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 752:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 753:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 754:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 755:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 756:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 757:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 758:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 759:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_SetupStageCallback could be implemented in the user file
 760:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 761:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 762:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 763:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 764:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  USB Start Of Frame callback.
 765:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 766:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 767:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 768:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 769:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 770:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 771:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 772:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
ARM GAS  /tmp/cc1DR21h.s 			page 15


 773:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 774:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_SOFCallback could be implemented in the user file
 775:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 776:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 777:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 778:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 779:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  USB Reset callback.
 780:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 781:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 782:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 783:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 784:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 785:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 786:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 787:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 788:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 789:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_ResetCallback could be implemented in the user file
 790:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 791:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 792:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 793:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 794:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Suspend event callback.
 795:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 796:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 797:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 798:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 799:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 800:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 801:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 802:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 803:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 804:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_SuspendCallback could be implemented in the user file
 805:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 806:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 807:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 808:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 809:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Resume event callback.
 810:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 811:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 812:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 813:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 814:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 815:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 816:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 817:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 818:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 819:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_ResumeCallback could be implemented in the user file
 820:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 821:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 822:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 823:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 824:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Incomplete ISO OUT callback.
 825:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 826:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  epnum endpoint number
 827:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 828:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 829:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
ARM GAS  /tmp/cc1DR21h.s 			page 16


 830:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 831:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 832:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 833:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(epnum);
 834:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 835:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_ISOOUTIncompleteCallback could be implemented in the user file
 836:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 837:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 838:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 839:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 840:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Incomplete ISO IN  callback.
 841:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 842:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  epnum endpoint number
 843:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 844:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 845:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 846:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 847:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 848:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 849:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(epnum);
 850:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 851:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_ISOINIncompleteCallback could be implemented in the user file
 852:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 853:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 854:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 855:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 856:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Connection event callback.
 857:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 858:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 859:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 860:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 861:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 862:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 863:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 864:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 865:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 866:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_ConnectCallback could be implemented in the user file
 867:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 868:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 869:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 870:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 871:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Disconnection event callback.
 872:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 873:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval None
 874:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 875:HALLIB/Src/stm32f7xx_hal_pcd.c ****  __weak void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 876:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 877:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 878:HALLIB/Src/stm32f7xx_hal_pcd.c ****   UNUSED(hpcd);
 879:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 880:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 881:HALLIB/Src/stm32f7xx_hal_pcd.c ****             the HAL_PCD_DisconnectCallback could be implemented in the user file
 882:HALLIB/Src/stm32f7xx_hal_pcd.c ****    */
 883:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 884:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 885:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 886:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @}
ARM GAS  /tmp/cc1DR21h.s 			page 17


 887:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 888:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 889:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions_Group3 Peripheral Control functions
 890:HALLIB/Src/stm32f7xx_hal_pcd.c ****  *  @brief   management functions
 891:HALLIB/Src/stm32f7xx_hal_pcd.c ****  *
 892:HALLIB/Src/stm32f7xx_hal_pcd.c **** @verbatim
 893:HALLIB/Src/stm32f7xx_hal_pcd.c ****  ===============================================================================
 894:HALLIB/Src/stm32f7xx_hal_pcd.c ****                       ##### Peripheral Control functions #####
 895:HALLIB/Src/stm32f7xx_hal_pcd.c ****  ===============================================================================
 896:HALLIB/Src/stm32f7xx_hal_pcd.c ****     [..]
 897:HALLIB/Src/stm32f7xx_hal_pcd.c ****     This subsection provides a set of functions allowing to control the PCD data
 898:HALLIB/Src/stm32f7xx_hal_pcd.c ****     transfers.
 899:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 900:HALLIB/Src/stm32f7xx_hal_pcd.c **** @endverbatim
 901:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
 902:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 903:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 904:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 905:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Connect the USB device.
 906:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 907:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 908:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 909:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_DevConnect(PCD_HandleTypeDef *hpcd)
 910:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 911:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 912:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevConnect(hpcd->Instance);
 913:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 914:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 915:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 916:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 917:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 918:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Disconnect the USB device.
 919:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 920:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 921:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 922:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_DevDisconnect(PCD_HandleTypeDef *hpcd)
 923:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 924:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 925:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevDisconnect(hpcd->Instance);
 926:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 927:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 928:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 929:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 930:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 931:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Set the USB Device address.
 932:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 933:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  address new device address
 934:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 935:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 936:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
 937:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 938:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 939:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_SetDevAddress(hpcd->Instance, address);
 940:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 941:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 942:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 943:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
ARM GAS  /tmp/cc1DR21h.s 			page 18


 944:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Open and configure an endpoint.
 945:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 946:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_addr endpoint address
 947:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_mps endpoint max packet size
 948:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_type endpoint type
 949:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 950:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 951:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint16_t ep_mps, uint8_
 952:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 953:HALLIB/Src/stm32f7xx_hal_pcd.c ****   HAL_StatusTypeDef  ret = HAL_OK;
 954:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 955:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 956:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((ep_addr & 0x80) == 0x80)
 957:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 958:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep = &hpcd->IN_ep[ep_addr & 0x7F];
 959:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 960:HALLIB/Src/stm32f7xx_hal_pcd.c ****   else
 961:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 962:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep = &hpcd->OUT_ep[ep_addr & 0x7F];
 963:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 964:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num   = ep_addr & 0x7F;
 965:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 966:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = (0x80 & ep_addr) != 0;
 967:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->maxpacket = ep_mps;
 968:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->type = ep_type;
 969:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if (ep->is_in)
 970:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 971:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Assign a Tx FIFO */
 972:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep->tx_fifo_num = ep->num;
 973:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 974:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Set initial data PID. */
 975:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if (ep_type == EP_TYPE_BULK )
 976:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 977:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep->data_pid_start = 0;
 978:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 979:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 980:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 981:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_ActivateEndpoint(hpcd->Instance , ep);
 982:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 983:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return ret;
 984:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 985:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 986:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 987:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 988:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Deactivate an endpoint.
 989:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
 990:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_addr endpoint address
 991:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
 992:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
 993:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
 994:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
 995:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 996:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 997:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((ep_addr & 0x80) == 0x80)
 998:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 999:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep = &hpcd->IN_ep[ep_addr & 0x7F];
1000:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
ARM GAS  /tmp/cc1DR21h.s 			page 19


1001:HALLIB/Src/stm32f7xx_hal_pcd.c ****   else
1002:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1003:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep = &hpcd->OUT_ep[ep_addr & 0x7F];
1004:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1005:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num   = ep_addr & 0x7F;
1006:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1007:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = (0x80 & ep_addr) != 0;
1008:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1009:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
1010:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DeactivateEndpoint(hpcd->Instance , ep);
1011:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
1012:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1013:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1014:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1015:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1016:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1017:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Receive an amount of data.
1018:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1019:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1020:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  pBuf pointer to the reception buffer
1021:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  len amount of data to be received
1022:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
1023:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1024:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint3
1025:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1026:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
1027:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1028:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep = &hpcd->OUT_ep[ep_addr & 0x7F];
1029:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1030:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /*setup and start the Xfer */
1031:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_buff = pBuf;
1032:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_len = len;
1033:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_count = 0;
1034:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = 0;
1035:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num = ep_addr & 0x7F;
1036:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1037:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if (hpcd->Init.dma_enable == 1)
1038:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1039:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep->dma_addr = (uint32_t)pBuf;
1040:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1041:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1042:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((ep_addr & 0x7F) == 0)
1043:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1044:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USB_EP0StartXfer(hpcd->Instance, ep, hpcd->Init.dma_enable);
1045:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1046:HALLIB/Src/stm32f7xx_hal_pcd.c ****   else
1047:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1048:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USB_EPStartXfer(hpcd->Instance, ep, hpcd->Init.dma_enable);
1049:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1050:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1051:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1052:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1053:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1054:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1055:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Get Received Data Size.
1056:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1057:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_addr endpoint address
ARM GAS  /tmp/cc1DR21h.s 			page 20


1058:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval Data Size
1059:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1060:HALLIB/Src/stm32f7xx_hal_pcd.c **** uint16_t HAL_PCD_EP_GetRxCount(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1061:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1062:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return hpcd->OUT_ep[ep_addr & 0xF].xfer_count;
1063:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1064:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1065:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Send an amount of data.
1066:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1067:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1068:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  pBuf pointer to the transmission buffer
1069:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  len amount of data to be sent
1070:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
1071:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1072:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint
1073:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1074:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
1075:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1076:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep = &hpcd->IN_ep[ep_addr & 0x7F];
1077:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1078:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /*setup and start the Xfer */
1079:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_buff = pBuf;
1080:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_len = len;
1081:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_count = 0;
1082:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = 1;
1083:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num = ep_addr & 0x7F;
1084:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1085:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if (hpcd->Init.dma_enable == 1)
1086:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1087:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep->dma_addr = (uint32_t)pBuf;
1088:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1089:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1090:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((ep_addr & 0x7F) == 0)
1091:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1092:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USB_EP0StartXfer(hpcd->Instance, ep, hpcd->Init.dma_enable);
1093:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1094:HALLIB/Src/stm32f7xx_hal_pcd.c ****   else
1095:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1096:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USB_EPStartXfer(hpcd->Instance, ep, hpcd->Init.dma_enable);
1097:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1098:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1099:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1100:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1101:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1102:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1103:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Set a STALL condition over an endpoint.
1104:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1105:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1106:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
1107:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1108:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1109:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1110:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
1111:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1112:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((ep_addr & 0x0F) > hpcd->Init.dev_endpoints)
1113:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1114:HALLIB/Src/stm32f7xx_hal_pcd.c ****     return HAL_ERROR;
ARM GAS  /tmp/cc1DR21h.s 			page 21


1115:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1116:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1117:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((0x80 & ep_addr) == 0x80)
1118:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1119:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep = &hpcd->IN_ep[ep_addr & 0x7F];
1120:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1121:HALLIB/Src/stm32f7xx_hal_pcd.c ****   else
1122:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1123:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep = &hpcd->OUT_ep[ep_addr];
1124:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1125:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1126:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_stall = 1;
1127:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num   = ep_addr & 0x7F;
1128:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = ((ep_addr & 0x80) == 0x80);
1129:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1130:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1131:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
1132:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_EPSetStall(hpcd->Instance , ep);
1133:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if((ep_addr & 0x7F) == 0)
1134:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1135:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USB_EP0_OutStart(hpcd->Instance, hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
1136:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1137:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
1138:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1139:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1140:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1141:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1142:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1143:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Clear a STALL condition over in an endpoint.
1144:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1145:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1146:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
1147:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1148:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1149:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1150:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
1151:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1152:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((ep_addr & 0x0F) > hpcd->Init.dev_endpoints)
1153:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1154:HALLIB/Src/stm32f7xx_hal_pcd.c ****     return HAL_ERROR;
1155:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1156:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1157:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((0x80 & ep_addr) == 0x80)
1158:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1159:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep = &hpcd->IN_ep[ep_addr & 0x7F];
1160:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1161:HALLIB/Src/stm32f7xx_hal_pcd.c ****   else
1162:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1163:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep = &hpcd->OUT_ep[ep_addr];
1164:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1165:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1166:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_stall = 0;
1167:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num   = ep_addr & 0x7F;
1168:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = ((ep_addr & 0x80) == 0x80);
1169:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1170:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
1171:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_EPClearStall(hpcd->Instance , ep);
ARM GAS  /tmp/cc1DR21h.s 			page 22


1172:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
1173:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1174:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1175:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1176:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1177:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1178:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Flush an endpoint.
1179:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1180:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  ep_addr endpoint address
1181:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
1182:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1183:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_EP_Flush(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
1184:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1185:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
1186:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1187:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if ((ep_addr & 0x80) == 0x80)
1188:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1189:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USB_FlushTxFifo(hpcd->Instance, ep_addr & 0x7F);
1190:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1191:HALLIB/Src/stm32f7xx_hal_pcd.c ****   else
1192:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1193:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USB_FlushRxFifo(hpcd->Instance);
1194:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1195:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1196:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
1197:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1198:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1199:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1200:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1201:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1202:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Activate remote wakeup signalling.
1203:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1204:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
1205:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1206:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_ActivateRemoteWakeup(PCD_HandleTypeDef *hpcd)
1207:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1208:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
1209:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1210:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
1211:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1212:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Activate Remote wakeup signaling */
1213:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USBx_DEVICE->DCTL |= USB_OTG_DCTL_RWUSIG;
1214:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1215:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1216:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1217:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1218:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1219:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  De-activate remote wakeup signalling.
1220:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1221:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
1222:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1223:HALLIB/Src/stm32f7xx_hal_pcd.c **** HAL_StatusTypeDef HAL_PCD_DeActivateRemoteWakeup(PCD_HandleTypeDef *hpcd)
1224:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1225:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
1226:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1227:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* De-activate Remote wakeup signaling */
1228:HALLIB/Src/stm32f7xx_hal_pcd.c ****    USBx_DEVICE->DCTL &= ~(USB_OTG_DCTL_RWUSIG);
ARM GAS  /tmp/cc1DR21h.s 			page 23


1229:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1230:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1231:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1232:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @}
1233:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1234:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1235:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @defgroup PCD_Exported_Functions_Group4 Peripheral State functions
1236:HALLIB/Src/stm32f7xx_hal_pcd.c ****  *  @brief   Peripheral State functions
1237:HALLIB/Src/stm32f7xx_hal_pcd.c ****  *
1238:HALLIB/Src/stm32f7xx_hal_pcd.c **** @verbatim
1239:HALLIB/Src/stm32f7xx_hal_pcd.c ****  ===============================================================================
1240:HALLIB/Src/stm32f7xx_hal_pcd.c ****                       ##### Peripheral State functions #####
1241:HALLIB/Src/stm32f7xx_hal_pcd.c ****  ===============================================================================
1242:HALLIB/Src/stm32f7xx_hal_pcd.c ****     [..]
1243:HALLIB/Src/stm32f7xx_hal_pcd.c ****     This subsection permits to get in run-time the status of the peripheral
1244:HALLIB/Src/stm32f7xx_hal_pcd.c ****     and the data flow.
1245:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1246:HALLIB/Src/stm32f7xx_hal_pcd.c **** @endverbatim
1247:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
1248:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1249:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1250:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1251:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Return the PCD handle state.
1252:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1253:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL state
1254:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1255:HALLIB/Src/stm32f7xx_hal_pcd.c **** PCD_StateTypeDef HAL_PCD_GetState(PCD_HandleTypeDef *hpcd)
1256:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
1257:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return hpcd->State;
1258:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
1259:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1260:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @}
1261:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1262:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1263:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1264:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @}
1265:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1266:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1267:HALLIB/Src/stm32f7xx_hal_pcd.c **** /* Private functions ---------------------------------------------------------*/
1268:HALLIB/Src/stm32f7xx_hal_pcd.c **** /** @addtogroup PCD_Private_Functions
1269:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @{
1270:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1271:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1272:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
1273:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @brief  Check FIFO for the next packet to be loaded.
1274:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  hpcd PCD handle
1275:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @param  epnum  endpoint number
1276:HALLIB/Src/stm32f7xx_hal_pcd.c ****   * @retval HAL status
1277:HALLIB/Src/stm32f7xx_hal_pcd.c ****   */
1278:HALLIB/Src/stm32f7xx_hal_pcd.c **** static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum)
1279:HALLIB/Src/stm32f7xx_hal_pcd.c **** {
  28              		.loc 1 1279 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/cc1DR21h.s 			page 24


  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 28
  36              		.cfi_offset 4, -28
  37              		.cfi_offset 5, -24
  38              		.cfi_offset 6, -20
  39              		.cfi_offset 7, -16
  40              		.cfi_offset 8, -12
  41              		.cfi_offset 9, -8
  42              		.cfi_offset 14, -4
  43 0004 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 40
  46 0006 0746     		mov	r7, r0
  47 0008 0D46     		mov	r5, r1
1280:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
  48              		.loc 1 1280 0
  49 000a D0F80080 		ldr	r8, [r0]
  50              	.LVL1:
1281:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
1282:HALLIB/Src/stm32f7xx_hal_pcd.c ****   int32_t len = 0;
1283:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t len32b;
1284:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t fifoemptymsk = 0;
1285:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1286:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep = &hpcd->IN_ep[epnum];
1287:HALLIB/Src/stm32f7xx_hal_pcd.c ****   len = ep->xfer_len - ep->xfer_count;
  51              		.loc 1 1287 0
  52 000e CA00     		lsls	r2, r1, #3
  53 0010 521A     		subs	r2, r2, r1
  54 0012 9300     		lsls	r3, r2, #2
  55 0014 0344     		add	r3, r3, r0
  56 0016 DE6C     		ldr	r6, [r3, #76]
  57 0018 1A6D     		ldr	r2, [r3, #80]
  58 001a B61A     		subs	r6, r6, r2
  59              	.LVL2:
1288:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1289:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if (len > ep->maxpacket)
  60              		.loc 1 1289 0
  61 001c 1B6C     		ldr	r3, [r3, #64]
  62 001e 9E42     		cmp	r6, r3
  63 0020 00D9     		bls	.L2
1290:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1291:HALLIB/Src/stm32f7xx_hal_pcd.c ****     len = ep->maxpacket;
  64              		.loc 1 1291 0
  65 0022 1E46     		mov	r6, r3
  66              	.LVL3:
  67              	.L2:
1292:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1293:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1294:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1295:HALLIB/Src/stm32f7xx_hal_pcd.c ****   len32b = (len + 3) / 4;
  68              		.loc 1 1295 0
  69 0024 16F10309 		adds	r9, r6, #3
  70 0028 01D5     		bpl	.L3
  71 002a 09F10309 		add	r9, r9, #3
  72              	.L3:
  73 002e 4FEAA909 		asr	r9, r9, #2
  74              	.LVL4:
ARM GAS  /tmp/cc1DR21h.s 			page 25


1296:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1297:HALLIB/Src/stm32f7xx_hal_pcd.c ****   while  ( (USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) > len32b &&
  75              		.loc 1 1297 0
  76 0032 21E0     		b	.L4
  77              	.LVL5:
  78              	.L8:
1298:HALLIB/Src/stm32f7xx_hal_pcd.c ****           ep->xfer_count < ep->xfer_len &&
1299:HALLIB/Src/stm32f7xx_hal_pcd.c ****             ep->xfer_len != 0)
1300:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1301:HALLIB/Src/stm32f7xx_hal_pcd.c ****     /* Write the FIFO */
1302:HALLIB/Src/stm32f7xx_hal_pcd.c ****     len = ep->xfer_len - ep->xfer_count;
  79              		.loc 1 1302 0
  80 0034 9E1A     		subs	r6, r3, r2
  81              	.LVL6:
1303:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1304:HALLIB/Src/stm32f7xx_hal_pcd.c ****     if (len > ep->maxpacket)
  82              		.loc 1 1304 0
  83 0036 C5EBC502 		rsb	r2, r5, r5, lsl #3
  84 003a 9300     		lsls	r3, r2, #2
  85 003c 3B44     		add	r3, r3, r7
  86 003e 1B6C     		ldr	r3, [r3, #64]
  87 0040 9E42     		cmp	r6, r3
  88 0042 00D9     		bls	.L5
1305:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
1306:HALLIB/Src/stm32f7xx_hal_pcd.c ****       len = ep->maxpacket;
  89              		.loc 1 1306 0
  90 0044 1E46     		mov	r6, r3
  91              	.LVL7:
  92              	.L5:
1307:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
1308:HALLIB/Src/stm32f7xx_hal_pcd.c ****     len32b = (len + 3) / 4;
  93              		.loc 1 1308 0
  94 0046 16F10309 		adds	r9, r6, #3
  95              	.LVL8:
  96 004a 01D5     		bpl	.L6
  97 004c 09F10309 		add	r9, r9, #3
  98              	.L6:
  99 0050 4FEAA909 		asr	r9, r9, #2
 100              	.LVL9:
1309:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1310:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USB_WritePacket(USBx, ep->xfer_buff, epnum, len, hpcd->Init.dma_enable);
 101              		.loc 1 1310 0
 102 0054 EB00     		lsls	r3, r5, #3
 103 0056 5B1B     		subs	r3, r3, r5
 104 0058 9C00     		lsls	r4, r3, #2
 105 005a 3C44     		add	r4, r4, r7
 106 005c 616C     		ldr	r1, [r4, #68]
 107              	.LVL10:
 108 005e 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 109 0060 0093     		str	r3, [sp]
 110 0062 B3B2     		uxth	r3, r6
 111 0064 EAB2     		uxtb	r2, r5
 112 0066 4046     		mov	r0, r8
 113 0068 FFF7FEFF 		bl	USB_WritePacket
 114              	.LVL11:
1311:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1312:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep->xfer_buff  += len;
ARM GAS  /tmp/cc1DR21h.s 			page 26


 115              		.loc 1 1312 0
 116 006c 636C     		ldr	r3, [r4, #68]
 117 006e 3344     		add	r3, r3, r6
 118 0070 6364     		str	r3, [r4, #68]
1313:HALLIB/Src/stm32f7xx_hal_pcd.c ****     ep->xfer_count += len;
 119              		.loc 1 1313 0
 120 0072 236D     		ldr	r3, [r4, #80]
 121 0074 3344     		add	r3, r3, r6
 122 0076 2365     		str	r3, [r4, #80]
 123              	.LVL12:
 124              	.L4:
1297:HALLIB/Src/stm32f7xx_hal_pcd.c ****           ep->xfer_count < ep->xfer_len &&
 125              		.loc 1 1297 0
 126 0078 4146     		mov	r1, r8
 127 007a 08EB4513 		add	r3, r8, r5, lsl #5
 128 007e 03F51063 		add	r3, r3, #2304
 129 0082 9B69     		ldr	r3, [r3, #24]
 130 0084 9BB2     		uxth	r3, r3
 131 0086 9945     		cmp	r9, r3
 132 0088 09D2     		bcs	.L7
 133              	.LVL13:
1298:HALLIB/Src/stm32f7xx_hal_pcd.c ****             ep->xfer_len != 0)
 134              		.loc 1 1298 0 discriminator 1
 135 008a EA00     		lsls	r2, r5, #3
 136 008c 521B     		subs	r2, r2, r5
 137 008e 9300     		lsls	r3, r2, #2
 138 0090 3B44     		add	r3, r3, r7
 139 0092 1A6D     		ldr	r2, [r3, #80]
 140 0094 DB6C     		ldr	r3, [r3, #76]
1297:HALLIB/Src/stm32f7xx_hal_pcd.c ****           ep->xfer_count < ep->xfer_len &&
 141              		.loc 1 1297 0 discriminator 1
 142 0096 9A42     		cmp	r2, r3
 143 0098 01D2     		bcs	.L7
1298:HALLIB/Src/stm32f7xx_hal_pcd.c ****             ep->xfer_len != 0)
 144              		.loc 1 1298 0
 145 009a 002B     		cmp	r3, #0
 146 009c CAD1     		bne	.L8
 147              	.L7:
1314:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1315:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1316:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if(len <= 0)
 148              		.loc 1 1316 0
 149 009e 002E     		cmp	r6, #0
 150 00a0 08DC     		bgt	.L9
1317:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
1318:HALLIB/Src/stm32f7xx_hal_pcd.c ****     fifoemptymsk = 0x1 << epnum;
 151              		.loc 1 1318 0
 152 00a2 0123     		movs	r3, #1
 153 00a4 03FA05F5 		lsl	r5, r3, r5
 154              	.LVL14:
1319:HALLIB/Src/stm32f7xx_hal_pcd.c ****     USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 155              		.loc 1 1319 0
 156 00a8 D1F83438 		ldr	r3, [r1, #2100]
 157 00ac 23EA0505 		bic	r5, r3, r5
 158              	.LVL15:
 159 00b0 C1F83458 		str	r5, [r1, #2100]
 160              	.LVL16:
ARM GAS  /tmp/cc1DR21h.s 			page 27


 161              	.L9:
1320:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1321:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
1322:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
1323:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
1324:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 162              		.loc 1 1324 0
 163 00b4 0020     		movs	r0, #0
 164 00b6 03B0     		add	sp, sp, #12
 165              	.LCFI2:
 166              		.cfi_def_cfa_offset 28
 167              		@ sp needed
 168 00b8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 169              		.cfi_endproc
 170              	.LFE168:
 172              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
 173              		.align	2
 174              		.weak	HAL_PCD_MspInit
 175              		.thumb
 176              		.thumb_func
 178              	HAL_PCD_MspInit:
 179              	.LFB138:
 242:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 180              		.loc 1 242 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL17:
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE138:
 190 0002 00BF     		.section	.text.HAL_PCD_Init,"ax",%progbits
 191              		.align	2
 192              		.global	HAL_PCD_Init
 193              		.thumb
 194              		.thumb_func
 196              	HAL_PCD_Init:
 197              	.LFB136:
 134:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t i = 0;
 198              		.loc 1 134 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              	.LVL18:
 138:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 203              		.loc 1 138 0
 204 0000 0028     		cmp	r0, #0
 205 0002 70D0     		beq	.L19
 134:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t i = 0;
 206              		.loc 1 134 0
 207 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 20
 210              		.cfi_offset 4, -20
 211              		.cfi_offset 5, -16
 212              		.cfi_offset 6, -12
ARM GAS  /tmp/cc1DR21h.s 			page 28


 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0006 8BB0     		sub	sp, sp, #44
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 64
 218 0008 0446     		mov	r4, r0
 146:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 219              		.loc 1 146 0
 220 000a 0323     		movs	r3, #3
 221 000c 80F8B933 		strb	r3, [r0, #953]
 149:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 222              		.loc 1 149 0
 223 0010 FFF7FEFF 		bl	HAL_PCD_MspInit
 224              	.LVL19:
 152:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 225              		.loc 1 152 0
 226 0014 2068     		ldr	r0, [r4]
 227 0016 FFF7FEFF 		bl	USB_DisableGlobalInt
 228              	.LVL20:
 155:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 229              		.loc 1 155 0
 230 001a 2546     		mov	r5, r4
 231 001c 55F8107B 		ldr	r7, [r5], #16
 232 0020 6E46     		mov	r6, sp
 233 0022 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 234 0024 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 235 0026 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 236 0028 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 237 002a 95E80300 		ldmia	r5, {r0, r1}
 238 002e 86E80300 		stmia	r6, {r0, r1}
 239 0032 231D     		adds	r3, r4, #4
 240 0034 0ECB     		ldmia	r3, {r1, r2, r3}
 241 0036 3846     		mov	r0, r7
 242 0038 FFF7FEFF 		bl	USB_CoreInit
 243              	.LVL21:
 158:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 244              		.loc 1 158 0
 245 003c 0021     		movs	r1, #0
 246 003e 2068     		ldr	r0, [r4]
 247 0040 FFF7FEFF 		bl	USB_SetCurrentMode
 248              	.LVL22:
 161:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 249              		.loc 1 161 0
 250 0044 0022     		movs	r2, #0
 251 0046 10E0     		b	.L14
 252              	.LVL23:
 253              	.L15:
 164:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].num = i;
 254              		.loc 1 164 0 discriminator 3
 255 0048 D100     		lsls	r1, r2, #3
 256 004a 891A     		subs	r1, r1, r2
 257 004c 8B00     		lsls	r3, r1, #2
 258 004e 2344     		add	r3, r3, r4
 259 0050 0121     		movs	r1, #1
 260 0052 83F83910 		strb	r1, [r3, #57]
 165:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].tx_fifo_num = i;
 261              		.loc 1 165 0 discriminator 3
ARM GAS  /tmp/cc1DR21h.s 			page 29


 262 0056 83F83820 		strb	r2, [r3, #56]
 166:HALLIB/Src/stm32f7xx_hal_pcd.c ****    /* Control until ep is activated */
 263              		.loc 1 166 0 discriminator 3
 264 005a DA87     		strh	r2, [r3, #62]	@ movhi
 168:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].maxpacket =  0;
 265              		.loc 1 168 0 discriminator 3
 266 005c 0021     		movs	r1, #0
 267 005e 83F83B10 		strb	r1, [r3, #59]
 169:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].xfer_buff = 0;
 268              		.loc 1 169 0 discriminator 3
 269 0062 1964     		str	r1, [r3, #64]
 170:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].xfer_len = 0;
 270              		.loc 1 170 0 discriminator 3
 271 0064 5964     		str	r1, [r3, #68]
 171:HALLIB/Src/stm32f7xx_hal_pcd.c ****  }
 272              		.loc 1 171 0 discriminator 3
 273 0066 D964     		str	r1, [r3, #76]
 161:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 274              		.loc 1 161 0 discriminator 3
 275 0068 0132     		adds	r2, r2, #1
 276              	.LVL24:
 277              	.L14:
 161:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 278              		.loc 1 161 0 is_stmt 0 discriminator 1
 279 006a 0E2A     		cmp	r2, #14
 280 006c ECD9     		bls	.L15
 281 006e 0022     		movs	r2, #0
 282              	.LVL25:
 283 0070 18E0     		b	.L16
 284              	.LVL26:
 285              	.L17:
 176:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].num = i;
 286              		.loc 1 176 0 is_stmt 1 discriminator 3
 287 0072 D100     		lsls	r1, r2, #3
 288 0074 891A     		subs	r1, r1, r2
 289 0076 8B00     		lsls	r3, r1, #2
 290 0078 2344     		add	r3, r3, r4
 291 007a 0021     		movs	r1, #0
 292 007c 83F8F911 		strb	r1, [r3, #505]
 177:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->IN_ep[i].tx_fifo_num = i;
 293              		.loc 1 177 0 discriminator 3
 294 0080 83F8F821 		strb	r2, [r3, #504]
 178:HALLIB/Src/stm32f7xx_hal_pcd.c ****    /* Control until ep is activated */
 295              		.loc 1 178 0 discriminator 3
 296 0084 DA87     		strh	r2, [r3, #62]	@ movhi
 180:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].maxpacket = 0;
 297              		.loc 1 180 0 discriminator 3
 298 0086 83F8FB11 		strb	r1, [r3, #507]
 181:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].xfer_buff = 0;
 299              		.loc 1 181 0 discriminator 3
 300 008a C3F80012 		str	r1, [r3, #512]
 182:HALLIB/Src/stm32f7xx_hal_pcd.c ****    hpcd->OUT_ep[i].xfer_len = 0;
 301              		.loc 1 182 0 discriminator 3
 302 008e C3F80412 		str	r1, [r3, #516]
 183:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 303              		.loc 1 183 0 discriminator 3
 304 0092 C3F80C12 		str	r1, [r3, #524]
ARM GAS  /tmp/cc1DR21h.s 			page 30


 185:HALLIB/Src/stm32f7xx_hal_pcd.c ****  }
 305              		.loc 1 185 0 discriminator 3
 306 0096 2368     		ldr	r3, [r4]
 307 0098 02F14000 		add	r0, r2, #64
 308 009c 03EB8003 		add	r3, r3, r0, lsl #2
 309 00a0 5960     		str	r1, [r3, #4]
 174:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 310              		.loc 1 174 0 discriminator 3
 311 00a2 0132     		adds	r2, r2, #1
 312              	.LVL27:
 313              	.L16:
 174:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 314              		.loc 1 174 0 is_stmt 0 discriminator 1
 315 00a4 0E2A     		cmp	r2, #14
 316 00a6 E4D9     		bls	.L17
 189:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 317              		.loc 1 189 0 is_stmt 1
 318 00a8 2546     		mov	r5, r4
 319 00aa 55F8107B 		ldr	r7, [r5], #16
 320 00ae 6E46     		mov	r6, sp
 321 00b0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 322              	.LVL28:
 323 00b2 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 324 00b4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 325 00b6 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 326 00b8 95E80300 		ldmia	r5, {r0, r1}
 327 00bc 86E80300 		stmia	r6, {r0, r1}
 328 00c0 231D     		adds	r3, r4, #4
 329 00c2 0ECB     		ldmia	r3, {r1, r2, r3}
 330 00c4 3846     		mov	r0, r7
 331 00c6 FFF7FEFF 		bl	USB_DevInit
 332              	.LVL29:
 191:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 333              		.loc 1 191 0
 334 00ca 0123     		movs	r3, #1
 335 00cc 84F8B933 		strb	r3, [r4, #953]
 194:HALLIB/Src/stm32f7xx_hal_pcd.c ****  {
 336              		.loc 1 194 0
 337 00d0 636A     		ldr	r3, [r4, #36]
 338 00d2 012B     		cmp	r3, #1
 339 00d4 02D1     		bne	.L18
 196:HALLIB/Src/stm32f7xx_hal_pcd.c ****  }
 340              		.loc 1 196 0
 341 00d6 2046     		mov	r0, r4
 342 00d8 FFF7FEFF 		bl	HAL_PCDEx_ActivateLPM
 343              	.LVL30:
 344              	.L18:
 206:HALLIB/Src/stm32f7xx_hal_pcd.c ****  return HAL_OK;
 345              		.loc 1 206 0
 346 00dc 2068     		ldr	r0, [r4]
 347 00de FFF7FEFF 		bl	USB_DevDisconnect
 348              	.LVL31:
 207:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 349              		.loc 1 207 0
 350 00e2 0020     		movs	r0, #0
 351 00e4 01E0     		b	.L13
 352              	.LVL32:
ARM GAS  /tmp/cc1DR21h.s 			page 31


 353              	.L19:
 354              	.LCFI5:
 355              		.cfi_def_cfa_offset 0
 356              		.cfi_restore 4
 357              		.cfi_restore 5
 358              		.cfi_restore 6
 359              		.cfi_restore 7
 360              		.cfi_restore 14
 140:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 361              		.loc 1 140 0
 362 00e6 0120     		movs	r0, #1
 363              	.LVL33:
 364 00e8 7047     		bx	lr
 365              	.LVL34:
 366              	.L13:
 367              	.LCFI6:
 368              		.cfi_def_cfa_offset 64
 369              		.cfi_offset 4, -20
 370              		.cfi_offset 5, -16
 371              		.cfi_offset 6, -12
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 208:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 374              		.loc 1 208 0
 375 00ea 0BB0     		add	sp, sp, #44
 376              	.LCFI7:
 377              		.cfi_def_cfa_offset 20
 378              		@ sp needed
 379 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 380              		.cfi_endproc
 381              	.LFE136:
 383 00ee 00BF     		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
 384              		.align	2
 385              		.weak	HAL_PCD_MspDeInit
 386              		.thumb
 387              		.thumb_func
 389              	HAL_PCD_MspDeInit:
 390              	.LFB139:
 257:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 391              		.loc 1 257 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396              	.LVL35:
 397 0000 7047     		bx	lr
 398              		.cfi_endproc
 399              	.LFE139:
 401 0002 00BF     		.section	.text.HAL_PCD_Start,"ax",%progbits
 402              		.align	2
 403              		.global	HAL_PCD_Start
 404              		.thumb
 405              		.thumb_func
 407              	HAL_PCD_Start:
 408              	.LFB140:
 291:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 409              		.loc 1 291 0
ARM GAS  /tmp/cc1DR21h.s 			page 32


 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              	.LVL36:
 292:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevConnect (hpcd->Instance);
 414              		.loc 1 292 0
 415 0000 90F8B833 		ldrb	r3, [r0, #952]	@ zero_extendqisi2
 416 0004 012B     		cmp	r3, #1
 417 0006 0ED0     		beq	.L25
 291:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 418              		.loc 1 291 0 discriminator 2
 419 0008 10B5     		push	{r4, lr}
 420              	.LCFI8:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 4, -8
 423              		.cfi_offset 14, -4
 424 000a 0446     		mov	r4, r0
 292:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevConnect (hpcd->Instance);
 425              		.loc 1 292 0 discriminator 2
 426 000c 0123     		movs	r3, #1
 427 000e 80F8B833 		strb	r3, [r0, #952]
 293:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_PCD_ENABLE(hpcd);
 428              		.loc 1 293 0 discriminator 2
 429 0012 0068     		ldr	r0, [r0]
 430              	.LVL37:
 431 0014 FFF7FEFF 		bl	USB_DevConnect
 432              	.LVL38:
 294:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 433              		.loc 1 294 0 discriminator 2
 434 0018 2068     		ldr	r0, [r4]
 435 001a FFF7FEFF 		bl	USB_EnableGlobalInt
 436              	.LVL39:
 295:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 437              		.loc 1 295 0 discriminator 2
 438 001e 0020     		movs	r0, #0
 439 0020 84F8B803 		strb	r0, [r4, #952]
 296:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 440              		.loc 1 296 0 discriminator 2
 441 0024 10BD     		pop	{r4, pc}
 442              	.LVL40:
 443              	.L25:
 444              	.LCFI9:
 445              		.cfi_def_cfa_offset 0
 446              		.cfi_restore 4
 447              		.cfi_restore 14
 292:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevConnect (hpcd->Instance);
 448              		.loc 1 292 0
 449 0026 0220     		movs	r0, #2
 450              	.LVL41:
 451 0028 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE140:
 455 002a 00BF     		.section	.text.HAL_PCD_Stop,"ax",%progbits
 456              		.align	2
 457              		.global	HAL_PCD_Stop
 458              		.thumb
 459              		.thumb_func
ARM GAS  /tmp/cc1DR21h.s 			page 33


 461              	HAL_PCD_Stop:
 462              	.LFB141:
 305:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 463              		.loc 1 305 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              	.LVL42:
 306:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_PCD_DISABLE(hpcd);
 468              		.loc 1 306 0
 469 0000 90F8B833 		ldrb	r3, [r0, #952]	@ zero_extendqisi2
 470 0004 012B     		cmp	r3, #1
 471 0006 11D0     		beq	.L30
 305:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 472              		.loc 1 305 0 discriminator 2
 473 0008 10B5     		push	{r4, lr}
 474              	.LCFI10:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 478 000a 0446     		mov	r4, r0
 306:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_PCD_DISABLE(hpcd);
 479              		.loc 1 306 0 discriminator 2
 480 000c 0123     		movs	r3, #1
 481 000e 80F8B833 		strb	r3, [r0, #952]
 307:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_StopDevice(hpcd->Instance);
 482              		.loc 1 307 0 discriminator 2
 483 0012 0068     		ldr	r0, [r0]
 484              	.LVL43:
 485 0014 FFF7FEFF 		bl	USB_DisableGlobalInt
 486              	.LVL44:
 308:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevDisconnect (hpcd->Instance);
 487              		.loc 1 308 0 discriminator 2
 488 0018 2068     		ldr	r0, [r4]
 489 001a FFF7FEFF 		bl	USB_StopDevice
 490              	.LVL45:
 309:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 491              		.loc 1 309 0 discriminator 2
 492 001e 2068     		ldr	r0, [r4]
 493 0020 FFF7FEFF 		bl	USB_DevDisconnect
 494              	.LVL46:
 310:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 495              		.loc 1 310 0 discriminator 2
 496 0024 0020     		movs	r0, #0
 497 0026 84F8B803 		strb	r0, [r4, #952]
 311:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 498              		.loc 1 311 0 discriminator 2
 499 002a 10BD     		pop	{r4, pc}
 500              	.LVL47:
 501              	.L30:
 502              	.LCFI11:
 503              		.cfi_def_cfa_offset 0
 504              		.cfi_restore 4
 505              		.cfi_restore 14
 306:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_PCD_DISABLE(hpcd);
 506              		.loc 1 306 0
 507 002c 0220     		movs	r0, #2
ARM GAS  /tmp/cc1DR21h.s 			page 34


 508              	.LVL48:
 509 002e 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE141:
 513              		.section	.text.HAL_PCD_DeInit,"ax",%progbits
 514              		.align	2
 515              		.global	HAL_PCD_DeInit
 516              		.thumb
 517              		.thumb_func
 519              	HAL_PCD_DeInit:
 520              	.LFB137:
 216:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Check the PCD handle allocation */
 521              		.loc 1 216 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              	.LVL49:
 218:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 526              		.loc 1 218 0
 527 0000 68B1     		cbz	r0, .L35
 216:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Check the PCD handle allocation */
 528              		.loc 1 216 0
 529 0002 10B5     		push	{r4, lr}
 530              	.LCFI12:
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 4, -8
 533              		.cfi_offset 14, -4
 534 0004 0446     		mov	r4, r0
 223:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 535              		.loc 1 223 0
 536 0006 0323     		movs	r3, #3
 537 0008 80F8B933 		strb	r3, [r0, #953]
 226:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 538              		.loc 1 226 0
 539 000c FFF7FEFF 		bl	HAL_PCD_Stop
 540              	.LVL50:
 229:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 541              		.loc 1 229 0
 542 0010 2046     		mov	r0, r4
 543 0012 FFF7FEFF 		bl	HAL_PCD_MspDeInit
 544              	.LVL51:
 231:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 545              		.loc 1 231 0
 546 0016 0020     		movs	r0, #0
 547 0018 84F8B903 		strb	r0, [r4, #953]
 233:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 548              		.loc 1 233 0
 549 001c 10BD     		pop	{r4, pc}
 550              	.LVL52:
 551              	.L35:
 552              	.LCFI13:
 553              		.cfi_def_cfa_offset 0
 554              		.cfi_restore 4
 555              		.cfi_restore 14
 220:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 556              		.loc 1 220 0
 557 001e 0120     		movs	r0, #1
ARM GAS  /tmp/cc1DR21h.s 			page 35


 558              	.LVL53:
 559 0020 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE137:
 563 0022 00BF     		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 564              		.align	2
 565              		.weak	HAL_PCD_DataOutStageCallback
 566              		.thumb
 567              		.thumb_func
 569              	HAL_PCD_DataOutStageCallback:
 570              	.LFB143:
 724:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 571              		.loc 1 724 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576              	.LVL54:
 577 0000 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE143:
 581 0002 00BF     		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 582              		.align	2
 583              		.weak	HAL_PCD_DataInStageCallback
 584              		.thumb
 585              		.thumb_func
 587              	HAL_PCD_DataInStageCallback:
 588              	.LFB144:
 740:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 589              		.loc 1 740 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594              	.LVL55:
 595 0000 7047     		bx	lr
 596              		.cfi_endproc
 597              	.LFE144:
 599 0002 00BF     		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 600              		.align	2
 601              		.weak	HAL_PCD_SetupStageCallback
 602              		.thumb
 603              		.thumb_func
 605              	HAL_PCD_SetupStageCallback:
 606              	.LFB145:
 754:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 607              		.loc 1 754 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              	.LVL56:
 613 0000 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE145:
 617 0002 00BF     		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 618              		.align	2
ARM GAS  /tmp/cc1DR21h.s 			page 36


 619              		.weak	HAL_PCD_SOFCallback
 620              		.thumb
 621              		.thumb_func
 623              	HAL_PCD_SOFCallback:
 624              	.LFB146:
 769:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 625              		.loc 1 769 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL57:
 631 0000 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE146:
 635 0002 00BF     		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 636              		.align	2
 637              		.weak	HAL_PCD_ResetCallback
 638              		.thumb
 639              		.thumb_func
 641              	HAL_PCD_ResetCallback:
 642              	.LFB147:
 784:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 643              		.loc 1 784 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648              	.LVL58:
 649 0000 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE147:
 653 0002 00BF     		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 654              		.align	2
 655              		.weak	HAL_PCD_SuspendCallback
 656              		.thumb
 657              		.thumb_func
 659              	HAL_PCD_SuspendCallback:
 660              	.LFB148:
 799:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 661              		.loc 1 799 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666              	.LVL59:
 667 0000 7047     		bx	lr
 668              		.cfi_endproc
 669              	.LFE148:
 671 0002 00BF     		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 672              		.align	2
 673              		.weak	HAL_PCD_ResumeCallback
 674              		.thumb
 675              		.thumb_func
 677              	HAL_PCD_ResumeCallback:
 678              	.LFB149:
 814:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cc1DR21h.s 			page 37


 679              		.loc 1 814 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684              	.LVL60:
 685 0000 7047     		bx	lr
 686              		.cfi_endproc
 687              	.LFE149:
 689 0002 00BF     		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 690              		.align	2
 691              		.weak	HAL_PCD_ISOOUTIncompleteCallback
 692              		.thumb
 693              		.thumb_func
 695              	HAL_PCD_ISOOUTIncompleteCallback:
 696              	.LFB150:
 830:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 697              		.loc 1 830 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702              	.LVL61:
 703 0000 7047     		bx	lr
 704              		.cfi_endproc
 705              	.LFE150:
 707 0002 00BF     		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 708              		.align	2
 709              		.weak	HAL_PCD_ISOINIncompleteCallback
 710              		.thumb
 711              		.thumb_func
 713              	HAL_PCD_ISOINIncompleteCallback:
 714              	.LFB151:
 846:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 715              		.loc 1 846 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL62:
 721 0000 7047     		bx	lr
 722              		.cfi_endproc
 723              	.LFE151:
 725 0002 00BF     		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 726              		.align	2
 727              		.weak	HAL_PCD_ConnectCallback
 728              		.thumb
 729              		.thumb_func
 731              	HAL_PCD_ConnectCallback:
 732              	.LFB152:
 861:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 733              		.loc 1 861 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738              	.LVL63:
ARM GAS  /tmp/cc1DR21h.s 			page 38


 739 0000 7047     		bx	lr
 740              		.cfi_endproc
 741              	.LFE152:
 743 0002 00BF     		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 744              		.align	2
 745              		.weak	HAL_PCD_DisconnectCallback
 746              		.thumb
 747              		.thumb_func
 749              	HAL_PCD_DisconnectCallback:
 750              	.LFB153:
 876:HALLIB/Src/stm32f7xx_hal_pcd.c ****   /* Prevent unused argument(s) compilation warning */
 751              		.loc 1 876 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756              	.LVL64:
 757 0000 7047     		bx	lr
 758              		.cfi_endproc
 759              	.LFE153:
 761 0002 00BF     		.section	.text.HAL_PCD_IRQHandler,"ax",%progbits
 762              		.align	2
 763              		.global	HAL_PCD_IRQHandler
 764              		.thumb
 765              		.thumb_func
 767              	HAL_PCD_IRQHandler:
 768              	.LFB142:
 320:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 769              		.loc 1 320 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              	.LVL65:
 320:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 774              		.loc 1 320 0
 775 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 776              	.LCFI14:
 777              		.cfi_def_cfa_offset 32
 778              		.cfi_offset 4, -32
 779              		.cfi_offset 5, -28
 780              		.cfi_offset 6, -24
 781              		.cfi_offset 7, -20
 782              		.cfi_offset 8, -16
 783              		.cfi_offset 9, -12
 784              		.cfi_offset 10, -8
 785              		.cfi_offset 14, -4
 786 0004 0446     		mov	r4, r0
 321:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t i = 0, ep_intr = 0, epint = 0, epnum = 0;
 787              		.loc 1 321 0
 788 0006 0668     		ldr	r6, [r0]
 789              	.LVL66:
 328:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 790              		.loc 1 328 0
 791 0008 3046     		mov	r0, r6
 792              	.LVL67:
 793 000a FFF7FEFF 		bl	USB_GetMode
 794              	.LVL68:
ARM GAS  /tmp/cc1DR21h.s 			page 39


 795 000e 0028     		cmp	r0, #0
 796 0010 40F0D682 		bne	.L49
 331:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 797              		.loc 1 331 0
 798 0014 2068     		ldr	r0, [r4]
 799 0016 FFF7FEFF 		bl	USB_ReadInterrupts
 800              	.LVL69:
 801 001a 0028     		cmp	r0, #0
 802 001c 00F0D082 		beq	.L49
 336:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 803              		.loc 1 336 0
 804 0020 2068     		ldr	r0, [r4]
 805 0022 FFF7FEFF 		bl	USB_ReadInterrupts
 806              	.LVL70:
 807 0026 10F0020F 		tst	r0, #2
 808 002a 02D0     		beq	.L51
 339:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 809              		.loc 1 339 0
 810 002c 2368     		ldr	r3, [r4]
 811 002e 0222     		movs	r2, #2
 812 0030 5A61     		str	r2, [r3, #20]
 813              	.L51:
 342:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 814              		.loc 1 342 0
 815 0032 2068     		ldr	r0, [r4]
 816 0034 FFF7FEFF 		bl	USB_ReadInterrupts
 817              	.LVL71:
 818 0038 10F4002F 		tst	r0, #524288
 819 003c 7CD0     		beq	.L104
 347:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 820              		.loc 1 347 0
 821 003e 2068     		ldr	r0, [r4]
 822 0040 FFF7FEFF 		bl	USB_ReadDevAllOutEpInterrupt
 823              	.LVL72:
 824 0044 0746     		mov	r7, r0
 825              	.LVL73:
 344:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 826              		.loc 1 344 0
 827 0046 0025     		movs	r5, #0
 349:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 828              		.loc 1 349 0
 829 0048 73E0     		b	.L53
 830              	.LVL74:
 831              	.L61:
 351:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 832              		.loc 1 351 0
 833 004a 17F0010F 		tst	r7, #1
 834 004e 6ED0     		beq	.L54
 353:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 835              		.loc 1 353 0
 836 0050 5FFA85F9 		uxtb	r9, r5
 837 0054 4946     		mov	r1, r9
 838 0056 2068     		ldr	r0, [r4]
 839 0058 FFF7FEFF 		bl	USB_ReadDevOutEPInterrupt
 840              	.LVL75:
 841 005c 8046     		mov	r8, r0
 842              	.LVL76:
ARM GAS  /tmp/cc1DR21h.s 			page 40


 355:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 843              		.loc 1 355 0
 844 005e 10F0010F 		tst	r0, #1
 845 0062 3BD0     		beq	.L55
 357:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 846              		.loc 1 357 0
 847 0064 06EB4513 		add	r3, r6, r5, lsl #5
 848 0068 03F53063 		add	r3, r3, #2816
 849 006c 0122     		movs	r2, #1
 850 006e 9A60     		str	r2, [r3, #8]
 360:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 851              		.loc 1 360 0
 852 0070 2269     		ldr	r2, [r4, #16]
 853 0072 012A     		cmp	r2, #1
 854 0074 07D1     		bne	.L56
 362:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 855              		.loc 1 362 0
 856 0076 D6F8082B 		ldr	r2, [r6, #2824]
 857 007a 12F4004F 		tst	r2, #32768
 858 007e 02D0     		beq	.L56
 364:HALLIB/Src/stm32f7xx_hal_pcd.c ****               }
 859              		.loc 1 364 0
 860 0080 4FF40042 		mov	r2, #32768
 861 0084 9A60     		str	r2, [r3, #8]
 862              	.L56:
 368:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 863              		.loc 1 368 0
 864 0086 2269     		ldr	r2, [r4, #16]
 865 0088 012A     		cmp	r2, #1
 866 008a 12D1     		bne	.L57
 370:HALLIB/Src/stm32f7xx_hal_pcd.c ****               hpcd->OUT_ep[epnum].xfer_buff += hpcd->OUT_ep[epnum].maxpacket;
 867              		.loc 1 370 0
 868 008c E900     		lsls	r1, r5, #3
 869 008e 491B     		subs	r1, r1, r5
 870 0090 8A00     		lsls	r2, r1, #2
 871 0092 2244     		add	r2, r2, r4
 872 0094 D2F80012 		ldr	r1, [r2, #512]
 873 0098 1B69     		ldr	r3, [r3, #16]
 874 009a C3F31203 		ubfx	r3, r3, #0, #19
 875 009e C91A     		subs	r1, r1, r3
 876 00a0 C2F81012 		str	r1, [r2, #528]
 371:HALLIB/Src/stm32f7xx_hal_pcd.c ****             }
 877              		.loc 1 371 0
 878 00a4 D2F80412 		ldr	r1, [r2, #516]
 879 00a8 D2F80032 		ldr	r3, [r2, #512]
 880 00ac 0B44     		add	r3, r3, r1
 881 00ae C2F80432 		str	r3, [r2, #516]
 882              	.L57:
 374:HALLIB/Src/stm32f7xx_hal_pcd.c ****             if(hpcd->Init.dma_enable == 1)
 883              		.loc 1 374 0
 884 00b2 4946     		mov	r1, r9
 885 00b4 2046     		mov	r0, r4
 886              	.LVL77:
 887 00b6 FFF7FEFF 		bl	HAL_PCD_DataOutStageCallback
 888              	.LVL78:
 375:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 889              		.loc 1 375 0
ARM GAS  /tmp/cc1DR21h.s 			page 41


 890 00ba 2369     		ldr	r3, [r4, #16]
 891 00bc 012B     		cmp	r3, #1
 892 00be 0DD1     		bne	.L55
 377:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 893              		.loc 1 377 0
 894 00c0 65B9     		cbnz	r5, .L55
 377:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 895              		.loc 1 377 0 is_stmt 0 discriminator 1
 896 00c2 C5EBC502 		rsb	r2, r5, r5, lsl #3
 897 00c6 9300     		lsls	r3, r2, #2
 898 00c8 2344     		add	r3, r3, r4
 899 00ca D3F80C32 		ldr	r3, [r3, #524]
 900 00ce 2BB9     		cbnz	r3, .L55
 380:HALLIB/Src/stm32f7xx_hal_pcd.c ****               }
 901              		.loc 1 380 0 is_stmt 1
 902 00d0 04F56F72 		add	r2, r4, #956
 903 00d4 0121     		movs	r1, #1
 904 00d6 2068     		ldr	r0, [r4]
 905 00d8 FFF7FEFF 		bl	USB_EP0_OutStart
 906              	.LVL79:
 907              	.L55:
 385:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 908              		.loc 1 385 0
 909 00dc 18F0080F 		tst	r8, #8
 910 00e0 15D0     		beq	.L58
 388:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 911              		.loc 1 388 0
 912 00e2 2369     		ldr	r3, [r4, #16]
 913 00e4 012B     		cmp	r3, #1
 914 00e6 0AD1     		bne	.L59
 390:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 915              		.loc 1 390 0
 916 00e8 D6F8083B 		ldr	r3, [r6, #2824]
 917 00ec 13F4004F 		tst	r3, #32768
 918 00f0 05D0     		beq	.L59
 392:HALLIB/Src/stm32f7xx_hal_pcd.c ****               }
 919              		.loc 1 392 0
 920 00f2 06EB4513 		add	r3, r6, r5, lsl #5
 921 00f6 4FF40042 		mov	r2, #32768
 922 00fa C3F8082B 		str	r2, [r3, #2824]
 923              	.L59:
 397:HALLIB/Src/stm32f7xx_hal_pcd.c ****             CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 924              		.loc 1 397 0
 925 00fe 2046     		mov	r0, r4
 926 0100 FFF7FEFF 		bl	HAL_PCD_SetupStageCallback
 927              	.LVL80:
 398:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 928              		.loc 1 398 0
 929 0104 06EB4513 		add	r3, r6, r5, lsl #5
 930 0108 0822     		movs	r2, #8
 931 010a C3F8082B 		str	r2, [r3, #2824]
 932              	.L58:
 401:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 933              		.loc 1 401 0
 934 010e 18F0100F 		tst	r8, #16
 935 0112 04D0     		beq	.L60
 403:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
ARM GAS  /tmp/cc1DR21h.s 			page 42


 936              		.loc 1 403 0
 937 0114 06EB4513 		add	r3, r6, r5, lsl #5
 938 0118 1022     		movs	r2, #16
 939 011a C3F8082B 		str	r2, [r3, #2824]
 940              	.L60:
 406:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 941              		.loc 1 406 0
 942 011e 18F0200F 		tst	r8, #32
 943 0122 04D0     		beq	.L54
 408:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 944              		.loc 1 408 0
 945 0124 06EB4513 		add	r3, r6, r5, lsl #5
 946 0128 2022     		movs	r2, #32
 947 012a C3F8082B 		str	r2, [r3, #2824]
 948              	.LVL81:
 949              	.L54:
 411:HALLIB/Src/stm32f7xx_hal_pcd.c ****         ep_intr >>= 1;
 950              		.loc 1 411 0
 951 012e 0135     		adds	r5, r5, #1
 952              	.LVL82:
 412:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 953              		.loc 1 412 0
 954 0130 7F08     		lsrs	r7, r7, #1
 955              	.LVL83:
 956              	.L53:
 349:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 957              		.loc 1 349 0
 958 0132 002F     		cmp	r7, #0
 959 0134 89D1     		bne	.L61
 960 0136 00E0     		b	.L52
 961              	.LVL84:
 962              	.L104:
 322:HALLIB/Src/stm32f7xx_hal_pcd.c ****   uint32_t fifoemptymsk = 0, temp = 0;
 963              		.loc 1 322 0
 964 0138 0025     		movs	r5, #0
 965              	.LVL85:
 966              	.L52:
 416:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 967              		.loc 1 416 0
 968 013a 2068     		ldr	r0, [r4]
 969 013c FFF7FEFF 		bl	USB_ReadInterrupts
 970              	.LVL86:
 971 0140 10F4802F 		tst	r0, #262144
 972 0144 69D0     		beq	.L62
 419:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 973              		.loc 1 419 0
 974 0146 2068     		ldr	r0, [r4]
 975 0148 FFF7FEFF 		bl	USB_ReadDevAllInEpInterrupt
 976              	.LVL87:
 977 014c 0746     		mov	r7, r0
 978              	.LVL88:
 421:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 979              		.loc 1 421 0
 980 014e 0025     		movs	r5, #0
 423:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 981              		.loc 1 423 0
 982 0150 61E0     		b	.L63
ARM GAS  /tmp/cc1DR21h.s 			page 43


 983              	.LVL89:
 984              	.L71:
 425:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 985              		.loc 1 425 0
 986 0152 17F0010F 		tst	r7, #1
 987 0156 5CD0     		beq	.L64
 427:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 988              		.loc 1 427 0
 989 0158 5FFA85F9 		uxtb	r9, r5
 990 015c 4946     		mov	r1, r9
 991 015e 2068     		ldr	r0, [r4]
 992 0160 FFF7FEFF 		bl	USB_ReadDevInEPInterrupt
 993              	.LVL90:
 994 0164 8046     		mov	r8, r0
 995              	.LVL91:
 429:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 996              		.loc 1 429 0
 997 0166 10F0010F 		tst	r0, #1
 998 016a 2BD0     		beq	.L65
 431:HALLIB/Src/stm32f7xx_hal_pcd.c ****             USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 999              		.loc 1 431 0
 1000 016c 0122     		movs	r2, #1
 1001 016e 02FA05F0 		lsl	r0, r2, r5
 1002              	.LVL92:
 432:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1003              		.loc 1 432 0
 1004 0172 D6F83438 		ldr	r3, [r6, #2100]
 1005 0176 23EA0003 		bic	r3, r3, r0
 1006 017a C6F83438 		str	r3, [r6, #2100]
 434:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1007              		.loc 1 434 0
 1008 017e 06EB4513 		add	r3, r6, r5, lsl #5
 1009 0182 C3F80829 		str	r2, [r3, #2312]
 436:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
 1010              		.loc 1 436 0
 1011 0186 2369     		ldr	r3, [r4, #16]
 1012 0188 9342     		cmp	r3, r2
 1013 018a 07D1     		bne	.L66
 438:HALLIB/Src/stm32f7xx_hal_pcd.c ****             }
 1014              		.loc 1 438 0
 1015 018c EA00     		lsls	r2, r5, #3
 1016 018e 521B     		subs	r2, r2, r5
 1017 0190 9300     		lsls	r3, r2, #2
 1018 0192 2344     		add	r3, r3, r4
 1019 0194 596C     		ldr	r1, [r3, #68]
 1020 0196 1A6C     		ldr	r2, [r3, #64]
 1021 0198 0A44     		add	r2, r2, r1
 1022 019a 5A64     		str	r2, [r3, #68]
 1023              	.L66:
 441:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1024              		.loc 1 441 0
 1025 019c 4946     		mov	r1, r9
 1026 019e 2046     		mov	r0, r4
 1027              	.LVL93:
 1028 01a0 FFF7FEFF 		bl	HAL_PCD_DataInStageCallback
 1029              	.LVL94:
 443:HALLIB/Src/stm32f7xx_hal_pcd.c ****             {
ARM GAS  /tmp/cc1DR21h.s 			page 44


 1030              		.loc 1 443 0
 1031 01a4 2369     		ldr	r3, [r4, #16]
 1032 01a6 012B     		cmp	r3, #1
 1033 01a8 0CD1     		bne	.L65
 446:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 1034              		.loc 1 446 0
 1035 01aa 5DB9     		cbnz	r5, .L65
 446:HALLIB/Src/stm32f7xx_hal_pcd.c ****               {
 1036              		.loc 1 446 0 is_stmt 0 discriminator 1
 1037 01ac C5EBC502 		rsb	r2, r5, r5, lsl #3
 1038 01b0 9300     		lsls	r3, r2, #2
 1039 01b2 2344     		add	r3, r3, r4
 1040 01b4 DB6C     		ldr	r3, [r3, #76]
 1041 01b6 2BB9     		cbnz	r3, .L65
 449:HALLIB/Src/stm32f7xx_hal_pcd.c ****               }
 1042              		.loc 1 449 0 is_stmt 1
 1043 01b8 04F56F72 		add	r2, r4, #956
 1044 01bc 0121     		movs	r1, #1
 1045              	.LVL95:
 1046 01be 2068     		ldr	r0, [r4]
 1047 01c0 FFF7FEFF 		bl	USB_EP0_OutStart
 1048              	.LVL96:
 1049              	.L65:
 453:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 1050              		.loc 1 453 0
 1051 01c4 18F0080F 		tst	r8, #8
 1052 01c8 04D0     		beq	.L67
 455:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 1053              		.loc 1 455 0
 1054 01ca 06EB4513 		add	r3, r6, r5, lsl #5
 1055 01ce 0822     		movs	r2, #8
 1056 01d0 C3F80829 		str	r2, [r3, #2312]
 1057              	.L67:
 457:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 1058              		.loc 1 457 0
 1059 01d4 18F0100F 		tst	r8, #16
 1060 01d8 04D0     		beq	.L68
 459:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 1061              		.loc 1 459 0
 1062 01da 06EB4513 		add	r3, r6, r5, lsl #5
 1063 01de 1022     		movs	r2, #16
 1064 01e0 C3F80829 		str	r2, [r3, #2312]
 1065              	.L68:
 461:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 1066              		.loc 1 461 0
 1067 01e4 18F0400F 		tst	r8, #64
 1068 01e8 04D0     		beq	.L69
 463:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 1069              		.loc 1 463 0
 1070 01ea 06EB4513 		add	r3, r6, r5, lsl #5
 1071 01ee 4022     		movs	r2, #64
 1072 01f0 C3F80829 		str	r2, [r3, #2312]
 1073              	.L69:
 465:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 1074              		.loc 1 465 0
 1075 01f4 18F0020F 		tst	r8, #2
 1076 01f8 04D0     		beq	.L70
ARM GAS  /tmp/cc1DR21h.s 			page 45


 467:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 1077              		.loc 1 467 0
 1078 01fa 06EB4513 		add	r3, r6, r5, lsl #5
 1079 01fe 0222     		movs	r2, #2
 1080 0200 C3F80829 		str	r2, [r3, #2312]
 1081              	.L70:
 469:HALLIB/Src/stm32f7xx_hal_pcd.c ****           {
 1082              		.loc 1 469 0
 1083 0204 18F0800F 		tst	r8, #128
 1084 0208 03D0     		beq	.L64
 471:HALLIB/Src/stm32f7xx_hal_pcd.c ****           }
 1085              		.loc 1 471 0
 1086 020a 2946     		mov	r1, r5
 1087 020c 2046     		mov	r0, r4
 1088 020e FFF7FEFF 		bl	PCD_WriteEmptyTxFifo
 1089              	.LVL97:
 1090              	.L64:
 474:HALLIB/Src/stm32f7xx_hal_pcd.c ****         ep_intr >>= 1;
 1091              		.loc 1 474 0
 1092 0212 0135     		adds	r5, r5, #1
 1093              	.LVL98:
 475:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1094              		.loc 1 475 0
 1095 0214 7F08     		lsrs	r7, r7, #1
 1096              	.LVL99:
 1097              	.L63:
 423:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1098              		.loc 1 423 0
 1099 0216 002F     		cmp	r7, #0
 1100 0218 9BD1     		bne	.L71
 1101              	.LVL100:
 1102              	.L62:
 480:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1103              		.loc 1 480 0
 1104 021a 2068     		ldr	r0, [r4]
 1105 021c FFF7FEFF 		bl	USB_ReadInterrupts
 1106              	.LVL101:
 1107 0220 0028     		cmp	r0, #0
 1108 0222 17DA     		bge	.L72
 483:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1109              		.loc 1 483 0
 1110 0224 D6F80438 		ldr	r3, [r6, #2052]
 1111 0228 23F00103 		bic	r3, r3, #1
 1112 022c C6F80438 		str	r3, [r6, #2052]
 485:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1113              		.loc 1 485 0
 1114 0230 94F8EC33 		ldrb	r3, [r4, #1004]	@ zero_extendqisi2
 1115 0234 012B     		cmp	r3, #1
 1116 0236 06D1     		bne	.L73
 487:HALLIB/Src/stm32f7xx_hal_pcd.c ****         HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 1117              		.loc 1 487 0
 1118 0238 0021     		movs	r1, #0
 1119 023a 84F8EC13 		strb	r1, [r4, #1004]
 488:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1120              		.loc 1 488 0
 1121 023e 2046     		mov	r0, r4
 1122 0240 FFF7FEFF 		bl	HAL_PCDEx_LPM_Callback
ARM GAS  /tmp/cc1DR21h.s 			page 46


 1123              	.LVL102:
 1124 0244 02E0     		b	.L74
 1125              	.L73:
 492:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1126              		.loc 1 492 0
 1127 0246 2046     		mov	r0, r4
 1128 0248 FFF7FEFF 		bl	HAL_PCD_ResumeCallback
 1129              	.LVL103:
 1130              	.L74:
 494:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1131              		.loc 1 494 0
 1132 024c 2368     		ldr	r3, [r4]
 1133 024e 4FF00042 		mov	r2, #-2147483648
 1134 0252 5A61     		str	r2, [r3, #20]
 1135              	.L72:
 498:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1136              		.loc 1 498 0
 1137 0254 2068     		ldr	r0, [r4]
 1138 0256 FFF7FEFF 		bl	USB_ReadInterrupts
 1139              	.LVL104:
 1140 025a 10F4006F 		tst	r0, #2048
 1141 025e 0BD0     		beq	.L75
 500:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1142              		.loc 1 500 0
 1143 0260 D6F80838 		ldr	r3, [r6, #2056]
 1144 0264 13F0010F 		tst	r3, #1
 1145 0268 02D0     		beq	.L76
 503:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1146              		.loc 1 503 0
 1147 026a 2046     		mov	r0, r4
 1148 026c FFF7FEFF 		bl	HAL_PCD_SuspendCallback
 1149              	.LVL105:
 1150              	.L76:
 505:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1151              		.loc 1 505 0
 1152 0270 2368     		ldr	r3, [r4]
 1153 0272 4FF40062 		mov	r2, #2048
 1154 0276 5A61     		str	r2, [r3, #20]
 1155              	.L75:
 509:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1156              		.loc 1 509 0
 1157 0278 2068     		ldr	r0, [r4]
 1158 027a FFF7FEFF 		bl	USB_ReadInterrupts
 1159              	.LVL106:
 1160 027e 10F0006F 		tst	r0, #134217728
 1161 0282 16D0     		beq	.L77
 511:HALLIB/Src/stm32f7xx_hal_pcd.c ****       if( hpcd->LPM_State == LPM_L0)
 1162              		.loc 1 511 0
 1163 0284 2368     		ldr	r3, [r4]
 1164 0286 4FF00062 		mov	r2, #134217728
 1165 028a 5A61     		str	r2, [r3, #20]
 512:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1166              		.loc 1 512 0
 1167 028c 94F8EC33 		ldrb	r3, [r4, #1004]	@ zero_extendqisi2
 1168 0290 63B9     		cbnz	r3, .L78
 514:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->BESL = (hpcd->Instance->GLPMCFG & USB_OTG_GLPMCFG_BESL) >>2 ;
 1169              		.loc 1 514 0
ARM GAS  /tmp/cc1DR21h.s 			page 47


 1170 0292 0121     		movs	r1, #1
 1171 0294 84F8EC13 		strb	r1, [r4, #1004]
 515:HALLIB/Src/stm32f7xx_hal_pcd.c ****         HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
 1172              		.loc 1 515 0
 1173 0298 2368     		ldr	r3, [r4]
 1174 029a 5B6D     		ldr	r3, [r3, #84]
 1175 029c C3F38303 		ubfx	r3, r3, #2, #4
 1176 02a0 C4F8F033 		str	r3, [r4, #1008]
 516:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1177              		.loc 1 516 0
 1178 02a4 2046     		mov	r0, r4
 1179 02a6 FFF7FEFF 		bl	HAL_PCDEx_LPM_Callback
 1180              	.LVL107:
 1181 02aa 02E0     		b	.L77
 1182              	.L78:
 520:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1183              		.loc 1 520 0
 1184 02ac 2046     		mov	r0, r4
 1185 02ae FFF7FEFF 		bl	HAL_PCD_SuspendCallback
 1186              	.LVL108:
 1187              	.L77:
 525:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1188              		.loc 1 525 0
 1189 02b2 2068     		ldr	r0, [r4]
 1190 02b4 FFF7FEFF 		bl	USB_ReadInterrupts
 1191              	.LVL109:
 1192 02b8 10F4805F 		tst	r0, #4096
 1193 02bc 5AD0     		beq	.L79
 527:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USB_FlushTxFifo(hpcd->Instance, 0x10);
 1194              		.loc 1 527 0
 1195 02be 3746     		mov	r7, r6
 1196 02c0 06F50068 		add	r8, r6, #2048
 1197 02c4 D8F80430 		ldr	r3, [r8, #4]
 1198 02c8 23F00103 		bic	r3, r3, #1
 1199 02cc C8F80430 		str	r3, [r8, #4]
 528:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1200              		.loc 1 528 0
 1201 02d0 1021     		movs	r1, #16
 1202 02d2 2068     		ldr	r0, [r4]
 1203 02d4 FFF7FEFF 		bl	USB_FlushTxFifo
 1204              	.LVL110:
 530:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1205              		.loc 1 530 0
 1206 02d8 0022     		movs	r2, #0
 1207 02da 13E0     		b	.L80
 1208              	.LVL111:
 1209              	.L81:
 532:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 1210              		.loc 1 532 0 discriminator 3
 1211 02dc 07EB4213 		add	r3, r7, r2, lsl #5
 1212 02e0 FF20     		movs	r0, #255
 1213 02e2 C3F80809 		str	r0, [r3, #2312]
 533:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_OUTEP(i)->DOEPINT = 0xFF;
 1214              		.loc 1 533 0 discriminator 3
 1215 02e6 D3F80019 		ldr	r1, [r3, #2304]
 1216 02ea 21F40011 		bic	r1, r1, #2097152
 1217 02ee C3F80019 		str	r1, [r3, #2304]
ARM GAS  /tmp/cc1DR21h.s 			page 48


 534:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 1218              		.loc 1 534 0 discriminator 3
 1219 02f2 C3F8080B 		str	r0, [r3, #2824]
 535:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1220              		.loc 1 535 0 discriminator 3
 1221 02f6 D3F8001B 		ldr	r1, [r3, #2816]
 1222 02fa 21F40011 		bic	r1, r1, #2097152
 1223 02fe C3F8001B 		str	r1, [r3, #2816]
 530:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1224              		.loc 1 530 0 discriminator 3
 1225 0302 0132     		adds	r2, r2, #1
 1226              	.LVL112:
 1227              	.L80:
 530:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1228              		.loc 1 530 0 is_stmt 0 discriminator 1
 1229 0304 6368     		ldr	r3, [r4, #4]
 1230 0306 9A42     		cmp	r2, r3
 1231 0308 E8D3     		bcc	.L81
 537:HALLIB/Src/stm32f7xx_hal_pcd.c ****       USBx_DEVICE->DAINTMSK |= 0x10001;
 1232              		.loc 1 537 0 is_stmt 1
 1233 030a 4FF0FF33 		mov	r3, #-1
 1234 030e C8F81830 		str	r3, [r8, #24]
 538:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1235              		.loc 1 538 0
 1236 0312 D8F81C30 		ldr	r3, [r8, #28]
 1237 0316 43F00113 		orr	r3, r3, #65537
 1238 031a C8F81C30 		str	r3, [r8, #28]
 540:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1239              		.loc 1 540 0
 1240 031e 236B     		ldr	r3, [r4, #48]
 1241 0320 63B1     		cbz	r3, .L82
 542:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_DEVICE->DINEP1MSK |= (USB_OTG_DIEPMSK_TOM | USB_OTG_DIEPMSK_XFRCM | USB_OTG_DIEPMSK_EP
 1242              		.loc 1 542 0
 1243 0322 D8F88430 		ldr	r3, [r8, #132]
 1244 0326 43F00B03 		orr	r3, r3, #11
 1245 032a C8F88430 		str	r3, [r8, #132]
 543:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1246              		.loc 1 543 0
 1247 032e D8F84430 		ldr	r3, [r8, #68]
 1248 0332 43F00B03 		orr	r3, r3, #11
 1249 0336 C8F84430 		str	r3, [r8, #68]
 1250 033a 0BE0     		b	.L83
 1251              	.L82:
 547:HALLIB/Src/stm32f7xx_hal_pcd.c ****         USBx_DEVICE->DIEPMSK |= (USB_OTG_DIEPMSK_TOM | USB_OTG_DIEPMSK_XFRCM | USB_OTG_DIEPMSK_EPDM
 1252              		.loc 1 547 0
 1253 033c D8F81430 		ldr	r3, [r8, #20]
 1254 0340 43F02B03 		orr	r3, r3, #43
 1255 0344 C8F81430 		str	r3, [r8, #20]
 548:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1256              		.loc 1 548 0
 1257 0348 D8F81030 		ldr	r3, [r8, #16]
 1258 034c 43F00B03 		orr	r3, r3, #11
 1259 0350 C8F81030 		str	r3, [r8, #16]
 1260              	.L83:
 552:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1261              		.loc 1 552 0
 1262 0354 D6F80038 		ldr	r3, [r6, #2048]
ARM GAS  /tmp/cc1DR21h.s 			page 49


 1263 0358 23F4FE63 		bic	r3, r3, #2032
 1264 035c C6F80038 		str	r3, [r6, #2048]
 555:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1265              		.loc 1 555 0
 1266 0360 04F56F72 		add	r2, r4, #956
 1267              	.LVL113:
 1268 0364 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 1269 0366 2068     		ldr	r0, [r4]
 1270 0368 FFF7FEFF 		bl	USB_EP0_OutStart
 1271              	.LVL114:
 557:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1272              		.loc 1 557 0
 1273 036c 2368     		ldr	r3, [r4]
 1274 036e 4FF48052 		mov	r2, #4096
 1275 0372 5A61     		str	r2, [r3, #20]
 1276              	.L79:
 561:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1277              		.loc 1 561 0
 1278 0374 2068     		ldr	r0, [r4]
 1279 0376 FFF7FEFF 		bl	USB_ReadInterrupts
 1280              	.LVL115:
 1281 037a 10F4005F 		tst	r0, #8192
 1282 037e 00F08C80 		beq	.L84
 563:HALLIB/Src/stm32f7xx_hal_pcd.c ****       hpcd->Instance->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 1283              		.loc 1 563 0
 1284 0382 2068     		ldr	r0, [r4]
 1285 0384 FFF7FEFF 		bl	USB_ActivateSetup
 1286              	.LVL116:
 564:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1287              		.loc 1 564 0
 1288 0388 2268     		ldr	r2, [r4]
 1289 038a D368     		ldr	r3, [r2, #12]
 1290 038c 23F47053 		bic	r3, r3, #15360
 1291 0390 D360     		str	r3, [r2, #12]
 566:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1292              		.loc 1 566 0
 1293 0392 2068     		ldr	r0, [r4]
 1294 0394 FFF7FEFF 		bl	USB_GetDevSpeed
 1295              	.LVL117:
 1296 0398 50B9     		cbnz	r0, .L85
 568:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->Init.ep0_mps          = USB_OTG_HS_MAX_PACKET_SIZE ;
 1297              		.loc 1 568 0
 1298 039a 0023     		movs	r3, #0
 1299 039c E360     		str	r3, [r4, #12]
 569:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->Instance->GUSBCFG |= (uint32_t)((USBD_HS_TRDT_VALUE << 10) & USB_OTG_GUSBCFG_TRDT);
 1300              		.loc 1 569 0
 1301 039e 4FF40073 		mov	r3, #512
 1302 03a2 6361     		str	r3, [r4, #20]
 570:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1303              		.loc 1 570 0
 1304 03a4 2268     		ldr	r2, [r4]
 1305 03a6 D368     		ldr	r3, [r2, #12]
 1306 03a8 43F41053 		orr	r3, r3, #9216
 1307 03ac D360     		str	r3, [r2, #12]
 1308 03ae 6DE0     		b	.L86
 1309              	.L85:
 574:HALLIB/Src/stm32f7xx_hal_pcd.c ****         hpcd->Init.ep0_mps          = USB_OTG_FS_MAX_PACKET_SIZE ;
ARM GAS  /tmp/cc1DR21h.s 			page 50


 1310              		.loc 1 574 0
 1311 03b0 0323     		movs	r3, #3
 1312 03b2 E360     		str	r3, [r4, #12]
 575:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1313              		.loc 1 575 0
 1314 03b4 4023     		movs	r3, #64
 1315 03b6 6361     		str	r3, [r4, #20]
 583:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1316              		.loc 1 583 0
 1317 03b8 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1318              	.LVL118:
 585:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1319              		.loc 1 585 0
 1320 03bc 814B     		ldr	r3, .L106
 1321 03be 0344     		add	r3, r3, r0
 1322 03c0 814A     		ldr	r2, .L106+4
 1323 03c2 9342     		cmp	r3, r2
 1324 03c4 05D8     		bhi	.L87
 588:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1325              		.loc 1 588 0
 1326 03c6 2268     		ldr	r2, [r4]
 1327 03c8 D368     		ldr	r3, [r2, #12]
 1328 03ca 43F47053 		orr	r3, r3, #15360
 1329 03ce D360     		str	r3, [r2, #12]
 1330 03d0 5CE0     		b	.L86
 1331              	.L87:
 591:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1332              		.loc 1 591 0
 1333 03d2 7E4B     		ldr	r3, .L106+8
 1334 03d4 0344     		add	r3, r3, r0
 1335 03d6 7E4A     		ldr	r2, .L106+12
 1336 03d8 9342     		cmp	r3, r2
 1337 03da 05D8     		bhi	.L88
 594:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1338              		.loc 1 594 0
 1339 03dc 2268     		ldr	r2, [r4]
 1340 03de D368     		ldr	r3, [r2, #12]
 1341 03e0 43F46053 		orr	r3, r3, #14336
 1342 03e4 D360     		str	r3, [r2, #12]
 1343 03e6 51E0     		b	.L86
 1344              	.L88:
 597:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1345              		.loc 1 597 0
 1346 03e8 7A4B     		ldr	r3, .L106+16
 1347 03ea 0344     		add	r3, r3, r0
 1348 03ec 7A4A     		ldr	r2, .L106+20
 1349 03ee 9342     		cmp	r3, r2
 1350 03f0 05D8     		bhi	.L89
 600:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1351              		.loc 1 600 0
 1352 03f2 2268     		ldr	r2, [r4]
 1353 03f4 D368     		ldr	r3, [r2, #12]
 1354 03f6 43F45053 		orr	r3, r3, #13312
 1355 03fa D360     		str	r3, [r2, #12]
 1356 03fc 46E0     		b	.L86
 1357              	.L89:
 603:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
ARM GAS  /tmp/cc1DR21h.s 			page 51


 1358              		.loc 1 603 0
 1359 03fe 774B     		ldr	r3, .L106+24
 1360 0400 0344     		add	r3, r3, r0
 1361 0402 774A     		ldr	r2, .L106+28
 1362 0404 9342     		cmp	r3, r2
 1363 0406 05D8     		bhi	.L90
 606:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1364              		.loc 1 606 0
 1365 0408 2268     		ldr	r2, [r4]
 1366 040a D368     		ldr	r3, [r2, #12]
 1367 040c 43F44053 		orr	r3, r3, #12288
 1368 0410 D360     		str	r3, [r2, #12]
 1369 0412 3BE0     		b	.L86
 1370              	.L90:
 609:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1371              		.loc 1 609 0
 1372 0414 734B     		ldr	r3, .L106+32
 1373 0416 0344     		add	r3, r3, r0
 1374 0418 734A     		ldr	r2, .L106+36
 1375 041a 9342     		cmp	r3, r2
 1376 041c 05D8     		bhi	.L91
 612:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1377              		.loc 1 612 0
 1378 041e 2268     		ldr	r2, [r4]
 1379 0420 D368     		ldr	r3, [r2, #12]
 1380 0422 43F43053 		orr	r3, r3, #11264
 1381 0426 D360     		str	r3, [r2, #12]
 1382 0428 30E0     		b	.L86
 1383              	.L91:
 615:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1384              		.loc 1 615 0
 1385 042a 704B     		ldr	r3, .L106+40
 1386 042c 0344     		add	r3, r3, r0
 1387 042e 704A     		ldr	r2, .L106+44
 1388 0430 9342     		cmp	r3, r2
 1389 0432 05D8     		bhi	.L92
 618:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1390              		.loc 1 618 0
 1391 0434 2268     		ldr	r2, [r4]
 1392 0436 D368     		ldr	r3, [r2, #12]
 1393 0438 43F42053 		orr	r3, r3, #10240
 1394 043c D360     		str	r3, [r2, #12]
 1395 043e 25E0     		b	.L86
 1396              	.L92:
 621:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1397              		.loc 1 621 0
 1398 0440 6C4B     		ldr	r3, .L106+48
 1399 0442 0344     		add	r3, r3, r0
 1400 0444 6C4A     		ldr	r2, .L106+52
 1401 0446 9342     		cmp	r3, r2
 1402 0448 05D8     		bhi	.L93
 624:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1403              		.loc 1 624 0
 1404 044a 2268     		ldr	r2, [r4]
 1405 044c D368     		ldr	r3, [r2, #12]
 1406 044e 43F41053 		orr	r3, r3, #9216
 1407 0452 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/cc1DR21h.s 			page 52


 1408 0454 1AE0     		b	.L86
 1409              	.L93:
 627:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1410              		.loc 1 627 0
 1411 0456 694B     		ldr	r3, .L106+56
 1412 0458 0344     		add	r3, r3, r0
 1413 045a 694A     		ldr	r2, .L106+60
 1414 045c 9342     		cmp	r3, r2
 1415 045e 05D8     		bhi	.L94
 630:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1416              		.loc 1 630 0
 1417 0460 2268     		ldr	r2, [r4]
 1418 0462 D368     		ldr	r3, [r2, #12]
 1419 0464 43F40053 		orr	r3, r3, #8192
 1420 0468 D360     		str	r3, [r2, #12]
 1421 046a 0FE0     		b	.L86
 1422              	.L94:
 633:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1423              		.loc 1 633 0
 1424 046c 654B     		ldr	r3, .L106+64
 1425 046e 0344     		add	r3, r3, r0
 1426 0470 654A     		ldr	r2, .L106+68
 1427 0472 9342     		cmp	r3, r2
 1428 0474 05D8     		bhi	.L95
 636:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1429              		.loc 1 636 0
 1430 0476 2268     		ldr	r2, [r4]
 1431 0478 D368     		ldr	r3, [r2, #12]
 1432 047a 43F4E053 		orr	r3, r3, #7168
 1433 047e D360     		str	r3, [r2, #12]
 1434 0480 04E0     		b	.L86
 1435              	.L95:
 642:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1436              		.loc 1 642 0
 1437 0482 2268     		ldr	r2, [r4]
 1438 0484 D368     		ldr	r3, [r2, #12]
 1439 0486 43F4C053 		orr	r3, r3, #6144
 1440 048a D360     		str	r3, [r2, #12]
 1441              	.LVL119:
 1442              	.L86:
 646:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1443              		.loc 1 646 0
 1444 048c 2046     		mov	r0, r4
 1445 048e FFF7FEFF 		bl	HAL_PCD_ResetCallback
 1446              	.LVL120:
 648:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1447              		.loc 1 648 0
 1448 0492 2368     		ldr	r3, [r4]
 1449 0494 4FF40052 		mov	r2, #8192
 1450 0498 5A61     		str	r2, [r3, #20]
 1451              	.L84:
 652:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1452              		.loc 1 652 0
 1453 049a 2068     		ldr	r0, [r4]
 1454 049c FFF7FEFF 		bl	USB_ReadInterrupts
 1455              	.LVL121:
 1456 04a0 10F0100F 		tst	r0, #16
ARM GAS  /tmp/cc1DR21h.s 			page 53


 1457 04a4 45D0     		beq	.L96
 654:HALLIB/Src/stm32f7xx_hal_pcd.c ****       temp = USBx->GRXSTSP;
 1458              		.loc 1 654 0
 1459 04a6 2268     		ldr	r2, [r4]
 1460 04a8 9369     		ldr	r3, [r2, #24]
 1461 04aa 23F01003 		bic	r3, r3, #16
 1462 04ae 9361     		str	r3, [r2, #24]
 655:HALLIB/Src/stm32f7xx_hal_pcd.c ****       ep = &hpcd->OUT_ep[temp & USB_OTG_GRXSTSP_EPNUM];
 1463              		.loc 1 655 0
 1464 04b0 376A     		ldr	r7, [r6, #32]
 1465              	.LVL122:
 656:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1466              		.loc 1 656 0
 1467 04b2 07F00F08 		and	r8, r7, #15
 1468              	.LVL123:
 658:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1469              		.loc 1 658 0
 1470 04b6 C7F34343 		ubfx	r3, r7, #17, #4
 1471 04ba 022B     		cmp	r3, #2
 1472 04bc 1FD1     		bne	.L97
 660:HALLIB/Src/stm32f7xx_hal_pcd.c ****         {
 1473              		.loc 1 660 0
 1474 04be 47F6F073 		movw	r3, #32752
 1475 04c2 1F42     		tst	r7, r3
 1476 04c4 30D0     		beq	.L98
 662:HALLIB/Src/stm32f7xx_hal_pcd.c ****           ep->xfer_buff += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 1477              		.loc 1 662 0
 1478 04c6 3F09     		lsrs	r7, r7, #4
 1479              	.LVL124:
 1480 04c8 4FEAC80A 		lsl	r10, r8, #3
 1481 04cc C8EB0A03 		rsb	r3, r8, r10
 1482 04d0 4FEA8309 		lsl	r9, r3, #2
 1483 04d4 A144     		add	r9, r9, r4
 1484 04d6 C7F30A02 		ubfx	r2, r7, #0, #11
 1485 04da D9F80412 		ldr	r1, [r9, #516]
 1486 04de 3046     		mov	r0, r6
 1487 04e0 FFF7FEFF 		bl	USB_ReadPacket
 1488              	.LVL125:
 663:HALLIB/Src/stm32f7xx_hal_pcd.c ****           ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 1489              		.loc 1 663 0
 1490 04e4 C7F30A07 		ubfx	r7, r7, #0, #11
 1491 04e8 D9F80432 		ldr	r3, [r9, #516]
 1492 04ec 3B44     		add	r3, r3, r7
 1493 04ee C9F80432 		str	r3, [r9, #516]
 664:HALLIB/Src/stm32f7xx_hal_pcd.c ****         }
 1494              		.loc 1 664 0
 1495 04f2 D9F81032 		ldr	r3, [r9, #528]
 1496 04f6 1F44     		add	r7, r7, r3
 1497 04f8 C9F81072 		str	r7, [r9, #528]
 1498 04fc 14E0     		b	.L98
 1499              	.LVL126:
 1500              	.L97:
 667:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1501              		.loc 1 667 0
 1502 04fe 062B     		cmp	r3, #6
 1503 0500 12D1     		bne	.L98
 669:HALLIB/Src/stm32f7xx_hal_pcd.c ****         ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
ARM GAS  /tmp/cc1DR21h.s 			page 54


 1504              		.loc 1 669 0
 1505 0502 0822     		movs	r2, #8
 1506 0504 04F56F71 		add	r1, r4, #956
 1507 0508 3046     		mov	r0, r6
 1508 050a FFF7FEFF 		bl	USB_ReadPacket
 1509              	.LVL127:
 670:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1510              		.loc 1 670 0
 1511 050e C7F30A17 		ubfx	r7, r7, #4, #11
 1512              	.LVL128:
 1513 0512 4FEAC803 		lsl	r3, r8, #3
 1514 0516 C8EB0301 		rsb	r1, r8, r3
 1515 051a 8A00     		lsls	r2, r1, #2
 1516 051c 2244     		add	r2, r2, r4
 1517 051e D2F81032 		ldr	r3, [r2, #528]
 1518 0522 3B44     		add	r3, r3, r7
 1519 0524 C2F81032 		str	r3, [r2, #528]
 1520              	.L98:
 672:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1521              		.loc 1 672 0
 1522 0528 2268     		ldr	r2, [r4]
 1523 052a 9369     		ldr	r3, [r2, #24]
 1524 052c 43F01003 		orr	r3, r3, #16
 1525 0530 9361     		str	r3, [r2, #24]
 1526              	.LVL129:
 1527              	.L96:
 676:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1528              		.loc 1 676 0
 1529 0532 2068     		ldr	r0, [r4]
 1530 0534 FFF7FEFF 		bl	USB_ReadInterrupts
 1531              	.LVL130:
 1532 0538 10F0080F 		tst	r0, #8
 1533 053c 05D0     		beq	.L99
 678:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 1534              		.loc 1 678 0
 1535 053e 2046     		mov	r0, r4
 1536 0540 FFF7FEFF 		bl	HAL_PCD_SOFCallback
 1537              	.LVL131:
 679:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1538              		.loc 1 679 0
 1539 0544 2368     		ldr	r3, [r4]
 1540 0546 0822     		movs	r2, #8
 1541 0548 5A61     		str	r2, [r3, #20]
 1542              	.L99:
 683:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1543              		.loc 1 683 0
 1544 054a 2068     		ldr	r0, [r4]
 1545 054c FFF7FEFF 		bl	USB_ReadInterrupts
 1546              	.LVL132:
 1547 0550 10F4801F 		tst	r0, #1048576
 1548 0554 07D0     		beq	.L100
 685:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 1549              		.loc 1 685 0
 1550 0556 E9B2     		uxtb	r1, r5
 1551 0558 2046     		mov	r0, r4
 1552 055a FFF7FEFF 		bl	HAL_PCD_ISOINIncompleteCallback
 1553              	.LVL133:
ARM GAS  /tmp/cc1DR21h.s 			page 55


 686:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1554              		.loc 1 686 0
 1555 055e 2368     		ldr	r3, [r4]
 1556 0560 4FF48012 		mov	r2, #1048576
 1557 0564 5A61     		str	r2, [r3, #20]
 1558              	.L100:
 690:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1559              		.loc 1 690 0
 1560 0566 2068     		ldr	r0, [r4]
 1561 0568 FFF7FEFF 		bl	USB_ReadInterrupts
 1562              	.LVL134:
 1563 056c 10F4001F 		tst	r0, #2097152
 1564 0570 07D0     		beq	.L101
 692:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 1565              		.loc 1 692 0
 1566 0572 E9B2     		uxtb	r1, r5
 1567 0574 2046     		mov	r0, r4
 1568 0576 FFF7FEFF 		bl	HAL_PCD_ISOOUTIncompleteCallback
 1569              	.LVL135:
 693:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1570              		.loc 1 693 0
 1571 057a 2368     		ldr	r3, [r4]
 1572 057c 4FF40012 		mov	r2, #2097152
 1573 0580 5A61     		str	r2, [r3, #20]
 1574              	.L101:
 697:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1575              		.loc 1 697 0
 1576 0582 2068     		ldr	r0, [r4]
 1577 0584 FFF7FEFF 		bl	USB_ReadInterrupts
 1578              	.LVL136:
 1579 0588 10F0804F 		tst	r0, #1073741824
 1580 058c 06D0     		beq	.L102
 699:HALLIB/Src/stm32f7xx_hal_pcd.c ****       __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 1581              		.loc 1 699 0
 1582 058e 2046     		mov	r0, r4
 1583 0590 FFF7FEFF 		bl	HAL_PCD_ConnectCallback
 1584              	.LVL137:
 700:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1585              		.loc 1 700 0
 1586 0594 2368     		ldr	r3, [r4]
 1587 0596 4FF08042 		mov	r2, #1073741824
 1588 059a 5A61     		str	r2, [r3, #20]
 1589              	.L102:
 704:HALLIB/Src/stm32f7xx_hal_pcd.c ****     {
 1590              		.loc 1 704 0
 1591 059c 2068     		ldr	r0, [r4]
 1592 059e FFF7FEFF 		bl	USB_ReadInterrupts
 1593              	.LVL138:
 1594 05a2 10F0040F 		tst	r0, #4
 1595 05a6 0BD0     		beq	.L49
 706:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1596              		.loc 1 706 0
 1597 05a8 2368     		ldr	r3, [r4]
 1598 05aa 5D68     		ldr	r5, [r3, #4]
 1599              	.LVL139:
 708:HALLIB/Src/stm32f7xx_hal_pcd.c ****       {
 1600              		.loc 1 708 0
ARM GAS  /tmp/cc1DR21h.s 			page 56


 1601 05ac 15F0040F 		tst	r5, #4
 1602 05b0 02D0     		beq	.L103
 710:HALLIB/Src/stm32f7xx_hal_pcd.c ****       }
 1603              		.loc 1 710 0
 1604 05b2 2046     		mov	r0, r4
 1605 05b4 FFF7FEFF 		bl	HAL_PCD_DisconnectCallback
 1606              	.LVL140:
 1607              	.L103:
 712:HALLIB/Src/stm32f7xx_hal_pcd.c ****     }
 1608              		.loc 1 712 0
 1609 05b8 2268     		ldr	r2, [r4]
 1610 05ba 5368     		ldr	r3, [r2, #4]
 1611 05bc 2B43     		orrs	r3, r3, r5
 1612 05be 5360     		str	r3, [r2, #4]
 1613              	.LVL141:
 1614              	.L49:
 1615 05c0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1616              	.LVL142:
 1617              	.L107:
 1618              		.align	2
 1619              	.L106:
 1620 05c4 405327FF 		.word	-14200000
 1621 05c8 FF340C00 		.word	799999
 1622 05cc 401E1BFF 		.word	-15000000
 1623 05d0 3F420F00 		.word	999999
 1624 05d4 00DC0BFF 		.word	-16000000
 1625 05d8 7F4F1200 		.word	1199999
 1626 05dc 808CF9FE 		.word	-17200000
 1627 05e0 1FD61300 		.word	1299999
 1628 05e4 60B6E5FE 		.word	-18500000
 1629 05e8 5FE31600 		.word	1499999
 1630 05ec 00D3CEFE 		.word	-20000000
 1631 05f0 3F771B00 		.word	1799999
 1632 05f4 C05BB3FE 		.word	-21800000
 1633 05f8 BF912100 		.word	2199999
 1634 05fc 00CA91FE 		.word	-24000000
 1635 0600 1F753800 		.word	3699999
 1636 0604 E05459FE 		.word	-27700000
 1637 0608 DF9C4100 		.word	4299999
 1638              		.cfi_endproc
 1639              	.LFE142:
 1641              		.section	.text.HAL_PCD_DevConnect,"ax",%progbits
 1642              		.align	2
 1643              		.global	HAL_PCD_DevConnect
 1644              		.thumb
 1645              		.thumb_func
 1647              	HAL_PCD_DevConnect:
 1648              	.LFB154:
 910:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 1649              		.loc 1 910 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 0
 1652              		@ frame_needed = 0, uses_anonymous_args = 0
 1653              	.LVL143:
 911:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevConnect(hpcd->Instance);
 1654              		.loc 1 911 0
 1655 0000 90F8B833 		ldrb	r3, [r0, #952]	@ zero_extendqisi2
ARM GAS  /tmp/cc1DR21h.s 			page 57


 1656 0004 012B     		cmp	r3, #1
 1657 0006 0BD0     		beq	.L110
 910:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 1658              		.loc 1 910 0 discriminator 2
 1659 0008 10B5     		push	{r4, lr}
 1660              	.LCFI15:
 1661              		.cfi_def_cfa_offset 8
 1662              		.cfi_offset 4, -8
 1663              		.cfi_offset 14, -4
 1664 000a 0446     		mov	r4, r0
 911:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevConnect(hpcd->Instance);
 1665              		.loc 1 911 0 discriminator 2
 1666 000c 0123     		movs	r3, #1
 1667 000e 80F8B833 		strb	r3, [r0, #952]
 912:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 1668              		.loc 1 912 0 discriminator 2
 1669 0012 0068     		ldr	r0, [r0]
 1670              	.LVL144:
 1671 0014 FFF7FEFF 		bl	USB_DevConnect
 1672              	.LVL145:
 913:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 1673              		.loc 1 913 0 discriminator 2
 1674 0018 0020     		movs	r0, #0
 1675 001a 84F8B803 		strb	r0, [r4, #952]
 914:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 1676              		.loc 1 914 0 discriminator 2
 1677 001e 10BD     		pop	{r4, pc}
 1678              	.LVL146:
 1679              	.L110:
 1680              	.LCFI16:
 1681              		.cfi_def_cfa_offset 0
 1682              		.cfi_restore 4
 1683              		.cfi_restore 14
 911:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevConnect(hpcd->Instance);
 1684              		.loc 1 911 0
 1685 0020 0220     		movs	r0, #2
 1686              	.LVL147:
 1687 0022 7047     		bx	lr
 1688              		.cfi_endproc
 1689              	.LFE154:
 1691              		.section	.text.HAL_PCD_DevDisconnect,"ax",%progbits
 1692              		.align	2
 1693              		.global	HAL_PCD_DevDisconnect
 1694              		.thumb
 1695              		.thumb_func
 1697              	HAL_PCD_DevDisconnect:
 1698              	.LFB155:
 923:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 1699              		.loc 1 923 0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703              	.LVL148:
 924:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevDisconnect(hpcd->Instance);
 1704              		.loc 1 924 0
 1705 0000 90F8B833 		ldrb	r3, [r0, #952]	@ zero_extendqisi2
 1706 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/cc1DR21h.s 			page 58


 1707 0006 0BD0     		beq	.L115
 923:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 1708              		.loc 1 923 0 discriminator 2
 1709 0008 10B5     		push	{r4, lr}
 1710              	.LCFI17:
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 4, -8
 1713              		.cfi_offset 14, -4
 1714 000a 0446     		mov	r4, r0
 924:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevDisconnect(hpcd->Instance);
 1715              		.loc 1 924 0 discriminator 2
 1716 000c 0123     		movs	r3, #1
 1717 000e 80F8B833 		strb	r3, [r0, #952]
 925:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 1718              		.loc 1 925 0 discriminator 2
 1719 0012 0068     		ldr	r0, [r0]
 1720              	.LVL149:
 1721 0014 FFF7FEFF 		bl	USB_DevDisconnect
 1722              	.LVL150:
 926:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 1723              		.loc 1 926 0 discriminator 2
 1724 0018 0020     		movs	r0, #0
 1725 001a 84F8B803 		strb	r0, [r4, #952]
 927:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 1726              		.loc 1 927 0 discriminator 2
 1727 001e 10BD     		pop	{r4, pc}
 1728              	.LVL151:
 1729              	.L115:
 1730              	.LCFI18:
 1731              		.cfi_def_cfa_offset 0
 1732              		.cfi_restore 4
 1733              		.cfi_restore 14
 924:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DevDisconnect(hpcd->Instance);
 1734              		.loc 1 924 0
 1735 0020 0220     		movs	r0, #2
 1736              	.LVL152:
 1737 0022 7047     		bx	lr
 1738              		.cfi_endproc
 1739              	.LFE155:
 1741              		.section	.text.HAL_PCD_SetAddress,"ax",%progbits
 1742              		.align	2
 1743              		.global	HAL_PCD_SetAddress
 1744              		.thumb
 1745              		.thumb_func
 1747              	HAL_PCD_SetAddress:
 1748              	.LFB156:
 937:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 1749              		.loc 1 937 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753              	.LVL153:
 938:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_SetDevAddress(hpcd->Instance, address);
 1754              		.loc 1 938 0
 1755 0000 90F8B833 		ldrb	r3, [r0, #952]	@ zero_extendqisi2
 1756 0004 012B     		cmp	r3, #1
 1757 0006 0BD0     		beq	.L120
ARM GAS  /tmp/cc1DR21h.s 			page 59


 937:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 1758              		.loc 1 937 0 discriminator 2
 1759 0008 10B5     		push	{r4, lr}
 1760              	.LCFI19:
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 4, -8
 1763              		.cfi_offset 14, -4
 1764 000a 0446     		mov	r4, r0
 938:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_SetDevAddress(hpcd->Instance, address);
 1765              		.loc 1 938 0 discriminator 2
 1766 000c 0123     		movs	r3, #1
 1767 000e 80F8B833 		strb	r3, [r0, #952]
 939:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 1768              		.loc 1 939 0 discriminator 2
 1769 0012 0068     		ldr	r0, [r0]
 1770              	.LVL154:
 1771 0014 FFF7FEFF 		bl	USB_SetDevAddress
 1772              	.LVL155:
 940:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 1773              		.loc 1 940 0 discriminator 2
 1774 0018 0020     		movs	r0, #0
 1775 001a 84F8B803 		strb	r0, [r4, #952]
 941:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 1776              		.loc 1 941 0 discriminator 2
 1777 001e 10BD     		pop	{r4, pc}
 1778              	.LVL156:
 1779              	.L120:
 1780              	.LCFI20:
 1781              		.cfi_def_cfa_offset 0
 1782              		.cfi_restore 4
 1783              		.cfi_restore 14
 938:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_SetDevAddress(hpcd->Instance, address);
 1784              		.loc 1 938 0
 1785 0020 0220     		movs	r0, #2
 1786              	.LVL157:
 1787 0022 7047     		bx	lr
 1788              		.cfi_endproc
 1789              	.LFE156:
 1791              		.section	.text.HAL_PCD_EP_Open,"ax",%progbits
 1792              		.align	2
 1793              		.global	HAL_PCD_EP_Open
 1794              		.thumb
 1795              		.thumb_func
 1797              	HAL_PCD_EP_Open:
 1798              	.LFB157:
 952:HALLIB/Src/stm32f7xx_hal_pcd.c ****   HAL_StatusTypeDef  ret = HAL_OK;
 1799              		.loc 1 952 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              	.LVL158:
 1804 0000 70B5     		push	{r4, r5, r6, lr}
 1805              	.LCFI21:
 1806              		.cfi_def_cfa_offset 16
 1807              		.cfi_offset 4, -16
 1808              		.cfi_offset 5, -12
 1809              		.cfi_offset 6, -8
ARM GAS  /tmp/cc1DR21h.s 			page 60


 1810              		.cfi_offset 14, -4
 1811              	.LVL159:
 956:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 1812              		.loc 1 956 0
 1813 0002 4DB2     		sxtb	r5, r1
 1814 0004 002D     		cmp	r5, #0
 1815 0006 07DA     		bge	.L124
 958:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 1816              		.loc 1 958 0
 1817 0008 01F07F06 		and	r6, r1, #127
 1818 000c C6EBC606 		rsb	r6, r6, r6, lsl #3
 1819 0010 B400     		lsls	r4, r6, #2
 1820 0012 3834     		adds	r4, r4, #56
 1821 0014 0444     		add	r4, r4, r0
 1822              	.LVL160:
 1823 0016 07E0     		b	.L125
 1824              	.LVL161:
 1825              	.L124:
 962:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 1826              		.loc 1 962 0
 1827 0018 01F07F06 		and	r6, r1, #127
 1828 001c C6EBC606 		rsb	r6, r6, r6, lsl #3
 1829 0020 B400     		lsls	r4, r6, #2
 1830 0022 04F5FC74 		add	r4, r4, #504
 1831 0026 0444     		add	r4, r4, r0
 1832              	.LVL162:
 1833              	.L125:
 964:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1834              		.loc 1 964 0
 1835 0028 01F07F01 		and	r1, r1, #127
 1836              	.LVL163:
 1837 002c 2170     		strb	r1, [r4]
 966:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->maxpacket = ep_mps;
 1838              		.loc 1 966 0
 1839 002e ED0F     		lsrs	r5, r5, #31
 1840              	.LVL164:
 1841 0030 6570     		strb	r5, [r4, #1]
 967:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->type = ep_type;
 1842              		.loc 1 967 0
 1843 0032 A260     		str	r2, [r4, #8]
 968:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if (ep->is_in)
 1844              		.loc 1 968 0
 1845 0034 E370     		strb	r3, [r4, #3]
 969:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 1846              		.loc 1 969 0
 1847 0036 05B1     		cbz	r5, .L126
 972:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 1848              		.loc 1 972 0
 1849 0038 E180     		strh	r1, [r4, #6]	@ movhi
 1850              	.L126:
 975:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 1851              		.loc 1 975 0
 1852 003a 022B     		cmp	r3, #2
 1853 003c 01D1     		bne	.L127
 977:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 1854              		.loc 1 977 0
 1855 003e 0023     		movs	r3, #0
ARM GAS  /tmp/cc1DR21h.s 			page 61


 1856              	.LVL165:
 1857 0040 2371     		strb	r3, [r4, #4]
 1858              	.L127:
 980:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_ActivateEndpoint(hpcd->Instance , ep);
 1859              		.loc 1 980 0
 1860 0042 90F8B833 		ldrb	r3, [r0, #952]	@ zero_extendqisi2
 1861 0046 012B     		cmp	r3, #1
 1862 0048 0BD0     		beq	.L129
 1863 004a 0546     		mov	r5, r0
 980:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_ActivateEndpoint(hpcd->Instance , ep);
 1864              		.loc 1 980 0 is_stmt 0 discriminator 2
 1865 004c 0123     		movs	r3, #1
 1866 004e 80F8B833 		strb	r3, [r0, #952]
 1867              	.LVL166:
 981:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 1868              		.loc 1 981 0 is_stmt 1 discriminator 2
 1869 0052 2146     		mov	r1, r4
 1870 0054 0068     		ldr	r0, [r0]
 1871              	.LVL167:
 1872 0056 FFF7FEFF 		bl	USB_ActivateEndpoint
 1873              	.LVL168:
 982:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return ret;
 1874              		.loc 1 982 0 discriminator 2
 1875 005a 0020     		movs	r0, #0
 1876 005c 85F8B803 		strb	r0, [r5, #952]
 983:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 1877              		.loc 1 983 0 discriminator 2
 1878 0060 70BD     		pop	{r4, r5, r6, pc}
 1879              	.LVL169:
 1880              	.L129:
 980:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_ActivateEndpoint(hpcd->Instance , ep);
 1881              		.loc 1 980 0
 1882 0062 0220     		movs	r0, #2
 1883              	.LVL170:
 984:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1884              		.loc 1 984 0
 1885 0064 70BD     		pop	{r4, r5, r6, pc}
 1886              		.cfi_endproc
 1887              	.LFE157:
 1889 0066 00BF     		.section	.text.HAL_PCD_EP_Close,"ax",%progbits
 1890              		.align	2
 1891              		.global	HAL_PCD_EP_Close
 1892              		.thumb
 1893              		.thumb_func
 1895              	HAL_PCD_EP_Close:
 1896              	.LFB158:
 994:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 1897              		.loc 1 994 0
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 0
 1900              		@ frame_needed = 0, uses_anonymous_args = 0
 1901              	.LVL171:
 1902 0000 10B5     		push	{r4, lr}
 1903              	.LCFI22:
 1904              		.cfi_def_cfa_offset 8
 1905              		.cfi_offset 4, -8
 1906              		.cfi_offset 14, -4
ARM GAS  /tmp/cc1DR21h.s 			page 62


 997:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 1907              		.loc 1 997 0
 1908 0002 4AB2     		sxtb	r2, r1
 1909 0004 002A     		cmp	r2, #0
 1910 0006 07DA     		bge	.L132
 999:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 1911              		.loc 1 999 0
 1912 0008 01F07F04 		and	r4, r1, #127
 1913 000c C4EBC404 		rsb	r4, r4, r4, lsl #3
 1914 0010 A300     		lsls	r3, r4, #2
 1915 0012 3833     		adds	r3, r3, #56
 1916 0014 0344     		add	r3, r3, r0
 1917              	.LVL172:
 1918 0016 07E0     		b	.L133
 1919              	.LVL173:
 1920              	.L132:
1003:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 1921              		.loc 1 1003 0
 1922 0018 01F07F04 		and	r4, r1, #127
 1923 001c C4EBC404 		rsb	r4, r4, r4, lsl #3
 1924 0020 A300     		lsls	r3, r4, #2
 1925 0022 03F5FC73 		add	r3, r3, #504
 1926 0026 0344     		add	r3, r3, r0
 1927              	.LVL174:
 1928              	.L133:
1005:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1929              		.loc 1 1005 0
 1930 0028 01F07F01 		and	r1, r1, #127
 1931              	.LVL175:
 1932 002c 1970     		strb	r1, [r3]
1007:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1933              		.loc 1 1007 0
 1934 002e D20F     		lsrs	r2, r2, #31
 1935              	.LVL176:
 1936 0030 5A70     		strb	r2, [r3, #1]
1009:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DeactivateEndpoint(hpcd->Instance , ep);
 1937              		.loc 1 1009 0
 1938 0032 90F8B823 		ldrb	r2, [r0, #952]	@ zero_extendqisi2
 1939 0036 012A     		cmp	r2, #1
 1940 0038 0BD0     		beq	.L135
 1941 003a 0446     		mov	r4, r0
1009:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DeactivateEndpoint(hpcd->Instance , ep);
 1942              		.loc 1 1009 0 is_stmt 0 discriminator 2
 1943 003c 0122     		movs	r2, #1
 1944 003e 80F8B823 		strb	r2, [r0, #952]
1010:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 1945              		.loc 1 1010 0 is_stmt 1 discriminator 2
 1946 0042 1946     		mov	r1, r3
 1947 0044 0068     		ldr	r0, [r0]
 1948              	.LVL177:
 1949 0046 FFF7FEFF 		bl	USB_DeactivateEndpoint
 1950              	.LVL178:
1011:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 1951              		.loc 1 1011 0 discriminator 2
 1952 004a 0020     		movs	r0, #0
 1953 004c 84F8B803 		strb	r0, [r4, #952]
1012:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
ARM GAS  /tmp/cc1DR21h.s 			page 63


 1954              		.loc 1 1012 0 discriminator 2
 1955 0050 10BD     		pop	{r4, pc}
 1956              	.LVL179:
 1957              	.L135:
1009:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_DeactivateEndpoint(hpcd->Instance , ep);
 1958              		.loc 1 1009 0
 1959 0052 0220     		movs	r0, #2
 1960              	.LVL180:
1013:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1961              		.loc 1 1013 0
 1962 0054 10BD     		pop	{r4, pc}
 1963              		.cfi_endproc
 1964              	.LFE158:
 1966 0056 00BF     		.section	.text.HAL_PCD_EP_Receive,"ax",%progbits
 1967              		.align	2
 1968              		.global	HAL_PCD_EP_Receive
 1969              		.thumb
 1970              		.thumb_func
 1972              	HAL_PCD_EP_Receive:
 1973              	.LFB159:
1025:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 1974              		.loc 1 1025 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              	.LVL181:
 1979 0000 70B5     		push	{r4, r5, r6, lr}
 1980              	.LCFI23:
 1981              		.cfi_def_cfa_offset 16
 1982              		.cfi_offset 4, -16
 1983              		.cfi_offset 5, -12
 1984              		.cfi_offset 6, -8
 1985              		.cfi_offset 14, -4
 1986 0002 01F07F06 		and	r6, r1, #127
1028:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 1987              		.loc 1 1028 0
 1988 0006 F500     		lsls	r5, r6, #3
 1989 0008 A91B     		subs	r1, r5, r6
 1990              	.LVL182:
 1991 000a 8C00     		lsls	r4, r1, #2
 1992 000c 04F5FC74 		add	r4, r4, #504
 1993 0010 0119     		adds	r1, r0, r4
 1994              	.LVL183:
1031:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_len = len;
 1995              		.loc 1 1031 0
 1996 0012 AD1B     		subs	r5, r5, r6
 1997 0014 AC00     		lsls	r4, r5, #2
 1998 0016 0444     		add	r4, r4, r0
 1999 0018 C4F80422 		str	r2, [r4, #516]
1032:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_count = 0;
 2000              		.loc 1 1032 0
 2001 001c C4F80C32 		str	r3, [r4, #524]
1033:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = 0;
 2002              		.loc 1 1033 0
 2003 0020 0023     		movs	r3, #0
 2004              	.LVL184:
 2005 0022 C4F81032 		str	r3, [r4, #528]
ARM GAS  /tmp/cc1DR21h.s 			page 64


1034:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num = ep_addr & 0x7F;
 2006              		.loc 1 1034 0
 2007 0026 84F8F931 		strb	r3, [r4, #505]
1035:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2008              		.loc 1 1035 0
 2009 002a 84F8F861 		strb	r6, [r4, #504]
1037:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2010              		.loc 1 1037 0
 2011 002e 0369     		ldr	r3, [r0, #16]
 2012 0030 012B     		cmp	r3, #1
 2013 0032 05D1     		bne	.L138
1039:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2014              		.loc 1 1039 0
 2015 0034 C6EBC605 		rsb	r5, r6, r6, lsl #3
 2016 0038 AC00     		lsls	r4, r5, #2
 2017              	.LVL185:
 2018 003a 0444     		add	r4, r4, r0
 2019 003c C4F80822 		str	r2, [r4, #520]
 2020              	.LVL186:
 2021              	.L138:
1042:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2022              		.loc 1 1042 0
 2023 0040 26B9     		cbnz	r6, .L139
1044:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2024              		.loc 1 1044 0
 2025 0042 DAB2     		uxtb	r2, r3
 2026              	.LVL187:
 2027 0044 0068     		ldr	r0, [r0]
 2028              	.LVL188:
 2029 0046 FFF7FEFF 		bl	USB_EP0StartXfer
 2030              	.LVL189:
 2031 004a 03E0     		b	.L140
 2032              	.LVL190:
 2033              	.L139:
1048:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2034              		.loc 1 1048 0
 2035 004c DAB2     		uxtb	r2, r3
 2036              	.LVL191:
 2037 004e 0068     		ldr	r0, [r0]
 2038              	.LVL192:
 2039 0050 FFF7FEFF 		bl	USB_EPStartXfer
 2040              	.LVL193:
 2041              	.L140:
1052:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2042              		.loc 1 1052 0
 2043 0054 0020     		movs	r0, #0
 2044 0056 70BD     		pop	{r4, r5, r6, pc}
 2045              		.cfi_endproc
 2046              	.LFE159:
 2048              		.section	.text.HAL_PCD_EP_GetRxCount,"ax",%progbits
 2049              		.align	2
 2050              		.global	HAL_PCD_EP_GetRxCount
 2051              		.thumb
 2052              		.thumb_func
 2054              	HAL_PCD_EP_GetRxCount:
 2055              	.LFB160:
1061:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return hpcd->OUT_ep[ep_addr & 0xF].xfer_count;
ARM GAS  /tmp/cc1DR21h.s 			page 65


 2056              		.loc 1 1061 0
 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 0
 2059              		@ frame_needed = 0, uses_anonymous_args = 0
 2060              		@ link register save eliminated.
 2061              	.LVL194:
1062:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 2062              		.loc 1 1062 0
 2063 0000 01F00F01 		and	r1, r1, #15
 2064              	.LVL195:
 2065 0004 C1EBC101 		rsb	r1, r1, r1, lsl #3
 2066 0008 8B00     		lsls	r3, r1, #2
 2067 000a 1844     		add	r0, r0, r3
 2068              	.LVL196:
1063:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 2069              		.loc 1 1063 0
 2070 000c B0F81002 		ldrh	r0, [r0, #528]
 2071 0010 7047     		bx	lr
 2072              		.cfi_endproc
 2073              	.LFE160:
 2075 0012 00BF     		.section	.text.HAL_PCD_EP_Transmit,"ax",%progbits
 2076              		.align	2
 2077              		.global	HAL_PCD_EP_Transmit
 2078              		.thumb
 2079              		.thumb_func
 2081              	HAL_PCD_EP_Transmit:
 2082              	.LFB161:
1073:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 2083              		.loc 1 1073 0
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 0
 2086              		@ frame_needed = 0, uses_anonymous_args = 0
 2087              	.LVL197:
 2088 0000 70B5     		push	{r4, r5, r6, lr}
 2089              	.LCFI24:
 2090              		.cfi_def_cfa_offset 16
 2091              		.cfi_offset 4, -16
 2092              		.cfi_offset 5, -12
 2093              		.cfi_offset 6, -8
 2094              		.cfi_offset 14, -4
 2095 0002 01F07F06 		and	r6, r1, #127
1076:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2096              		.loc 1 1076 0
 2097 0006 F500     		lsls	r5, r6, #3
 2098 0008 A91B     		subs	r1, r5, r6
 2099              	.LVL198:
 2100 000a 8C00     		lsls	r4, r1, #2
 2101 000c 3834     		adds	r4, r4, #56
 2102 000e 0119     		adds	r1, r0, r4
 2103              	.LVL199:
1079:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_len = len;
 2104              		.loc 1 1079 0
 2105 0010 AD1B     		subs	r5, r5, r6
 2106 0012 AC00     		lsls	r4, r5, #2
 2107 0014 0444     		add	r4, r4, r0
 2108 0016 6264     		str	r2, [r4, #68]
1080:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->xfer_count = 0;
ARM GAS  /tmp/cc1DR21h.s 			page 66


 2109              		.loc 1 1080 0
 2110 0018 E364     		str	r3, [r4, #76]
1081:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = 1;
 2111              		.loc 1 1081 0
 2112 001a 0023     		movs	r3, #0
 2113              	.LVL200:
 2114 001c 2365     		str	r3, [r4, #80]
1082:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num = ep_addr & 0x7F;
 2115              		.loc 1 1082 0
 2116 001e 0123     		movs	r3, #1
 2117 0020 84F83930 		strb	r3, [r4, #57]
1083:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2118              		.loc 1 1083 0
 2119 0024 84F83860 		strb	r6, [r4, #56]
1085:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2120              		.loc 1 1085 0
 2121 0028 0369     		ldr	r3, [r0, #16]
 2122 002a 012B     		cmp	r3, #1
 2123 002c 04D1     		bne	.L144
1087:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2124              		.loc 1 1087 0
 2125 002e C6EBC605 		rsb	r5, r6, r6, lsl #3
 2126 0032 AC00     		lsls	r4, r5, #2
 2127              	.LVL201:
 2128 0034 0444     		add	r4, r4, r0
 2129 0036 A264     		str	r2, [r4, #72]
 2130              	.LVL202:
 2131              	.L144:
1090:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2132              		.loc 1 1090 0
 2133 0038 26B9     		cbnz	r6, .L145
1092:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2134              		.loc 1 1092 0
 2135 003a DAB2     		uxtb	r2, r3
 2136              	.LVL203:
 2137 003c 0068     		ldr	r0, [r0]
 2138              	.LVL204:
 2139 003e FFF7FEFF 		bl	USB_EP0StartXfer
 2140              	.LVL205:
 2141 0042 03E0     		b	.L146
 2142              	.LVL206:
 2143              	.L145:
1096:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2144              		.loc 1 1096 0
 2145 0044 DAB2     		uxtb	r2, r3
 2146              	.LVL207:
 2147 0046 0068     		ldr	r0, [r0]
 2148              	.LVL208:
 2149 0048 FFF7FEFF 		bl	USB_EPStartXfer
 2150              	.LVL209:
 2151              	.L146:
1100:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2152              		.loc 1 1100 0
 2153 004c 0020     		movs	r0, #0
 2154 004e 70BD     		pop	{r4, r5, r6, pc}
 2155              		.cfi_endproc
 2156              	.LFE161:
ARM GAS  /tmp/cc1DR21h.s 			page 67


 2158              		.section	.text.HAL_PCD_EP_SetStall,"ax",%progbits
 2159              		.align	2
 2160              		.global	HAL_PCD_EP_SetStall
 2161              		.thumb
 2162              		.thumb_func
 2164              	HAL_PCD_EP_SetStall:
 2165              	.LFB162:
1109:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 2166              		.loc 1 1109 0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
 2170              	.LVL210:
 2171 0000 38B5     		push	{r3, r4, r5, lr}
 2172              	.LCFI25:
 2173              		.cfi_def_cfa_offset 16
 2174              		.cfi_offset 3, -16
 2175              		.cfi_offset 4, -12
 2176              		.cfi_offset 5, -8
 2177              		.cfi_offset 14, -4
1112:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2178              		.loc 1 1112 0
 2179 0002 01F00F02 		and	r2, r1, #15
 2180 0006 4368     		ldr	r3, [r0, #4]
 2181 0008 9A42     		cmp	r2, r3
 2182 000a 2ED8     		bhi	.L153
1117:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2183              		.loc 1 1117 0
 2184 000c 4AB2     		sxtb	r2, r1
 2185 000e 002A     		cmp	r2, #0
 2186 0010 07DA     		bge	.L150
1119:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2187              		.loc 1 1119 0
 2188 0012 01F07F04 		and	r4, r1, #127
 2189 0016 C4EBC404 		rsb	r4, r4, r4, lsl #3
 2190 001a A300     		lsls	r3, r4, #2
 2191 001c 3833     		adds	r3, r3, #56
 2192 001e 0344     		add	r3, r3, r0
 2193              	.LVL211:
 2194 0020 05E0     		b	.L151
 2195              	.LVL212:
 2196              	.L150:
1123:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2197              		.loc 1 1123 0
 2198 0022 C1EBC104 		rsb	r4, r1, r1, lsl #3
 2199 0026 A300     		lsls	r3, r4, #2
 2200 0028 03F5FC73 		add	r3, r3, #504
 2201 002c 0344     		add	r3, r3, r0
 2202              	.LVL213:
 2203              	.L151:
1126:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num   = ep_addr & 0x7F;
 2204              		.loc 1 1126 0
 2205 002e 0124     		movs	r4, #1
 2206 0030 9C70     		strb	r4, [r3, #2]
1127:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = ((ep_addr & 0x80) == 0x80);
 2207              		.loc 1 1127 0
 2208 0032 01F07F04 		and	r4, r1, #127
ARM GAS  /tmp/cc1DR21h.s 			page 68


 2209 0036 1C70     		strb	r4, [r3]
1128:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2210              		.loc 1 1128 0
 2211 0038 D20F     		lsrs	r2, r2, #31
 2212 003a 5A70     		strb	r2, [r3, #1]
1131:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_EPSetStall(hpcd->Instance , ep);
 2213              		.loc 1 1131 0
 2214 003c 90F8B823 		ldrb	r2, [r0, #952]	@ zero_extendqisi2
 2215 0040 012A     		cmp	r2, #1
 2216 0042 14D0     		beq	.L154
 2217 0044 0546     		mov	r5, r0
1131:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_EPSetStall(hpcd->Instance , ep);
 2218              		.loc 1 1131 0 is_stmt 0 discriminator 2
 2219 0046 0122     		movs	r2, #1
 2220 0048 80F8B823 		strb	r2, [r0, #952]
1132:HALLIB/Src/stm32f7xx_hal_pcd.c ****   if((ep_addr & 0x7F) == 0)
 2221              		.loc 1 1132 0 is_stmt 1 discriminator 2
 2222 004c 1946     		mov	r1, r3
 2223              	.LVL214:
 2224 004e 0068     		ldr	r0, [r0]
 2225              	.LVL215:
 2226 0050 FFF7FEFF 		bl	USB_EPSetStall
 2227              	.LVL216:
1133:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2228              		.loc 1 1133 0 discriminator 2
 2229 0054 2CB9     		cbnz	r4, .L152
1135:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2230              		.loc 1 1135 0
 2231 0056 05F56F72 		add	r2, r5, #956
 2232 005a 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 2233 005c 2868     		ldr	r0, [r5]
 2234 005e FFF7FEFF 		bl	USB_EP0_OutStart
 2235              	.LVL217:
 2236              	.L152:
1137:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2237              		.loc 1 1137 0
 2238 0062 0020     		movs	r0, #0
 2239 0064 85F8B803 		strb	r0, [r5, #952]
1139:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 2240              		.loc 1 1139 0
 2241 0068 38BD     		pop	{r3, r4, r5, pc}
 2242              	.LVL218:
 2243              	.L153:
1114:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2244              		.loc 1 1114 0
 2245 006a 0120     		movs	r0, #1
 2246              	.LVL219:
 2247 006c 38BD     		pop	{r3, r4, r5, pc}
 2248              	.LVL220:
 2249              	.L154:
1131:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_EPSetStall(hpcd->Instance , ep);
 2250              		.loc 1 1131 0
 2251 006e 0220     		movs	r0, #2
 2252              	.LVL221:
1140:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2253              		.loc 1 1140 0
 2254 0070 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc1DR21h.s 			page 69


 2255              		.cfi_endproc
 2256              	.LFE162:
 2258 0072 00BF     		.section	.text.HAL_PCD_EP_ClrStall,"ax",%progbits
 2259              		.align	2
 2260              		.global	HAL_PCD_EP_ClrStall
 2261              		.thumb
 2262              		.thumb_func
 2264              	HAL_PCD_EP_ClrStall:
 2265              	.LFB163:
1149:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 2266              		.loc 1 1149 0
 2267              		.cfi_startproc
 2268              		@ args = 0, pretend = 0, frame = 0
 2269              		@ frame_needed = 0, uses_anonymous_args = 0
 2270              	.LVL222:
1152:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2271              		.loc 1 1152 0
 2272 0000 01F00F02 		and	r2, r1, #15
 2273 0004 4368     		ldr	r3, [r0, #4]
 2274 0006 9A42     		cmp	r2, r3
 2275 0008 28D8     		bhi	.L160
1149:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_EPTypeDef *ep;
 2276              		.loc 1 1149 0
 2277 000a 10B5     		push	{r4, lr}
 2278              	.LCFI26:
 2279              		.cfi_def_cfa_offset 8
 2280              		.cfi_offset 4, -8
 2281              		.cfi_offset 14, -4
1157:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2282              		.loc 1 1157 0
 2283 000c 4AB2     		sxtb	r2, r1
 2284 000e 002A     		cmp	r2, #0
 2285 0010 07DA     		bge	.L158
1159:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2286              		.loc 1 1159 0
 2287 0012 01F07F04 		and	r4, r1, #127
 2288 0016 C4EBC404 		rsb	r4, r4, r4, lsl #3
 2289 001a A300     		lsls	r3, r4, #2
 2290 001c 3833     		adds	r3, r3, #56
 2291 001e 0344     		add	r3, r3, r0
 2292              	.LVL223:
 2293 0020 05E0     		b	.L159
 2294              	.LVL224:
 2295              	.L158:
1163:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2296              		.loc 1 1163 0
 2297 0022 C1EBC104 		rsb	r4, r1, r1, lsl #3
 2298 0026 A300     		lsls	r3, r4, #2
 2299 0028 03F5FC73 		add	r3, r3, #504
 2300 002c 0344     		add	r3, r3, r0
 2301              	.LVL225:
 2302              	.L159:
1166:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->num   = ep_addr & 0x7F;
 2303              		.loc 1 1166 0
 2304 002e 0024     		movs	r4, #0
 2305 0030 9C70     		strb	r4, [r3, #2]
1167:HALLIB/Src/stm32f7xx_hal_pcd.c ****   ep->is_in = ((ep_addr & 0x80) == 0x80);
ARM GAS  /tmp/cc1DR21h.s 			page 70


 2306              		.loc 1 1167 0
 2307 0032 01F07F01 		and	r1, r1, #127
 2308              	.LVL226:
 2309 0036 1970     		strb	r1, [r3]
1168:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2310              		.loc 1 1168 0
 2311 0038 D20F     		lsrs	r2, r2, #31
 2312              	.LVL227:
 2313 003a 5A70     		strb	r2, [r3, #1]
1170:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_EPClearStall(hpcd->Instance , ep);
 2314              		.loc 1 1170 0
 2315 003c 90F8B823 		ldrb	r2, [r0, #952]	@ zero_extendqisi2
 2316 0040 012A     		cmp	r2, #1
 2317 0042 0DD0     		beq	.L161
 2318 0044 0446     		mov	r4, r0
1170:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_EPClearStall(hpcd->Instance , ep);
 2319              		.loc 1 1170 0 is_stmt 0 discriminator 2
 2320 0046 0122     		movs	r2, #1
 2321 0048 80F8B823 		strb	r2, [r0, #952]
1171:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_UNLOCK(hpcd);
 2322              		.loc 1 1171 0 is_stmt 1 discriminator 2
 2323 004c 1946     		mov	r1, r3
 2324 004e 0068     		ldr	r0, [r0]
 2325              	.LVL228:
 2326 0050 FFF7FEFF 		bl	USB_EPClearStall
 2327              	.LVL229:
1172:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2328              		.loc 1 1172 0 discriminator 2
 2329 0054 0020     		movs	r0, #0
 2330 0056 84F8B803 		strb	r0, [r4, #952]
1174:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 2331              		.loc 1 1174 0 discriminator 2
 2332 005a 10BD     		pop	{r4, pc}
 2333              	.LVL230:
 2334              	.L160:
 2335              	.LCFI27:
 2336              		.cfi_def_cfa_offset 0
 2337              		.cfi_restore 4
 2338              		.cfi_restore 14
1154:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2339              		.loc 1 1154 0
 2340 005c 0120     		movs	r0, #1
 2341              	.LVL231:
1175:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2342              		.loc 1 1175 0
 2343 005e 7047     		bx	lr
 2344              	.LVL232:
 2345              	.L161:
 2346              	.LCFI28:
 2347              		.cfi_def_cfa_offset 8
 2348              		.cfi_offset 4, -8
 2349              		.cfi_offset 14, -4
1170:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_EPClearStall(hpcd->Instance , ep);
 2350              		.loc 1 1170 0
 2351 0060 0220     		movs	r0, #2
 2352              	.LVL233:
1175:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
ARM GAS  /tmp/cc1DR21h.s 			page 71


 2353              		.loc 1 1175 0
 2354 0062 10BD     		pop	{r4, pc}
 2355              		.cfi_endproc
 2356              	.LFE163:
 2358              		.section	.text.HAL_PCD_EP_Flush,"ax",%progbits
 2359              		.align	2
 2360              		.global	HAL_PCD_EP_Flush
 2361              		.thumb
 2362              		.thumb_func
 2364              	HAL_PCD_EP_Flush:
 2365              	.LFB164:
1184:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 2366              		.loc 1 1184 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 0
 2369              		@ frame_needed = 0, uses_anonymous_args = 0
 2370              	.LVL234:
1185:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2371              		.loc 1 1185 0
 2372 0000 90F8B833 		ldrb	r3, [r0, #952]	@ zero_extendqisi2
 2373 0004 012B     		cmp	r3, #1
 2374 0006 14D0     		beq	.L167
1184:HALLIB/Src/stm32f7xx_hal_pcd.c ****   __HAL_LOCK(hpcd);
 2375              		.loc 1 1184 0 discriminator 2
 2376 0008 10B5     		push	{r4, lr}
 2377              	.LCFI29:
 2378              		.cfi_def_cfa_offset 8
 2379              		.cfi_offset 4, -8
 2380              		.cfi_offset 14, -4
 2381 000a 0446     		mov	r4, r0
1185:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2382              		.loc 1 1185 0 discriminator 2
 2383 000c 0123     		movs	r3, #1
 2384 000e 80F8B833 		strb	r3, [r0, #952]
1187:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2385              		.loc 1 1187 0 discriminator 2
 2386 0012 11F0800F 		tst	r1, #128
 2387 0016 05D0     		beq	.L165
1189:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2388              		.loc 1 1189 0
 2389 0018 01F07F01 		and	r1, r1, #127
 2390              	.LVL235:
 2391 001c 0068     		ldr	r0, [r0]
 2392              	.LVL236:
 2393 001e FFF7FEFF 		bl	USB_FlushTxFifo
 2394              	.LVL237:
 2395 0022 02E0     		b	.L166
 2396              	.LVL238:
 2397              	.L165:
1193:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2398              		.loc 1 1193 0
 2399 0024 0068     		ldr	r0, [r0]
 2400              	.LVL239:
 2401 0026 FFF7FEFF 		bl	USB_FlushRxFifo
 2402              	.LVL240:
 2403              	.L166:
1196:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
ARM GAS  /tmp/cc1DR21h.s 			page 72


 2404              		.loc 1 1196 0
 2405 002a 0020     		movs	r0, #0
 2406 002c 84F8B803 		strb	r0, [r4, #952]
1198:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 2407              		.loc 1 1198 0
 2408 0030 10BD     		pop	{r4, pc}
 2409              	.LVL241:
 2410              	.L167:
 2411              	.LCFI30:
 2412              		.cfi_def_cfa_offset 0
 2413              		.cfi_restore 4
 2414              		.cfi_restore 14
1185:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2415              		.loc 1 1185 0
 2416 0032 0220     		movs	r0, #2
 2417              	.LVL242:
 2418 0034 7047     		bx	lr
 2419              		.cfi_endproc
 2420              	.LFE164:
 2422 0036 00BF     		.section	.text.HAL_PCD_ActivateRemoteWakeup,"ax",%progbits
 2423              		.align	2
 2424              		.global	HAL_PCD_ActivateRemoteWakeup
 2425              		.thumb
 2426              		.thumb_func
 2428              	HAL_PCD_ActivateRemoteWakeup:
 2429              	.LFB165:
1207:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 2430              		.loc 1 1207 0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 0
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
 2434              		@ link register save eliminated.
 2435              	.LVL243:
1208:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2436              		.loc 1 1208 0
 2437 0000 0368     		ldr	r3, [r0]
 2438              	.LVL244:
1210:HALLIB/Src/stm32f7xx_hal_pcd.c ****   {
 2439              		.loc 1 1210 0
 2440 0002 D3F80828 		ldr	r2, [r3, #2056]
 2441 0006 03F50063 		add	r3, r3, #2048
 2442              	.LVL245:
 2443 000a 12F0010F 		tst	r2, #1
 2444 000e 03D0     		beq	.L171
1213:HALLIB/Src/stm32f7xx_hal_pcd.c ****   }
 2445              		.loc 1 1213 0
 2446 0010 5A68     		ldr	r2, [r3, #4]
 2447 0012 42F00102 		orr	r2, r2, #1
 2448 0016 5A60     		str	r2, [r3, #4]
 2449              	.LVL246:
 2450              	.L171:
1216:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2451              		.loc 1 1216 0
 2452 0018 0020     		movs	r0, #0
 2453              	.LVL247:
 2454 001a 7047     		bx	lr
 2455              		.cfi_endproc
ARM GAS  /tmp/cc1DR21h.s 			page 73


 2456              	.LFE165:
 2458              		.section	.text.HAL_PCD_DeActivateRemoteWakeup,"ax",%progbits
 2459              		.align	2
 2460              		.global	HAL_PCD_DeActivateRemoteWakeup
 2461              		.thumb
 2462              		.thumb_func
 2464              	HAL_PCD_DeActivateRemoteWakeup:
 2465              	.LFB166:
1224:HALLIB/Src/stm32f7xx_hal_pcd.c ****   USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 2466              		.loc 1 1224 0
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
 2470              		@ link register save eliminated.
 2471              	.LVL248:
1225:HALLIB/Src/stm32f7xx_hal_pcd.c **** 
 2472              		.loc 1 1225 0
 2473 0000 0368     		ldr	r3, [r0]
 2474              	.LVL249:
1228:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return HAL_OK;
 2475              		.loc 1 1228 0
 2476 0002 D3F80428 		ldr	r2, [r3, #2052]
 2477 0006 22F00102 		bic	r2, r2, #1
 2478 000a C3F80428 		str	r2, [r3, #2052]
1230:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 2479              		.loc 1 1230 0
 2480 000e 0020     		movs	r0, #0
 2481              	.LVL250:
 2482 0010 7047     		bx	lr
 2483              		.cfi_endproc
 2484              	.LFE166:
 2486 0012 00BF     		.section	.text.HAL_PCD_GetState,"ax",%progbits
 2487              		.align	2
 2488              		.global	HAL_PCD_GetState
 2489              		.thumb
 2490              		.thumb_func
 2492              	HAL_PCD_GetState:
 2493              	.LFB167:
1256:HALLIB/Src/stm32f7xx_hal_pcd.c ****   return hpcd->State;
 2494              		.loc 1 1256 0
 2495              		.cfi_startproc
 2496              		@ args = 0, pretend = 0, frame = 0
 2497              		@ frame_needed = 0, uses_anonymous_args = 0
 2498              		@ link register save eliminated.
 2499              	.LVL251:
1257:HALLIB/Src/stm32f7xx_hal_pcd.c **** }
 2500              		.loc 1 1257 0
 2501 0000 90F8B903 		ldrb	r0, [r0, #953]	@ zero_extendqisi2
 2502              	.LVL252:
1258:HALLIB/Src/stm32f7xx_hal_pcd.c **** /**
 2503              		.loc 1 1258 0
 2504 0004 7047     		bx	lr
 2505              		.cfi_endproc
 2506              	.LFE167:
 2508 0006 00BF     		.text
 2509              	.Letext0:
 2510              		.file 2 "/opt/5.4.2016q3/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/cc1DR21h.s 			page 74


 2511              		.file 3 "/opt/5.4.2016q3/arm-none-eabi/include/sys/_stdint.h"
 2512              		.file 4 "Inc/stm32f767xx.h"
 2513              		.file 5 "HALLIB/Inc/stm32f7xx_hal_def.h"
 2514              		.file 6 "HALLIB/Inc/stm32f7xx_ll_usb.h"
 2515              		.file 7 "HALLIB/Inc/stm32f7xx_hal_pcd.h"
 2516              		.file 8 "HALLIB/Inc/stm32f7xx_hal_pcd_ex.h"
 2517              		.file 9 "HALLIB/Inc/stm32f7xx_hal_rcc.h"
 2518              		.file 10 "CORE/core_cm7.h"
ARM GAS  /tmp/cc1DR21h.s 			page 75


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_pcd.c
     /tmp/cc1DR21h.s:21     .text.PCD_WriteEmptyTxFifo:00000000 $t
     /tmp/cc1DR21h.s:25     .text.PCD_WriteEmptyTxFifo:00000000 PCD_WriteEmptyTxFifo
     /tmp/cc1DR21h.s:173    .text.HAL_PCD_MspInit:00000000 $t
     /tmp/cc1DR21h.s:178    .text.HAL_PCD_MspInit:00000000 HAL_PCD_MspInit
     /tmp/cc1DR21h.s:191    .text.HAL_PCD_Init:00000000 $t
     /tmp/cc1DR21h.s:196    .text.HAL_PCD_Init:00000000 HAL_PCD_Init
     /tmp/cc1DR21h.s:384    .text.HAL_PCD_MspDeInit:00000000 $t
     /tmp/cc1DR21h.s:389    .text.HAL_PCD_MspDeInit:00000000 HAL_PCD_MspDeInit
     /tmp/cc1DR21h.s:402    .text.HAL_PCD_Start:00000000 $t
     /tmp/cc1DR21h.s:407    .text.HAL_PCD_Start:00000000 HAL_PCD_Start
     /tmp/cc1DR21h.s:456    .text.HAL_PCD_Stop:00000000 $t
     /tmp/cc1DR21h.s:461    .text.HAL_PCD_Stop:00000000 HAL_PCD_Stop
     /tmp/cc1DR21h.s:514    .text.HAL_PCD_DeInit:00000000 $t
     /tmp/cc1DR21h.s:519    .text.HAL_PCD_DeInit:00000000 HAL_PCD_DeInit
     /tmp/cc1DR21h.s:564    .text.HAL_PCD_DataOutStageCallback:00000000 $t
     /tmp/cc1DR21h.s:569    .text.HAL_PCD_DataOutStageCallback:00000000 HAL_PCD_DataOutStageCallback
     /tmp/cc1DR21h.s:582    .text.HAL_PCD_DataInStageCallback:00000000 $t
     /tmp/cc1DR21h.s:587    .text.HAL_PCD_DataInStageCallback:00000000 HAL_PCD_DataInStageCallback
     /tmp/cc1DR21h.s:600    .text.HAL_PCD_SetupStageCallback:00000000 $t
     /tmp/cc1DR21h.s:605    .text.HAL_PCD_SetupStageCallback:00000000 HAL_PCD_SetupStageCallback
     /tmp/cc1DR21h.s:618    .text.HAL_PCD_SOFCallback:00000000 $t
     /tmp/cc1DR21h.s:623    .text.HAL_PCD_SOFCallback:00000000 HAL_PCD_SOFCallback
     /tmp/cc1DR21h.s:636    .text.HAL_PCD_ResetCallback:00000000 $t
     /tmp/cc1DR21h.s:641    .text.HAL_PCD_ResetCallback:00000000 HAL_PCD_ResetCallback
     /tmp/cc1DR21h.s:654    .text.HAL_PCD_SuspendCallback:00000000 $t
     /tmp/cc1DR21h.s:659    .text.HAL_PCD_SuspendCallback:00000000 HAL_PCD_SuspendCallback
     /tmp/cc1DR21h.s:672    .text.HAL_PCD_ResumeCallback:00000000 $t
     /tmp/cc1DR21h.s:677    .text.HAL_PCD_ResumeCallback:00000000 HAL_PCD_ResumeCallback
     /tmp/cc1DR21h.s:690    .text.HAL_PCD_ISOOUTIncompleteCallback:00000000 $t
     /tmp/cc1DR21h.s:695    .text.HAL_PCD_ISOOUTIncompleteCallback:00000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/cc1DR21h.s:708    .text.HAL_PCD_ISOINIncompleteCallback:00000000 $t
     /tmp/cc1DR21h.s:713    .text.HAL_PCD_ISOINIncompleteCallback:00000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/cc1DR21h.s:726    .text.HAL_PCD_ConnectCallback:00000000 $t
     /tmp/cc1DR21h.s:731    .text.HAL_PCD_ConnectCallback:00000000 HAL_PCD_ConnectCallback
     /tmp/cc1DR21h.s:744    .text.HAL_PCD_DisconnectCallback:00000000 $t
     /tmp/cc1DR21h.s:749    .text.HAL_PCD_DisconnectCallback:00000000 HAL_PCD_DisconnectCallback
     /tmp/cc1DR21h.s:762    .text.HAL_PCD_IRQHandler:00000000 $t
     /tmp/cc1DR21h.s:767    .text.HAL_PCD_IRQHandler:00000000 HAL_PCD_IRQHandler
     /tmp/cc1DR21h.s:1620   .text.HAL_PCD_IRQHandler:000005c4 $d
     /tmp/cc1DR21h.s:1642   .text.HAL_PCD_DevConnect:00000000 $t
     /tmp/cc1DR21h.s:1647   .text.HAL_PCD_DevConnect:00000000 HAL_PCD_DevConnect
     /tmp/cc1DR21h.s:1692   .text.HAL_PCD_DevDisconnect:00000000 $t
     /tmp/cc1DR21h.s:1697   .text.HAL_PCD_DevDisconnect:00000000 HAL_PCD_DevDisconnect
     /tmp/cc1DR21h.s:1742   .text.HAL_PCD_SetAddress:00000000 $t
     /tmp/cc1DR21h.s:1747   .text.HAL_PCD_SetAddress:00000000 HAL_PCD_SetAddress
     /tmp/cc1DR21h.s:1792   .text.HAL_PCD_EP_Open:00000000 $t
     /tmp/cc1DR21h.s:1797   .text.HAL_PCD_EP_Open:00000000 HAL_PCD_EP_Open
     /tmp/cc1DR21h.s:1890   .text.HAL_PCD_EP_Close:00000000 $t
     /tmp/cc1DR21h.s:1895   .text.HAL_PCD_EP_Close:00000000 HAL_PCD_EP_Close
     /tmp/cc1DR21h.s:1967   .text.HAL_PCD_EP_Receive:00000000 $t
     /tmp/cc1DR21h.s:1972   .text.HAL_PCD_EP_Receive:00000000 HAL_PCD_EP_Receive
     /tmp/cc1DR21h.s:2049   .text.HAL_PCD_EP_GetRxCount:00000000 $t
     /tmp/cc1DR21h.s:2054   .text.HAL_PCD_EP_GetRxCount:00000000 HAL_PCD_EP_GetRxCount
     /tmp/cc1DR21h.s:2076   .text.HAL_PCD_EP_Transmit:00000000 $t
     /tmp/cc1DR21h.s:2081   .text.HAL_PCD_EP_Transmit:00000000 HAL_PCD_EP_Transmit
ARM GAS  /tmp/cc1DR21h.s 			page 76


     /tmp/cc1DR21h.s:2159   .text.HAL_PCD_EP_SetStall:00000000 $t
     /tmp/cc1DR21h.s:2164   .text.HAL_PCD_EP_SetStall:00000000 HAL_PCD_EP_SetStall
     /tmp/cc1DR21h.s:2259   .text.HAL_PCD_EP_ClrStall:00000000 $t
     /tmp/cc1DR21h.s:2264   .text.HAL_PCD_EP_ClrStall:00000000 HAL_PCD_EP_ClrStall
     /tmp/cc1DR21h.s:2359   .text.HAL_PCD_EP_Flush:00000000 $t
     /tmp/cc1DR21h.s:2364   .text.HAL_PCD_EP_Flush:00000000 HAL_PCD_EP_Flush
     /tmp/cc1DR21h.s:2423   .text.HAL_PCD_ActivateRemoteWakeup:00000000 $t
     /tmp/cc1DR21h.s:2428   .text.HAL_PCD_ActivateRemoteWakeup:00000000 HAL_PCD_ActivateRemoteWakeup
     /tmp/cc1DR21h.s:2459   .text.HAL_PCD_DeActivateRemoteWakeup:00000000 $t
     /tmp/cc1DR21h.s:2464   .text.HAL_PCD_DeActivateRemoteWakeup:00000000 HAL_PCD_DeActivateRemoteWakeup
     /tmp/cc1DR21h.s:2487   .text.HAL_PCD_GetState:00000000 $t
     /tmp/cc1DR21h.s:2492   .text.HAL_PCD_GetState:00000000 HAL_PCD_GetState
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USB_WritePacket
USB_DisableGlobalInt
USB_CoreInit
USB_SetCurrentMode
USB_DevInit
HAL_PCDEx_ActivateLPM
USB_DevDisconnect
USB_DevConnect
USB_EnableGlobalInt
USB_StopDevice
USB_GetMode
USB_ReadInterrupts
USB_ReadDevAllOutEpInterrupt
USB_ReadDevOutEPInterrupt
USB_EP0_OutStart
USB_ReadDevAllInEpInterrupt
USB_ReadDevInEPInterrupt
HAL_PCDEx_LPM_Callback
USB_FlushTxFifo
USB_ActivateSetup
USB_GetDevSpeed
HAL_RCC_GetHCLKFreq
USB_ReadPacket
USB_SetDevAddress
USB_ActivateEndpoint
USB_DeactivateEndpoint
USB_EP0StartXfer
USB_EPStartXfer
USB_EPSetStall
USB_EPClearStall
USB_FlushRxFifo
