ARM GAS  /tmp/ccSvCFam.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f7xx_hal_jpeg.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.JPEG_Bits_To_SizeCodes,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	JPEG_Bits_To_SizeCodes:
  26              	.LFB165:
  27              		.file 1 "HALLIB/Src/stm32f7xx_hal_jpeg.c"
   1:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
   2:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ******************************************************************************
   3:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @file    stm32f7xx_hal_jpeg.c
   4:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @author  MCD Application Team
   5:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief   JPEG HAL module driver.
   6:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *          This file provides firmware functions to manage the following 
   7:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *          functionalities of the JPEG encoder/decoder peripheral:
   8:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + Initialization and de-initialization functions
   9:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + JPEG processing functions encoding and decoding
  10:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + JPEG decoding Getting Info and encoding configuration setting
  11:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + JPEG enable/disable header parsing functions (for decoding)
  12:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + JPEG Input/Output Buffer configuration.
  13:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + JPEG callback functions
  14:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + JPEG Abort/Pause/Resume functions
  15:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + JPEG custom quantization tables setting functions
  16:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + IRQ handler management
  17:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *           + Peripheral State and Error functions
  18:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *
  19:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   @verbatim
  20:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
  21:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                      ##### How to use this driver #####
  22:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
  23:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     [..]
  24:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Initialize the JPEG peripheral using HAL_JPEG_Init : No initialization parameters are requ
  25:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          Only the call to HAL_JPEG_Init is necessary to initialize the JPEG peripheral.
  26:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
  27:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) If operation is JPEG encoding use function HAL_JPEG_ConfigEncoding to set
  28:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          the encoding parameters (mandatory before calling the encoding function).
  29:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          the application can change the encoding parameter "ImageQuality" from
  30:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          1 to 100 to obtain a more or less quality (visual quality vs the original row image),
  31:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          and inversely more or less jpg file size.
ARM GAS  /tmp/ccSvCFam.s 			page 2


  32:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
  33:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Note that for decoding operation the JPEG peripheral output data are organized in
  34:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          YCbCr blocks called MCU (Minimum Coded Unit) as defioned in the JPEG specification
  35:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          ISO/IEC 10918-1 standard. 
  36:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          It is up to the application to transform these YCbCr blocks to RGB data that can be displa
  37:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          
  38:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          Respectively, for Encoding operation the JPEG peripheral input should be organized
  39:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          in YCbCr MCU blocks. It is up to the application to perform the necessary RGB to YCbCr
  40:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          MCU blocks transformation before feeding the JPEG peripheral with data.
  41:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
  42:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Use functions HAL_JPEG_Encode and HAL_JPEG_Decode to start respectively
  43:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          a JPEG encoding/decoding operation in polling method (blocking).
  44:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
  45:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Use functions HAL_JPEG_Encode_IT and HAL_JPEG_Decode_IT to start respectively
  46:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          a JPEG encoding/decoding operation with Interrupt method (not blocking).
  47:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
  48:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Use functions HAL_JPEG_Encode_DMA and HAL_JPEG_Decode_DMA to start respectively
  49:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          a JPEG encoding/decoding operation with DMA method (not blocking).
  50:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
  51:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Callback HAL_JPEG_InfoReadyCallback is asserted if the current operation 
  52:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          is a JPEG decoding to provide the application with JPEG image  parameters.
  53:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          This callback is asserted when the JPEG peripheral successfully parse the
  54:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          JPEG header.
  55:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
  56:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Callback HAL_JPEG_GetDataCallback is asserted for both encoding and decoding
  57:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          operations to inform the application that the input buffer has been
  58:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          consumed by the peripheral and to ask for a new data chunk if the operation
  59:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          (encoding/decoding) has not been complete yet.
  60:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
  61:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         (++) This CallBack should be implemented in the application side. It should 
  62:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              call the function HAL_JPEG_ConfigInputBuffer if new input data are available, 
  63:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              or call HAL_JPEG_Pause with parameter XferSelection set to JPEG_PAUSE_RESUME_INPUT 
  64:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              to inform the JPEG HAL driver that the ongoing operation shall pause waiting for the
  65:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              application to provide a new input data chunk. 
  66:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              Once the application succeed getting new data and if the input has been paused,
  67:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              the application can call the function HAL_JPEG_ConfigInputBuffer to set the new
  68:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              input buffer and size, then resume the JPEG HAL input by calling new function HAL_JPEG
  69:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              If the application has ended feeding the HAL JPEG with input data (no more input data)
  70:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              Should call the function HAL_JPEG_ConfigInputBuffer (within the callback HAL_JPEG_GetD
  71:HALLIB/Src/stm32f7xx_hal_jpeg.c ****              with the parameter InDataLength set to zero.
  72:HALLIB/Src/stm32f7xx_hal_jpeg.c ****        
  73:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          (++) The mechanism of HAL_JPEG_ConfigInputBuffer/HAL_JPEG_Pause/HAL_JPEG_Resume allows
  74:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               to the application to provide the input data (for encoding or decoding) by chunks.
  75:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               If the new input data chunk is not available (because data should be read from an inp
  76:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               for example) the application can pause the JPEG input (using function HAL_JPEG_Pause)
  77:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               Once the new input data chunk is available ( read from a file for example), the appli
  78:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               can call the function HAL_JPEG_ConfigInputBuffer to provide the HAL with the new chun
  79:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               then resume the JPEG HAL input by calling function HAL_JPEG_Resume.
  80:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
  81:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          (++) The application can call functions HAL_JPEG_ConfigInputBuffer then HAL_JPEG_Resume.
  82:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               any time (outside the HAL_JPEG_GetDataCallback)  Once the new input chunk data availa
  83:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               However, to keep data coherency, the function HAL_JPEG_Pause must be imperatively cal
  84:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               (if necessary) within the callback HAL_JPEG_GetDataCallback, i.e when the HAL JPEG ha
  85:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               Transferring the previous chunk buffer to the JPEG peripheral.
  86:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
  87:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Callback HAL_JPEG_DataReadyCallback is asserted when the HAL JPEG driver
  88:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          has filled the given output buffer with the given size.
ARM GAS  /tmp/ccSvCFam.s 			page 3


  89:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          
  90:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          (++) This CallBack should be implemented in the application side. It should 
  91:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               call the function HAL_JPEG_ConfigOutputBuffer to provide the HAL JPEG driver
  92:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               with the new output buffer location and size to be used  to store next data chunk.
  93:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               if the application is not ready to provide the output chunk location then it can
  94:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               call the function HAL_JPEG_Pause with parameter XferSelection set to "JPEG_PAUSE_RESU
  95:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               to inform the JPEG HAL driver that it shall pause output data. Once the application
  96:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               is ready to receive the new data chunk (output buffer location free or available) it 
  97:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               the function HAL_JPEG_ConfigOutputBuffer to provide the HAL JPEG driver
  98:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               with the new output chunk buffer location and size, then call "HAL_JPEG_Resume" 
  99:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               to inform the HAL that it shall resume outputting data in the given output buffer.
 100:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 101:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          (++) The mechanism of HAL_JPEG_ConfigOutputBuffer/HAL_JPEG_Pause/HAL_JPEG_Resume allows
 102:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               the application to receive data from the JPEG peripheral by chunks. when a chunk
 103:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               is received, the application can pause the HAL JPEG output data to be able to process
 104:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               these received data (YCbCr to RGB conversion in case of decoding or data storage in c
 105:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               of encoding).
 106:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 107:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          (++) The application can call  functions HAL_JPEG_ ConfigOutputBuffer then HAL_JPEG_Resume
 108:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               any time (outside the HAL_JPEG_DataReadyCallback) Once the output data buffer is free
 109:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               However, to keep data coherency, the function HAL_JPEG_Pause must be imperatively cal
 110:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               (if necessary) within the callback HAL_JPEG_ DataReadyCallback, i.e when the HAL JPEG
 111:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               Transferring the previous chunk buffer from the JPEG peripheral to the application.
 112:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 113:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Callback HAL_JPEG_EncodeCpltCallback is asserted when the HAL JPEG driver has
 114:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          ended the current JPEG encoding operation, and all output data has been transmitted
 115:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          to the application.
 116:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 117:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Callback HAL_JPEG_DecodeCpltCallback is asserted when the HAL JPEG driver has
 118:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          ended the current JPEG decoding operation. and all output data has been transmitted
 119:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          to the application.
 120:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 121:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) Callback HAL_JPEG_ErrorCallback is asserted when an error occurred during 
 122:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          the current operation. the application can call the function "HAL_JPEG_GetError"
 123:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          to retrieve the error codes.
 124:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 125:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (#) By default the HAL JPEG driver uses the default quantization tables
 126:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          as provide in the JPEG specification (ISO/IEC 10918-1 standard) for encoding.
 127:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          User can change these default tables if necessary using the function HAL_JPEG_SetUserQuant
 128:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          Note that for decoding the quantization tables are automatically extracted from
 129:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          the JPEG header.
 130:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 131:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (#) To control JPEG state you can use the following function: HAL_JPEG_GetState()      
 132:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 133:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      *** JPEG HAL driver macros list ***
 134:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      ============================================= 
 135:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      [..]
 136:HALLIB/Src/stm32f7xx_hal_jpeg.c ****        Below the list of most used macros in JPEG HAL driver.
 137:HALLIB/Src/stm32f7xx_hal_jpeg.c ****        
 138:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) __HAL_JPEG_RESET_HANDLE_STATE : Reset JPEG handle state.
 139:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) __HAL_JPEG_ENABLE             : Enable the JPEG peripheral.
 140:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) __HAL_JPEG_DISABLE            : Disable the JPEG peripheral.
 141:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) __HAL_JPEG_GET_FLAG           : Check the specified JPEG status flag.
 142:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) __HAL_JPEG_CLEAR_FLAG         : Clear the specified JPEG status flag.
 143:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) __HAL_JPEG_ENABLE_IT          : Enable the specified JPEG Interrupt.
 144:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) __HAL_JPEG_DISABLE_IT         : Disable the specified JPEG Interrupt.
 145:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) __HAL_JPEG_GET_IT_SOURCE      : returns the state of the specified JPEG Interrupt (Enable
ARM GAS  /tmp/ccSvCFam.s 			page 4


 146:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 147:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 148:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   @endverbatim
 149:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ******************************************************************************
 150:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @attention
 151:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *
 152:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 153:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *
 154:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * Redistribution and use in source and binary forms, with or without modification,
 155:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * are permitted provided that the following conditions are met:
 156:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 157:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *      this list of conditions and the following disclaimer.
 158:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 159:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *      this list of conditions and the following disclaimer in the documentation
 160:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *      and/or other materials provided with the distribution.
 161:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 162:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *      may be used to endorse or promote products derived from this software
 163:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *      without specific prior written permission.
 164:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *
 165:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 166:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 167:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 168:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 169:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 170:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 171:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 172:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 173:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 174:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 175:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *
 176:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ******************************************************************************
 177:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
 178:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 179:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /* Includes ------------------------------------------------------------------*/
 180:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #include "stm32f7xx_hal.h"
 181:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 182:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @addtogroup STM32F7xx_HAL_Driver
 183:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 184:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 185:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 186:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @defgroup JPEG JPEG 
 187:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief JPEG HAL module driver.
 188:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 189:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 190:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 191:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #ifdef HAL_JPEG_MODULE_ENABLED
 192:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 193:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #if defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx
 194:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 195:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /* Private define ------------------------------------------------------------*/
 196:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @addtogroup JPEG_Private_Constants
 197:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 198:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 199:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_TIMEOUT_VALUE  ((uint32_t)1000U)     /* 1s */
 200:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_AC_HUFF_TABLE_SIZE  ((uint32_t)162U) /* Huffman AC table size : 162 codes*/
 201:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_DC_HUFF_TABLE_SIZE  ((uint32_t)12U)  /* Huffman AC table size : 12 codes*/
 202:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
ARM GAS  /tmp/ccSvCFam.s 			page 5


 203:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_FIFO_SIZE ((uint32_t)16U)             /* JPEG Input/Output HW FIFO size in words*/
 204:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 205:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_INTERRUPT_MASK  ((uint32_t)0x0000007EU) /* JPEG Interrupt Mask*/
 206:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 207:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_DMA_MASK     ((uint32_t)0x00001800U)     /* JPEG DMA request Mask*/
 208:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_DMA_IDMA     ((uint32_t)JPEG_CR_IDMAEN)  /* DMA request for the input FIFO */
 209:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_DMA_ODMA     ((uint32_t)JPEG_CR_ODMAEN)  /* DMA request for the output FIFO */ 
 210:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 211:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_ENCODE          ((uint32_t)0x00000001U) /* JPEG context : operation is encodin
 212:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_DECODE          ((uint32_t)0x00000002U) /* JPEG context : operation is decodin
 213:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_OPERATION_MASK  ((uint32_t)0x00000003U) /* JPEG context : operation Mask */
 214:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 215:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_POLLING        ((uint32_t)0x00000004U)  /* JPEG context : Transfer use Polling
 216:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_IT             ((uint32_t)0x00000008U)  /* JPEG context : Transfer use Interru
 217:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_DMA            ((uint32_t)0x0000000CU)  /* JPEG context : Transfer use DMA */
 218:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_METHOD_MASK    ((uint32_t)0x0000000CU)  /* JPEG context : Transfer Mask */
 219:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 220:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 221:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_CONF_ENCODING  ((uint32_t)0x00000100U)  /* JPEG context : encoding config done
 222:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 223:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_PAUSE_INPUT    ((uint32_t)0x00001000U)  /* JPEG context : Pause Input */
 224:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_PAUSE_OUTPUT   ((uint32_t)0x00002000U)  /* JPEG context : Pause Output */
 225:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 226:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_CUSTOM_TABLES  ((uint32_t)0x00004000U)  /* JPEG context : Use custom quantizat
 227:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 228:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_CONTEXT_ENDING_DMA     ((uint32_t)0x00008000U)  /* JPEG context : ending with DMA in p
 229:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 230:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_PROCESS_ONGOING        ((uint32_t)0x00000000U)  /* Process is on going */
 231:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_PROCESS_DONE           ((uint32_t)0x00000001U)  /* Process is done (ends) */
 232:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 233:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
 234:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
 235:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 236:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /* Private typedef -----------------------------------------------------------*/
 237:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @addtogroup JPEG_Private_Types
 238:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 239:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 240:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 241:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /* 
 242:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  JPEG Huffman Table Structure definition : 
 243:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  This implementation of Huffman table structure is compliant with ISO/IEC 10918-1 standard , Annex 
 244:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  */ 
 245:HALLIB/Src/stm32f7xx_hal_jpeg.c **** typedef struct 
 246:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 247:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* These two fields directly represent the contents of a JPEG DHT marker */
 248:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint8_t Bits[16];        /*!< bits[k] = # of symbols with codes of length k bits, this parameter 
 249:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 250:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint8_t HuffVal[162];    /*!< The symbols, in order of incremented code length, this parameter co
 251:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 252:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 253:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }JPEG_ACHuffTableTypeDef;
 254:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 255:HALLIB/Src/stm32f7xx_hal_jpeg.c **** typedef struct 
 256:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 257:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* These two fields directly represent the contents of a JPEG DHT marker */
 258:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint8_t Bits[16];        /*!< bits[k] = # of symbols with codes of length k bits, this parameter 
 259:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
ARM GAS  /tmp/ccSvCFam.s 			page 6


 260:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint8_t HuffVal[12];    /*!< The symbols, in order of incremented code length, this parameter cor
 261:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 262:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 263:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }JPEG_DCHuffTableTypeDef;    
 264:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 265:HALLIB/Src/stm32f7xx_hal_jpeg.c **** typedef struct 
 266:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 267:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint8_t CodeLength[JPEG_AC_HUFF_TABLE_SIZE];      /*!< Code length  */
 268:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 269:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t HuffmanCode[JPEG_AC_HUFF_TABLE_SIZE];    /*!< HuffmanCode */
 270:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 271:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }JPEG_AC_HuffCodeTableTypeDef;
 272:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 273:HALLIB/Src/stm32f7xx_hal_jpeg.c **** typedef struct 
 274:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 275:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint8_t CodeLength[JPEG_DC_HUFF_TABLE_SIZE];        /*!< Code length  */
 276:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 277:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t HuffmanCode[JPEG_DC_HUFF_TABLE_SIZE];    /*!< HuffmanCode */
 278:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 279:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }JPEG_DC_HuffCodeTableTypeDef;
 280:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 281:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
 282:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
 283:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 284:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /* Private macro -------------------------------------------------------------*/
 285:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @addtogroup JPEG_Private_Macros
 286:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 287:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 288:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_ENABLE_DMA(__HANDLE__,__DMA__)  ((__HANDLE__)->Instance->CR |= ((__DMA__) & JPEG_DMA_M
 289:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /*note  : To disable a DMA request we must use MODIFY_REG macro to avoid writing "1" to the FIFO fl
 290:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          located in the same DMA request enable register (CR register). */     
 291:HALLIB/Src/stm32f7xx_hal_jpeg.c **** #define JPEG_DISABLE_DMA(__HANDLE__,__DMA__) MODIFY_REG((__HANDLE__)->Instance->CR, ((__DMA__) & JP
 292:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 293:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
 294:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
 295:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 296:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 297:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /* Private variables ---------------------------------------------------------*/
 298:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @addtogroup JPEG_Private_Variables
 299:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 300:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 301:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 302:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static const JPEG_DCHuffTableTypeDef JPEG_DCLUM_HuffTable =
 303:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 304:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   { 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },   /*Bits*/
 305:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 306:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0xa, 0xb }           /*HUFFVAL */
 307:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 308:HALLIB/Src/stm32f7xx_hal_jpeg.c **** };
 309:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 310:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static const JPEG_DCHuffTableTypeDef JPEG_DCCHROM_HuffTable =
 311:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 312:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   { 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },  /*Bits*/
 313:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 314:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0xa, 0xb }          /*HUFFVAL */
 315:HALLIB/Src/stm32f7xx_hal_jpeg.c **** };
 316:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
ARM GAS  /tmp/ccSvCFam.s 			page 7


 317:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static const JPEG_ACHuffTableTypeDef JPEG_ACLUM_HuffTable =
 318:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 319:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   { 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d },  /*Bits*/
 320:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 321:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {   0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,     /*HUFFVAL */
 322:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,
 323:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,
 324:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,
 325:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,
 326:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,
 327:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
 328:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,
 329:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,
 330:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
 331:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
 332:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,
 333:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,
 334:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
 335:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,
 336:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,
 337:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,
 338:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,
 339:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,
 340:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
 341:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xf9, 0xfa }
 342:HALLIB/Src/stm32f7xx_hal_jpeg.c **** };
 343:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 344:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static const JPEG_ACHuffTableTypeDef JPEG_ACCHROM_HuffTable =
 345:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 346:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   { 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77 },   /*Bits*/
 347:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 348:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {   0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,      /*HUFFVAL */
 349:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,
 350:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,
 351:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,
 352:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,
 353:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,
 354:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,
 355:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
 356:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
 357:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
 358:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,
 359:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
 360:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,
 361:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,
 362:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,
 363:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,
 364:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,
 365:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,
 366:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,
 367:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
 368:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       0xf9, 0xfa }
 369:HALLIB/Src/stm32f7xx_hal_jpeg.c **** };
 370:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 371:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 372:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /* 
 373:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   These are the sample quantization tables given in JPEG spec ISO/IEC 10918-1 standard , section K.
ARM GAS  /tmp/ccSvCFam.s 			page 8


 374:HALLIB/Src/stm32f7xx_hal_jpeg.c **** */
 375:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static const uint8_t JPEG_LUM_QuantTable[JPEG_QUANT_TABLE_SIZE] = 
 376:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 377:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   16,  11,  10,  16,  24,  40,  51,  61,
 378:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   12,  12,  14,  19,  26,  58,  60,  55,
 379:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   14,  13,  16,  24,  40,  57,  69,  56,
 380:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   14,  17,  22,  29,  51,  87,  80,  62,
 381:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   18,  22,  37,  56,  68, 109, 103,  77,
 382:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   24,  35,  55,  64,  81, 104, 113,  92,
 383:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   49,  64,  78,  87, 103, 121, 120, 101,
 384:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   72,  92,  95,  98, 112, 100, 103,  99
 385:HALLIB/Src/stm32f7xx_hal_jpeg.c **** };
 386:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static const uint8_t JPEG_CHROM_QuantTable[JPEG_QUANT_TABLE_SIZE] = 
 387:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 388:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   17,  18,  24,  47,  99,  99,  99,  99,
 389:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   18,  21,  26,  66,  99,  99,  99,  99,
 390:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   24,  26,  56,  99,  99,  99,  99,  99,
 391:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   47,  66,  99,  99,  99,  99,  99,  99,
 392:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   99,  99,  99,  99,  99,  99,  99,  99,
 393:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   99,  99,  99,  99,  99,  99,  99,  99,
 394:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   99,  99,  99,  99,  99,  99,  99,  99,
 395:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   99,  99,  99,  99,  99,  99,  99,  99
 396:HALLIB/Src/stm32f7xx_hal_jpeg.c **** };
 397:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 398:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static const uint8_t JPEG_ZIGZAG_ORDER[JPEG_QUANT_TABLE_SIZE] =
 399:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 400:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    0,   1,   8,  16,   9,   2,   3,  10,
 401:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   17,  24,  32,  25,  18,  11,   4,   5,
 402:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   12,  19,  26,  33,  40,  48,  41,  34,
 403:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   27,  20,  13,   6,   7,  14,  21,  28,
 404:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   35,  42,  49,  56,  57,  50,  43,  36,
 405:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   29,  22,  15,  23,  30,  37,  44,  51,
 406:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   58,  59,  52,  45,  38,  31,  39,  46,
 407:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   53,  60,  61,  54,  47,  55,  62,  63
 408:HALLIB/Src/stm32f7xx_hal_jpeg.c **** };
 409:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 410:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
 411:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
 412:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 413:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /* Private function prototypes -----------------------------------------------*/
 414:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @addtogroup JPEG_Private_Functions_Prototypes
 415:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 416:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 417:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 418:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcod
 419:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTabl
 420:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_ACHuff_BitsVals_To_SizeCodes(JPEG_ACHuffTableTypeDef *AC_BitsValsTabl
 421:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *Hu
 422:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *Hu
 423:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_Set_HuffEnc_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *H
 424:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_Set_Huff_DHTMem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC0, 
 425:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef  JPEG_Set_Quantization_Mem(JPEG_HandleTypeDef *hjpeg, uint8_t *QTable, uin
 426:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_SetColorYCBCR(JPEG_HandleTypeDef *hjpeg);
 427:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_SetColorGrayScale(JPEG_HandleTypeDef *hjpeg);
 428:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_SetColorCMYK(JPEG_HandleTypeDef *hjpeg);
 429:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 430:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg);
ARM GAS  /tmp/ccSvCFam.s 			page 9


 431:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static uint32_t JPEG_Process(JPEG_HandleTypeDef *hjpeg);
 432:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_ReadInputData(JPEG_HandleTypeDef *hjpeg, uint32_t nbRequestWords);
 433:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_StoreOutputData(JPEG_HandleTypeDef *hjpeg, uint32_t nbOutputWords);
 434:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg);
 435:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 436:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_DMA_StartProcess(JPEG_HandleTypeDef *hjpeg);
 437:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static uint32_t JPEG_DMA_ContinueProcess(JPEG_HandleTypeDef *hjpeg);
 438:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static uint32_t JPEG_DMA_EndProcess(JPEG_HandleTypeDef *hjpeg);
 439:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMA_PollResidualData(JPEG_HandleTypeDef *hjpeg);
 440:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMAOutCpltCallback(DMA_HandleTypeDef *hdma);
 441:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMAInCpltCallback(DMA_HandleTypeDef *hdma);
 442:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMAErrorCallback(DMA_HandleTypeDef *hdma);
 443:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMAOutAbortCallback(DMA_HandleTypeDef *hdma)  ;
 444:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 445:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
 446:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 447:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 448:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @defgroup JPEG_Exported_Functions JPEG Exported Functions
 449:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 450:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 451:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 452:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @defgroup JPEG_Exported_Functions_Group1 Initialization and de-initialization functions 
 453:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *  @brief    Initialization and de-initialization functions. 
 454:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *
 455:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @verbatim    
 456:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
 457:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               ##### Initialization and de-initialization functions #####
 458:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
 459:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     [..]  This section provides functions allowing to:
 460:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) Initialize the JPEG peripheral and creates the associated handle
 461:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) DeInitialize the JPEG peripheral
 462:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
 463:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @endverbatim
 464:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 465:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 466:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 467:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 468:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Initializes the JPEG according to the specified
 469:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         parameters in the JPEG_InitTypeDef and creates the associated handle.
 470:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 471:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
 472:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
 473:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 474:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef HAL_JPEG_Init(JPEG_HandleTypeDef *hjpeg)
 475:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 476:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Note : these intermediate variables are used to avoid MISRA warning 
 477:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   regarding rule 11.5 */
 478:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t acLum_huffmanTableAddr = (uint32_t)(&JPEG_ACLUM_HuffTable);
 479:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t dcLum_huffmanTableAddr = (uint32_t)(&JPEG_DCLUM_HuffTable);
 480:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t acChrom_huffmanTableAddr = (uint32_t)(&JPEG_ACCHROM_HuffTable);
 481:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t dcChrom_huffmanTableAddr = (uint32_t)(&JPEG_DCCHROM_HuffTable);
 482:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 483:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the JPEG handle allocation */
 484:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg == NULL)
 485:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 486:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
 487:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
ARM GAS  /tmp/ccSvCFam.s 			page 10


 488:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 489:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State == HAL_JPEG_STATE_RESET)
 490:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 491:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Allocate lock resource and initialize it */
 492:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Lock = HAL_UNLOCKED;
 493:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 494:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Init the low level hardware : GPIO, CLOCK */
 495:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_MspInit(hjpeg);
 496:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 497:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 498:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Change the JPEG state */
 499:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->State = HAL_JPEG_STATE_BUSY;
 500:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 501:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Start the JPEG Core*/
 502:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_ENABLE(hjpeg);
 503:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 504:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Stop the JPEG encoding/decoding process*/
 505:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 506:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 507:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable All Interrupts */
 508:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_INTERRUPT_MASK);
 509:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 510:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable All DMA requests */
 511:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_DISABLE_DMA(hjpeg,JPEG_DMA_MASK);
 512:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 513:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Flush input and output FIFOs*/
 514:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CR |= JPEG_CR_IFF;
 515:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CR |= JPEG_CR_OFF;  
 516:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 517:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Clear all flags */
 518:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_CLEAR_FLAG(hjpeg,JPEG_FLAG_ALL);
 519:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 520:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->QuantTable0 = (uint8_t *)JPEG_LUM_QuantTable;
 521:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->QuantTable1 = (uint8_t *)JPEG_CHROM_QuantTable;
 522:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->QuantTable2 = NULL;
 523:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->QuantTable3 = NULL;
 524:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    
 525:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* init the default Huffman tables*/
 526:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(JPEG_Set_HuffEnc_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)acLum_huffmanTableAddr, (JPEG_DCHuffTab
 527:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 528:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
 529:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 530:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
 531:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 532:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 533:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Enable header processing*/
 534:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
 535:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 536:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Reset JpegInCount and JpegOutCount */
 537:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegInCount = 0;
 538:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegOutCount = 0;
 539:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 540:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Change the JPEG state */
 541:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->State = HAL_JPEG_STATE_READY;
 542:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 543:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Reset the JPEG ErrorCode */
 544:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
ARM GAS  /tmp/ccSvCFam.s 			page 11


 545:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 546:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Clear the context filelds*/
 547:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Context = 0;
 548:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 549:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
 550:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
 551:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 552:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 553:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 554:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  DeInitializes the JPEG peripheral. 
 555:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 556:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
 557:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
 558:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 559:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef HAL_JPEG_DeInit(JPEG_HandleTypeDef *hjpeg)
 560:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 561:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the JPEG handle allocation */
 562:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg == NULL)
 563:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 564:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
 565:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 566:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 567:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* DeInit the low level hardware: CLOCK, NVIC.*/
 568:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_JPEG_MspDeInit(hjpeg);  
 569:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 570:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Change the JPEG state */
 571:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->State = HAL_JPEG_STATE_BUSY;
 572:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 573:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Reset the JPEG ErrorCode */
 574:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
 575:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 576:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Reset JpegInCount and JpegOutCount */
 577:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegInCount = 0;
 578:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegOutCount = 0;
 579:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 580:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Change the JPEG state */
 581:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->State = HAL_JPEG_STATE_RESET;
 582:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 583:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Clear the context fields*/
 584:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Context = 0;
 585:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 586:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Release Lock */
 587:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_UNLOCK(hjpeg);
 588:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 589:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
 590:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
 591:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 592:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 593:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 594:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Initializes the JPEG MSP.
 595:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 596:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
 597:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
 598:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 599:HALLIB/Src/stm32f7xx_hal_jpeg.c **** __weak void HAL_JPEG_MspInit(JPEG_HandleTypeDef *hjpeg)
 600:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 601:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccSvCFam.s 			page 12


 602:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(hjpeg);
 603:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 604:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 605:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             the HAL_JPEG_MspInit could be implemented in the user file
 606:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    */
 607:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 608:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 609:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 610:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  DeInitializes JPEG MSP.
 611:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 612:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
 613:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
 614:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 615:HALLIB/Src/stm32f7xx_hal_jpeg.c **** __weak void HAL_JPEG_MspDeInit(JPEG_HandleTypeDef *hjpeg)
 616:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 617:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 618:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(hjpeg);
 619:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 620:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 621:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             the HAL_JPEG_MspDeInit could be implemented in the user file
 622:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    */
 623:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 624:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 625:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 626:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
 627:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 628:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 629:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @defgroup JPEG_Exported_Functions_Group2 Configuration functions 
 630:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *  @brief    JPEG Configuration functions. 
 631:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *
 632:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @verbatim    
 633:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
 634:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               ##### Configuration functions #####
 635:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
 636:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     [..]  This section provides functions allowing to:
 637:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_ConfigEncoding() : JPEG encoding configuration
 638:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_GetInfo() :  Extract the image configuration from the JPEG header during the dec
 639:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_EnableHeaderParsing() :  Enable JPEG Header parsing for decoding
 640:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_DisableHeaderParsing() : Disable JPEG Header parsing for decoding
 641:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_SetUserQuantTables : Modify the default Quantization tables used for JPEG encodi
 642:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
 643:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @endverbatim
 644:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
 645:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 646:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 647:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 648:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Set the JPEG encoding configuration. 
 649:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 650:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
 651:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pConf pointer to a JPEG_ConfTypeDef structure that contains
 652:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the encoding configuration 
 653:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
 654:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 655:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef HAL_JPEG_ConfigEncoding(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pConf)
 656:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 657:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t error = HAL_OK;
 658:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t numberMCU, hfactor, vfactor,hMCU, vMCU;  
ARM GAS  /tmp/ccSvCFam.s 			page 13


 659:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 660:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the JPEG handle allocation */
 661:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if( (hjpeg == NULL) || (pConf == NULL) )
 662:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 663:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
 664:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 665:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
 666:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 667:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Check the parameters */
 668:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     assert_param(IS_JPEG_COLORSPACE(pConf->ColorSpace));
 669:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     assert_param(IS_JPEG_CHROMASUBSAMPLING(pConf->ChromaSubsampling));
 670:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     assert_param(IS_JPEG_IMAGE_QUALITY(pConf->ImageQuality));
 671:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 672:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Locked */
 673:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_LOCK(hjpeg);
 674:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 675:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->State == HAL_JPEG_STATE_READY)
 676:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {      
 677:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->State = HAL_JPEG_STATE_BUSY;
 678:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 679:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ColorSpace          =  pConf->ColorSpace;
 680:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ChromaSubsampling   =  pConf->ChromaSubsampling; 
 681:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ImageHeight         =  pConf->ImageHeight;
 682:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ImageWidth          =  pConf->ImageWidth; 
 683:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ImageQuality        =  pConf->ImageQuality;     
 684:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 685:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Reset the Color Space : by default only one quantization table is used*/      
 686:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_COLORSPACE;
 687:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 688:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Set Number of color components*/      
 689:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if(hjpeg->Conf.ColorSpace == JPEG_GRAYSCALE_COLORSPACE)
 690:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {        
 691:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /*Gray Scale is only one component 8x8 blocks i.e 4:4:4*/
 692:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->Conf.ChromaSubsampling = JPEG_444_SUBSAMPLING;
 693:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 694:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         JPEG_SetColorGrayScale(hjpeg);
 695:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Set quantization table 0*/
 696:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         error = JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable0, (uint32_t *)(hjpeg->Instance->
 697:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 698:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else if(hjpeg->Conf.ColorSpace == JPEG_YCBCR_COLORSPACE) 
 699:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 700:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* 
 701:HALLIB/Src/stm32f7xx_hal_jpeg.c ****            Set the Color Space for YCbCr : 2 quantization tables are used 
 702:HALLIB/Src/stm32f7xx_hal_jpeg.c ****            one for Luminance(Y) and one for both Chrominances (Cb & Cr)
 703:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         */
 704:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->Instance->CONFR1 |= JPEG_CONFR1_COLORSPACE_0;
 705:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 706:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         JPEG_SetColorYCBCR(hjpeg);
 707:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 708:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Set quantization table 0*/
 709:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         error  = JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable0, (uint32_t *)(hjpeg->Instance-
 710:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /*By default quantization table 0 for component 0 and quantization table 1 for both compone
 711:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         error |= JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable1, (uint32_t *)(hjpeg->Instance-
 712:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 713:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         if((hjpeg->Context & JPEG_CONTEXT_CUSTOM_TABLES) != 0) /*Use user customized quantization t
 714:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 715:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /* use 3 quantization tables , one for each component*/
ARM GAS  /tmp/ccSvCFam.s 			page 14


 716:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR1 &= (~JPEG_CONFR1_COLORSPACE);
 717:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR1 |= JPEG_CONFR1_COLORSPACE_1;
 718:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 719:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           error |= JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable2, (uint32_t *)(hjpeg->Instanc
 720:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
 721:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /*Use Quantization 1 table for component 1*/
 722:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR5 &=  (~JPEG_CONFR5_QT);           
 723:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR5 |=  JPEG_CONFR5_QT_0; 
 724:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 725:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /*Use Quantization 2 table for component 2*/
 726:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR6 &=  (~JPEG_CONFR6_QT);
 727:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR6 |=  JPEG_CONFR6_QT_1;                   
 728:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
 729:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 730:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else if(hjpeg->Conf.ColorSpace == JPEG_CMYK_COLORSPACE)
 731:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 732:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         JPEG_SetColorCMYK(hjpeg);
 733:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 734:HALLIB/Src/stm32f7xx_hal_jpeg.c ****          /* Set quantization table 0*/
 735:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         error  = JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable0, (uint32_t *)(hjpeg->Instance-
 736:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /*By default quantization table 0 for All components*/      
 737:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 738:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         if((hjpeg->Context & JPEG_CONTEXT_CUSTOM_TABLES) != 0) /*Use user customized quantization t
 739:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 740:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /* use 4 quantization tables , one for each component*/
 741:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR1 |= JPEG_CONFR1_COLORSPACE;
 742:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 743:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           error |= JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable1, (uint32_t *)(hjpeg->Instanc
 744:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           error |= JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable2, (uint32_t *)(hjpeg->Instanc
 745:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           error |= JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable3, (uint32_t *)(hjpeg->Instanc
 746:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 747:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /*Use Quantization 1 table for component 1*/
 748:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR5 |=  JPEG_CONFR5_QT_0; 
 749:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 750:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /*Use Quantization 2 table for component 2*/
 751:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR6 |=  JPEG_CONFR6_QT_1;
 752:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 753:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /*Use Quantization 3 table for component 3*/
 754:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR7 |=  JPEG_CONFR7_QT;                    
 755:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
 756:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 757:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 758:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if(error != HAL_OK)
 759:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 760:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->ErrorCode = HAL_JPEG_ERROR_QUANT_TABLE;
 761:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 762:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Process Unlocked */
 763:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         __HAL_UNLOCK(hjpeg);
 764:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 765:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Set the JPEG State to ready */
 766:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->State = HAL_JPEG_STATE_READY;
 767:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 768:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         return  HAL_ERROR;
 769:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 770:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Set the image size*/
 771:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       MODIFY_REG(hjpeg->Instance->CONFR1, JPEG_CONFR1_YSIZE, ((hjpeg->Conf.ImageHeight & 0x0000FFFF
 772:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       MODIFY_REG(hjpeg->Instance->CONFR3, JPEG_CONFR3_XSIZE, ((hjpeg->Conf.ImageWidth & 0x0000FFFF)
ARM GAS  /tmp/ccSvCFam.s 			page 15


 773:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 774:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if(hjpeg->Conf.ChromaSubsampling == JPEG_420_SUBSAMPLING)  /* 4:2:0*/
 775:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 776:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hfactor = 16;
 777:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         vfactor = 16;
 778:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 779:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else if(hjpeg->Conf.ChromaSubsampling == JPEG_422_SUBSAMPLING) /* 4:2:2*/
 780:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 781:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hfactor = 16;
 782:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         vfactor = 8;        
 783:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }   
 784:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else /* Default is 8x8 MCU,  4:4:4*/
 785:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 786:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hfactor = 8;
 787:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         vfactor = 8;          
 788:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }        
 789:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 790:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hMCU = (hjpeg->Conf.ImageWidth / hfactor);
 791:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if((hjpeg->Conf.ImageWidth % hfactor) != 0)
 792:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 793:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hMCU++; /*+1 for horizontal incomplete MCU */                
 794:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 795:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 796:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       vMCU = (hjpeg->Conf.ImageHeight / vfactor);
 797:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if((hjpeg->Conf.ImageHeight % vfactor) != 0)
 798:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 799:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         vMCU++; /*+1 for vertical incomplete MCU */                
 800:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 801:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 802:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       numberMCU = (hMCU * vMCU) - 1; /* Bit Field JPEG_CONFR2_NMCU shall be set to NB_MCU - 1*/
 803:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Set the number of MCU*/
 804:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Instance->CONFR2 =  (numberMCU & JPEG_CONFR2_NMCU);
 805:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 806:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= JPEG_CONTEXT_CONF_ENCODING;
 807:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 808:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Process Unlocked */
 809:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       __HAL_UNLOCK(hjpeg);
 810:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 811:HALLIB/Src/stm32f7xx_hal_jpeg.c ****        /* Set the JPEG State to ready */
 812:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->State = HAL_JPEG_STATE_READY;     
 813:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 814:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Return function status */
 815:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_OK;
 816:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 817:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else
 818:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 819:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Process Unlocked */
 820:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       __HAL_UNLOCK(hjpeg);
 821:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 822:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Return function status */
 823:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_BUSY;
 824:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 825:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 826:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 827:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 828:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 829:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Extract the image configuration from the JPEG header during the decoding
ARM GAS  /tmp/ccSvCFam.s 			page 16


 830:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 831:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
 832:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pInfo pointer to a JPEG_ConfTypeDef structure that contains
 833:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         The JPEG decoded header informations
 834:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
 835:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 836:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
 837:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 838:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t yblockNb, cBblockNb, cRblockNb;
 839:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 840:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the JPEG handle allocation */
 841:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg == NULL) || (pInfo == NULL))
 842:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 843:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
 844:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 845:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 846:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Read the conf parameters */
 847:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
 848:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 849:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;    
 850:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }    
 851:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0)
 852:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 853:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     pInfo->ColorSpace = JPEG_GRAYSCALE_COLORSPACE;
 854:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 855:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
 856:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 857:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     pInfo->ColorSpace = JPEG_CMYK_COLORSPACE;    
 858:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 859:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 860:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000U) >> 16;
 861:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000U) >> 16;
 862:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 863:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
 864:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 865:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
 866:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 867:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 868:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 869:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((yblockNb == 1) && (cBblockNb == 0) && (cRblockNb == 0))
 870:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 871:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
 872:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 873:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else if((yblockNb == 0) && (cBblockNb == 0) && (cRblockNb == 0))
 874:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 875:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       pInfo->ChromaSubsampling = JPEG_444_SUBSAMPLING;
 876:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 877:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else if((yblockNb == 3) && (cBblockNb == 0) && (cRblockNb == 0))
 878:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 879:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       pInfo->ChromaSubsampling = JPEG_420_SUBSAMPLING;
 880:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 881:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else /*Default is 4:4:4*/
 882:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 883:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       pInfo->ChromaSubsampling = JPEG_444_SUBSAMPLING;
 884:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     } 
 885:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 886:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else 
ARM GAS  /tmp/ccSvCFam.s 			page 17


 887:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 888:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     pInfo->ChromaSubsampling = JPEG_444_SUBSAMPLING;
 889:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 890:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 891:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
 892:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 893:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
 894:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
 895:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 896:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 897:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 898:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Enable JPEG Header parsing for decoding
 899:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 900:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *               the configuration information for the JPEG.
 901:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
 902:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 903:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef HAL_JPEG_EnableHeaderParsing(JPEG_HandleTypeDef *hjpeg)
 904:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 905:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process locked */
 906:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
 907:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 908:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State == HAL_JPEG_STATE_READY)
 909:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 910:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Change the JPEG state */
 911:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_BUSY;
 912:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 913:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Enable header processing*/
 914:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
 915:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 916:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process unlocked */
 917:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
 918:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 919:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Change the JPEG state */
 920:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_READY;
 921:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 922:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_OK;
 923:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 924:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
 925:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 926:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process unlocked */
 927:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
 928:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 929:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;    
 930:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 931:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 932:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 933:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 934:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Disable JPEG Header parsing for decoding
 935:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 936:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *               the configuration information for the JPEG.
 937:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
 938:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 939:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef HAL_JPEG_DisableHeaderParsing(JPEG_HandleTypeDef *hjpeg)
 940:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 941:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process locked */
 942:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
 943:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
ARM GAS  /tmp/ccSvCFam.s 			page 18


 944:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State == HAL_JPEG_STATE_READY)
 945:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 946:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Change the JPEG state */
 947:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_BUSY;
 948:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 949:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Disable header processing*/
 950:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_HDR;
 951:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 952:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process unlocked */
 953:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
 954:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 955:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Change the JPEG state */
 956:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_READY;
 957:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 958:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_OK;
 959:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 960:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
 961:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 962:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process unlocked */
 963:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
 964:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
 965:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;    
 966:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 967:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 968:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 969:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
 970:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Modify the default Quantization tables used for JPEG encoding.
 971:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
 972:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
 973:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  QTable0  pointer to uint8_t , define the user quantification table for color component 
 974:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                   If NULL assume no need to update  the table and no error return
 975:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  QTable1  pointer to uint8_t , define the user quantification table for color component 
 976:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                   If NULL assume no need to update  the table and no error return.
 977:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  QTable2  pointer to uint8_t , define the user quantification table for color component 
 978:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                   If NULL assume no need to update  the table and no error return. 
 979:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  QTable3  pointer to uint8_t , define the user quantification table for color component 
 980:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                   If NULL assume no need to update  the table and no error return.
 981:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *
 982:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
 983:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
 984:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 985:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 986:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_SetUserQuantTables(JPEG_HandleTypeDef *hjpeg, uint8_t *QTable0, uint8_t
 987:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 988:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Locked */
 989:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
 990:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 991:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State == HAL_JPEG_STATE_READY)
 992:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 993:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Change the DMA state */
 994:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_BUSY;
 995:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 996:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context |= JPEG_CONTEXT_CUSTOM_TABLES;
 997:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 998:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->QuantTable0 = QTable0;
 999:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->QuantTable1 = QTable1;
1000:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->QuantTable2 = QTable2;
ARM GAS  /tmp/ccSvCFam.s 			page 19


1001:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->QuantTable3 = QTable3;
1002:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1003:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1004:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1005:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1006:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Change the DMA state */
1007:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_READY; 
1008:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1009:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Return function status */
1010:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_OK;    
1011:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1012:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
1013:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1014:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1015:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1016:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1017:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;
1018:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1019:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1020:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1021:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1022:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
1023:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1024:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1025:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @defgroup JPEG_Exported_Functions_Group3 encoding/decoding processing functions 
1026:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *  @brief   processing functions. 
1027:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *
1028:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @verbatim   
1029:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
1030:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                       ##### JPEG processing functions #####
1031:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================  
1032:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     [..]  This section provides functions allowing to:
1033:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Encode()     : JPEG encoding with polling process 
1034:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Decode()     : JPEG decoding with polling process
1035:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Encode_IT()  : JPEG encoding with interrupt process
1036:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Decode_IT()  : JPEG decoding with interrupt process
1037:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Encode_DMA() : JPEG encoding with DMA process
1038:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Decode_DMA() : JPEG decoding with DMA process
1039:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Pause()      :   Pause the Input/Output processing 
1040:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Resume()     :  Resume the JPEG Input/Output processing
1041:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_ConfigInputBuffer()  : Config Encoding/Decoding Input Buffer
1042:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_ConfigOutputBuffer() : Config Encoding/Decoding Output Buffer
1043:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_Abort()              : Aborts the JPEG Encoding/Decoding
1044:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1045:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @endverbatim
1046:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
1047:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1048:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1049:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1050:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Starts JPEG encoding with polling processing
1051:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1052:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1053:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataInMCU Pointer to the Input buffer
1054:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  InDataLength size in bytes Input buffer
1055:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataOut Pointer to the jpeg output data buffer
1056:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  OutDataLength size in bytes of the Output buffer
1057:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  Timeout Specify Timeout value 
ARM GAS  /tmp/ccSvCFam.s 			page 20


1058:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1059:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1060:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_Encode(JPEG_HandleTypeDef *hjpeg, uint8_t *pDataInMCU, uint32_t InDataL
1061:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1062:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tickstart = 0;
1063:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1064:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
1065:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((InDataLength >= 4));
1066:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((OutDataLength >= 4));
1067:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1068:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check In/out buffer allocation and size */
1069:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg == NULL)     || (pDataInMCU == NULL) || (pDataOut == NULL) || \
1070:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
1071:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1072:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
1073:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1074:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process locked */
1075:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
1076:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1077:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State != HAL_JPEG_STATE_READY)
1078:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1079:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1080:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1081:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1082:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;    
1083:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1084:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1085:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State == HAL_JPEG_STATE_READY)
1086:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
1087:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((hjpeg->Context & JPEG_CONTEXT_CONF_ENCODING) == JPEG_CONTEXT_CONF_ENCODING )
1088:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {      
1089:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Change JPEG state*/
1090:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->State = HAL_JPEG_STATE_BUSY_ENCODING;
1091:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1092:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Set the Context to Encode with Polling*/
1093:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
1094:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= (JPEG_CONTEXT_ENCODE | JPEG_CONTEXT_POLLING);
1095:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1096:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Get tick */ 
1097:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       tickstart = HAL_GetTick();    
1098:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*In/Out Data length must be multiple of 4 Bytes (1 word)*/
1099:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       InDataLength = InDataLength - (InDataLength % 4);
1100:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       OutDataLength = OutDataLength - (OutDataLength % 4);
1101:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1102:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Store In/out buffers pointers and size*/
1103:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegInBuffPtr = pDataInMCU;
1104:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegOutBuffPtr = pDataOut;
1105:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = InDataLength;
1106:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->OutDataLength = OutDataLength;
1107:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1108:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Reset In/out data counter */
1109:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegInCount = 0;    
1110:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
1111:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1112:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Init decoding process*/
1113:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_Init_Process(hjpeg);
1114:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
ARM GAS  /tmp/ccSvCFam.s 			page 21


1115:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*JPEG data processing : In/Out FIFO transfer*/
1116:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       while((JPEG_Process(hjpeg) == JPEG_PROCESS_ONGOING))
1117:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
1118:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         if(Timeout != HAL_MAX_DELAY)
1119:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
1120:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
1121:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           {
1122:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             
1123:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             /* Update error code */
1124:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;          
1125:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             
1126:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             /* Process Unlocked */
1127:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             __HAL_UNLOCK(hjpeg);
1128:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             
1129:HALLIB/Src/stm32f7xx_hal_jpeg.c ****            /*Change JPEG state*/
1130:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             hjpeg->State= HAL_JPEG_STATE_READY;             
1131:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             
1132:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             return HAL_TIMEOUT;
1133:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           }
1134:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
1135:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
1136:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1137:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Process Unlocked */
1138:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       __HAL_UNLOCK(hjpeg);
1139:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1140:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Change JPEG state*/
1141:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->State= HAL_JPEG_STATE_READY;
1142:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1143:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }else
1144:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1145:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Process Unlocked */
1146:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       __HAL_UNLOCK(hjpeg);
1147:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1148:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_ERROR;
1149:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1150:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1151:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1152:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
1153:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1154:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1155:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1156:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Starts JPEG decoding with polling processing
1157:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1158:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1159:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataIn Pointer to the input data buffer 
1160:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  InDataLength size in bytes Input buffer
1161:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataOutMCU Pointer to the Output data buffer
1162:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  OutDataLength size in bytes of the Output buffer
1163:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  Timeout Specify Timeout value 
1164:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1165:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1166:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_Decode(JPEG_HandleTypeDef *hjpeg ,uint8_t *pDataIn ,uint32_t InDataLeng
1167:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1168:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tickstart = 0;
1169:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1170:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
1171:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((InDataLength >= 4));
ARM GAS  /tmp/ccSvCFam.s 			page 22


1172:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((OutDataLength >= 4));
1173:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1174:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check In/out buffer allocation and size */
1175:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg == NULL)     || (pDataIn == NULL) || (pDataOutMCU == NULL) || \
1176:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (InDataLength == 0) || (OutDataLength == 0))
1177:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1178:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
1179:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
1180:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1181:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Locked */
1182:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
1183:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1184:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Get tick */ 
1185:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   tickstart = HAL_GetTick();
1186:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1187:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State == HAL_JPEG_STATE_READY)
1188:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1189:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Change JPEG state*/
1190:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
1191:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1192:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Set the Context to Decode with Polling*/
1193:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Set the Context to Encode with Polling*/
1194:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
1195:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_POLLING);  
1196:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1197:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*In/Out Data length must be multiple of 4 Bytes (1 word)*/
1198:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     InDataLength = InDataLength - (InDataLength % 4);
1199:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     OutDataLength = OutDataLength - (OutDataLength % 4);
1200:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1201:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Store In/out buffers pointers and size*/
1202:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegInBuffPtr = pDataIn;
1203:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegOutBuffPtr = pDataOutMCU;
1204:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->InDataLength = InDataLength;
1205:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->OutDataLength = OutDataLength;
1206:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1207:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Reset In/out data counter */
1208:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegInCount = 0;    
1209:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;
1210:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1211:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Init decoding process*/
1212:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_Init_Process(hjpeg);
1213:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1214:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*JPEG data processing : In/Out FIFO transfer*/
1215:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while((JPEG_Process(hjpeg) == JPEG_PROCESS_ONGOING))
1216:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1217:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if(Timeout != HAL_MAX_DELAY)
1218:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
1219:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
1220:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
1221:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
1222:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /* Update error code */
1223:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;  
1224:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1225:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /* Process Unlocked */
1226:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           __HAL_UNLOCK(hjpeg);
1227:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1228:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           /*Change JPEG state*/
ARM GAS  /tmp/ccSvCFam.s 			page 23


1229:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->State= HAL_JPEG_STATE_READY;    
1230:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1231:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           return HAL_TIMEOUT;
1232:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
1233:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
1234:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1235:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1236:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1237:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1238:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1239:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Change JPEG state*/
1240:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State= HAL_JPEG_STATE_READY; 
1241:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1242:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }else
1243:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1244:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1245:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1246:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1247:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;
1248:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1249:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1250:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
1251:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1252:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1253:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1254:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Starts JPEG encoding with interrupt processing
1255:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1256:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1257:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataInMCU Pointer to the Input buffer
1258:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  InDataLength size in bytes Input buffer
1259:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataOut Pointer to the jpeg output data buffer
1260:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  OutDataLength size in bytes of the Output buffer
1261:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1262:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1263:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_Encode_IT(JPEG_HandleTypeDef *hjpeg, uint8_t *pDataInMCU, uint32_t InDa
1264:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1265:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
1266:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((InDataLength >= 4));
1267:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((OutDataLength >= 4));
1268:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1269:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check In/out buffer allocation and size */
1270:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg == NULL)     || (pDataInMCU == NULL) || (pDataOut == NULL) || \
1271:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
1272:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1273:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
1274:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1275:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1276:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Locked */
1277:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
1278:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1279:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State != HAL_JPEG_STATE_READY)
1280:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1281:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1282:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1283:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1284:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;    
1285:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
ARM GAS  /tmp/ccSvCFam.s 			page 24


1286:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else 
1287:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1288:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((hjpeg->Context & JPEG_CONTEXT_CONF_ENCODING) == JPEG_CONTEXT_CONF_ENCODING )
1289:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1290:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Change JPEG state*/
1291:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->State = HAL_JPEG_STATE_BUSY_ENCODING;
1292:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1293:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Set the Context to Encode with IT*/
1294:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
1295:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= (JPEG_CONTEXT_ENCODE | JPEG_CONTEXT_IT);    
1296:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1297:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*In/Out Data length must be multiple of 4 Bytes (1 word)*/
1298:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       InDataLength = InDataLength - (InDataLength % 4);
1299:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       OutDataLength = OutDataLength - (OutDataLength % 4);
1300:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1301:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Store In/out buffers pointers and size*/
1302:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegInBuffPtr = pDataInMCU;
1303:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegOutBuffPtr = pDataOut;
1304:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = InDataLength;
1305:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->OutDataLength = OutDataLength;
1306:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1307:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Reset In/out data counter */
1308:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegInCount = 0;    
1309:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
1310:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1311:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Init decoding process*/
1312:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_Init_Process(hjpeg);    
1313:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1314:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1315:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else
1316:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1317:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Process Unlocked */
1318:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       __HAL_UNLOCK(hjpeg);
1319:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1320:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_ERROR;
1321:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1322:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1323:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1324:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
1325:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1326:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1327:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1328:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Starts JPEG decoding with interrupt processing
1329:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1330:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1331:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataIn Pointer to the input data buffer 
1332:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  InDataLength size in bytes Input buffer
1333:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataOutMCU Pointer to the Output data buffer
1334:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  OutDataLength size in bytes of the Output buffer
1335:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1336:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1337:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_Decode_IT(JPEG_HandleTypeDef *hjpeg ,uint8_t *pDataIn ,uint32_t InDataL
1338:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1339:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
1340:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((InDataLength >= 4));
1341:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((OutDataLength >= 4));
1342:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
ARM GAS  /tmp/ccSvCFam.s 			page 25


1343:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check In/out buffer allocation and size */
1344:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg == NULL)     || (pDataIn == NULL) || (pDataOutMCU == NULL) || \
1345:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (InDataLength == 0) || (OutDataLength == 0))
1346:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1347:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
1348:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1349:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1350:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Locked */
1351:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
1352:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1353:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State == HAL_JPEG_STATE_READY)
1354:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1355:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Change JPEG state*/
1356:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
1357:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1358:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Set the Context to Decode with IT*/
1359:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
1360:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_IT);      
1361:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1362:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*In/Out Data length must be multiple of 4 Bytes (1 word)*/
1363:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     InDataLength = InDataLength - (InDataLength % 4);
1364:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     OutDataLength = OutDataLength - (OutDataLength % 4);
1365:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1366:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Store In/out buffers pointers and size*/
1367:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegInBuffPtr = pDataIn;
1368:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegOutBuffPtr = pDataOutMCU;
1369:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->InDataLength = InDataLength;
1370:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->OutDataLength = OutDataLength;
1371:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1372:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Reset In/out data counter */
1373:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegInCount = 0;    
1374:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;    
1375:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1376:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Init decoding process*/
1377:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_Init_Process(hjpeg);    
1378:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
1379:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1380:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
1381:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1382:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1383:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1384:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1385:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;
1386:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1387:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1388:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
1389:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1390:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1391:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1392:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Starts JPEG encoding with DMA processing
1393:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1394:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1395:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataInMCU Pointer to the Input buffer
1396:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  InDataLength size in bytes Input buffer
1397:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataOut Pointer to the jpeg output data buffer
1398:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  OutDataLength size in bytes of the Output buffer
1399:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
ARM GAS  /tmp/ccSvCFam.s 			page 26


1400:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1401:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_Encode_DMA(JPEG_HandleTypeDef *hjpeg, uint8_t *pDataInMCU, uint32_t InD
1402:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1403:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
1404:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((InDataLength >= 4));
1405:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((OutDataLength >= 4));
1406:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1407:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check In/out buffer allocation and size */
1408:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg == NULL)     || (pDataInMCU == NULL) || (pDataOut == NULL) || \
1409:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
1410:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1411:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
1412:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1413:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1414:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Locked */
1415:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
1416:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1417:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State != HAL_JPEG_STATE_READY)
1418:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1419:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1420:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1421:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1422:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;    
1423:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
1424:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else 
1425:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1426:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((hjpeg->Context & JPEG_CONTEXT_CONF_ENCODING) == JPEG_CONTEXT_CONF_ENCODING )
1427:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1428:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Change JPEG state*/
1429:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->State = HAL_JPEG_STATE_BUSY_ENCODING;
1430:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1431:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Set the Context to Encode with DMA*/
1432:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
1433:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= (JPEG_CONTEXT_ENCODE | JPEG_CONTEXT_DMA);    
1434:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1435:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Store In/out buffers pointers and size*/
1436:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegInBuffPtr = pDataInMCU;
1437:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegOutBuffPtr = pDataOut;
1438:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = InDataLength;
1439:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->OutDataLength = OutDataLength;
1440:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1441:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Reset In/out data counter */
1442:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegInCount = 0;    
1443:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
1444:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1445:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Init decoding process*/
1446:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_Init_Process(hjpeg);
1447:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1448:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* JPEG encoding process using DMA */
1449:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_DMA_StartProcess(hjpeg);
1450:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1451:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1452:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else
1453:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1454:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Process Unlocked */
1455:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       __HAL_UNLOCK(hjpeg);
1456:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
ARM GAS  /tmp/ccSvCFam.s 			page 27


1457:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_ERROR;
1458:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1459:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1460:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1461:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
1462:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1463:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1464:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1465:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Starts JPEG decoding with DMA processing
1466:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1467:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1468:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataIn Pointer to the input data buffer 
1469:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  InDataLength size in bytes Input buffer
1470:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataOutMCU Pointer to the Output data buffer
1471:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  OutDataLength size in bytes of the Output buffer
1472:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1473:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1474:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_Decode_DMA(JPEG_HandleTypeDef *hjpeg ,uint8_t *pDataIn ,uint32_t InData
1475:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1476:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
1477:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((InDataLength >= 4));
1478:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param((OutDataLength >= 4));
1479:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1480:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check In/out buffer allocation and size */
1481:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg == NULL)     || (pDataIn == NULL) || (pDataOutMCU == NULL) || \
1482:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
1483:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1484:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
1485:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1486:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1487:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Locked */
1488:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_LOCK(hjpeg);
1489:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1490:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->State == HAL_JPEG_STATE_READY)
1491:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1492:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Change JPEG state*/
1493:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
1494:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1495:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Set the Context to Decode with DMA*/
1496:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
1497:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);         
1498:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1499:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Store In/out buffers pointers and size*/
1500:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegInBuffPtr = pDataIn;
1501:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegOutBuffPtr = pDataOutMCU;
1502:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->InDataLength = InDataLength;
1503:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->OutDataLength = OutDataLength;
1504:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1505:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Reset In/out data counter */
1506:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegInCount = 0;    
1507:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;    
1508:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1509:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Init decoding process*/
1510:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_Init_Process(hjpeg);
1511:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1512:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* JPEG decoding process using DMA */
1513:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_DMA_StartProcess(hjpeg);
ARM GAS  /tmp/ccSvCFam.s 			page 28


1514:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1515:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1516:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
1517:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1518:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
1519:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
1520:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1521:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_BUSY;
1522:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1523:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1524:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
1525:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1526:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1527:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1528:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Pause the JPEG Input/Output processing
1529:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1530:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1531:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  XferSelection This parameter can be one of the following values :
1532:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                           JPEG_PAUSE_RESUME_INPUT : Pause Input processing
1533:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                           JPEG_PAUSE_RESUME_OUTPUT: Pause Output processing
1534:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                           JPEG_PAUSE_RESUME_INPUT_OUTPUT: Pause Input and Output processing
1535:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1536:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1537:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_Pause(JPEG_HandleTypeDef *hjpeg, uint32_t XferSelection)
1538:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1539:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t mask = 0;
1540:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1541:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param(IS_JPEG_PAUSE_RESUME_STATE(XferSelection));
1542:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1543:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
1544:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
1545:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
1546:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1547:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
1548:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= JPEG_DMA_IDMA;
1549:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1550:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
1551:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1552:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
1553:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= JPEG_DMA_ODMA;
1554:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
1555:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_DISABLE_DMA(hjpeg,mask);
1556:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1557:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1558:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
1559:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
1560:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1561:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
1562:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1563:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
1564:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= (JPEG_IT_IFT | JPEG_IT_IFNF); 
1565:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1566:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
1567:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1568:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
1569:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |=  (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC); 
1570:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
ARM GAS  /tmp/ccSvCFam.s 			page 29


1571:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_DISABLE_IT(hjpeg,mask);
1572:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1573:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1574:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    
1575:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1576:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;    
1577:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1578:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1579:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1580:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Resume the JPEG Input/Output processing
1581:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1582:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1583:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  XferSelection This parameter can be one of the following values :
1584:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                           JPEG_PAUSE_RESUME_INPUT : Resume Input processing
1585:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                           JPEG_PAUSE_RESUME_OUTPUT: Resume Output processing
1586:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *                           JPEG_PAUSE_RESUME_INPUT_OUTPUT: Resume Input and Output processing
1587:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1588:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1589:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef  HAL_JPEG_Resume(JPEG_HandleTypeDef *hjpeg, uint32_t XferSelection)
1590:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1591:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t mask = 0;
1592:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1593:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   assert_param(IS_JPEG_PAUSE_RESUME_STATE(XferSelection));  
1594:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1595:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(((hjpeg->Context & JPEG_CONTEXT_PAUSE_INPUT) == 0) &&  ((hjpeg->Context & JPEG_CONTEXT_PAUSE_O
1596:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1597:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* if nothing paused to resume return error*/
1598:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;      
1599:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1600:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1601:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
1602:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1603:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1604:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
1605:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1606:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
1607:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= JPEG_DMA_IDMA;
1608:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1609:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*JPEG Input DMA transfer data number must be multiple of DMA buffer size 
1610:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         as the destination is a 32 bits register */
1611:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4);
1612:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1613:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if(hjpeg->InDataLength > 0)
1614:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {  
1615:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Start DMA FIFO In transfer */
1616:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance
1617:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
1618:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1619:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1620:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
1621:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1622:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1623:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0)
1624:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
1625:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         JPEG_DMA_PollResidualData(hjpeg);
1626:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
1627:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else
ARM GAS  /tmp/ccSvCFam.s 			page 30


1628:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
1629:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
1630:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         mask |= JPEG_DMA_ODMA;
1631:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
1632:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Start DMA FIFO Out transfer */
1633:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOut
1634:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }  
1635:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1636:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
1637:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_ENABLE_DMA(hjpeg,mask);
1638:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1639:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1640:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
1641:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
1642:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
1643:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1644:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
1645:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= (JPEG_IT_IFT | JPEG_IT_IFNF); 
1646:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1647:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
1648:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1649:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
1650:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |=  (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC); 
1651:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
1652:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_ENABLE_IT(hjpeg,mask);
1653:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1654:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1655:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    
1656:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1657:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;    
1658:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1659:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1660:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1661:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Config Encoding/Decoding Input Buffer.
1662:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1663:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module.
1664:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pNewInputBuffer Pointer to the new input data buffer
1665:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  InDataLength Size in bytes of the new Input data buffer 
1666:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1667:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1668:HALLIB/Src/stm32f7xx_hal_jpeg.c **** void HAL_JPEG_ConfigInputBuffer(JPEG_HandleTypeDef *hjpeg, uint8_t *pNewInputBuffer, uint32_t InDat
1669:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1670:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
1671:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->InDataLength = InDataLength;
1672:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1673:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1674:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1675:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Config Encoding/Decoding Output Buffer.
1676:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1677:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module.
1678:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pNewOutputBuffer Pointer to the new output data buffer
1679:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  OutDataLength Size in bytes of the new Output data buffer 
1680:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1681:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1682:HALLIB/Src/stm32f7xx_hal_jpeg.c **** void HAL_JPEG_ConfigOutputBuffer(JPEG_HandleTypeDef *hjpeg, uint8_t *pNewOutputBuffer, uint32_t Out
1683:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1684:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
ARM GAS  /tmp/ccSvCFam.s 			page 31


1685:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->OutDataLength = OutDataLength;  
1686:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1687:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1688:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1689:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Aborts the JPEG Encoding/Decoding.
1690:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1691:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1692:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
1693:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1694:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_StatusTypeDef HAL_JPEG_Abort(JPEG_HandleTypeDef *hjpeg)
1695:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1696:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tickstart, tmpContext;  
1697:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1698:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   tmpContext = hjpeg->Context;
1699:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1700:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset the Context operation and method*/
1701:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_
1702:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1703:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
1704:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1705:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Stop the DMA In/out Xfer*/
1706:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_DMA_Abort(hjpeg->hdmaout);
1707:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_DMA_Abort(hjpeg->hdmain);
1708:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1709:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1710:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Stop the JPEG encoding/decoding process*/
1711:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
1712:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1713:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Get tick */
1714:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   tickstart = HAL_GetTick();
1715:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1716:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check if the JPEG Codec is effectively disabled */
1717:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   while(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != RESET)
1718:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1719:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Check for the Timeout */
1720:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((HAL_GetTick() - tickstart ) > JPEG_TIMEOUT_VALUE)
1721:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
1722:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Update error code */
1723:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
1724:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1725:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Change the DMA state */
1726:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->State = HAL_JPEG_STATE_TIMEOUT;
1727:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1728:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Process Unlocked */
1729:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       __HAL_UNLOCK(hjpeg);
1730:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1731:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_TIMEOUT;
1732:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
1733:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
1734:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1735:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable All Interrupts */
1736:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_INTERRUPT_MASK);
1737:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1738:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable All DMA requests */
1739:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_DISABLE_DMA(hjpeg,JPEG_DMA_MASK);
1740:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1741:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Flush input and output FIFOs*/
ARM GAS  /tmp/ccSvCFam.s 			page 32


1742:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CR |= JPEG_CR_IFF;
1743:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CR |= JPEG_CR_OFF;  
1744:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1745:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Clear all flags */
1746:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_CLEAR_FLAG(hjpeg,JPEG_FLAG_ALL);
1747:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1748:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Reset JpegInCount and JpegOutCount */
1749:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegInCount = 0;
1750:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegOutCount = 0; 
1751:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1752:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset the Context Pause*/
1753:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);  
1754:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1755:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Change the DMA state*/
1756:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->State = HAL_JPEG_STATE_READY;
1757:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1758:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Unlocked */
1759:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_UNLOCK(hjpeg);
1760:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1761:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
1762:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;  
1763:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1764:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1765:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1766:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1767:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
1768:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1769:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1770:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @defgroup JPEG_Exported_Functions_Group4 JPEG Decode/Encode callback functions 
1771:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *  @brief   JPEG process callback functions. 
1772:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *
1773:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @verbatim   
1774:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
1775:HALLIB/Src/stm32f7xx_hal_jpeg.c ****               #####  JPEG Decode and Encode callback functions  #####
1776:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================  
1777:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     [..]  This section provides callback functions:
1778:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_InfoReadyCallback()  : Decoding JPEG Info ready callback
1779:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_EncodeCpltCallback() : Encoding complete callback.
1780:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_DecodeCpltCallback() : Decoding complete callback.
1781:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_ErrorCallback()      : JPEG error callback.
1782:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_GetDataCallback()    : Get New Data chunk callback. 
1783:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_DataReadyCallback()  : Decoded/Encoded Data ready  callback. 
1784:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1785:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @endverbatim
1786:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
1787:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1788:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1789:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1790:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Decoding JPEG Info ready callback.
1791:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1792:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1793:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pInfo pointer to a JPEG_ConfTypeDef structure that contains
1794:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         The JPEG decoded header informations
1795:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
1796:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1797:HALLIB/Src/stm32f7xx_hal_jpeg.c **** __weak void HAL_JPEG_InfoReadyCallback(JPEG_HandleTypeDef *hjpeg,JPEG_ConfTypeDef *pInfo)
1798:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
ARM GAS  /tmp/ccSvCFam.s 			page 33


1799:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
1800:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(hjpeg);
1801:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(pInfo);
1802:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1803:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1804:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             the HAL_JPEG_HeaderParsingCpltCallback could be implemented in the user file
1805:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    */ 
1806:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1807:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1808:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1809:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Encoding complete callback.
1810:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1811:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1812:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
1813:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1814:HALLIB/Src/stm32f7xx_hal_jpeg.c **** __weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
1815:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1816:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
1817:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(hjpeg);
1818:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1819:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1820:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             the HAL_JPEG_EncodeCpltCallback could be implemented in the user file
1821:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    */
1822:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1823:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1824:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1825:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Decoding complete callback.
1826:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1827:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1828:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
1829:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1830:HALLIB/Src/stm32f7xx_hal_jpeg.c **** __weak void HAL_JPEG_DecodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
1831:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1832:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
1833:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(hjpeg);
1834:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1835:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1836:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             the HAL_JPEG_EncodeCpltCallback could be implemented in the user file
1837:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    */
1838:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1839:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1840:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1841:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  JPEG error callback.
1842:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1843:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1844:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
1845:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1846:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  __weak void HAL_JPEG_ErrorCallback(JPEG_HandleTypeDef *hjpeg)
1847:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1848:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
1849:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(hjpeg);
1850:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1851:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1852:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             the HAL_JPEG_ErrorCallback could be implemented in the user file
1853:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    */ 
1854:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1855:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
ARM GAS  /tmp/ccSvCFam.s 			page 34


1856:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1857:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Get New Data chunk callback.
1858:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1859:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1860:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  NbDecodedData Number of consummed data in the previous chunk in bytes
1861:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
1862:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1863:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  __weak void HAL_JPEG_GetDataCallback(JPEG_HandleTypeDef *hjpeg, uint32_t NbDecodedData)
1864:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1865:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
1866:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(hjpeg);
1867:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(NbDecodedData);
1868:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1869:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1870:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             the HAL_JPEG_GetDataCallback could be implemented in the user file
1871:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    */    
1872:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1873:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1874:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1875:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Decoded/Encoded Data ready  callback.
1876:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1877:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1878:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  pDataOut pointer to the output data buffer 
1879:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  OutDataLength number in bytes of data available in the specified output buffer 
1880:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
1881:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1882:HALLIB/Src/stm32f7xx_hal_jpeg.c **** __weak void HAL_JPEG_DataReadyCallback (JPEG_HandleTypeDef *hjpeg, uint8_t *pDataOut, uint32_t OutD
1883:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1884:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
1885:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(hjpeg);
1886:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(pDataOut);
1887:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   UNUSED(OutDataLength);
1888:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1889:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1890:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             the HAL_JPEG_DataReadyCallback could be implemented in the user file
1891:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    */    
1892:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1893:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1894:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1895:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
1896:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
1897:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1898:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1899:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @defgroup JPEG_Exported_Functions_Group5 JPEG IRQ handler management  
1900:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *  @brief   JPEG IRQ handler.
1901:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *
1902:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @verbatim   
1903:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
1904:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                 ##### JPEG IRQ handler management #####
1905:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================  
1906:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     [..]  This section provides JPEG IRQ handler function.
1907:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_IRQHandler()  : handles JPEG interrupt request
1908:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1909:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @endverbatim
1910:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
1911:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1912:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
ARM GAS  /tmp/ccSvCFam.s 			page 35


1913:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1914:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  This function handles JPEG interrupt request.
1915:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1916:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1917:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
1918:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1919:HALLIB/Src/stm32f7xx_hal_jpeg.c **** void HAL_JPEG_IRQHandler(JPEG_HandleTypeDef *hjpeg)
1920:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1921:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   switch(hjpeg->State)
1922:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
1923:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     case HAL_JPEG_STATE_BUSY_ENCODING:
1924:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     case HAL_JPEG_STATE_BUSY_DECODING:  
1925:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* continue JPEG data encoding/Decoding*/
1926:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* JPEG data processing : In/Out FIFO transfer*/
1927:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
1928:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {  
1929:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         JPEG_Process(hjpeg);
1930:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
1931:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
1932:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
1933:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         JPEG_DMA_ContinueProcess(hjpeg);
1934:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1935:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
1936:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
1937:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       break;  
1938:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
1939:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     default:
1940:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       break;
1941:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
1942:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1943:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1944:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1945:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
1946:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1947:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1948:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @defgroup JPEG_Exported_Functions_Group6 Peripheral State functions 
1949:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *  @brief   Peripheral State functions. 
1950:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  *
1951:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @verbatim   
1952:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ==============================================================================
1953:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                     ##### Peripheral State and Error functions #####
1954:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   ============================================================================== 
1955:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     [..]  This section provides JPEG State and Errors function.
1956:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_GetState()  : permits to get in run-time the JPEG state.
1957:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       (+) HAL_JPEG_GetError()  : Returns the JPEG error code if any.
1958:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1959:HALLIB/Src/stm32f7xx_hal_jpeg.c **** @endverbatim
1960:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
1961:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1962:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1963:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1964:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Returns the JPEG state.
1965:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
1966:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
1967:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval JPEG state
1968:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1969:HALLIB/Src/stm32f7xx_hal_jpeg.c **** HAL_JPEG_STATETypeDef HAL_JPEG_GetState(JPEG_HandleTypeDef *hjpeg)
ARM GAS  /tmp/ccSvCFam.s 			page 36


1970:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1971:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return hjpeg->State;
1972:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1973:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1974:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1975:HALLIB/Src/stm32f7xx_hal_jpeg.c **** * @brief  Return the JPEG error code
1976:HALLIB/Src/stm32f7xx_hal_jpeg.c **** * @param  hjpeg  pointer to a JPEG_HandleTypeDef structure that contains
1977:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *              the configuration information for the specified JPEG.
1978:HALLIB/Src/stm32f7xx_hal_jpeg.c **** * @retval JPEG Error Code
1979:HALLIB/Src/stm32f7xx_hal_jpeg.c **** */
1980:HALLIB/Src/stm32f7xx_hal_jpeg.c **** uint32_t HAL_JPEG_GetError(JPEG_HandleTypeDef *hjpeg)
1981:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
1982:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return hjpeg->ErrorCode;
1983:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
1984:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1985:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1986:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
1987:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1988:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1989:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1990:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @}
1991:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1992:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
1993:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1994:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /** @addtogroup JPEG_Private_Functions
1995:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @{
1996:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
1997:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
1998:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
1999:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Generates Huffman sizes/Codes Table from Bits/vals Table
2000:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  Bits pointer to bits table
2001:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  Huffsize pointer to sizes table
2002:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  Huffcode pointer to codes table
2003:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  LastK pointer to last Coeff (table dimmension) 
2004:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
2005:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */   
2006:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcod
2007:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {  
  28              		.loc 1 2007 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 F0B4     		push	{r4, r5, r6, r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 7, -4
  41              	.LVL1:
2008:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t i, p, l, code, si;
2009:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    
2010:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Figure C.1: Generation of table of Huffman code sizes */
2011:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   p = 0;
2012:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   for (l = 0; l < 16; l++) 
ARM GAS  /tmp/ccSvCFam.s 			page 37


  42              		.loc 1 2012 0
  43 0002 0027     		movs	r7, #0
2011:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   for (l = 0; l < 16; l++) 
  44              		.loc 1 2011 0
  45 0004 3E46     		mov	r6, r7
  46              		.loc 1 2012 0
  47 0006 0DE0     		b	.L2
  48              	.LVL2:
  49              	.L6:
2013:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2014:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     i = (uint32_t)Bits[l];
  50              		.loc 1 2014 0
  51 0008 C55D     		ldrb	r5, [r0, r7]	@ zero_extendqisi2
  52              	.LVL3:
2015:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if ( (p + i) > 256)
  53              		.loc 1 2015 0
  54 000a 7419     		adds	r4, r6, r5
  55 000c B4F5807F 		cmp	r4, #256
  56 0010 05D9     		bls	.L4
  57 0012 21E0     		b	.L10
  58              	.L5:
  59              	.LVL4:
2016:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {  /* check for table overflow */
2017:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_ERROR;
2018:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2019:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while (i != 0)
2020:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2021:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       Huffsize[p++] = (uint8_t) l+1;
  60              		.loc 1 2021 0
  61 0014 FCB2     		uxtb	r4, r7
  62 0016 0134     		adds	r4, r4, #1
  63 0018 8C55     		strb	r4, [r1, r6]
2022:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       i--;
  64              		.loc 1 2022 0
  65 001a 013D     		subs	r5, r5, #1
  66              	.LVL5:
2021:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       i--;
  67              		.loc 1 2021 0
  68 001c 0136     		adds	r6, r6, #1
  69              	.LVL6:
  70              	.L4:
2019:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
  71              		.loc 1 2019 0
  72 001e 002D     		cmp	r5, #0
  73 0020 F8D1     		bne	.L5
2012:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
  74              		.loc 1 2012 0 discriminator 2
  75 0022 0137     		adds	r7, r7, #1
  76              	.LVL7:
  77              	.L2:
2012:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
  78              		.loc 1 2012 0 is_stmt 0 discriminator 1
  79 0024 0F2F     		cmp	r7, #15
  80 0026 EFD9     		bls	.L6
2023:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2024:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2025:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   Huffsize[p] = 0;
ARM GAS  /tmp/ccSvCFam.s 			page 38


  81              		.loc 1 2025 0 is_stmt 1
  82 0028 0020     		movs	r0, #0
  83              	.LVL8:
  84 002a 8855     		strb	r0, [r1, r6]
2026:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *LastK = p; 
  85              		.loc 1 2026 0
  86 002c 1E60     		str	r6, [r3]
  87              	.LVL9:
2027:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2028:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Figure C.2: Generation of table of Huffman codes */ 
2029:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   code = 0;
2030:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   si = Huffsize[0];
  88              		.loc 1 2030 0
  89 002e 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
  90              	.LVL10:
2029:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   si = Huffsize[0];
  91              		.loc 1 2029 0
  92 0030 0446     		mov	r4, r0
2031:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   p = 0;
  93              		.loc 1 2031 0
  94 0032 0346     		mov	r3, r0
  95              	.LVL11:
2032:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   while (Huffsize[p] != 0) 
  96              		.loc 1 2032 0
  97 0034 0CE0     		b	.L7
  98              	.LVL12:
  99              	.L8:
2033:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2034:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while (((uint32_t) Huffsize[p]) == si) 
2035:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2036:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       Huffcode[p++] = code;
 100              		.loc 1 2036 0
 101 0036 42F82340 		str	r4, [r2, r3, lsl #2]
2037:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       code++;
 102              		.loc 1 2037 0
 103 003a 0134     		adds	r4, r4, #1
 104              	.LVL13:
2036:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       code++;
 105              		.loc 1 2036 0
 106 003c 0133     		adds	r3, r3, #1
 107              	.LVL14:
 108              	.L9:
2034:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 109              		.loc 1 2034 0
 110 003e C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 111 0040 8542     		cmp	r5, r0
 112 0042 F8D0     		beq	.L8
2038:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2039:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* code must fit in "size" bits (si), no code is allowed to be all ones*/
2040:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if (((uint32_t) code) >= (((uint32_t) 1) << si))
 113              		.loc 1 2040 0
 114 0044 0120     		movs	r0, #1
 115 0046 A840     		lsls	r0, r0, r5
 116 0048 8442     		cmp	r4, r0
 117 004a 07D2     		bcs	.L11
2041:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2042:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccSvCFam.s 			page 39


2043:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2044:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     code <<= 1;
 118              		.loc 1 2044 0
 119 004c 6400     		lsls	r4, r4, #1
 120              	.LVL15:
2045:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     si++;
 121              		.loc 1 2045 0
 122 004e 0135     		adds	r5, r5, #1
 123              	.LVL16:
 124              	.L7:
2032:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 125              		.loc 1 2032 0
 126 0050 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 127 0052 0028     		cmp	r0, #0
 128 0054 F3D1     		bne	.L9
 129 0056 02E0     		b	.L3
 130              	.LVL17:
 131              	.L10:
2017:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 132              		.loc 1 2017 0
 133 0058 0120     		movs	r0, #1
 134              	.LVL18:
 135 005a 00E0     		b	.L3
 136              	.LVL19:
 137              	.L11:
2042:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 138              		.loc 1 2042 0
 139 005c 0120     		movs	r0, #1
 140              	.LVL20:
 141              	.L3:
2046:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }    
2047:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
2048:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
2049:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 142              		.loc 1 2049 0
 143 005e F0BC     		pop	{r4, r5, r6, r7}
 144              	.LCFI1:
 145              		.cfi_restore 7
 146              		.cfi_restore 6
 147              		.cfi_restore 5
 148              		.cfi_restore 4
 149              		.cfi_def_cfa_offset 0
 150              	.LVL21:
 151 0060 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE165:
 155 0062 00BF     		.section	.text.JPEG_ACHuff_BitsVals_To_SizeCodes,"ax",%progbits
 156              		.align	2
 157              		.thumb
 158              		.thumb_func
 160              	JPEG_ACHuff_BitsVals_To_SizeCodes:
 161              	.LFB166:
2050:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2051:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2052:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Transform a Bits/Vals AC Huffman table to sizes/Codes huffman Table
2053:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         that can programmed to the JPEG encoder registers
2054:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  AC_BitsValsTable pointer to AC huffman bits/vals table
ARM GAS  /tmp/ccSvCFam.s 			page 40


2055:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  AC_SizeCodesTable pointer to AC huffman Sizes/Codes table 
2056:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
2057:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
2058:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_ACHuff_BitsVals_To_SizeCodes(JPEG_ACHuffTableTypeDef *AC_BitsValsTabl
2059:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 162              		.loc 1 2059 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 1296
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL22:
 167 0000 30B5     		push	{r4, r5, lr}
 168              	.LCFI2:
 169              		.cfi_def_cfa_offset 12
 170              		.cfi_offset 4, -12
 171              		.cfi_offset 5, -8
 172              		.cfi_offset 14, -4
 173 0002 ADF2145D 		subw	sp, sp, #1300
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 1312
 176 0006 0546     		mov	r5, r0
 177 0008 0C46     		mov	r4, r1
2060:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_StatusTypeDef error;
2061:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint8_t huffsize[257];
2062:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t huffcode[257];
2063:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t k;
2064:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t l,lsb, msb;
2065:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t lastK;
2066:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2067:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 178              		.loc 1 2067 0
 179 000a 01AB     		add	r3, sp, #4
 180 000c 02AA     		add	r2, sp, #8
 181 000e 0DF20C41 		addw	r1, sp, #1036
 182              	.LVL23:
 183 0012 FFF7FEFF 		bl	JPEG_Bits_To_SizeCodes
 184              	.LVL24:
2068:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(error != HAL_OK)
 185              		.loc 1 2068 0
 186 0016 38BB     		cbnz	r0, .L18
 187 0018 0023     		movs	r3, #0
 188 001a 20E0     		b	.L15
 189              	.LVL25:
 190              	.L17:
2069:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2070:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return  error;
2071:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2072:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2073:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Figure C.3: Ordering procedure for encoding procedure code tables */
2074:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   k=0;
2075:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    
2076:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   while(k < lastK)
2077:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2078:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     l = AC_BitsValsTable->HuffVal[k];
 191              		.loc 1 2078 0
 192 001c EA18     		adds	r2, r5, r3
 193 001e 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 194              	.LVL26:
ARM GAS  /tmp/ccSvCFam.s 			page 41


2079:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(l == 0)
 195              		.loc 1 2079 0
 196 0020 52B1     		cbz	r2, .L19
2080:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2081:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       l = 160; /*l = 0x00 EOB code*/
2082:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2083:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else if(l == 0xF0)/* l = 0xF0 ZRL code*/
 197              		.loc 1 2083 0
 198 0022 F02A     		cmp	r2, #240
 199 0024 0AD0     		beq	.L20
2084:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2085:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       l = 161;
2086:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }  
2087:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else
2088:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2089:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       msb = (l & 0xF0) >> 4;
 200              		.loc 1 2089 0
 201 0026 1009     		lsrs	r0, r2, #4
 202              	.LVL27:
2090:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       lsb = (l & 0x0F);
 203              		.loc 1 2090 0
 204 0028 02F00F01 		and	r1, r2, #15
 205              	.LVL28:
2091:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       l = (msb * 10) + lsb - 1; 
 206              		.loc 1 2091 0
 207 002c 00EB8000 		add	r0, r0, r0, lsl #2
 208              	.LVL29:
 209 0030 4200     		lsls	r2, r0, #1
 210              	.LVL30:
 211 0032 0A44     		add	r2, r2, r1
 212 0034 013A     		subs	r2, r2, #1
 213              	.LVL31:
 214 0036 02E0     		b	.L16
 215              	.LVL32:
 216              	.L19:
2081:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 217              		.loc 1 2081 0
 218 0038 A022     		movs	r2, #160
 219              	.LVL33:
 220 003a 00E0     		b	.L16
 221              	.LVL34:
 222              	.L20:
2085:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }  
 223              		.loc 1 2085 0
 224 003c A122     		movs	r2, #161
 225              	.LVL35:
 226              	.L16:
2092:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2093:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(l >= JPEG_AC_HUFF_TABLE_SIZE)
 227              		.loc 1 2093 0
 228 003e A12A     		cmp	r2, #161
 229 0040 13D8     		bhi	.L21
2094:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2095:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_ERROR; /* Huffman Table overflow error*/
2096:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2097:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else
2098:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
ARM GAS  /tmp/ccSvCFam.s 			page 42


2099:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
 230              		.loc 1 2099 0
 231 0042 02A9     		add	r1, sp, #8
 232 0044 51F82300 		ldr	r0, [r1, r3, lsl #2]
 233 0048 02F12801 		add	r1, r2, #40
 234 004c 04EB8101 		add	r1, r4, r1, lsl #2
 235 0050 4860     		str	r0, [r1, #4]
2100:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1;
 236              		.loc 1 2100 0
 237 0052 0DF20C41 		addw	r1, sp, #1036
 238 0056 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 239 0058 0139     		subs	r1, r1, #1
 240 005a A154     		strb	r1, [r4, r2]
2101:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       k++;
 241              		.loc 1 2101 0
 242 005c 0133     		adds	r3, r3, #1
 243              	.LVL36:
 244              	.L15:
2076:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 245              		.loc 1 2076 0
 246 005e 019A     		ldr	r2, [sp, #4]
 247 0060 9342     		cmp	r3, r2
 248 0062 DBD3     		bcc	.L17
2102:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }      
2103:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2104:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2105:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
2106:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
 249              		.loc 1 2106 0
 250 0064 0020     		movs	r0, #0
 251 0066 01E0     		b	.L14
 252              	.LVL37:
 253              	.L18:
 254 0068 00E0     		b	.L14
 255              	.LVL38:
 256              	.L21:
2095:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 257              		.loc 1 2095 0
 258 006a 0120     		movs	r0, #1
 259              	.LVL39:
 260              	.L14:
2107:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 261              		.loc 1 2107 0
 262 006c 0DF2145D 		addw	sp, sp, #1300
 263              	.LCFI4:
 264              		.cfi_def_cfa_offset 12
 265              		@ sp needed
 266 0070 30BD     		pop	{r4, r5, pc}
 267              		.cfi_endproc
 268              	.LFE166:
 270 0072 00BF     		.section	.text.JPEG_DCHuff_BitsVals_To_SizeCodes,"ax",%progbits
 271              		.align	2
 272              		.thumb
 273              		.thumb_func
 275              	JPEG_DCHuff_BitsVals_To_SizeCodes:
 276              	.LFB167:
2108:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
ARM GAS  /tmp/ccSvCFam.s 			page 43


2109:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2110:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Transform a Bits/Vals DC Huffman table to sizes/Codes huffman Table
2111:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         that can programmed to the JPEG encoder registers
2112:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  DC_BitsValsTable pointer to DC huffman bits/vals table
2113:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table 
2114:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
2115:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
2116:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTabl
2117:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 277              		.loc 1 2117 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 1296
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              	.LVL40:
 282 0000 30B5     		push	{r4, r5, lr}
 283              	.LCFI5:
 284              		.cfi_def_cfa_offset 12
 285              		.cfi_offset 4, -12
 286              		.cfi_offset 5, -8
 287              		.cfi_offset 14, -4
 288 0002 ADF2145D 		subw	sp, sp, #1300
 289              	.LCFI6:
 290              		.cfi_def_cfa_offset 1312
 291 0006 0546     		mov	r5, r0
 292 0008 0C46     		mov	r4, r1
2118:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_StatusTypeDef error;
2119:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2120:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t k;
2121:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t l;
2122:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t lastK;
2123:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint8_t huffsize[257];
2124:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t huffcode[257];  
2125:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
 293              		.loc 1 2125 0
 294 000a 0DF20C53 		addw	r3, sp, #1292
 295 000e 01AA     		add	r2, sp, #4
 296 0010 0DF58161 		add	r1, sp, #1032
 297              	.LVL41:
 298 0014 FFF7FEFF 		bl	JPEG_Bits_To_SizeCodes
 299              	.LVL42:
2126:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(error != HAL_OK)
 300              		.loc 1 2126 0
 301 0018 C0B9     		cbnz	r0, .L27
 302 001a 0023     		movs	r3, #0
 303 001c 10E0     		b	.L25
 304              	.LVL43:
 305              	.L26:
2127:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2128:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return  error;
2129:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
2130:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Figure C.3: ordering procedure for encoding procedure code tables */
2131:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   k=0;
2132:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2133:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   while(k < lastK)
2134:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2135:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     l = DC_BitsValsTable->HuffVal[k];
 306              		.loc 1 2135 0
ARM GAS  /tmp/ccSvCFam.s 			page 44


 307 001e EA18     		adds	r2, r5, r3
 308 0020 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 309              	.LVL44:
2136:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(l >= JPEG_DC_HUFF_TABLE_SIZE)
 310              		.loc 1 2136 0
 311 0022 0B2A     		cmp	r2, #11
 312 0024 13D8     		bhi	.L28
2137:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2138:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return HAL_ERROR; /* Huffman Table overflow error*/
2139:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2140:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else
2141:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2142:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
 313              		.loc 1 2142 0
 314 0026 01A9     		add	r1, sp, #4
 315 0028 51F82300 		ldr	r0, [r1, r3, lsl #2]
 316 002c 911C     		adds	r1, r2, #2
 317 002e 04EB8101 		add	r1, r4, r1, lsl #2
 318 0032 4860     		str	r0, [r1, #4]
2143:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1;
 319              		.loc 1 2143 0
 320 0034 0DF58161 		add	r1, sp, #1032
 321 0038 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 322 003a 0139     		subs	r1, r1, #1
 323 003c A154     		strb	r1, [r4, r2]
2144:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       k++;
 324              		.loc 1 2144 0
 325 003e 0133     		adds	r3, r3, #1
 326              	.LVL45:
 327              	.L25:
2133:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 328              		.loc 1 2133 0
 329 0040 DDF80C25 		ldr	r2, [sp, #1292]
 330 0044 9342     		cmp	r3, r2
 331 0046 EAD3     		bcc	.L26
2145:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }      
2146:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2147:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2148:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
2149:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;  
 332              		.loc 1 2149 0
 333 0048 0020     		movs	r0, #0
 334 004a 01E0     		b	.L24
 335              	.LVL46:
 336              	.L27:
 337 004c 00E0     		b	.L24
 338              	.LVL47:
 339              	.L28:
2138:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 340              		.loc 1 2138 0
 341 004e 0120     		movs	r0, #1
 342              	.LVL48:
 343              	.L24:
2150:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 344              		.loc 1 2150 0
 345 0050 0DF2145D 		addw	sp, sp, #1300
 346              	.LCFI7:
ARM GAS  /tmp/ccSvCFam.s 			page 45


 347              		.cfi_def_cfa_offset 12
 348              		@ sp needed
 349 0054 30BD     		pop	{r4, r5, pc}
 350              		.cfi_endproc
 351              	.LFE167:
 353 0056 00BF     		.section	.text.JPEG_Set_HuffDC_Mem,"ax",%progbits
 354              		.align	2
 355              		.thumb
 356              		.thumb_func
 358              	JPEG_Set_HuffDC_Mem:
 359              	.LFB168:
2151:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2152:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2153:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Set the JPEG register with an DC huffman table at the given DC table address
2154:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2155:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2156:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableDC pointer to DC huffman table
2157:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
2158:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
2159:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */    
2160:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *Hu
2161:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 360              		.loc 1 2161 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 64
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              	.LVL49:
 365 0000 10B5     		push	{r4, lr}
 366              	.LCFI8:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 4, -8
 369              		.cfi_offset 14, -4
 370 0002 90B0     		sub	sp, sp, #64
 371              	.LCFI9:
 372              		.cfi_def_cfa_offset 72
 373              	.LVL50:
2162:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_StatusTypeDef error = HAL_OK;
2163:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_DC_HuffCodeTableTypeDef dcSizeCodesTable;
2164:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t i, lsb, msb;
2165:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __IO uint32_t *address, *addressDef;
2166:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2167:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(DCTableAddress == (uint32_t *)(hjpeg->Instance->HUFFENC_DC0))
 374              		.loc 1 2167 0
 375 0004 0468     		ldr	r4, [r0]
 376 0006 04F5F863 		add	r3, r4, #1984
 377 000a 9342     		cmp	r3, r2
 378 000c 02D1     		bne	.L31
2168:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2169:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE/2));
 379              		.loc 1 2169 0
 380 000e 04F5FB64 		add	r4, r4, #2008
 381              	.LVL51:
 382 0012 05E0     		b	.L32
 383              	.LVL52:
 384              	.L31:
2170:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2171:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if (DCTableAddress == (uint32_t *)(hjpeg->Instance->HUFFENC_DC1))
ARM GAS  /tmp/ccSvCFam.s 			page 46


 385              		.loc 1 2171 0
 386 0014 04F5FC63 		add	r3, r4, #2016
 387 0018 9A42     		cmp	r2, r3
 388 001a 34D1     		bne	.L36
2172:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2173:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE/2));
 389              		.loc 1 2173 0
 390 001c 04F5FF64 		add	r4, r4, #2040
 391              	.LVL53:
 392              	.L32:
2174:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2175:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
2176:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2177:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
2178:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2179:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2180:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableDC != NULL)
 393              		.loc 1 2180 0
 394 0020 99B3     		cbz	r1, .L37
 395 0022 0846     		mov	r0, r1
 396              	.LVL54:
2181:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2182:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
 397              		.loc 1 2182 0
 398 0024 01A9     		add	r1, sp, #4
 399              	.LVL55:
 400 0026 FFF7FEFF 		bl	JPEG_DCHuff_BitsVals_To_SizeCodes
 401              	.LVL56:
2183:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
 402              		.loc 1 2183 0
 403 002a 80BB     		cbnz	r0, .L38
 404              	.LVL57:
2184:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2185:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return  error;
2186:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2187:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     addressDef = address;
2188:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *addressDef = 0x0FFF0FFF;
 405              		.loc 1 2188 0
 406 002c 6FF0F023 		mvn	r3, #-268374016
 407 0030 2360     		str	r3, [r4]
 408              	.LVL58:
2189:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     addressDef++;
2190:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *addressDef = 0x0FFF0FFF;
 409              		.loc 1 2190 0
 410 0032 6360     		str	r3, [r4, #4]
 411              	.LVL59:
2191:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2192:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     i = JPEG_DC_HUFF_TABLE_SIZE;
 412              		.loc 1 2192 0
 413 0034 0C23     		movs	r3, #12
2193:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(i>0)
 414              		.loc 1 2193 0
 415 0036 22E0     		b	.L34
 416              	.LVL60:
 417              	.L35:
2194:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {       
2195:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       i--;
ARM GAS  /tmp/ccSvCFam.s 			page 47


 418              		.loc 1 2195 0
 419 0038 5A1E     		subs	r2, r3, #1
 420              	.LVL61:
2196:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address --;
2197:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xF) << 8 )) | ((uint32_t)dcSiz
 421              		.loc 1 2197 0
 422 003a 10A9     		add	r1, sp, #64
 423 003c 0A44     		add	r2, r2, r1
 424              	.LVL62:
 425 003e 12F83C2C 		ldrb	r2, [r2, #-60]	@ zero_extendqisi2
 426 0042 1202     		lsls	r2, r2, #8
 427 0044 02F47062 		and	r2, r2, #3840
 428 0048 591C     		adds	r1, r3, #1
 429 004a 10A8     		add	r0, sp, #64
 430 004c 00EB8101 		add	r1, r0, r1, lsl #2
 431 0050 11F8380C 		ldrb	r0, [r1, #-56]	@ zero_extendqisi2
 432 0054 1043     		orrs	r0, r0, r2
 433              	.LVL63:
2198:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       i--;
 434              		.loc 1 2198 0
 435 0056 023B     		subs	r3, r3, #2
 436              	.LVL64:
2199:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xF) << 8 )) | ((uint32_t)dcSiz
 437              		.loc 1 2199 0
 438 0058 10AA     		add	r2, sp, #64
 439 005a 1A44     		add	r2, r2, r3
 440 005c 12F83C2C 		ldrb	r2, [r2, #-60]	@ zero_extendqisi2
 441 0060 1202     		lsls	r2, r2, #8
 442 0062 02F47062 		and	r2, r2, #3840
 443 0066 991C     		adds	r1, r3, #2
 444 0068 0DF1400E 		add	lr, sp, #64
 445 006c 0EEB8101 		add	r1, lr, r1, lsl #2
 446 0070 11F8381C 		ldrb	r1, [r1, #-56]	@ zero_extendqisi2
 447 0074 0A43     		orrs	r2, r2, r1
 448              	.LVL65:
2200:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2201:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = lsb | (msb << 16);
 449              		.loc 1 2201 0
 450 0076 42EA0042 		orr	r2, r2, r0, lsl #16
 451              	.LVL66:
 452 007a 44F8042D 		str	r2, [r4, #-4]!
 453              	.LVL67:
 454              	.L34:
2193:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {       
 455              		.loc 1 2193 0
 456 007e 002B     		cmp	r3, #0
 457 0080 DAD1     		bne	.L35
2202:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }        
2203:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2204:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2205:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
2206:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;  
 458              		.loc 1 2206 0
 459 0082 0020     		movs	r0, #0
 460 0084 03E0     		b	.L33
 461              	.LVL68:
 462              	.L36:
ARM GAS  /tmp/ccSvCFam.s 			page 48


2177:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 463              		.loc 1 2177 0
 464 0086 0120     		movs	r0, #1
 465              	.LVL69:
 466 0088 01E0     		b	.L33
 467              	.LVL70:
 468              	.L37:
 469              		.loc 1 2206 0
 470 008a 0020     		movs	r0, #0
 471              	.LVL71:
 472 008c FFE7     		b	.L33
 473              	.LVL72:
 474              	.L38:
 475              	.L33:
2207:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 476              		.loc 1 2207 0
 477 008e 10B0     		add	sp, sp, #64
 478              	.LCFI10:
 479              		.cfi_def_cfa_offset 8
 480              		@ sp needed
 481 0090 10BD     		pop	{r4, pc}
 482              		.cfi_endproc
 483              	.LFE168:
 485 0092 00BF     		.section	.text.JPEG_Set_HuffAC_Mem,"ax",%progbits
 486              		.align	2
 487              		.thumb
 488              		.thumb_func
 490              	JPEG_Set_HuffAC_Mem:
 491              	.LFB169:
2208:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2209:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2210:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Set the JPEG register with an AC huffman table at the given AC table address
2211:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2212:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2213:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableAC pointer to AC huffman table
2214:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
2215:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval HAL status
2216:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */  
2217:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *Hu
2218:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 492              		.loc 1 2218 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 816
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              	.LVL73:
 497 0000 30B5     		push	{r4, r5, lr}
 498              	.LCFI11:
 499              		.cfi_def_cfa_offset 12
 500              		.cfi_offset 4, -12
 501              		.cfi_offset 5, -8
 502              		.cfi_offset 14, -4
 503 0002 ADF54D7D 		sub	sp, sp, #820
 504              	.LCFI12:
 505              		.cfi_def_cfa_offset 832
 506              	.LVL74:
2219:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_StatusTypeDef error = HAL_OK;
2220:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
ARM GAS  /tmp/ccSvCFam.s 			page 49


2221:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t i, lsb, msb;
2222:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __IO uint32_t *address, *addressDef;
2223:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2224:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(ACTableAddress == (uint32_t *)(hjpeg->Instance->HUFFENC_AC0))
 507              		.loc 1 2224 0
 508 0006 0468     		ldr	r4, [r0]
 509 0008 04F5A063 		add	r3, r4, #1280
 510 000c 9342     		cmp	r3, r2
 511 000e 02D1     		bne	.L41
2225:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2226:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE/2));
 512              		.loc 1 2226 0
 513 0010 04F24464 		addw	r4, r4, #1604
 514              	.LVL75:
 515 0014 05E0     		b	.L42
 516              	.LVL76:
 517              	.L41:
2227:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2228:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if (ACTableAddress == (uint32_t *)(hjpeg->Instance->HUFFENC_AC1))
 518              		.loc 1 2228 0
 519 0016 04F5CC63 		add	r3, r4, #1632
 520 001a 9A42     		cmp	r2, r3
 521 001c 40D1     		bne	.L48
2229:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2230:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE/2));
 522              		.loc 1 2230 0
 523 001e 04F2A474 		addw	r4, r4, #1956
 524              	.LVL77:
 525              	.L42:
2231:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2232:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
2233:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2234:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
2235:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   } 
2236:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2237:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableAC != NULL)
 526              		.loc 1 2237 0
 527 0022 0029     		cmp	r1, #0
 528 0024 3ED0     		beq	.L49
 529 0026 0846     		mov	r0, r1
 530              	.LVL78:
2238:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2239:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     error = JPEG_ACHuff_BitsVals_To_SizeCodes(HuffTableAC, &acSizeCodesTable);
 531              		.loc 1 2239 0
 532 0028 01A9     		add	r1, sp, #4
 533              	.LVL79:
 534 002a FFF7FEFF 		bl	JPEG_ACHuff_BitsVals_To_SizeCodes
 535              	.LVL80:
2240:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
 536              		.loc 1 2240 0
 537 002e 0028     		cmp	r0, #0
 538 0030 3AD1     		bne	.L50
 539 0032 2346     		mov	r3, r4
 540 0034 0022     		movs	r2, #0
 541 0036 04E0     		b	.L44
 542              	.LVL81:
 543              	.L45:
ARM GAS  /tmp/ccSvCFam.s 			page 50


2241:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2242:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return  error;
2243:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2244:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Default values settings: 162:167 FFFh , 168:175 FD0h_FD7h */
2245:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Locations 162:175 of each AC table contain information used internally by the core */
2246:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2247:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     addressDef = address;
2248:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     for(i=0; i<3; i++)
2249:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2250:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *addressDef = 0x0FFF0FFF;
 544              		.loc 1 2250 0 discriminator 3
 545 0038 6FF0F021 		mvn	r1, #-268374016
 546 003c 43F8041B 		str	r1, [r3], #4
 547              	.LVL82:
2248:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 548              		.loc 1 2248 0 discriminator 3
 549 0040 0132     		adds	r2, r2, #1
 550              	.LVL83:
 551              	.L44:
2248:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 552              		.loc 1 2248 0 is_stmt 0 discriminator 1
 553 0042 022A     		cmp	r2, #2
 554 0044 F8D9     		bls	.L45
2251:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       addressDef++;
2252:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2253:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *addressDef = 0x0FD10FD0;
 555              		.loc 1 2253 0 is_stmt 1
 556 0046 1A4A     		ldr	r2, .L52
 557              	.LVL84:
 558 0048 1A60     		str	r2, [r3]
 559              	.LVL85:
2254:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     addressDef++;
2255:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *addressDef = 0x0FD30FD2;
 560              		.loc 1 2255 0
 561 004a 02F10212 		add	r2, r2, #131074
 562 004e 5A60     		str	r2, [r3, #4]
 563              	.LVL86:
2256:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     addressDef++;
2257:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *addressDef = 0x0FD50FD4;
 564              		.loc 1 2257 0
 565 0050 02F10212 		add	r2, r2, #131074
 566 0054 9A60     		str	r2, [r3, #8]
 567              	.LVL87:
2258:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     addressDef++;
2259:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *addressDef = 0x0FD70FD6;
 568              		.loc 1 2259 0
 569 0056 02F10212 		add	r2, r2, #131074
 570 005a DA60     		str	r2, [r3, #12]
 571              	.LVL88:
2260:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* end of Locations 162:175  */
2261:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2262:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2263:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     i = JPEG_AC_HUFF_TABLE_SIZE;
 572              		.loc 1 2263 0
 573 005c A223     		movs	r3, #162
 574              	.LVL89:
2264:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while (i > 0)
ARM GAS  /tmp/ccSvCFam.s 			page 51


 575              		.loc 1 2264 0
 576 005e 1BE0     		b	.L46
 577              	.LVL90:
 578              	.L47:
2265:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2266:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       i--;
 579              		.loc 1 2266 0
 580 0060 591E     		subs	r1, r3, #1
 581              	.LVL91:
2267:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
2268:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xF) << 8 )) | ((uint32_t)acSiz
 582              		.loc 1 2268 0
 583 0062 01AA     		add	r2, sp, #4
 584 0064 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 585              	.LVL92:
 586 0066 0902     		lsls	r1, r1, #8
 587 0068 01F47061 		and	r1, r1, #3840
 588 006c 03F12700 		add	r0, r3, #39
 589 0070 02EB8000 		add	r0, r2, r0, lsl #2
 590 0074 0579     		ldrb	r5, [r0, #4]	@ zero_extendqisi2
 591 0076 0D43     		orrs	r5, r5, r1
 592              	.LVL93:
2269:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       i--;
 593              		.loc 1 2269 0
 594 0078 023B     		subs	r3, r3, #2
 595              	.LVL94:
2270:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xF) << 8 )) | ((uint32_t)acSiz
 596              		.loc 1 2270 0
 597 007a D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 598 007c 0002     		lsls	r0, r0, #8
 599 007e 00F47060 		and	r0, r0, #3840
 600 0082 03F12801 		add	r1, r3, #40
 601 0086 02EB8102 		add	r2, r2, r1, lsl #2
 602 008a 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 603 008c 40EA0102 		orr	r2, r0, r1
 604              	.LVL95:
2271:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2272:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = lsb | (msb << 16);       
 605              		.loc 1 2272 0
 606 0090 42EA0542 		orr	r2, r2, r5, lsl #16
 607              	.LVL96:
 608 0094 44F8042D 		str	r2, [r4, #-4]!
 609              	.LVL97:
 610              	.L46:
2264:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 611              		.loc 1 2264 0
 612 0098 002B     		cmp	r3, #0
 613 009a E1D1     		bne	.L47
2273:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }  
2274:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2275:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2276:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
2277:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
 614              		.loc 1 2277 0
 615 009c 0020     		movs	r0, #0
 616 009e 03E0     		b	.L43
 617              	.LVL98:
ARM GAS  /tmp/ccSvCFam.s 			page 52


 618              	.L48:
2234:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   } 
 619              		.loc 1 2234 0
 620 00a0 0120     		movs	r0, #1
 621              	.LVL99:
 622 00a2 01E0     		b	.L43
 623              	.LVL100:
 624              	.L49:
 625              		.loc 1 2277 0
 626 00a4 0020     		movs	r0, #0
 627              	.LVL101:
 628 00a6 FFE7     		b	.L43
 629              	.LVL102:
 630              	.L50:
 631              	.L43:
2278:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 632              		.loc 1 2278 0
 633 00a8 0DF54D7D 		add	sp, sp, #820
 634              	.LCFI13:
 635              		.cfi_def_cfa_offset 12
 636              		@ sp needed
 637 00ac 30BD     		pop	{r4, r5, pc}
 638              	.L53:
 639 00ae 00BF     		.align	2
 640              	.L52:
 641 00b0 D00FD10F 		.word	265359312
 642              		.cfi_endproc
 643              	.LFE169:
 645              		.section	.text.JPEG_Set_Huff_DHTMem,"ax",%progbits
 646              		.align	2
 647              		.thumb
 648              		.thumb_func
 650              	JPEG_Set_Huff_DHTMem:
 651              	.LFB171:
2279:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2280:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2281:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Configure the JPEG encoder register huffman tables to used during
2282:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the encdoing operation
2283:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2284:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2285:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableAC0 AC0 huffman table
2286:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableDC0 DC0 huffman table
2287:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableAC1 AC1 huffman table
2288:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableDC1 DC1 huffman table  
2289:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
2290:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
2291:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_Set_HuffEnc_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *H
2292:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
2293:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_StatusTypeDef error = HAL_OK;
2294:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2295:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_Set_Huff_DHTMem(hjpeg, HuffTableAC0, HuffTableDC0, HuffTableAC1, HuffTableDC1);
2296:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2297:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableAC0 != NULL)
2298:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2299:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     error = JPEG_Set_HuffAC_Mem(hjpeg, HuffTableAC0, (uint32_t *)(hjpeg->Instance->HUFFENC_AC0));
2300:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
2301:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
ARM GAS  /tmp/ccSvCFam.s 			page 53


2302:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return  error;
2303:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }   
2304:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2305:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2306:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableAC1 != NULL)
2307:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2308:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     error = JPEG_Set_HuffAC_Mem(hjpeg, HuffTableAC1, (uint32_t *)(hjpeg->Instance->HUFFENC_AC1));
2309:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
2310:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2311:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return  error;
2312:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }   
2313:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2314:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2315:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableDC0 != NULL)
2316:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2317:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     error = JPEG_Set_HuffDC_Mem(hjpeg, HuffTableDC0, (uint32_t *)hjpeg->Instance->HUFFENC_DC0);
2318:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
2319:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2320:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return  error;
2321:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     } 
2322:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2323:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2324:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableDC1 != NULL)
2325:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2326:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     error = JPEG_Set_HuffDC_Mem(hjpeg, HuffTableDC1, (uint32_t *)hjpeg->Instance->HUFFENC_DC1);
2327:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
2328:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2329:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return  error;
2330:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     } 
2331:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2332:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
2333:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
2334:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
2335:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2336:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2337:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Configure the JPEG register huffman tables to be included in the JPEG
2338:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         file header (used for encoding only)
2339:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2340:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2341:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableAC0 AC0 huffman table
2342:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableDC0 DC0 huffman table
2343:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableAC1 AC1 huffman table
2344:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  HuffTableDC1 DC1 huffman table  
2345:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
2346:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */ 
2347:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_Set_Huff_DHTMem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC0, 
2348:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 652              		.loc 1 2348 0
 653              		.cfi_startproc
 654              		@ args = 4, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              	.LVL103:
 657 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 658              	.LCFI14:
 659              		.cfi_def_cfa_offset 20
 660              		.cfi_offset 4, -20
 661              		.cfi_offset 5, -16
ARM GAS  /tmp/ccSvCFam.s 			page 54


 662              		.cfi_offset 6, -12
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 0002 059E     		ldr	r6, [sp, #20]
2349:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t value, index;
2350:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __IO uint32_t *address;
2351:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableDC0 != NULL)
 666              		.loc 1 2351 0
 667 0004 002A     		cmp	r2, #0
 668 0006 33D0     		beq	.L55
 669 0008 1546     		mov	r5, r2
2352:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2353:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* DC0 Huffman Table : BITS*/
2354:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* DC0 BITS is a 16 Bytes table i.e 4x32bits words from DHTMEM base address to DHTMEM + 3*/
2355:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 3); 
 670              		.loc 1 2355 0
 671 000a 0268     		ldr	r2, [r0]
 672              	.LVL104:
 673 000c 02F55B7E 		add	lr, r2, #876
 674              	.LVL105:
2356:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     index = 16;
 675              		.loc 1 2356 0
 676 0010 1024     		movs	r4, #16
2357:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(index > 0)
 677              		.loc 1 2357 0
 678 0012 0FE0     		b	.L56
 679              	.LVL106:
 680              	.L57:
2358:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2359:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2360:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = (((uint32_t)HuffTableDC0->Bits[index-1] & 0xFF) << 24)|
 681              		.loc 1 2360 0
 682 0014 621E     		subs	r2, r4, #1
 683 0016 AF5C     		ldrb	r7, [r5, r2]	@ zero_extendqisi2
2361:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->Bits[index-2] & 0xFF) << 16)|
 684              		.loc 1 2361 0
 685 0018 A21E     		subs	r2, r4, #2
 686 001a AA5C     		ldrb	r2, [r5, r2]	@ zero_extendqisi2
 687 001c 1204     		lsls	r2, r2, #16
2360:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->Bits[index-2] & 0xFF) << 16)|
 688              		.loc 1 2360 0
 689 001e 42EA0762 		orr	r2, r2, r7, lsl #24
2362:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->Bits[index-3] & 0xFF) << 8) |
 690              		.loc 1 2362 0
 691 0022 E71E     		subs	r7, r4, #3
 692 0024 EF5D     		ldrb	r7, [r5, r7]	@ zero_extendqisi2
2361:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->Bits[index-2] & 0xFF) << 16)|
 693              		.loc 1 2361 0
 694 0026 42EA0722 		orr	r2, r2, r7, lsl #8
2363:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  ((uint32_t)HuffTableDC0->Bits[index-4] & 0xFF);
 695              		.loc 1 2363 0
 696 002a 043C     		subs	r4, r4, #4
 697              	.LVL107:
 698 002c 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
2362:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->Bits[index-3] & 0xFF) << 8) |
 699              		.loc 1 2362 0
 700 002e 3A43     		orrs	r2, r2, r7
ARM GAS  /tmp/ccSvCFam.s 			page 55


2360:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->Bits[index-2] & 0xFF) << 16)|
 701              		.loc 1 2360 0
 702 0030 4EF80429 		str	r2, [lr], #-4
 703              	.LVL108:
 704              	.L56:
2357:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 705              		.loc 1 2357 0
 706 0034 002C     		cmp	r4, #0
 707 0036 EDD1     		bne	.L57
2364:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
2365:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       index -=4;      
2366:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2367:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2368:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* DC0 Huffman Table : Val*/
2369:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* DC0 VALS is a 12 Bytes table i.e 3x32bits words from DHTMEM base address +4 to DHTMEM + 6 */
2370:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 6);
 708              		.loc 1 2370 0
 709 0038 0268     		ldr	r2, [r0]
 710 003a 02F55E7E 		add	lr, r2, #888
 711              	.LVL109:
2371:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     index = 12;
 712              		.loc 1 2371 0
 713 003e 0C24     		movs	r4, #12
2372:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(index > 0)
 714              		.loc 1 2372 0
 715 0040 14E0     		b	.L58
 716              	.LVL110:
 717              	.L59:
2373:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2374:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = (((uint32_t)HuffTableDC0->HuffVal[index-1] & 0xFF) << 24)|
 718              		.loc 1 2374 0
 719 0042 621E     		subs	r2, r4, #1
 720 0044 2A44     		add	r2, r2, r5
 721 0046 92F810C0 		ldrb	ip, [r2, #16]	@ zero_extendqisi2
2375:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->HuffVal[index-2] & 0xFF) << 16)|
 722              		.loc 1 2375 0
 723 004a A71E     		subs	r7, r4, #2
 724 004c 2F44     		add	r7, r7, r5
 725 004e 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
 726 0050 1204     		lsls	r2, r2, #16
2374:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->HuffVal[index-2] & 0xFF) << 16)|
 727              		.loc 1 2374 0
 728 0052 42EA0C62 		orr	r2, r2, ip, lsl #24
2376:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->HuffVal[index-3] & 0xFF) << 8) |
 729              		.loc 1 2376 0
 730 0056 E71E     		subs	r7, r4, #3
 731 0058 2F44     		add	r7, r7, r5
 732 005a 3F7C     		ldrb	r7, [r7, #16]	@ zero_extendqisi2
2375:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->HuffVal[index-2] & 0xFF) << 16)|
 733              		.loc 1 2375 0
 734 005c 42EA0722 		orr	r2, r2, r7, lsl #8
2377:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  ((uint32_t)HuffTableDC0->HuffVal[index-4] & 0xFF);
 735              		.loc 1 2377 0
 736 0060 043C     		subs	r4, r4, #4
 737              	.LVL111:
 738 0062 2F19     		adds	r7, r5, r4
 739 0064 3F7C     		ldrb	r7, [r7, #16]	@ zero_extendqisi2
ARM GAS  /tmp/ccSvCFam.s 			page 56


2376:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->HuffVal[index-3] & 0xFF) << 8) |
 740              		.loc 1 2376 0
 741 0066 3A43     		orrs	r2, r2, r7
2374:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC0->HuffVal[index-2] & 0xFF) << 16)|
 742              		.loc 1 2374 0
 743 0068 4EF80429 		str	r2, [lr], #-4
 744              	.LVL112:
 745              	.L58:
2372:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 746              		.loc 1 2372 0
 747 006c 002C     		cmp	r4, #0
 748 006e E8D1     		bne	.L59
 749              	.LVL113:
 750              	.L55:
2378:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
2379:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       index -=4;    
2380:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
2381:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2382:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2383:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableAC0 != NULL)
 751              		.loc 1 2383 0
 752 0070 0029     		cmp	r1, #0
 753 0072 3FD0     		beq	.L60
2384:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2385:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* AC0 Huffman Table : BITS*/
2386:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* AC0 BITS is a 16 Bytes table i.e 4x32bits words from DHTMEM base address + 7 to DHTMEM + 10*
2387:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 10); 
 754              		.loc 1 2387 0
 755 0074 0768     		ldr	r7, [r0]
 756 0076 07F56277 		add	r7, r7, #904
 757              	.LVL114:
2388:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     index = 16;
 758              		.loc 1 2388 0
 759 007a 1024     		movs	r4, #16
2389:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(index > 0)
 760              		.loc 1 2389 0
 761 007c 0FE0     		b	.L61
 762              	.LVL115:
 763              	.L62:
2390:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2391:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2392:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = (((uint32_t)HuffTableAC0->Bits[index-1] & 0xFF) << 24)|
 764              		.loc 1 2392 0
 765 007e 621E     		subs	r2, r4, #1
 766 0080 8D5C     		ldrb	r5, [r1, r2]	@ zero_extendqisi2
2393:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->Bits[index-2] & 0xFF) << 16)|
 767              		.loc 1 2393 0
 768 0082 A21E     		subs	r2, r4, #2
 769 0084 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 770 0086 1204     		lsls	r2, r2, #16
2392:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->Bits[index-2] & 0xFF) << 16)|
 771              		.loc 1 2392 0
 772 0088 42EA0562 		orr	r2, r2, r5, lsl #24
2394:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->Bits[index-3] & 0xFF) << 8) |
 773              		.loc 1 2394 0
 774 008c E51E     		subs	r5, r4, #3
 775 008e 4D5D     		ldrb	r5, [r1, r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccSvCFam.s 			page 57


2393:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->Bits[index-2] & 0xFF) << 16)|
 776              		.loc 1 2393 0
 777 0090 42EA0522 		orr	r2, r2, r5, lsl #8
2395:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  ((uint32_t)HuffTableAC0->Bits[index-4] & 0xFF);
 778              		.loc 1 2395 0
 779 0094 043C     		subs	r4, r4, #4
 780              	.LVL116:
 781 0096 0D5D     		ldrb	r5, [r1, r4]	@ zero_extendqisi2
2394:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->Bits[index-3] & 0xFF) << 8) |
 782              		.loc 1 2394 0
 783 0098 2A43     		orrs	r2, r2, r5
2392:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->Bits[index-2] & 0xFF) << 16)|
 784              		.loc 1 2392 0
 785 009a 47F80429 		str	r2, [r7], #-4
 786              	.LVL117:
 787              	.L61:
2389:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 788              		.loc 1 2389 0
 789 009e 002C     		cmp	r4, #0
 790 00a0 EDD1     		bne	.L62
2396:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
2397:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       index -=4;      
2398:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2399:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2400:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* AC0 Huffman Table : Val*/
2401:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* AC0 VALS is a 162 Bytes table i.e 41x32bits words from DHTMEM base address + 11 to DHTMEM + 
2402:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* only Byte 0 and Byte 1 of the last word (@ DHTMEM + 51) belong to AC0 VALS table */
2403:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 51);    
 791              		.loc 1 2403 0
 792 00a2 0768     		ldr	r7, [r0]
 793              	.LVL118:
2404:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = *address & 0xFFFF0000U;
 794              		.loc 1 2404 0
 795 00a4 D7F82C44 		ldr	r4, [r7, #1068]
 796              	.LVL119:
 797 00a8 6F4A     		ldr	r2, .L76
 798 00aa 2240     		ands	r2, r2, r4
 799              	.LVL120:
2405:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFF) << 8) | ((uint32_t)HuffTableAC0-
 800              		.loc 1 2405 0
 801 00ac 91F8B140 		ldrb	r4, [r1, #177]	@ zero_extendqisi2
 802 00b0 42EA0422 		orr	r2, r2, r4, lsl #8
 803              	.LVL121:
 804 00b4 91F8B040 		ldrb	r4, [r1, #176]	@ zero_extendqisi2
 805 00b8 2243     		orrs	r2, r2, r4
 806              	.LVL122:
2406:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *address = value;
 807              		.loc 1 2406 0
 808 00ba C7F82C24 		str	r2, [r7, #1068]
2407:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2408:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*continue setting 160 AC0 huffman values */
2409:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address--; /* address = hjpeg->Instance->DHTMEM + 50*/
 809              		.loc 1 2409 0
 810 00be 07F58567 		add	r7, r7, #1064
 811              	.LVL123:
2410:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     index = 160;
 812              		.loc 1 2410 0
ARM GAS  /tmp/ccSvCFam.s 			page 58


 813 00c2 A024     		movs	r4, #160
2411:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(index > 0)
 814              		.loc 1 2411 0
 815 00c4 14E0     		b	.L63
 816              	.LVL124:
 817              	.L64:
2412:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2413:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = (((uint32_t)HuffTableAC0->HuffVal[index-1] & 0xFF) << 24)|
 818              		.loc 1 2413 0
 819 00c6 621E     		subs	r2, r4, #1
 820 00c8 0A44     		add	r2, r2, r1
 821 00ca 92F810E0 		ldrb	lr, [r2, #16]	@ zero_extendqisi2
2414:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->HuffVal[index-2] & 0xFF) << 16)|
 822              		.loc 1 2414 0
 823 00ce A51E     		subs	r5, r4, #2
 824 00d0 0D44     		add	r5, r5, r1
 825 00d2 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 826 00d4 1204     		lsls	r2, r2, #16
2413:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->HuffVal[index-2] & 0xFF) << 16)|
 827              		.loc 1 2413 0
 828 00d6 42EA0E62 		orr	r2, r2, lr, lsl #24
2415:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->HuffVal[index-3] & 0xFF) << 8) |
 829              		.loc 1 2415 0
 830 00da E51E     		subs	r5, r4, #3
 831 00dc 0D44     		add	r5, r5, r1
 832 00de 2D7C     		ldrb	r5, [r5, #16]	@ zero_extendqisi2
2414:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->HuffVal[index-2] & 0xFF) << 16)|
 833              		.loc 1 2414 0
 834 00e0 42EA0522 		orr	r2, r2, r5, lsl #8
2416:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  ((uint32_t)HuffTableAC0->HuffVal[index-4] & 0xFF);
 835              		.loc 1 2416 0
 836 00e4 043C     		subs	r4, r4, #4
 837              	.LVL125:
 838 00e6 0D19     		adds	r5, r1, r4
 839 00e8 2D7C     		ldrb	r5, [r5, #16]	@ zero_extendqisi2
2415:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->HuffVal[index-3] & 0xFF) << 8) |
 840              		.loc 1 2415 0
 841 00ea 2A43     		orrs	r2, r2, r5
2413:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC0->HuffVal[index-2] & 0xFF) << 16)|
 842              		.loc 1 2413 0
 843 00ec 47F80429 		str	r2, [r7], #-4
 844              	.LVL126:
 845              	.L63:
2411:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 846              		.loc 1 2411 0
 847 00f0 002C     		cmp	r4, #0
 848 00f2 E8D1     		bne	.L64
 849              	.LVL127:
 850              	.L60:
2417:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
2418:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       index -=4;    
2419:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
2420:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2421:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2422:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableDC1 != NULL)
 851              		.loc 1 2422 0
 852 00f4 002E     		cmp	r6, #0
ARM GAS  /tmp/ccSvCFam.s 			page 59


 853 00f6 5FD0     		beq	.L65
2423:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2424:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* DC1 Huffman Table : BITS*/
2425:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* DC1 BITS is a 16 Bytes table i.e 4x32bits words from DHTMEM + 51 base address to DHTMEM + 55
2426:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* only Byte 2 and Byte 3 of the first word (@ DHTMEM + 51) belong to DC1 Bits table */
2427:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 51);
 854              		.loc 1 2427 0
 855 00f8 0168     		ldr	r1, [r0]
 856              	.LVL128:
2428:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = *address & 0x0000FFFFU;
 857              		.loc 1 2428 0
 858 00fa D1F82C24 		ldr	r2, [r1, #1068]
 859 00fe 92B2     		uxth	r2, r2
 860              	.LVL129:
2429:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFF) << 24) | (((uint32_t)HuffTableDC1->Bi
 861              		.loc 1 2429 0
 862 0100 7478     		ldrb	r4, [r6, #1]	@ zero_extendqisi2
 863 0102 42EA0462 		orr	r2, r2, r4, lsl #24
 864              	.LVL130:
 865 0106 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 866 0108 42EA0442 		orr	r2, r2, r4, lsl #16
 867              	.LVL131:
2430:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *address = value;
 868              		.loc 1 2430 0
 869 010c C1F82C24 		str	r2, [r1, #1068]
2431:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2432:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* only Byte 0 and Byte 1 of the last word (@ DHTMEM + 55) belong to DC1 Bits table */
2433:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 55);
 870              		.loc 1 2433 0
 871 0110 0568     		ldr	r5, [r0]
 872              	.LVL132:
2434:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = *address & 0xFFFF0000U;
 873              		.loc 1 2434 0
 874 0112 D5F83C14 		ldr	r1, [r5, #1084]
 875 0116 544A     		ldr	r2, .L76
 876              	.LVL133:
 877 0118 0A40     		ands	r2, r2, r1
 878              	.LVL134:
2435:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = value | (((uint32_t)HuffTableDC1->Bits[15] & 0xFF) << 8) | ((uint32_t)HuffTableDC1->Bit
 879              		.loc 1 2435 0
 880 011a F17B     		ldrb	r1, [r6, #15]	@ zero_extendqisi2
 881 011c 42EA0122 		orr	r2, r2, r1, lsl #8
 882              	.LVL135:
 883 0120 B17B     		ldrb	r1, [r6, #14]	@ zero_extendqisi2
 884 0122 0A43     		orrs	r2, r2, r1
 885              	.LVL136:
2436:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *address = value;
 886              		.loc 1 2436 0
 887 0124 C5F83C24 		str	r2, [r5, #1084]
2437:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2438:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*continue setting 12 DC1 huffman Bits from DHTMEM + 54 down to DHTMEM + 52*/
2439:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address--;
 888              		.loc 1 2439 0
 889 0128 05F58765 		add	r5, r5, #1080
 890              	.LVL137:
2440:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     index = 12;
 891              		.loc 1 2440 0
ARM GAS  /tmp/ccSvCFam.s 			page 60


 892 012c 0C21     		movs	r1, #12
2441:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(index > 0)
 893              		.loc 1 2441 0
 894 012e 0FE0     		b	.L66
 895              	.LVL138:
 896              	.L67:
2442:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2443:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2444:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = (((uint32_t)HuffTableDC1->Bits[index+1] & 0xFF) << 24)|
 897              		.loc 1 2444 0
 898 0130 4A1C     		adds	r2, r1, #1
 899 0132 B45C     		ldrb	r4, [r6, r2]	@ zero_extendqisi2
2445:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->Bits[index] & 0xFF) << 16)|
 900              		.loc 1 2445 0
 901 0134 725C     		ldrb	r2, [r6, r1]	@ zero_extendqisi2
 902 0136 1204     		lsls	r2, r2, #16
2444:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->Bits[index] & 0xFF) << 16)|
 903              		.loc 1 2444 0
 904 0138 42EA0462 		orr	r2, r2, r4, lsl #24
2446:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->Bits[index-1] & 0xFF) << 8) |
 905              		.loc 1 2446 0
 906 013c 4C1E     		subs	r4, r1, #1
 907 013e 345D     		ldrb	r4, [r6, r4]	@ zero_extendqisi2
2445:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->Bits[index] & 0xFF) << 16)|
 908              		.loc 1 2445 0
 909 0140 42EA0422 		orr	r2, r2, r4, lsl #8
2447:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  ((uint32_t)HuffTableDC1->Bits[index-2] & 0xFF);
 910              		.loc 1 2447 0
 911 0144 8C1E     		subs	r4, r1, #2
 912 0146 345D     		ldrb	r4, [r6, r4]	@ zero_extendqisi2
2446:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->Bits[index-1] & 0xFF) << 8) |
 913              		.loc 1 2446 0
 914 0148 2243     		orrs	r2, r2, r4
2444:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->Bits[index] & 0xFF) << 16)|
 915              		.loc 1 2444 0
 916 014a 45F80429 		str	r2, [r5], #-4
 917              	.LVL139:
2448:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
2449:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       index -=4;      
 918              		.loc 1 2449 0
 919 014e 0439     		subs	r1, r1, #4
 920              	.LVL140:
 921              	.L66:
2441:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 922              		.loc 1 2441 0
 923 0150 0029     		cmp	r1, #0
 924 0152 EDD1     		bne	.L67
2450:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2451:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2452:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* DC1 Huffman Table : Val*/
2453:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* DC1 VALS is a 12 Bytes table i.e 3x32bits words from DHTMEM base address +55 to DHTMEM + 58 
2454:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* only Byte 2 and Byte 3 of the first word (@ DHTMEM + 55) belong to DC1 Val table */
2455:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 55);
 925              		.loc 1 2455 0
 926 0154 0168     		ldr	r1, [r0]
 927              	.LVL141:
2456:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = *address & 0x0000FFFF;
ARM GAS  /tmp/ccSvCFam.s 			page 61


 928              		.loc 1 2456 0
 929 0156 D1F83C24 		ldr	r2, [r1, #1084]
 930 015a 92B2     		uxth	r2, r2
 931              	.LVL142:
2457:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFF) << 24) | (((uint32_t)HuffTableDC1-
 932              		.loc 1 2457 0
 933 015c 747C     		ldrb	r4, [r6, #17]	@ zero_extendqisi2
 934 015e 42EA0462 		orr	r2, r2, r4, lsl #24
 935              	.LVL143:
 936 0162 347C     		ldrb	r4, [r6, #16]	@ zero_extendqisi2
 937 0164 42EA0442 		orr	r2, r2, r4, lsl #16
 938              	.LVL144:
2458:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *address = value;
 939              		.loc 1 2458 0
 940 0168 C1F83C24 		str	r2, [r1, #1084]
2459:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2460:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* only Byte 0 and Byte 1 of the last word (@ DHTMEM + 58) belong to DC1 Val table */
2461:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 58);
 941              		.loc 1 2461 0
 942 016c 0468     		ldr	r4, [r0]
 943              	.LVL145:
2462:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = *address & 0xFFFF0000U;
 944              		.loc 1 2462 0
 945 016e D4F84814 		ldr	r1, [r4, #1096]
 946 0172 3D4A     		ldr	r2, .L76
 947              	.LVL146:
 948 0174 0A40     		ands	r2, r2, r1
 949              	.LVL147:
2463:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFF) << 8) | ((uint32_t)HuffTableDC1->
 950              		.loc 1 2463 0
 951 0176 F17E     		ldrb	r1, [r6, #27]	@ zero_extendqisi2
 952 0178 42EA0122 		orr	r2, r2, r1, lsl #8
 953              	.LVL148:
 954 017c B17E     		ldrb	r1, [r6, #26]	@ zero_extendqisi2
 955 017e 0A43     		orrs	r2, r2, r1
 956              	.LVL149:
2464:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *address = value;
 957              		.loc 1 2464 0
 958 0180 C4F84824 		str	r2, [r4, #1096]
2465:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2466:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*continue setting 8 DC1 huffman val from DHTMEM + 57 down to DHTMEM + 56*/
2467:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address--;
 959              		.loc 1 2467 0
 960 0184 04F24444 		addw	r4, r4, #1092
 961              	.LVL150:
2468:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     index = 8;
 962              		.loc 1 2468 0
 963 0188 0822     		movs	r2, #8
 964              	.LVL151:
2469:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(index > 0)
 965              		.loc 1 2469 0
 966 018a 13E0     		b	.L68
 967              	.LVL152:
 968              	.L69:
2470:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2471:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = (((uint32_t)HuffTableDC1->HuffVal[index+1] & 0xFF) << 24)|
 969              		.loc 1 2471 0
ARM GAS  /tmp/ccSvCFam.s 			page 62


 970 018c 511C     		adds	r1, r2, #1
 971 018e 3144     		add	r1, r1, r6
 972 0190 0D7C     		ldrb	r5, [r1, #16]	@ zero_extendqisi2
2472:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->HuffVal[index] & 0xFF) << 16)|
 973              		.loc 1 2472 0
 974 0192 B118     		adds	r1, r6, r2
 975 0194 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 976 0196 0904     		lsls	r1, r1, #16
2471:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->HuffVal[index] & 0xFF) << 16)|
 977              		.loc 1 2471 0
 978 0198 41EA0561 		orr	r1, r1, r5, lsl #24
2473:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->HuffVal[index-1] & 0xFF) << 8) |
 979              		.loc 1 2473 0
 980 019c 551E     		subs	r5, r2, #1
 981 019e 3544     		add	r5, r5, r6
 982 01a0 2D7C     		ldrb	r5, [r5, #16]	@ zero_extendqisi2
2472:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->HuffVal[index] & 0xFF) << 16)|
 983              		.loc 1 2472 0
 984 01a2 41EA0521 		orr	r1, r1, r5, lsl #8
2474:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  ((uint32_t)HuffTableDC1->HuffVal[index-2] & 0xFF);
 985              		.loc 1 2474 0
 986 01a6 951E     		subs	r5, r2, #2
 987 01a8 3544     		add	r5, r5, r6
 988 01aa 2D7C     		ldrb	r5, [r5, #16]	@ zero_extendqisi2
2473:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->HuffVal[index-1] & 0xFF) << 8) |
 989              		.loc 1 2473 0
 990 01ac 2943     		orrs	r1, r1, r5
2471:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableDC1->HuffVal[index] & 0xFF) << 16)|
 991              		.loc 1 2471 0
 992 01ae 44F80419 		str	r1, [r4], #-4
 993              	.LVL153:
2475:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
2476:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       index -=4;    
 994              		.loc 1 2476 0
 995 01b2 043A     		subs	r2, r2, #4
 996              	.LVL154:
 997              	.L68:
2469:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 998              		.loc 1 2469 0
 999 01b4 002A     		cmp	r2, #0
 1000 01b6 E9D1     		bne	.L69
 1001              	.LVL155:
 1002              	.L65:
2477:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
2478:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2479:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2480:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HuffTableAC1 != NULL)
 1003              		.loc 1 2480 0
 1004 01b8 002B     		cmp	r3, #0
 1005 01ba 54D0     		beq	.L54
2481:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2482:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* AC1 Huffman Table : BITS*/
2483:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* AC1 BITS is a 16 Bytes table i.e 4x32bits words from DHTMEM base address + 58 to DHTMEM + 62
2484:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* only Byte 2 and Byte 3 of the first word (@ DHTMEM + 58) belong to AC1 Bits table */
2485:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 58);
 1006              		.loc 1 2485 0
 1007 01bc 0168     		ldr	r1, [r0]
ARM GAS  /tmp/ccSvCFam.s 			page 63


 1008              	.LVL156:
2486:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = *address & 0x0000FFFFU;
 1009              		.loc 1 2486 0
 1010 01be D1F84824 		ldr	r2, [r1, #1096]
 1011 01c2 92B2     		uxth	r2, r2
 1012              	.LVL157:
2487:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFF) << 24) | (((uint32_t)HuffTableAC1->Bi
 1013              		.loc 1 2487 0
 1014 01c4 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
 1015 01c6 42EA0462 		orr	r2, r2, r4, lsl #24
 1016              	.LVL158:
 1017 01ca 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1018 01cc 42EA0442 		orr	r2, r2, r4, lsl #16
 1019              	.LVL159:
2488:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *address = value;
 1020              		.loc 1 2488 0
 1021 01d0 C1F84824 		str	r2, [r1, #1096]
2489:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2490:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* only Byte 0 and Byte 1 of the last word (@ DHTMEM + 62) belong to Bits Val table */
2491:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 62);
 1022              		.loc 1 2491 0
 1023 01d4 0568     		ldr	r5, [r0]
 1024              	.LVL160:
2492:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = *address & 0xFFFF0000U;
 1025              		.loc 1 2492 0
 1026 01d6 D5F85814 		ldr	r1, [r5, #1112]
 1027 01da 234A     		ldr	r2, .L76
 1028              	.LVL161:
 1029 01dc 0A40     		ands	r2, r2, r1
 1030              	.LVL162:
2493:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFF) << 8) | ((uint32_t)HuffTableAC1->Bit
 1031              		.loc 1 2493 0
 1032 01de D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 1033 01e0 42EA0122 		orr	r2, r2, r1, lsl #8
 1034              	.LVL163:
 1035 01e4 997B     		ldrb	r1, [r3, #14]	@ zero_extendqisi2
 1036 01e6 0A43     		orrs	r2, r2, r1
 1037              	.LVL164:
2494:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *address = value;
 1038              		.loc 1 2494 0
 1039 01e8 C5F85824 		str	r2, [r5, #1112]
2495:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2496:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*continue setting 12 AC1 huffman Bits from DHTMEM + 61 down to DHTMEM + 59*/
2497:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address--;
 1040              		.loc 1 2497 0
 1041 01ec 05F25445 		addw	r5, r5, #1108
 1042              	.LVL165:
2498:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     index = 12;
 1043              		.loc 1 2498 0
 1044 01f0 0C21     		movs	r1, #12
2499:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(index > 0)
 1045              		.loc 1 2499 0
 1046 01f2 0FE0     		b	.L71
 1047              	.LVL166:
 1048              	.L72:
2500:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2501:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
ARM GAS  /tmp/ccSvCFam.s 			page 64


2502:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = (((uint32_t)HuffTableAC1->Bits[index+1] & 0xFF) << 24)|
 1049              		.loc 1 2502 0
 1050 01f4 4A1C     		adds	r2, r1, #1
 1051 01f6 9C5C     		ldrb	r4, [r3, r2]	@ zero_extendqisi2
2503:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->Bits[index] & 0xFF) << 16)|
 1052              		.loc 1 2503 0
 1053 01f8 5A5C     		ldrb	r2, [r3, r1]	@ zero_extendqisi2
 1054 01fa 1204     		lsls	r2, r2, #16
2502:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->Bits[index] & 0xFF) << 16)|
 1055              		.loc 1 2502 0
 1056 01fc 42EA0462 		orr	r2, r2, r4, lsl #24
2504:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->Bits[index-1] & 0xFF) << 8) |
 1057              		.loc 1 2504 0
 1058 0200 4C1E     		subs	r4, r1, #1
 1059 0202 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
2503:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->Bits[index] & 0xFF) << 16)|
 1060              		.loc 1 2503 0
 1061 0204 42EA0422 		orr	r2, r2, r4, lsl #8
2505:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  ((uint32_t)HuffTableAC1->Bits[index-2] & 0xFF);
 1062              		.loc 1 2505 0
 1063 0208 8C1E     		subs	r4, r1, #2
 1064 020a 1C5D     		ldrb	r4, [r3, r4]	@ zero_extendqisi2
2504:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->Bits[index-1] & 0xFF) << 8) |
 1065              		.loc 1 2504 0
 1066 020c 2243     		orrs	r2, r2, r4
2502:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->Bits[index] & 0xFF) << 16)|
 1067              		.loc 1 2502 0
 1068 020e 45F80429 		str	r2, [r5], #-4
 1069              	.LVL167:
2506:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
2507:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       index -=4;      
 1070              		.loc 1 2507 0
 1071 0212 0439     		subs	r1, r1, #4
 1072              	.LVL168:
 1073              	.L71:
2499:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1074              		.loc 1 2499 0
 1075 0214 0029     		cmp	r1, #0
 1076 0216 EDD1     		bne	.L72
2508:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2509:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2510:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* AC1 Huffman Table : Val*/
2511:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* AC1 VALS is a 162 Bytes table i.e 41x32bits words from DHTMEM base address + 62 to DHTMEM + 
2512:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* only Byte 2 and Byte 3 of the first word (@ DHTMEM + 62) belong to AC1 VALS table */
2513:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 62);    
 1077              		.loc 1 2513 0
 1078 0218 0168     		ldr	r1, [r0]
 1079              	.LVL169:
2514:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = *address & 0x0000FFFF;
 1080              		.loc 1 2514 0
 1081 021a D1F85824 		ldr	r2, [r1, #1112]
 1082 021e 92B2     		uxth	r2, r2
 1083              	.LVL170:
2515:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFF) << 24) | (((uint32_t)HuffTableAC1-
 1084              		.loc 1 2515 0
 1085 0220 5C7C     		ldrb	r4, [r3, #17]	@ zero_extendqisi2
 1086 0222 42EA0462 		orr	r2, r2, r4, lsl #24
ARM GAS  /tmp/ccSvCFam.s 			page 65


 1087              	.LVL171:
 1088 0226 1C7C     		ldrb	r4, [r3, #16]	@ zero_extendqisi2
 1089 0228 42EA0442 		orr	r2, r2, r4, lsl #16
 1090              	.LVL172:
2516:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *address = value;
 1091              		.loc 1 2516 0
 1092 022c C1F85824 		str	r2, [r1, #1112]
2517:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2518:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*continue setting 160 AC1 huffman values from DHTMEM + 63 to DHTMEM+102 */
2519:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     address = (hjpeg->Instance->DHTMEM + 102);
 1093              		.loc 1 2519 0
 1094 0230 0468     		ldr	r4, [r0]
 1095 0232 04F59F64 		add	r4, r4, #1272
 1096              	.LVL173:
2520:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     index = 160;
 1097              		.loc 1 2520 0
 1098 0236 A021     		movs	r1, #160
2521:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     while(index > 0)
 1099              		.loc 1 2521 0
 1100 0238 13E0     		b	.L73
 1101              	.LVL174:
 1102              	.L74:
2522:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2523:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *address = (((uint32_t)HuffTableAC1->HuffVal[index+1] & 0xFF) << 24)|
 1103              		.loc 1 2523 0
 1104 023a 4A1C     		adds	r2, r1, #1
 1105 023c 1A44     		add	r2, r2, r3
 1106 023e 107C     		ldrb	r0, [r2, #16]	@ zero_extendqisi2
2524:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFF) << 16)|
 1107              		.loc 1 2524 0
 1108 0240 5A18     		adds	r2, r3, r1
 1109 0242 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 1110 0244 1204     		lsls	r2, r2, #16
2523:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFF) << 16)|
 1111              		.loc 1 2523 0
 1112 0246 42EA0062 		orr	r2, r2, r0, lsl #24
2525:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->HuffVal[index-1] & 0xFF) << 8) |
 1113              		.loc 1 2525 0
 1114 024a 481E     		subs	r0, r1, #1
 1115 024c 1844     		add	r0, r0, r3
 1116 024e 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
2524:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFF) << 16)|
 1117              		.loc 1 2524 0
 1118 0250 42EA0022 		orr	r2, r2, r0, lsl #8
2526:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  ((uint32_t)HuffTableAC1->HuffVal[index-2] & 0xFF);
 1119              		.loc 1 2526 0
 1120 0254 881E     		subs	r0, r1, #2
 1121 0256 1844     		add	r0, r0, r3
 1122 0258 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
2525:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->HuffVal[index-1] & 0xFF) << 8) |
 1123              		.loc 1 2525 0
 1124 025a 0243     		orrs	r2, r2, r0
2523:HALLIB/Src/stm32f7xx_hal_jpeg.c ****                  (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFF) << 16)|
 1125              		.loc 1 2523 0
 1126 025c 44F80429 		str	r2, [r4], #-4
 1127              	.LVL175:
2527:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       address--;
ARM GAS  /tmp/ccSvCFam.s 			page 66


2528:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       index -=4;    
 1128              		.loc 1 2528 0
 1129 0260 0439     		subs	r1, r1, #4
 1130              	.LVL176:
 1131              	.L73:
2521:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1132              		.loc 1 2521 0
 1133 0262 0029     		cmp	r1, #0
 1134 0264 E9D1     		bne	.L74
 1135              	.LVL177:
 1136              	.L54:
 1137 0266 F0BD     		pop	{r4, r5, r6, r7, pc}
 1138              	.LVL178:
 1139              	.L77:
 1140              		.align	2
 1141              	.L76:
 1142 0268 0000FFFF 		.word	-65536
 1143              		.cfi_endproc
 1144              	.LFE171:
 1146              		.section	.text.JPEG_Set_HuffEnc_Mem,"ax",%progbits
 1147              		.align	2
 1148              		.thumb
 1149              		.thumb_func
 1151              	JPEG_Set_HuffEnc_Mem:
 1152              	.LFB170:
2292:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_StatusTypeDef error = HAL_OK;
 1153              		.loc 1 2292 0
 1154              		.cfi_startproc
 1155              		@ args = 4, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 1157              	.LVL179:
 1158 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1159              	.LCFI15:
 1160              		.cfi_def_cfa_offset 24
 1161              		.cfi_offset 4, -24
 1162              		.cfi_offset 5, -20
 1163              		.cfi_offset 6, -16
 1164              		.cfi_offset 7, -12
 1165              		.cfi_offset 8, -8
 1166              		.cfi_offset 14, -4
 1167 0004 82B0     		sub	sp, sp, #8
 1168              	.LCFI16:
 1169              		.cfi_def_cfa_offset 32
 1170 0006 0446     		mov	r4, r0
 1171 0008 0E46     		mov	r6, r1
 1172 000a 9046     		mov	r8, r2
 1173 000c 1F46     		mov	r7, r3
 1174 000e 089D     		ldr	r5, [sp, #32]
 1175              	.LVL180:
2295:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 1176              		.loc 1 2295 0
 1177 0010 0095     		str	r5, [sp]
 1178 0012 FFF7FEFF 		bl	JPEG_Set_Huff_DHTMem
 1179              	.LVL181:
2297:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 1180              		.loc 1 2297 0
 1181 0016 3EB1     		cbz	r6, .L79
ARM GAS  /tmp/ccSvCFam.s 			page 67


2299:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
 1182              		.loc 1 2299 0
 1183 0018 2268     		ldr	r2, [r4]
 1184 001a 02F5A062 		add	r2, r2, #1280
 1185 001e 3146     		mov	r1, r6
 1186 0020 2046     		mov	r0, r4
 1187 0022 FFF7FEFF 		bl	JPEG_Set_HuffAC_Mem
 1188              	.LVL182:
2300:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1189              		.loc 1 2300 0
 1190 0026 E8B9     		cbnz	r0, .L83
 1191              	.LVL183:
 1192              	.L79:
2306:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 1193              		.loc 1 2306 0
 1194 0028 3FB1     		cbz	r7, .L81
2308:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
 1195              		.loc 1 2308 0
 1196 002a 2268     		ldr	r2, [r4]
 1197 002c 02F5CC62 		add	r2, r2, #1632
 1198 0030 3946     		mov	r1, r7
 1199 0032 2046     		mov	r0, r4
 1200 0034 FFF7FEFF 		bl	JPEG_Set_HuffAC_Mem
 1201              	.LVL184:
2309:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1202              		.loc 1 2309 0
 1203 0038 A8B9     		cbnz	r0, .L84
 1204              	.LVL185:
 1205              	.L81:
2315:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 1206              		.loc 1 2315 0
 1207 003a B8F1000F 		cmp	r8, #0
 1208 003e 07D0     		beq	.L82
2317:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
 1209              		.loc 1 2317 0
 1210 0040 2268     		ldr	r2, [r4]
 1211 0042 02F5F862 		add	r2, r2, #1984
 1212 0046 4146     		mov	r1, r8
 1213 0048 2046     		mov	r0, r4
 1214 004a FFF7FEFF 		bl	JPEG_Set_HuffDC_Mem
 1215              	.LVL186:
2318:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1216              		.loc 1 2318 0
 1217 004e 58B9     		cbnz	r0, .L85
 1218              	.LVL187:
 1219              	.L82:
2324:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 1220              		.loc 1 2324 0
 1221 0050 5DB1     		cbz	r5, .L86
2326:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(error != HAL_OK)
 1222              		.loc 1 2326 0
 1223 0052 2268     		ldr	r2, [r4]
 1224 0054 02F5FC62 		add	r2, r2, #2016
 1225 0058 2946     		mov	r1, r5
 1226 005a 2046     		mov	r0, r4
 1227 005c FFF7FEFF 		bl	JPEG_Set_HuffDC_Mem
 1228              	.LVL188:
ARM GAS  /tmp/ccSvCFam.s 			page 68


2327:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1229              		.loc 1 2327 0
 1230 0060 28B1     		cbz	r0, .L87
 1231 0062 05E0     		b	.L80
 1232              	.L83:
 1233 0064 04E0     		b	.L80
 1234              	.L84:
 1235 0066 03E0     		b	.L80
 1236              	.L85:
 1237 0068 02E0     		b	.L80
 1238              	.LVL189:
 1239              	.L86:
2333:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 1240              		.loc 1 2333 0
 1241 006a 0020     		movs	r0, #0
 1242 006c 00E0     		b	.L80
 1243              	.LVL190:
 1244              	.L87:
 1245 006e 0020     		movs	r0, #0
 1246              	.LVL191:
 1247              	.L80:
2334:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 1248              		.loc 1 2334 0
 1249 0070 02B0     		add	sp, sp, #8
 1250              	.LCFI17:
 1251              		.cfi_def_cfa_offset 24
 1252              		@ sp needed
 1253 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1254              		.cfi_endproc
 1255              	.LFE170:
 1257 0076 00BF     		.section	.text.JPEG_Set_Quantization_Mem,"ax",%progbits
 1258              		.align	2
 1259              		.thumb
 1260              		.thumb_func
 1262              	JPEG_Set_Quantization_Mem:
 1263              	.LFB172:
2529:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
2530:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
2531:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
2532:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2533:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2534:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Configure the JPEG registers with a given quantization table
2535:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2536:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2537:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  QTable pointer to an array of 64 bytes giving the quantization table
2538:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  QTableAddress destination quantization address in the JPEG peripheral
2539:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         it could be QMEM0, QMEM1, QMEM2 or QMEM3         
2540:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
2541:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
2542:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef  JPEG_Set_Quantization_Mem(JPEG_HandleTypeDef *hjpeg, uint8_t *QTable, uin
2543:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 1264              		.loc 1 2543 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              		@ link register save eliminated.
 1269              	.LVL192:
ARM GAS  /tmp/ccSvCFam.s 			page 69


 1270 0000 F0B4     		push	{r4, r5, r6, r7}
 1271              	.LCFI18:
 1272              		.cfi_def_cfa_offset 16
 1273              		.cfi_offset 4, -16
 1274              		.cfi_offset 5, -12
 1275              		.cfi_offset 6, -8
 1276              		.cfi_offset 7, -4
2544:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t i, j, *tableAddress, quantRow, quantVal, ScaleFactor;
2545:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2546:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((QTableAddress == ((uint32_t *)(hjpeg->Instance->QMEM0))) ||
 1277              		.loc 1 2546 0
 1278 0002 0368     		ldr	r3, [r0]
 1279 0004 03F15004 		add	r4, r3, #80
 1280 0008 9442     		cmp	r4, r2
 1281 000a 0BD0     		beq	.L90
2547:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (QTableAddress == ((uint32_t *)(hjpeg->Instance->QMEM1))) ||
 1282              		.loc 1 2547 0 discriminator 1
 1283 000c 03F19004 		add	r4, r3, #144
2546:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (QTableAddress == ((uint32_t *)(hjpeg->Instance->QMEM1))) ||
 1284              		.loc 1 2546 0 discriminator 1
 1285 0010 A242     		cmp	r2, r4
 1286 0012 07D0     		beq	.L90
2548:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (QTableAddress == ((uint32_t *)(hjpeg->Instance->QMEM2))) ||
 1287              		.loc 1 2548 0
 1288 0014 03F1D004 		add	r4, r3, #208
2547:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (QTableAddress == ((uint32_t *)(hjpeg->Instance->QMEM1))) ||
 1289              		.loc 1 2547 0
 1290 0018 A242     		cmp	r2, r4
 1291 001a 03D0     		beq	.L90
2549:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (QTableAddress == ((uint32_t *)(hjpeg->Instance->QMEM3))))  
 1292              		.loc 1 2549 0
 1293 001c 03F58873 		add	r3, r3, #272
2548:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (QTableAddress == ((uint32_t *)(hjpeg->Instance->QMEM2))) ||
 1294              		.loc 1 2548 0
 1295 0020 9A42     		cmp	r2, r3
 1296 0022 33D1     		bne	.L98
 1297              	.L90:
 1298              	.LVL193:
2550:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2551:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     tableAddress = QTableAddress;  
2552:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2553:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
2554:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2555:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
2556:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2557:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2558:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if ((hjpeg->Conf.ImageQuality >= 50) && (hjpeg->Conf.ImageQuality <= 100)) 
 1299              		.loc 1 2558 0
 1300 0024 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 1301 0026 A3F13200 		sub	r0, r3, #50
 1302              	.LVL194:
 1303 002a C0B2     		uxtb	r0, r0
 1304 002c 3228     		cmp	r0, #50
 1305 002e 03D8     		bhi	.L92
2559:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2560:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ScaleFactor = 200 - (hjpeg->Conf.ImageQuality * 2);
 1306              		.loc 1 2560 0
ARM GAS  /tmp/ccSvCFam.s 			page 70


 1307 0030 C3F16406 		rsb	r6, r3, #100
 1308 0034 7600     		lsls	r6, r6, #1
 1309              	.LVL195:
 1310 0036 04E0     		b	.L93
 1311              	.LVL196:
 1312              	.L92:
2561:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2562:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if (hjpeg->Conf.ImageQuality > 0)
 1313              		.loc 1 2562 0
 1314 0038 53B3     		cbz	r3, .L99
2563:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
2564:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ScaleFactor = ((uint32_t) 5000) / ((uint32_t) hjpeg->Conf.ImageQuality);
 1315              		.loc 1 2564 0
 1316 003a 41F28836 		movw	r6, #5000
 1317 003e B6FBF3F6 		udiv	r6, r6, r3
 1318              	.LVL197:
 1319              	.L93:
2565:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2566:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else
2567:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2568:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;  
2569:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2570:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2571:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Quantization_table = (Standard_quanization_table * ScaleFactor + 50) / 100*/
2572:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   i = 0;
 1320              		.loc 1 2572 0
 1321 0042 0025     		movs	r5, #0
2573:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   while( i < JPEG_QUANT_TABLE_SIZE)
 1322              		.loc 1 2573 0
 1323 0044 1EE0     		b	.L94
 1324              	.LVL198:
 1325              	.L96:
2574:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2575:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     quantRow = 0;
2576:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     for(j=0; j<4; j++)
2577:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2578:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Note that the quantization coefficients must be specified in the table in zigzag order */
2579:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       quantVal = ((((uint32_t) QTable[JPEG_ZIGZAG_ORDER[i+j]]) * ScaleFactor) + 50) / 100;
 1326              		.loc 1 2579 0
 1327 0046 2B18     		adds	r3, r5, r0
 1328 0048 134F     		ldr	r7, .L104
 1329 004a FB5C     		ldrb	r3, [r7, r3]	@ zero_extendqisi2
 1330 004c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1331 004e 03FB06F3 		mul	r3, r3, r6
 1332 0052 3233     		adds	r3, r3, #50
 1333 0054 114F     		ldr	r7, .L104+4
 1334 0056 A7FB0373 		umull	r7, r3, r7, r3
 1335              	.LVL199:
2580:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2581:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if(quantVal == 0)
 1336              		.loc 1 2581 0
 1337 005a 5B09     		lsrs	r3, r3, #5
 1338              	.LVL200:
 1339 005c 02D0     		beq	.L100
2582:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
2583:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         quantVal = 1;  
2584:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
ARM GAS  /tmp/ccSvCFam.s 			page 71


2585:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else if (quantVal > 255)
 1340              		.loc 1 2585 0
 1341 005e FF2B     		cmp	r3, #255
 1342 0060 02D8     		bhi	.L101
 1343 0062 02E0     		b	.L95
 1344              	.L100:
2583:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 1345              		.loc 1 2583 0
 1346 0064 0123     		movs	r3, #1
 1347              	.LVL201:
 1348 0066 00E0     		b	.L95
 1349              	.LVL202:
 1350              	.L101:
2586:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
2587:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         quantVal = 255;
 1351              		.loc 1 2587 0
 1352 0068 FF23     		movs	r3, #255
 1353              	.LVL203:
 1354              	.L95:
2588:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
2589:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2590:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       quantRow |= ((quantVal & 0xFF) << (8 * j));   
 1355              		.loc 1 2590 0 discriminator 2
 1356 006a DBB2     		uxtb	r3, r3
 1357              	.LVL204:
 1358 006c C700     		lsls	r7, r0, #3
 1359 006e BB40     		lsls	r3, r3, r7
 1360 0070 1C43     		orrs	r4, r4, r3
 1361              	.LVL205:
2576:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1362              		.loc 1 2576 0 discriminator 2
 1363 0072 0130     		adds	r0, r0, #1
 1364              	.LVL206:
 1365 0074 01E0     		b	.L97
 1366              	.LVL207:
 1367              	.L102:
 1368 0076 0024     		movs	r4, #0
 1369 0078 2046     		mov	r0, r4
 1370              	.L97:
 1371              	.LVL208:
2576:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1372              		.loc 1 2576 0 is_stmt 0 discriminator 1
 1373 007a 0328     		cmp	r0, #3
 1374 007c E3D9     		bls	.L96
2591:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2592:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2593:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     i += 4;  
 1375              		.loc 1 2593 0 is_stmt 1
 1376 007e 0435     		adds	r5, r5, #4
 1377              	.LVL209:
2594:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *tableAddress = quantRow;
 1378              		.loc 1 2594 0
 1379 0080 42F8044B 		str	r4, [r2], #4
 1380              	.LVL210:
 1381              	.L94:
2573:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 1382              		.loc 1 2573 0
ARM GAS  /tmp/ccSvCFam.s 			page 72


 1383 0084 3F2D     		cmp	r5, #63
 1384 0086 F6D9     		bls	.L102
2595:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     tableAddress ++;        
2596:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2597:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2598:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Return function status */
2599:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;  
 1385              		.loc 1 2599 0
 1386 0088 0020     		movs	r0, #0
 1387 008a 02E0     		b	.L91
 1388              	.LVL211:
 1389              	.L98:
2555:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 1390              		.loc 1 2555 0
 1391 008c 0120     		movs	r0, #1
 1392              	.LVL212:
 1393 008e 00E0     		b	.L91
 1394              	.LVL213:
 1395              	.L99:
2568:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 1396              		.loc 1 2568 0
 1397 0090 0120     		movs	r0, #1
 1398              	.LVL214:
 1399              	.L91:
2600:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 1400              		.loc 1 2600 0
 1401 0092 F0BC     		pop	{r4, r5, r6, r7}
 1402              	.LCFI19:
 1403              		.cfi_restore 7
 1404              		.cfi_restore 6
 1405              		.cfi_restore 5
 1406              		.cfi_restore 4
 1407              		.cfi_def_cfa_offset 0
 1408 0094 7047     		bx	lr
 1409              	.L105:
 1410 0096 00BF     		.align	2
 1411              	.L104:
 1412 0098 00000000 		.word	.LANCHOR0
 1413 009c 1F85EB51 		.word	1374389535
 1414              		.cfi_endproc
 1415              	.LFE172:
 1417              		.section	.text.JPEG_SetColorYCBCR,"ax",%progbits
 1418              		.align	2
 1419              		.thumb
 1420              		.thumb_func
 1422              	JPEG_SetColorYCBCR:
 1423              	.LFB173:
2601:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2602:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2603:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Configure the JPEG registers for YCbCr color space
2604:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2605:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2606:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
2607:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
2608:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_SetColorYCBCR(JPEG_HandleTypeDef *hjpeg) 
2609:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 1424              		.loc 1 2609 0
ARM GAS  /tmp/ccSvCFam.s 			page 73


 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              		@ link register save eliminated.
 1429              	.LVL215:
 1430 0000 70B4     		push	{r4, r5, r6}
 1431              	.LCFI20:
 1432              		.cfi_def_cfa_offset 12
 1433              		.cfi_offset 4, -12
 1434              		.cfi_offset 5, -8
 1435              		.cfi_offset 6, -4
2610:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t ySamplingH;
2611:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t ySamplingV;
2612:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t yblockNb;
2613:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2614:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Number of color components to 3*/
2615:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR1 &=  ~JPEG_CONFR1_NF;
 1436              		.loc 1 2615 0
 1437 0002 0268     		ldr	r2, [r0]
 1438 0004 5368     		ldr	r3, [r2, #4]
 1439 0006 23F00303 		bic	r3, r3, #3
 1440 000a 5360     		str	r3, [r2, #4]
2616:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR1 |=  JPEG_CONFR1_NF_1;
 1441              		.loc 1 2616 0
 1442 000c 0268     		ldr	r2, [r0]
 1443 000e 5368     		ldr	r3, [r2, #4]
 1444 0010 43F00203 		orr	r3, r3, #2
 1445 0014 5360     		str	r3, [r2, #4]
2617:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
2618:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* compute MCU block size and Y, Cb ,Cr sampling factors*/ 
2619:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->Conf.ChromaSubsampling == JPEG_420_SUBSAMPLING) 
 1446              		.loc 1 2619 0
 1447 0016 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 1448 0018 012B     		cmp	r3, #1
 1449 001a 07D0     		beq	.L108
2620:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {          
2621:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingH  = JPEG_CONFR4_HSF_1;   /* Hs = 2*/          
2622:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_1;   /* Vs = 2*/
2623:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
2624:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     yblockNb  = 0x30; /* 4 blocks of 8x8*/
2625:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2626:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if(hjpeg->Conf.ChromaSubsampling == JPEG_422_SUBSAMPLING)
 1450              		.loc 1 2626 0
 1451 001c 022B     		cmp	r3, #2
 1452 001e 0BD1     		bne	.L109
2627:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {          
2628:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingH  = JPEG_CONFR4_HSF_1;   /* Hs = 2*/          
2629:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_0;   /* Vs = 1*/
2630:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
2631:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     yblockNb  = 0x10; /* 2 blocks of 8x8*/          
 1453              		.loc 1 2631 0
 1454 0020 1023     		movs	r3, #16
2629:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 1455              		.loc 1 2629 0
 1456 0022 4FF48072 		mov	r2, #256
2628:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_0;   /* Vs = 1*/
 1457              		.loc 1 2628 0
ARM GAS  /tmp/ccSvCFam.s 			page 74


 1458 0026 4FF40056 		mov	r6, #8192
 1459 002a 0AE0     		b	.L107
 1460              	.L108:
2624:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 1461              		.loc 1 2624 0
 1462 002c 3023     		movs	r3, #48
2622:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 1463              		.loc 1 2622 0
 1464 002e 4FF40072 		mov	r2, #512
2621:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_1;   /* Vs = 2*/
 1465              		.loc 1 2621 0
 1466 0032 4FF40056 		mov	r6, #8192
 1467 0036 04E0     		b	.L107
 1468              	.L109:
2632:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   } 
2633:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else /*JPEG_444_SUBSAMPLING and default*/
2634:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2635:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingH  = JPEG_CONFR4_HSF_0;   /* Hs = 1*/          
2636:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_0;   /* Vs = 1*/
2637:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
2638:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     yblockNb  = 0; /* 1 block of 8x8*/
 1469              		.loc 1 2638 0
 1470 0038 0023     		movs	r3, #0
2636:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 1471              		.loc 1 2636 0
 1472 003a 4FF48072 		mov	r2, #256
2635:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_0;   /* Vs = 1*/
 1473              		.loc 1 2635 0
 1474 003e 4FF48056 		mov	r6, #4096
 1475              	.L107:
 1476              	.LVL216:
2639:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
2640:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
2641:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR1 &= ~(JPEG_CONFR1_NF | JPEG_CONFR1_NS);
 1477              		.loc 1 2641 0
 1478 0042 0468     		ldr	r4, [r0]
 1479 0044 6168     		ldr	r1, [r4, #4]
 1480 0046 21F0C301 		bic	r1, r1, #195
 1481 004a 6160     		str	r1, [r4, #4]
2642:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR1 |=  (JPEG_CONFR1_NF_1 | JPEG_CONFR1_NS_1);
 1482              		.loc 1 2642 0
 1483 004c 0468     		ldr	r4, [r0]
 1484 004e 6168     		ldr	r1, [r4, #4]
 1485 0050 41F08201 		orr	r1, r1, #130
 1486 0054 6160     		str	r1, [r4, #4]
2643:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2644:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset CONFR4 register*/
2645:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR4 =  0;
 1487              		.loc 1 2645 0
 1488 0056 0468     		ldr	r4, [r0]
 1489 0058 0021     		movs	r1, #0
 1490 005a 2161     		str	r1, [r4, #16]
2646:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Horizental and Vertical  sampling factor , number of blocks , Quantization table and Huffma
2647:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR4 |=  (ySamplingH | ySamplingV | (yblockNb & JPEG_CONFR4_NB) );
 1491              		.loc 1 2647 0
 1492 005c 0468     		ldr	r4, [r0]
 1493 005e 2569     		ldr	r5, [r4, #16]
ARM GAS  /tmp/ccSvCFam.s 			page 75


 1494 0060 3243     		orrs	r2, r2, r6
 1495              	.LVL217:
 1496 0062 1343     		orrs	r3, r3, r2
 1497              	.LVL218:
 1498 0064 2B43     		orrs	r3, r3, r5
 1499 0066 2361     		str	r3, [r4, #16]
2648:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
2649:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset CONFR5 register*/
2650:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR5 =  0;
 1500              		.loc 1 2650 0
 1501 0068 0368     		ldr	r3, [r0]
 1502 006a 5961     		str	r1, [r3, #20]
2651:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Horizental and Vertical  sampling factor , number of blocks , Quantization table and Huffma
2652:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR5 |=  (JPEG_CONFR5_HSF_0 | JPEG_CONFR5_VSF_0 | JPEG_CONFR5_QT_0 | JPEG_CONF
 1503              		.loc 1 2652 0
 1504 006c 0468     		ldr	r4, [r0]
 1505 006e 6269     		ldr	r2, [r4, #20]
 1506 0070 41F20713 		movw	r3, #4359
 1507 0074 1A43     		orrs	r2, r2, r3
 1508 0076 6261     		str	r2, [r4, #20]
2653:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
2654:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset CONFR6 register*/
2655:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR6 =  0;
 1509              		.loc 1 2655 0
 1510 0078 0268     		ldr	r2, [r0]
 1511 007a 9161     		str	r1, [r2, #24]
2656:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Horizental and Vertical  sampling factor and number of blocks for component 2*/
2657:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* In YCBCR , by default, both chrominance components (component 1 and component 2) use the same 
2658:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* In YCBCR , both chrominance components (component 1 and component 2) use the same Huffman tabl
2659:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR6 |=  (JPEG_CONFR6_HSF_0 | JPEG_CONFR6_VSF_0 | JPEG_CONFR6_QT_0 | JPEG_CONF
 1512              		.loc 1 2659 0
 1513 007c 0268     		ldr	r2, [r0]
 1514 007e 9169     		ldr	r1, [r2, #24]
 1515 0080 0B43     		orrs	r3, r3, r1
 1516 0082 9361     		str	r3, [r2, #24]
2660:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2661:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 1517              		.loc 1 2661 0
 1518 0084 70BC     		pop	{r4, r5, r6}
 1519              	.LCFI21:
 1520              		.cfi_restore 6
 1521              		.cfi_restore 5
 1522              		.cfi_restore 4
 1523              		.cfi_def_cfa_offset 0
 1524              	.LVL219:
 1525 0086 7047     		bx	lr
 1526              		.cfi_endproc
 1527              	.LFE173:
 1529              		.section	.text.JPEG_SetColorGrayScale,"ax",%progbits
 1530              		.align	2
 1531              		.thumb
 1532              		.thumb_func
 1534              	JPEG_SetColorGrayScale:
 1535              	.LFB174:
2662:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2663:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2664:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Configure the JPEG registers for GrayScale color space
ARM GAS  /tmp/ccSvCFam.s 			page 76


2665:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2666:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2667:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
2668:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
2669:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_SetColorGrayScale(JPEG_HandleTypeDef *hjpeg)
2670:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {  
 1536              		.loc 1 2670 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 1540              		@ link register save eliminated.
 1541              	.LVL220:
2671:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Number of color components to 1*/
2672:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR1 &= ~(JPEG_CONFR1_NF | JPEG_CONFR1_NS);
 1542              		.loc 1 2672 0
 1543 0000 0268     		ldr	r2, [r0]
 1544 0002 5368     		ldr	r3, [r2, #4]
 1545 0004 23F0C303 		bic	r3, r3, #195
 1546 0008 5360     		str	r3, [r2, #4]
2673:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2674:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*in GrayScale use 1 single Quantization table (Table 0)*/
2675:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*in GrayScale use only one couple of AC/DC huffman table (table 0)*/
2676:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2677:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset CONFR4 register*/
2678:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR4 =  0;
 1547              		.loc 1 2678 0
 1548 000a 0368     		ldr	r3, [r0]
 1549 000c 0022     		movs	r2, #0
 1550 000e 1A61     		str	r2, [r3, #16]
2679:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Horizental and Vertical  sampling factor , number of blocks , Quantization table and Huffma
2680:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR4 |=  JPEG_CONFR4_HSF_0 | JPEG_CONFR4_VSF_0 ;
 1551              		.loc 1 2680 0
 1552 0010 0268     		ldr	r2, [r0]
 1553 0012 1369     		ldr	r3, [r2, #16]
 1554 0014 43F48853 		orr	r3, r3, #4352
 1555 0018 1361     		str	r3, [r2, #16]
 1556 001a 7047     		bx	lr
 1557              		.cfi_endproc
 1558              	.LFE174:
 1560              		.section	.text.JPEG_SetColorCMYK,"ax",%progbits
 1561              		.align	2
 1562              		.thumb
 1563              		.thumb_func
 1565              	JPEG_SetColorCMYK:
 1566              	.LFB175:
2681:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
2682:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2683:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2684:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Configure the JPEG registers for CMYK color space
2685:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2686:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2687:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
2688:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
2689:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_SetColorCMYK(JPEG_HandleTypeDef *hjpeg)
2690:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 1567              		.loc 1 2690 0
 1568              		.cfi_startproc
ARM GAS  /tmp/ccSvCFam.s 			page 77


 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 1571              		@ link register save eliminated.
 1572              	.LVL221:
 1573 0000 70B4     		push	{r4, r5, r6}
 1574              	.LCFI22:
 1575              		.cfi_def_cfa_offset 12
 1576              		.cfi_offset 4, -12
 1577              		.cfi_offset 5, -8
 1578              		.cfi_offset 6, -4
2691:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t ySamplingH;
2692:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t ySamplingV;
2693:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t yblockNb;
2694:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2695:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Number of color components to 4*/
2696:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR1 |= (JPEG_CONFR1_NF | JPEG_CONFR1_NS);
 1579              		.loc 1 2696 0
 1580 0002 0268     		ldr	r2, [r0]
 1581 0004 5368     		ldr	r3, [r2, #4]
 1582 0006 43F0C303 		orr	r3, r3, #195
 1583 000a 5360     		str	r3, [r2, #4]
2697:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
2698:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* compute MCU block size and Y, Cb ,Cr sampling factors*/ 
2699:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->Conf.ChromaSubsampling == JPEG_420_SUBSAMPLING) 
 1584              		.loc 1 2699 0
 1585 000c 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 1586 000e 012B     		cmp	r3, #1
 1587 0010 07D0     		beq	.L114
2700:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {          
2701:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingH  = JPEG_CONFR4_HSF_1;   /* Hs = 2*/          
2702:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_1;   /* Vs = 2*/
2703:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
2704:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     yblockNb  = 0x30; /* 4 blocks of 8x8*/
2705:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2706:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if(hjpeg->Conf.ChromaSubsampling == JPEG_422_SUBSAMPLING)
 1588              		.loc 1 2706 0
 1589 0012 022B     		cmp	r3, #2
 1590 0014 0BD1     		bne	.L115
2707:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {          
2708:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingH  = JPEG_CONFR4_HSF_1;   /* Hs = 2*/          
2709:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_0;   /* Vs = 1*/
2710:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
2711:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     yblockNb  = 0x10; /* 2 blocks of 8x8*/          
 1591              		.loc 1 2711 0
 1592 0016 1023     		movs	r3, #16
2709:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 1593              		.loc 1 2709 0
 1594 0018 4FF48072 		mov	r2, #256
2708:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_0;   /* Vs = 1*/
 1595              		.loc 1 2708 0
 1596 001c 4FF40056 		mov	r6, #8192
 1597 0020 0AE0     		b	.L113
 1598              	.L114:
2704:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 1599              		.loc 1 2704 0
 1600 0022 3023     		movs	r3, #48
2702:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
ARM GAS  /tmp/ccSvCFam.s 			page 78


 1601              		.loc 1 2702 0
 1602 0024 4FF40072 		mov	r2, #512
2701:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_1;   /* Vs = 2*/
 1603              		.loc 1 2701 0
 1604 0028 4FF40056 		mov	r6, #8192
 1605 002c 04E0     		b	.L113
 1606              	.L115:
2712:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2713:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else /*JPEG_444_SUBSAMPLING and default*/
2714:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {          
2715:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingH  = JPEG_CONFR4_HSF_0;   /* Hs = 1*/          
2716:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_0;   /* Vs = 1*/
2717:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
2718:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     yblockNb  = 0; /* 1 block of 8x8*/
 1607              		.loc 1 2718 0
 1608 002e 0023     		movs	r3, #0
2716:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 1609              		.loc 1 2716 0
 1610 0030 4FF48072 		mov	r2, #256
2715:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     ySamplingV  = JPEG_CONFR4_VSF_0;   /* Vs = 1*/
 1611              		.loc 1 2715 0
 1612 0034 4FF48056 		mov	r6, #4096
 1613              	.L113:
 1614              	.LVL222:
2719:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   } 
2720:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2721:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset CONFR4 register*/
2722:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR4 =  0;
 1615              		.loc 1 2722 0
 1616 0038 0468     		ldr	r4, [r0]
 1617 003a 0021     		movs	r1, #0
 1618 003c 2161     		str	r1, [r4, #16]
2723:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Horizental and Vertical  sampling factor , number of blocks , Quantization table and Huffma
2724:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR4 |=  (ySamplingH | ySamplingV | (yblockNb & JPEG_CONFR4_NB) );
 1619              		.loc 1 2724 0
 1620 003e 0468     		ldr	r4, [r0]
 1621 0040 2569     		ldr	r5, [r4, #16]
 1622 0042 3243     		orrs	r2, r2, r6
 1623              	.LVL223:
 1624 0044 1343     		orrs	r3, r3, r2
 1625              	.LVL224:
 1626 0046 2B43     		orrs	r3, r3, r5
 1627 0048 2361     		str	r3, [r4, #16]
2725:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
2726:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset CONFR5 register*/
2727:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR5 =  0;
 1628              		.loc 1 2727 0
 1629 004a 0368     		ldr	r3, [r0]
 1630 004c 5961     		str	r1, [r3, #20]
2728:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Horizental and Vertical  sampling factor , number of blocks , Quantization table and Huffma
2729:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR5 |=  (JPEG_CONFR5_HSF_0 | JPEG_CONFR5_VSF_0);
 1631              		.loc 1 2729 0
 1632 004e 0268     		ldr	r2, [r0]
 1633 0050 5369     		ldr	r3, [r2, #20]
 1634 0052 43F48853 		orr	r3, r3, #4352
 1635 0056 5361     		str	r3, [r2, #20]
2730:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
ARM GAS  /tmp/ccSvCFam.s 			page 79


2731:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset CONFR6 register*/
2732:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR6 =  0;
 1636              		.loc 1 2732 0
 1637 0058 0368     		ldr	r3, [r0]
 1638 005a 9961     		str	r1, [r3, #24]
2733:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Horizental and Vertical  sampling factor , number of blocks , Quantization table and Huffma
2734:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR6 |=  (JPEG_CONFR6_HSF_0 | JPEG_CONFR6_VSF_0);
 1639              		.loc 1 2734 0
 1640 005c 0268     		ldr	r2, [r0]
 1641 005e 9369     		ldr	r3, [r2, #24]
 1642 0060 43F48853 		orr	r3, r3, #4352
 1643 0064 9361     		str	r3, [r2, #24]
2735:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
2736:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset CONFR7 register*/
2737:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR7 =  0;
 1644              		.loc 1 2737 0
 1645 0066 0368     		ldr	r3, [r0]
 1646 0068 D961     		str	r1, [r3, #28]
2738:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Set Horizental and Vertical  sampling factor , number of blocks , Quantization table and Huffma
2739:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR7 |=  (JPEG_CONFR7_HSF_0 | JPEG_CONFR7_VSF_0);
 1647              		.loc 1 2739 0
 1648 006a 0268     		ldr	r2, [r0]
 1649 006c D369     		ldr	r3, [r2, #28]
 1650 006e 43F48853 		orr	r3, r3, #4352
 1651 0072 D361     		str	r3, [r2, #28]
2740:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 1652              		.loc 1 2740 0
 1653 0074 70BC     		pop	{r4, r5, r6}
 1654              	.LCFI23:
 1655              		.cfi_restore 6
 1656              		.cfi_restore 5
 1657              		.cfi_restore 4
 1658              		.cfi_def_cfa_offset 0
 1659              	.LVL225:
 1660 0076 7047     		bx	lr
 1661              		.cfi_endproc
 1662              	.LFE175:
 1664              		.section	.text.JPEG_Init_Process,"ax",%progbits
 1665              		.align	2
 1666              		.thumb
 1667              		.thumb_func
 1669              	JPEG_Init_Process:
 1670              	.LFB176:
2741:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2742:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2743:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Init the JPEG encoding/decoding process in case of Polling or Interrupt and DMA
2744:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2745:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2746:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
2747:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
2748:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
2749:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 1671              		.loc 1 2749 0
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 0
 1674              		@ frame_needed = 0, uses_anonymous_args = 0
 1675              		@ link register save eliminated.
ARM GAS  /tmp/ccSvCFam.s 			page 80


 1676              	.LVL226:
2750:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Reset pause*/
2751:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
 1677              		.loc 1 2751 0
 1678 0000 036D     		ldr	r3, [r0, #80]
 1679 0002 23F44053 		bic	r3, r3, #12288
 1680 0006 0365     		str	r3, [r0, #80]
2752:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2753:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
 1681              		.loc 1 2753 0
 1682 0008 036D     		ldr	r3, [r0, #80]
 1683 000a 03F00303 		and	r3, r3, #3
 1684 000e 022B     		cmp	r3, #2
 1685 0010 05D1     		bne	.L118
2754:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2755:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Set JPEG Codec to Decoding mode */
2756:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
 1686              		.loc 1 2756 0
 1687 0012 0268     		ldr	r2, [r0]
 1688 0014 5368     		ldr	r3, [r2, #4]
 1689 0016 43F00803 		orr	r3, r3, #8
 1690 001a 5360     		str	r3, [r2, #4]
 1691 001c 09E0     		b	.L119
 1692              	.L118:
2757:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
2758:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_ENCODE)
 1693              		.loc 1 2758 0
 1694 001e 036D     		ldr	r3, [r0, #80]
 1695 0020 03F00303 		and	r3, r3, #3
 1696 0024 012B     		cmp	r3, #1
 1697 0026 04D1     		bne	.L119
2759:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2760:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Set JPEG Codec to Encoding mode */
2761:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
 1698              		.loc 1 2761 0
 1699 0028 0268     		ldr	r2, [r0]
 1700 002a 5368     		ldr	r3, [r2, #4]
 1701 002c 23F00803 		bic	r3, r3, #8
 1702 0030 5360     		str	r3, [r2, #4]
 1703              	.L119:
2762:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2763:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2764:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Stop JPEG processing */
2765:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
 1704              		.loc 1 2765 0
 1705 0032 0268     		ldr	r2, [r0]
 1706 0034 1368     		ldr	r3, [r2]
 1707 0036 23F00103 		bic	r3, r3, #1
 1708 003a 1360     		str	r3, [r2]
2766:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2767:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable All Interrupts */
2768:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_INTERRUPT_MASK);
 1709              		.loc 1 2768 0
 1710 003c 0268     		ldr	r2, [r0]
 1711 003e 136B     		ldr	r3, [r2, #48]
 1712 0040 23F07E03 		bic	r3, r3, #126
 1713 0044 1363     		str	r3, [r2, #48]
ARM GAS  /tmp/ccSvCFam.s 			page 81


2769:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2770:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable All DMA requests */
2771:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_DISABLE_DMA(hjpeg,JPEG_DMA_MASK);
 1714              		.loc 1 2771 0
 1715 0046 0268     		ldr	r2, [r0]
 1716 0048 136B     		ldr	r3, [r2, #48]
 1717 004a 23F4C053 		bic	r3, r3, #6144
 1718 004e 1363     		str	r3, [r2, #48]
2772:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2773:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Flush input and output FIFOs*/
2774:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CR |= JPEG_CR_IFF;
 1719              		.loc 1 2774 0
 1720 0050 0268     		ldr	r2, [r0]
 1721 0052 136B     		ldr	r3, [r2, #48]
 1722 0054 43F40053 		orr	r3, r3, #8192
 1723 0058 1363     		str	r3, [r2, #48]
2775:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CR |= JPEG_CR_OFF;
 1724              		.loc 1 2775 0
 1725 005a 0268     		ldr	r2, [r0]
 1726 005c 136B     		ldr	r3, [r2, #48]
 1727 005e 43F48043 		orr	r3, r3, #16384
 1728 0062 1363     		str	r3, [r2, #48]
2776:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2777:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Clear all flags */
2778:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_CLEAR_FLAG(hjpeg,JPEG_FLAG_ALL);
 1729              		.loc 1 2778 0
 1730 0064 0268     		ldr	r2, [r0]
 1731 0066 936B     		ldr	r3, [r2, #56]
 1732 0068 43F06003 		orr	r3, r3, #96
 1733 006c 9363     		str	r3, [r2, #56]
2779:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2780:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Start Encoding/Decoding*/
2781:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
 1734              		.loc 1 2781 0
 1735 006e 0268     		ldr	r2, [r0]
 1736 0070 1368     		ldr	r3, [r2]
 1737 0072 43F00103 		orr	r3, r3, #1
 1738 0076 1360     		str	r3, [r2]
2782:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2783:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
 1739              		.loc 1 2783 0
 1740 0078 036D     		ldr	r3, [r0, #80]
 1741 007a 03F00C03 		and	r3, r3, #12
 1742 007e 082B     		cmp	r3, #8
 1743 0080 05D1     		bne	.L120
2784:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
2785:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
2786:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_E
 1744              		.loc 1 2786 0
 1745 0082 0268     		ldr	r2, [r0]
 1746 0084 136B     		ldr	r3, [r2, #48]
 1747 0086 43F06E03 		orr	r3, r3, #110
 1748 008a 1363     		str	r3, [r2, #48]
 1749 008c 7047     		bx	lr
 1750              	.L120:
2787:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2788:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
ARM GAS  /tmp/ccSvCFam.s 			page 82


 1751              		.loc 1 2788 0
 1752 008e 036D     		ldr	r3, [r0, #80]
 1753 0090 03F00C03 		and	r3, r3, #12
 1754 0094 0C2B     		cmp	r3, #12
 1755 0096 04D1     		bne	.L117
2789:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2790:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Enable End Of Conversation, and End Of Header parsing interruptions*/
2791:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC |JPEG_IT_HPD);
 1756              		.loc 1 2791 0
 1757 0098 0268     		ldr	r2, [r0]
 1758 009a 136B     		ldr	r3, [r2, #48]
 1759 009c 43F06003 		orr	r3, r3, #96
 1760 00a0 1363     		str	r3, [r2, #48]
 1761              	.L117:
 1762 00a2 7047     		bx	lr
 1763              		.cfi_endproc
 1764              	.LFE176:
 1766              		.section	.text.JPEG_GetQuality,"ax",%progbits
 1767              		.align	2
 1768              		.thumb
 1769              		.thumb_func
 1771              	JPEG_GetQuality:
 1772              	.LFB188:
2792:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2793:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }    
2794:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
2795:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2796:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2797:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  JPEG encoding/decoding process in case of Polling or Interrupt
2798:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2799:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2800:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval JPEG_PROCESS_DONE if the process has ends else JPEG_PROCESS_ONGOING
2801:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
2802:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static uint32_t JPEG_Process(JPEG_HandleTypeDef *hjpeg)
2803:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
2804:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tmpContext;
2805:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2806:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*End of header processing flag rised*/
2807:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE) && (__HAL_JPEG_GET_FLA
2808:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2809:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call Header parsing complet callback */
2810:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
2811:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Reset the ImageQuality */
2812:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Conf.ImageQuality = 0;
2813:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Note : the image quality is only available at the end of the decoding operation */
2814:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* at the current stage the calculated image quality is not correct so reset it */    
2815:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2816:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call Info Ready callback */ 
2817:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);    
2818:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2819:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_IT_HPD);
2820:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2821:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Clear header processing done flag */
2822:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_CLEAR_FLAG(hjpeg,JPEG_FLAG_HPDF);    
2823:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2824:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2825:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Input FIFO status handling*/
ARM GAS  /tmp/ccSvCFam.s 			page 83


2826:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0)
2827:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
2828:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != RESET)
2829:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2830:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Input FIFO threshold flag rised*/
2831:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*4 words (16 bytes) can be written in */
2832:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_ReadInputData(hjpeg,4);
2833:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2834:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else if(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != RESET)
2835:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2836:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Input FIFO Not Full flag rised*/
2837:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*32-bit value can be written in */
2838:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_ReadInputData(hjpeg,1);
2839:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2840:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2841:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2842:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
2843:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Output FIFO flag handling*/
2844:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0)
2845:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
2846:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != RESET)
2847:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2848:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Output FIFO threshold flag rised*/
2849:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*4 words (16 bytes) can be read out */
2850:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_StoreOutputData(hjpeg, 4);    
2851:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2852:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else if(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != RESET)
2853:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2854:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Output FIFO Not Empty flag rised*/
2855:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*32-bit value can be read out */
2856:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_StoreOutputData(hjpeg, 1);  
2857:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2858:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2859:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2860:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*End of Conversion handling :i.e EOC flag is high and OFTF low and OFNEF low*/
2861:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOC
2862:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {    
2863:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Stop Encoding/Decoding*/
2864:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
2865:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2866:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
2867:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2868:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Disable All Interrupts */
2869:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_INTERRUPT_MASK);
2870:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2871:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2872:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Clear all flags */
2873:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_CLEAR_FLAG(hjpeg,JPEG_FLAG_ALL);
2874:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2875:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call End of conversion callback */
2876:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->JpegOutCount > 0)
2877:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2878:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Output Buffer is not empty, call DecodedDataReadyCallback*/
2879:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_DataReadyCallback (hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
2880:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
2881:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2882:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
ARM GAS  /tmp/ccSvCFam.s 			page 84


2883:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Reset Context Operation*/
2884:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     tmpContext = hjpeg->Context;
2885:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Clear all context fields execpt JPEG_CONTEXT_CONF_ENCODING and JPEG_CONTEXT_CUSTOM_TABLES*/
2886:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
2887:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2888:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
2889:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
2890:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2891:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Change the JPEG state */
2892:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_READY;
2893:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
2894:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call End of Encoding/Decoding callback */
2895:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
2896:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2897:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_DecodeCpltCallback(hjpeg);
2898:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2899:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else if((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_ENCODE)
2900:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2901:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_EncodeCpltCallback(hjpeg);        
2902:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2903:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2904:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return JPEG_PROCESS_DONE;    
2905:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
2906:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2907:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2908:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return JPEG_PROCESS_ONGOING;
2909:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
2910:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2911:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2912:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Store some output data from the JPEG peripheral to the output buffer.
2913:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         This function is used when the JPEG peripheral has new data to output 
2914:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         in case of Polling or Interrupt process
2915:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2916:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2917:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  nbOutputWords Number of output words (of 32 bits) ready from the JPEG peripheral
2918:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None 
2919:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
2920:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_StoreOutputData(JPEG_HandleTypeDef *hjpeg, uint32_t nbOutputWords)
2921:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
2922:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t index, nBwords, nbBytes , dataword, *pOutData;
2923:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2924:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   pOutData = (uint32_t *)(((uint32_t *)hjpeg->pJpegOutBuffPtr) + (hjpeg->JpegOutCount/4));
2925:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2926:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords*4)))
2927:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2928:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     for(index = 0; index < nbOutputWords; index++)    
2929:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2930:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Transfer 32 bits from the JPEG output FIFO*/
2931:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *pOutData = hjpeg->Instance->DOR;
2932:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       pOutData++;
2933:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount += 4;
2934:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2935:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->OutDataLength == hjpeg->JpegOutCount)
2936:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2937:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Output Buffer is full, call DecodedDataReadyCallback*/
2938:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_DataReadyCallback (hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
2939:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;            
ARM GAS  /tmp/ccSvCFam.s 			page 85


2940:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2941:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
2942:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if(hjpeg->OutDataLength > hjpeg->JpegOutCount)
2943:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2944:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     nBwords = (hjpeg->OutDataLength - hjpeg->JpegOutCount)/4;
2945:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     for(index = 0; index < nBwords; index++)    
2946:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2947:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Transfer 32 bits from the JPEG output FIFO*/
2948:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       *pOutData = hjpeg->Instance->DOR;
2949:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       pOutData++;
2950:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount += 4;
2951:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2952:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->OutDataLength == hjpeg->JpegOutCount)
2953:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
2954:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Output Buffer is full, call DecodedDataReadyCallback*/
2955:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_DataReadyCallback (hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
2956:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;            
2957:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
2958:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else
2959:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {      
2960:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       nbBytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;  
2961:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       dataword = hjpeg->Instance->DOR;
2962:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       for(index = 0; index < nbBytes; index++)
2963:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
2964:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (dataword >> (8*index)) & 0xFF;
2965:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->JpegOutCount++;
2966:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }        
2967:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Output Buffer is full, call DecodedDataReadyCallback*/
2968:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_DataReadyCallback (hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
2969:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
2970:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
2971:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       nbBytes = 4 - nbBytes;
2972:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       for(index = nbBytes; index < 4; index++)
2973:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
2974:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (dataword >> (8*index)) & 0xFF;
2975:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->JpegOutCount++;
2976:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
2977:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
2978:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2979:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
2980:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
2981:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
2982:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Read some input Data from the input buffer.
2983:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         This function is used when the JPEG peripheral needs new data 
2984:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         in case of Polling or Interrupt process
2985:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
2986:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
2987:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  nbRequestWords Number of input words (of 32 bits) that the JPE peripheral request
2988:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None 
2989:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
2990:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_ReadInputData(JPEG_HandleTypeDef *hjpeg, uint32_t nbRequestWords)
2991:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
2992:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t nbBytes = 0, nBwords, index, Dataword;  
2993:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
2994:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->InDataLength == 0) || (nbRequestWords == 0))
2995:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
2996:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* No more Input data : nothing to do*/
ARM GAS  /tmp/ccSvCFam.s 			page 86


2997:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_INPUT);
2998:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
2999:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if(hjpeg->InDataLength > hjpeg->JpegInCount)
3000:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3001:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     nbBytes = hjpeg->InDataLength - hjpeg->JpegInCount;
3002:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3003:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if(hjpeg->InDataLength == hjpeg->JpegInCount)
3004:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3005:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call HAL_JPEG_GetDataCallback to get new data */
3006:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
3007:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->InDataLength > 4)
3008:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {      
3009:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4);
3010:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3011:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegInCount = 0;
3012:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     nbBytes = hjpeg->InDataLength;      
3013:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3014:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((nbBytes > 0) && ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0))
3015:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
3016:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     nBwords = nbBytes / 4;
3017:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(nBwords >= nbRequestWords)
3018:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3019:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       for(index = 0; index < nbRequestWords; index++)
3020:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {      
3021:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->Instance->DIR = *((uint32_t *)(((uint32_t *)hjpeg->pJpegInBuffPtr) + (hjpeg->JpegInC
3022:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
3023:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->JpegInCount += 4;
3024:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
3025:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3026:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else /*nBwords < nbRequestWords*/
3027:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3028:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if(nBwords > 0)
3029:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
3030:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         for(index = 0; index < nBwords; index++)
3031:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {      
3032:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->DIR = *((uint32_t *)(((uint32_t *)hjpeg->pJpegInBuffPtr) + (hjpeg->JpegI
3033:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
3034:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->JpegInCount += 4;
3035:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }        
3036:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }      
3037:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else
3038:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
3039:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* end of file*/
3040:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         Dataword = 0;
3041:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         for(index=0; index< nbBytes; index++)
3042:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
3043:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           Dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8 * index);
3044:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->JpegInCount++;
3045:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
3046:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->Instance->DIR = Dataword;        
3047:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }       
3048:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3049:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3050:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3051:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3052:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3053:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Start the JPEG DMA process (encoding/decoding) 
ARM GAS  /tmp/ccSvCFam.s 			page 87


3054:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
3055:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
3056:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval JPEG_PROCESS_DONE if process ends else JPEG_PROCESS_ONGOING 
3057:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3058:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static HAL_StatusTypeDef JPEG_DMA_StartProcess(JPEG_HandleTypeDef *hjpeg)
3059:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {  
3060:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->InDataLength < 4) || (hjpeg->OutDataLength < 4))
3061:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3062:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return HAL_ERROR;
3063:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3064:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Reset Ending DMA internal context flag*/
3065:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Context &= ~JPEG_CONTEXT_ENDING_DMA;
3066:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3067:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable DMA In/Out Request*/
3068:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_DISABLE_DMA(hjpeg,JPEG_DMA_ODMA | JPEG_DMA_IDMA);
3069:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3070:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Set the JPEG DMA In transfer complete callback */
3071:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->hdmain->XferCpltCallback = JPEG_DMAInCpltCallback; 
3072:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Set the DMA In error callback */  
3073:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->hdmain->XferErrorCallback = JPEG_DMAErrorCallback;
3074:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3075:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Set the JPEG DMA Out transfer complete callback */
3076:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->hdmaout->XferCpltCallback = JPEG_DMAOutCpltCallback;
3077:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Set the DMA Out error callback */
3078:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->hdmaout->XferErrorCallback = JPEG_DMAErrorCallback;  
3079:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Set the DMA Out Abort callback */   
3080:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->hdmaout->XferAbortCallback = JPEG_DMAOutAbortCallback;
3081:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3082:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*DMA transfer size must be a multiple of 4 bytes i.e mutliple of 32bits words*/
3083:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4);
3084:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3085:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*DMA transfer size must be a multiple of 4 bytes i.e mutliple of 32bits words*/
3086:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % 4);
3087:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3088:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Start DMA FIFO In transfer */
3089:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
3090:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3091:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Start DMA FIFO Out transfer */
3092:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPt
3093:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3094:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Enable JPEG In/Out DMA requests*/
3095:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_ENABLE_DMA(hjpeg,JPEG_DMA_IDMA | JPEG_DMA_ODMA); 
3096:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3097:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return HAL_OK;
3098:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3099:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3100:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3101:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Continue the current JPEG DMA process (encoding/decoding) 
3102:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
3103:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
3104:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval JPEG_PROCESS_DONE if process ends else JPEG_PROCESS_ONGOING 
3105:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3106:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static uint32_t JPEG_DMA_ContinueProcess(JPEG_HandleTypeDef *hjpeg)
3107:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
3108:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*End of header processing flag rises*/
3109:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE) && (__HAL_JPEG_GET_FLA
3110:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
ARM GAS  /tmp/ccSvCFam.s 			page 88


3111:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call Header parsing complete callback */
3112:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
3113:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3114:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Reset the ImageQuality */
3115:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Conf.ImageQuality = 0;
3116:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Note : the image quality is only available at the end of the decoding operation */
3117:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* at the current stage the calculated image quality is not correct so reset it */    
3118:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3119:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call Info Ready callback */  
3120:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);    
3121:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3122:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_IT_HPD);
3123:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3124:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Clear header processing done flag */
3125:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_CLEAR_FLAG(hjpeg,JPEG_FLAG_HPDF);    
3126:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3127:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3128:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*End of Conversion handling*/
3129:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != RESET)
3130:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {   
3131:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Disabkle JPEG In/Out DMA Requests*/
3132:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_DISABLE_DMA(hjpeg,JPEG_DMA_ODMA | JPEG_DMA_IDMA); 
3133:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3134:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
3135:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3136:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Stop Encoding/Decoding*/
3137:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
3138:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3139:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_INTERRUPT_MASK);
3140:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3141:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Clear all flags */
3142:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_CLEAR_FLAG(hjpeg,JPEG_FLAG_ALL);
3143:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3144:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->hdmain->State == HAL_DMA_STATE_BUSY)
3145:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3146:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Stop the DMA In Xfer*/
3147:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_DMA_Abort_IT(hjpeg->hdmain);
3148:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3149:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3150:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->hdmaout->State == HAL_DMA_STATE_BUSY)
3151:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3152:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Stop the DMA out Xfer*/
3153:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_DMA_Abort_IT(hjpeg->hdmaout);
3154:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3155:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else
3156:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3157:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       return JPEG_DMA_EndProcess(hjpeg);
3158:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
3159:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3160:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3161:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return JPEG_PROCESS_ONGOING;
3162:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3163:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3164:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3165:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Finalize the current JPEG DMA process (encoding/decoding) 
3166:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
3167:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
ARM GAS  /tmp/ccSvCFam.s 			page 89


3168:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval JPEG_PROCESS_DONE
3169:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3170:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static uint32_t JPEG_DMA_EndProcess(JPEG_HandleTypeDef *hjpeg)
3171:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
3172:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tmpContext;  
3173:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegOutCount = hjpeg->OutDataLength - ((hjpeg->hdmaout->Instance->NDTR & DMA_SxNDT) << 2);
3174:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3175:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*if Output Buffer is full, call HAL_JPEG_DataReadyCallback*/
3176:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->JpegOutCount == hjpeg->OutDataLength)
3177:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3178:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_DataReadyCallback (hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
3179:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;
3180:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3181:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3182:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Check if remaining data in the output FIFO*/
3183:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0)
3184:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3185:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Stop Encoding/Decoding*/
3186:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
3187:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3188:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     tmpContext = hjpeg->Context;
3189:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Clear all context fileds execpt JPEG_CONTEXT_CONF_ENCODING and JPEG_CONTEXT_CUSTOM_TABLES*/
3190:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
3191:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3192:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Process Unlocked */
3193:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_UNLOCK(hjpeg);
3194:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3195:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Change the JPEG state */
3196:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State = HAL_JPEG_STATE_READY;
3197:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3198:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call End of Encoding/Decoding callback */
3199:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
3200:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3201:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_DecodeCpltCallback(hjpeg);
3202:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3203:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else if((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_ENCODE)
3204:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3205:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_EncodeCpltCallback(hjpeg);        
3206:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
3207:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
3208:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0)
3209:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3210:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_DMA_PollResidualData(hjpeg);
3211:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3212:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     return JPEG_PROCESS_DONE; 
3213:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
3214:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3215:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return JPEG_PROCESS_ONGOING; 
3216:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3217:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3218:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3219:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Poll residual output data when DMA process (encoding/decoding) 
3220:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
3221:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module
3222:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None.
3223:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3224:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMA_PollResidualData(JPEG_HandleTypeDef *hjpeg)
ARM GAS  /tmp/ccSvCFam.s 			page 90


3225:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
3226:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tmpContext, count = JPEG_FIFO_SIZE, *pDataOut;  
3227:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   pDataOut = (uint32_t *)(hjpeg->pJpegOutBuffPtr + hjpeg->JpegOutCount);
3228:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3229:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   while((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0) && (count > 0))
3230:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3231:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     count--;
3232:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3233:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     *pDataOut = hjpeg->Instance->DOR;
3234:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     pDataOut++;
3235:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount += 4;
3236:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3237:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->JpegOutCount == hjpeg->OutDataLength)
3238:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3239:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Output Buffer is full, call HAL_JPEG_DataReadyCallback*/
3240:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_DataReadyCallback (hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
3241:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;      
3242:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3243:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3244:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3245:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Stop Encoding/Decoding*/
3246:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
3247:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3248:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(hjpeg->JpegOutCount > 0)
3249:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3250:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Output Buffer is not empty, call DecodedDataReadyCallback*/
3251:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_DataReadyCallback (hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
3252:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;
3253:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3254:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3255:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   tmpContext = hjpeg->Context;
3256:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Clear all context fileds execpt JPEG_CONTEXT_CONF_ENCODING and JPEG_CONTEXT_CUSTOM_TABLES*/
3257:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
3258:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3259:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Unlocked */
3260:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_UNLOCK(hjpeg);
3261:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3262:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Change the JPEG state */
3263:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->State = HAL_JPEG_STATE_READY;
3264:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3265:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Call End of Encoding/Decoding callback */
3266:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
3267:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3268:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_DecodeCpltCallback(hjpeg);
3269:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3270:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   else if((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_ENCODE)
3271:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3272:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_EncodeCpltCallback(hjpeg);        
3273:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3274:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3275:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3276:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3277:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  DMA input transfer complete callback
3278:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure. 
3279:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
3280:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3281:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMAInCpltCallback(DMA_HandleTypeDef *hdma)  
ARM GAS  /tmp/ccSvCFam.s 			page 91


3282:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {  
3283:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
3284:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3285:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable The JPEG IT so the DMA Input Callback can not be interrupted by the JPEG EOC IT or JPE
3286:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_INTERRUPT_MASK);
3287:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3288:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA) && ((hjpeg->Context & JPEG_C
3289:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
3290:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_DISABLE_DMA(hjpeg,JPEG_DMA_IDMA); 
3291:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3292:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegInCount = hjpeg->InDataLength - ((hdma->Instance->NDTR & DMA_SxNDT) << 2);
3293:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3294:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Call HAL_JPEG_GetDataCallback to get new data */
3295:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
3296:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3297:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->InDataLength >= 4)
3298:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3299:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*JPEG Input DMA transfer data number must be multiple of 32 bits word 
3300:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         as the destination is a 32 bits (4 bytes) register */
3301:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4);   
3302:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3303:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     else if(hjpeg->InDataLength > 0)
3304:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3305:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Transfer last data word (i.e last 4 bytes)*/
3306:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = 4;
3307:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3308:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3309:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0) && (hjpeg->InDataLength > 0))
3310:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {  
3311:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Start DMA FIFO In transfer */
3312:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_DMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->
3313:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_ENABLE_DMA(hjpeg,JPEG_DMA_IDMA);
3314:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }       
3315:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3316:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* JPEG Conversion still on going : Enable the JPEG IT */
3317:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_ENABLE_IT(hjpeg,JPEG_IT_EOC |JPEG_IT_HPD); 
3318:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
3319:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3320:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3321:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3322:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  DMA output transfer complete callback
3323:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure. 
3324:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
3325:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3326:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMAOutCpltCallback(DMA_HandleTypeDef *hdma)  
3327:HALLIB/Src/stm32f7xx_hal_jpeg.c **** { 
3328:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;  
3329:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3330:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Disable The JPEG IT so the DMA Output Callback can not be interrupted by the JPEG EOC IT or JP
3331:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_INTERRUPT_MASK);
3332:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3333:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA) && ((hjpeg->Context & JPEG_C
3334:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {    
3335:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0)
3336:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {    
3337:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_DISABLE_DMA(hjpeg,JPEG_DMA_ODMA); 
3338:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = hjpeg->OutDataLength - ((hdma->Instance->NDTR & DMA_SxNDT) << 2);
ARM GAS  /tmp/ccSvCFam.s 			page 92


3339:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3340:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*Output Buffer is full, call HAL_JPEG_DataReadyCallback*/
3341:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       HAL_JPEG_DataReadyCallback (hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
3342:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
3343:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0)
3344:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {   
3345:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Start DMA FIFO Out transfer */
3346:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         HAL_DMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOut
3347:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         JPEG_ENABLE_DMA(hjpeg,JPEG_DMA_ODMA);
3348:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
3349:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3350:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3351:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* JPEG Conversion still on going : Enable the JPEG IT */
3352:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_ENABLE_IT(hjpeg,JPEG_IT_EOC |JPEG_IT_HPD);  
3353:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3354:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3355:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3356:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3357:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  DMA Transfer error callback
3358:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure. 
3359:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
3360:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3361:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMAErrorCallback(DMA_HandleTypeDef *hdma)
3362:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
3363:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
3364:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3365:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* if DMA error is FIFO error ignore it */
3366:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if(HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
3367:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3368:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Stop Encoding/Decoding*/
3369:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
3370:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3371:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Disable All Interrupts */
3372:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     __HAL_JPEG_DISABLE_IT(hjpeg,JPEG_INTERRUPT_MASK);
3373:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3374:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Disable All DMA requests */
3375:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_DISABLE_DMA(hjpeg,JPEG_DMA_MASK);  
3376:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
3377:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->State= HAL_JPEG_STATE_READY;
3378:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA; 
3379:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_ErrorCallback(hjpeg);
3380:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3381:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3382:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3383:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3384:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  DMA output Abort callback
3385:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure. 
3386:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval None
3387:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3388:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static void JPEG_DMAOutAbortCallback(DMA_HandleTypeDef *hdma)  
3389:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
3390:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
3391:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3392:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0)
3393:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3394:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     JPEG_DMA_EndProcess(hjpeg);
3395:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
ARM GAS  /tmp/ccSvCFam.s 			page 93


3396:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
3397:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3398:HALLIB/Src/stm32f7xx_hal_jpeg.c **** /**
3399:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @brief  Calculate the decoded image quality (from 1 to 100)
3400:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @param  hjpeg pointer to a JPEG_HandleTypeDef structure that contains
3401:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   *         the configuration information for JPEG module 
3402:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   * @retval JPEG image quality from 1 to 100.
3403:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   */
3404:HALLIB/Src/stm32f7xx_hal_jpeg.c **** static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
3405:HALLIB/Src/stm32f7xx_hal_jpeg.c **** {
 1773              		.loc 1 3405 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
 1778              	.LVL227:
 1779 0000 F0B4     		push	{r4, r5, r6, r7}
 1780              	.LCFI24:
 1781              		.cfi_def_cfa_offset 16
 1782              		.cfi_offset 4, -16
 1783              		.cfi_offset 5, -12
 1784              		.cfi_offset 6, -8
 1785              		.cfi_offset 7, -4
 1786              	.LVL228:
3406:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t quality = 0;
3407:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t quantRow, quantVal,scale, i, j; 
3408:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t *tableAddress = (uint32_t *)hjpeg->Instance->QMEM0;
 1787              		.loc 1 3408 0
 1788 0002 0668     		ldr	r6, [r0]
 1789 0004 5036     		adds	r6, r6, #80
 1790              	.LVL229:
3409:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
3410:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   i = 0;
 1791              		.loc 1 3410 0
 1792 0006 0024     		movs	r4, #0
3406:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t quality = 0;
 1793              		.loc 1 3406 0
 1794 0008 2046     		mov	r0, r4
 1795              	.LVL230:
3411:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   while( i < JPEG_QUANT_TABLE_SIZE)
 1796              		.loc 1 3411 0
 1797 000a 25E0     		b	.L123
 1798              	.LVL231:
 1799              	.L129:
3412:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
3413:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     quantRow = *tableAddress;
 1800              		.loc 1 3413 0
 1801 000c 3568     		ldr	r5, [r6]
 1802              	.LVL232:
3414:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     for(j=0; j<4; j++)
 1803              		.loc 1 3414 0
 1804 000e 0021     		movs	r1, #0
 1805 0010 1EE0     		b	.L124
 1806              	.LVL233:
 1807              	.L128:
3415:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
3416:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       quantVal = (quantRow >> (8 * j)) & 0xFF;
ARM GAS  /tmp/ccSvCFam.s 			page 94


 1808              		.loc 1 3416 0
 1809 0012 CB00     		lsls	r3, r1, #3
 1810 0014 25FA03F3 		lsr	r3, r5, r3
 1811 0018 DBB2     		uxtb	r3, r3
 1812              	.LVL234:
3417:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if(quantVal == 1)
 1813              		.loc 1 3417 0
 1814 001a 012B     		cmp	r3, #1
 1815 001c 01D1     		bne	.L125
3418:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
3419:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* if Quantization value = 1 then quality is 100%*/
3420:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         quality += 100;
 1816              		.loc 1 3420 0
 1817 001e 6430     		adds	r0, r0, #100
 1818              	.LVL235:
 1819 0020 15E0     		b	.L126
 1820              	.L125:
3421:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
3422:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       else
3423:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
3424:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Note that the quantization coefficients must be specified in the table in zigzag order *
3425:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         scale = (quantVal*100)/((uint32_t) JPEG_LUM_QuantTable[JPEG_ZIGZAG_ORDER[i+j]]);
 1821              		.loc 1 3425 0
 1822 0022 6422     		movs	r2, #100
 1823 0024 02FB03F3 		mul	r3, r2, r3
 1824              	.LVL236:
 1825 0028 6218     		adds	r2, r4, r1
 1826 002a 0E4F     		ldr	r7, .L131
 1827 002c BA5C     		ldrb	r2, [r7, r2]	@ zero_extendqisi2
 1828 002e 0E4F     		ldr	r7, .L131+4
 1829 0030 BA5C     		ldrb	r2, [r7, r2]	@ zero_extendqisi2
 1830 0032 B3FBF2F3 		udiv	r3, r3, r2
 1831              	.LVL237:
3426:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
3427:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         if(scale <= 100)
 1832              		.loc 1 3427 0
 1833 0036 642B     		cmp	r3, #100
 1834 0038 04D8     		bhi	.L127
3428:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
3429:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           quality += (200 - scale)/2;         
 1835              		.loc 1 3429 0
 1836 003a C3F1C803 		rsb	r3, r3, #200
 1837              	.LVL238:
 1838 003e 00EB5300 		add	r0, r0, r3, lsr #1
 1839              	.LVL239:
 1840 0042 04E0     		b	.L126
 1841              	.LVL240:
 1842              	.L127:
3430:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
3431:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         else
3432:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
3433:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           quality += 5000/scale;        
 1843              		.loc 1 3433 0
 1844 0044 41F28832 		movw	r2, #5000
 1845 0048 B2FBF3F3 		udiv	r3, r2, r3
 1846              	.LVL241:
 1847 004c 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccSvCFam.s 			page 95


 1848              	.LVL242:
 1849              	.L126:
3414:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1850              		.loc 1 3414 0 discriminator 2
 1851 004e 0131     		adds	r1, r1, #1
 1852              	.LVL243:
 1853              	.L124:
3414:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 1854              		.loc 1 3414 0 is_stmt 0 discriminator 1
 1855 0050 0329     		cmp	r1, #3
 1856 0052 DED9     		bls	.L128
3434:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
3435:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }      
3436:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
3437:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3438:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     i += 4;
 1857              		.loc 1 3438 0 is_stmt 1
 1858 0054 0434     		adds	r4, r4, #4
 1859              	.LVL244:
3439:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     tableAddress ++;        
 1860              		.loc 1 3439 0
 1861 0056 0436     		adds	r6, r6, #4
 1862              	.LVL245:
 1863              	.L123:
3411:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 1864              		.loc 1 3411 0
 1865 0058 3F2C     		cmp	r4, #63
 1866 005a D7D9     		bls	.L129
3440:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
3441:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
3442:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return (quality/((uint32_t)64));   
3443:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 1867              		.loc 1 3443 0
 1868 005c 8009     		lsrs	r0, r0, #6
 1869              	.LVL246:
 1870 005e F0BC     		pop	{r4, r5, r6, r7}
 1871              	.LCFI25:
 1872              		.cfi_restore 7
 1873              		.cfi_restore 6
 1874              		.cfi_restore 5
 1875              		.cfi_restore 4
 1876              		.cfi_def_cfa_offset 0
 1877              	.LVL247:
 1878 0060 7047     		bx	lr
 1879              	.L132:
 1880 0062 00BF     		.align	2
 1881              	.L131:
 1882 0064 00000000 		.word	.LANCHOR0
 1883 0068 00000000 		.word	.LANCHOR1
 1884              		.cfi_endproc
 1885              	.LFE188:
 1887              		.section	.text.JPEG_DMA_StartProcess,"ax",%progbits
 1888              		.align	2
 1889              		.thumb
 1890              		.thumb_func
 1892              	JPEG_DMA_StartProcess:
 1893              	.LFB180:
ARM GAS  /tmp/ccSvCFam.s 			page 96


3059:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->InDataLength < 4) || (hjpeg->OutDataLength < 4))
 1894              		.loc 1 3059 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              	.LVL248:
3060:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 1899              		.loc 1 3060 0
 1900 0000 436A     		ldr	r3, [r0, #36]
 1901 0002 032B     		cmp	r3, #3
 1902 0004 39D9     		bls	.L135
3060:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 1903              		.loc 1 3060 0 is_stmt 0 discriminator 1
 1904 0006 836A     		ldr	r3, [r0, #40]
 1905 0008 032B     		cmp	r3, #3
 1906 000a 38D9     		bls	.L136
3059:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   if((hjpeg->InDataLength < 4) || (hjpeg->OutDataLength < 4))
 1907              		.loc 1 3059 0 is_stmt 1
 1908 000c 10B5     		push	{r4, lr}
 1909              	.LCFI26:
 1910              		.cfi_def_cfa_offset 8
 1911              		.cfi_offset 4, -8
 1912              		.cfi_offset 14, -4
 1913 000e 0446     		mov	r4, r0
3065:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 1914              		.loc 1 3065 0
 1915 0010 036D     		ldr	r3, [r0, #80]
 1916 0012 23F40043 		bic	r3, r3, #32768
 1917 0016 0365     		str	r3, [r0, #80]
3068:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 1918              		.loc 1 3068 0
 1919 0018 0268     		ldr	r2, [r0]
 1920 001a 136B     		ldr	r3, [r2, #48]
 1921 001c 23F4C053 		bic	r3, r3, #6144
 1922 0020 1363     		str	r3, [r2, #48]
3071:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Set the DMA In error callback */  
 1923              		.loc 1 3071 0
 1924 0022 C36A     		ldr	r3, [r0, #44]
 1925 0024 174A     		ldr	r2, .L139
 1926 0026 DA63     		str	r2, [r3, #60]
3073:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 1927              		.loc 1 3073 0
 1928 0028 C26A     		ldr	r2, [r0, #44]
 1929 002a 174B     		ldr	r3, .L139+4
 1930 002c D364     		str	r3, [r2, #76]
3076:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Set the DMA Out error callback */
 1931              		.loc 1 3076 0
 1932 002e 026B     		ldr	r2, [r0, #48]
 1933 0030 1649     		ldr	r1, .L139+8
 1934 0032 D163     		str	r1, [r2, #60]
3078:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Set the DMA Out Abort callback */   
 1935              		.loc 1 3078 0
 1936 0034 026B     		ldr	r2, [r0, #48]
 1937 0036 D364     		str	r3, [r2, #76]
3080:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 1938              		.loc 1 3080 0
 1939 0038 036B     		ldr	r3, [r0, #48]
ARM GAS  /tmp/ccSvCFam.s 			page 97


 1940 003a 154A     		ldr	r2, .L139+12
 1941 003c 1A65     		str	r2, [r3, #80]
3083:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 1942              		.loc 1 3083 0
 1943 003e 436A     		ldr	r3, [r0, #36]
 1944 0040 23F00303 		bic	r3, r3, #3
 1945 0044 4362     		str	r3, [r0, #36]
3086:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 1946              		.loc 1 3086 0
 1947 0046 826A     		ldr	r2, [r0, #40]
 1948 0048 22F00302 		bic	r2, r2, #3
 1949 004c 8262     		str	r2, [r0, #40]
3089:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 1950              		.loc 1 3089 0
 1951 004e 0268     		ldr	r2, [r0]
 1952 0050 9B08     		lsrs	r3, r3, #2
 1953 0052 4032     		adds	r2, r2, #64
 1954 0054 4169     		ldr	r1, [r0, #20]
 1955 0056 C06A     		ldr	r0, [r0, #44]
 1956              	.LVL249:
 1957 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1958              	.LVL250:
3092:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 1959              		.loc 1 3092 0
 1960 005c 2168     		ldr	r1, [r4]
 1961 005e A36A     		ldr	r3, [r4, #40]
 1962 0060 9B08     		lsrs	r3, r3, #2
 1963 0062 A269     		ldr	r2, [r4, #24]
 1964 0064 4431     		adds	r1, r1, #68
 1965 0066 206B     		ldr	r0, [r4, #48]
 1966 0068 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1967              	.LVL251:
3095:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 1968              		.loc 1 3095 0
 1969 006c 2268     		ldr	r2, [r4]
 1970 006e 136B     		ldr	r3, [r2, #48]
 1971 0070 43F4C053 		orr	r3, r3, #6144
 1972 0074 1363     		str	r3, [r2, #48]
3097:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 1973              		.loc 1 3097 0
 1974 0076 0020     		movs	r0, #0
 1975 0078 10BD     		pop	{r4, pc}
 1976              	.LVL252:
 1977              	.L135:
 1978              	.LCFI27:
 1979              		.cfi_def_cfa_offset 0
 1980              		.cfi_restore 4
 1981              		.cfi_restore 14
3062:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 1982              		.loc 1 3062 0
 1983 007a 0120     		movs	r0, #1
 1984              	.LVL253:
 1985 007c 7047     		bx	lr
 1986              	.LVL254:
 1987              	.L136:
 1988 007e 0120     		movs	r0, #1
 1989              	.LVL255:
ARM GAS  /tmp/ccSvCFam.s 			page 98


 1990 0080 7047     		bx	lr
 1991              	.L140:
 1992 0082 00BF     		.align	2
 1993              	.L139:
 1994 0084 00000000 		.word	JPEG_DMAInCpltCallback
 1995 0088 00000000 		.word	JPEG_DMAErrorCallback
 1996 008c 00000000 		.word	JPEG_DMAOutCpltCallback
 1997 0090 00000000 		.word	JPEG_DMAOutAbortCallback
 1998              		.cfi_endproc
 1999              	.LFE180:
 2001              		.section	.text.HAL_JPEG_MspInit,"ax",%progbits
 2002              		.align	2
 2003              		.weak	HAL_JPEG_MspInit
 2004              		.thumb
 2005              		.thumb_func
 2007              	HAL_JPEG_MspInit:
 2008              	.LFB138:
 600:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 2009              		.loc 1 600 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 0
 2012              		@ frame_needed = 0, uses_anonymous_args = 0
 2013              		@ link register save eliminated.
 2014              	.LVL256:
 2015 0000 7047     		bx	lr
 2016              		.cfi_endproc
 2017              	.LFE138:
 2019 0002 00BF     		.section	.text.HAL_JPEG_Init,"ax",%progbits
 2020              		.align	2
 2021              		.global	HAL_JPEG_Init
 2022              		.thumb
 2023              		.thumb_func
 2025              	HAL_JPEG_Init:
 2026              	.LFB136:
 475:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Note : these intermediate variables are used to avoid MISRA warning 
 2027              		.loc 1 475 0
 2028              		.cfi_startproc
 2029              		@ args = 0, pretend = 0, frame = 0
 2030              		@ frame_needed = 0, uses_anonymous_args = 0
 2031              	.LVL257:
 484:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2032              		.loc 1 484 0
 2033 0000 0028     		cmp	r0, #0
 2034 0002 54D0     		beq	.L146
 475:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Note : these intermediate variables are used to avoid MISRA warning 
 2035              		.loc 1 475 0
 2036 0004 10B5     		push	{r4, lr}
 2037              	.LCFI28:
 2038              		.cfi_def_cfa_offset 8
 2039              		.cfi_offset 4, -8
 2040              		.cfi_offset 14, -4
 2041 0006 82B0     		sub	sp, sp, #8
 2042              	.LCFI29:
 2043              		.cfi_def_cfa_offset 16
 2044 0008 0446     		mov	r4, r0
 489:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2045              		.loc 1 489 0
ARM GAS  /tmp/ccSvCFam.s 			page 99


 2046 000a 90F84930 		ldrb	r3, [r0, #73]	@ zero_extendqisi2
 2047 000e 13F0FF0F 		tst	r3, #255
 2048 0012 04D1     		bne	.L144
 492:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2049              		.loc 1 492 0
 2050 0014 0023     		movs	r3, #0
 2051 0016 80F84830 		strb	r3, [r0, #72]
 495:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2052              		.loc 1 495 0
 2053 001a FFF7FEFF 		bl	HAL_JPEG_MspInit
 2054              	.LVL258:
 2055              	.L144:
 499:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2056              		.loc 1 499 0
 2057 001e 0223     		movs	r3, #2
 2058 0020 84F84930 		strb	r3, [r4, #73]
 502:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2059              		.loc 1 502 0
 2060 0024 2268     		ldr	r2, [r4]
 2061 0026 136B     		ldr	r3, [r2, #48]
 2062 0028 43F00103 		orr	r3, r3, #1
 2063 002c 1363     		str	r3, [r2, #48]
 505:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2064              		.loc 1 505 0
 2065 002e 2268     		ldr	r2, [r4]
 2066 0030 1368     		ldr	r3, [r2]
 2067 0032 23F00103 		bic	r3, r3, #1
 2068 0036 1360     		str	r3, [r2]
 508:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2069              		.loc 1 508 0
 2070 0038 2268     		ldr	r2, [r4]
 2071 003a 136B     		ldr	r3, [r2, #48]
 2072 003c 23F07E03 		bic	r3, r3, #126
 2073 0040 1363     		str	r3, [r2, #48]
 511:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2074              		.loc 1 511 0
 2075 0042 2268     		ldr	r2, [r4]
 2076 0044 136B     		ldr	r3, [r2, #48]
 2077 0046 23F4C053 		bic	r3, r3, #6144
 2078 004a 1363     		str	r3, [r2, #48]
 514:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CR |= JPEG_CR_OFF;  
 2079              		.loc 1 514 0
 2080 004c 2268     		ldr	r2, [r4]
 2081 004e 136B     		ldr	r3, [r2, #48]
 2082 0050 43F40053 		orr	r3, r3, #8192
 2083 0054 1363     		str	r3, [r2, #48]
 515:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2084              		.loc 1 515 0
 2085 0056 2268     		ldr	r2, [r4]
 2086 0058 136B     		ldr	r3, [r2, #48]
 2087 005a 43F48043 		orr	r3, r3, #16384
 2088 005e 1363     		str	r3, [r2, #48]
 518:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2089              		.loc 1 518 0
 2090 0060 2268     		ldr	r2, [r4]
 2091 0062 936B     		ldr	r3, [r2, #56]
 2092 0064 43F06003 		orr	r3, r3, #96
ARM GAS  /tmp/ccSvCFam.s 			page 100


 2093 0068 9363     		str	r3, [r2, #56]
 520:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->QuantTable1 = (uint8_t *)JPEG_CHROM_QuantTable;
 2094              		.loc 1 520 0
 2095 006a 144B     		ldr	r3, .L149
 2096 006c A363     		str	r3, [r4, #56]
 521:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->QuantTable2 = NULL;
 2097              		.loc 1 521 0
 2098 006e 144B     		ldr	r3, .L149+4
 2099 0070 E363     		str	r3, [r4, #60]
 522:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->QuantTable3 = NULL;
 2100              		.loc 1 522 0
 2101 0072 0023     		movs	r3, #0
 2102 0074 2364     		str	r3, [r4, #64]
 523:HALLIB/Src/stm32f7xx_hal_jpeg.c ****    
 2103              		.loc 1 523 0
 2104 0076 6364     		str	r3, [r4, #68]
 526:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2105              		.loc 1 526 0
 2106 0078 124B     		ldr	r3, .L149+8
 2107 007a 0093     		str	r3, [sp]
 2108 007c 124B     		ldr	r3, .L149+12
 2109 007e 134A     		ldr	r2, .L149+16
 2110 0080 1349     		ldr	r1, .L149+20
 2111 0082 2046     		mov	r0, r4
 2112 0084 FFF7FEFF 		bl	JPEG_Set_HuffEnc_Mem
 2113              	.LVL259:
 2114 0088 0346     		mov	r3, r0
 2115 008a 10B1     		cbz	r0, .L145
 528:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2116              		.loc 1 528 0
 2117 008c 0123     		movs	r3, #1
 2118 008e E364     		str	r3, [r4, #76]
 530:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2119              		.loc 1 530 0
 2120 0090 10E0     		b	.L143
 2121              	.L145:
 534:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2122              		.loc 1 534 0
 2123 0092 2168     		ldr	r1, [r4]
 2124 0094 4A68     		ldr	r2, [r1, #4]
 2125 0096 42F48072 		orr	r2, r2, #256
 2126 009a 4A60     		str	r2, [r1, #4]
 537:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegOutCount = 0;
 2127              		.loc 1 537 0
 2128 009c 0022     		movs	r2, #0
 2129 009e E261     		str	r2, [r4, #28]
 538:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2130              		.loc 1 538 0
 2131 00a0 2262     		str	r2, [r4, #32]
 541:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2132              		.loc 1 541 0
 2133 00a2 0121     		movs	r1, #1
 2134 00a4 84F84910 		strb	r1, [r4, #73]
 544:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2135              		.loc 1 544 0
 2136 00a8 E264     		str	r2, [r4, #76]
 547:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
ARM GAS  /tmp/ccSvCFam.s 			page 101


 2137              		.loc 1 547 0
 2138 00aa 2265     		str	r2, [r4, #80]
 550:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 2139              		.loc 1 550 0
 2140 00ac 02E0     		b	.L143
 2141              	.LVL260:
 2142              	.L146:
 2143              	.LCFI30:
 2144              		.cfi_def_cfa_offset 0
 2145              		.cfi_restore 4
 2146              		.cfi_restore 14
 486:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2147              		.loc 1 486 0
 2148 00ae 0123     		movs	r3, #1
 551:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2149              		.loc 1 551 0
 2150 00b0 1846     		mov	r0, r3
 2151              	.LVL261:
 2152 00b2 7047     		bx	lr
 2153              	.LVL262:
 2154              	.L143:
 2155              	.LCFI31:
 2156              		.cfi_def_cfa_offset 16
 2157              		.cfi_offset 4, -8
 2158              		.cfi_offset 14, -4
 2159 00b4 1846     		mov	r0, r3
 2160 00b6 02B0     		add	sp, sp, #8
 2161              	.LCFI32:
 2162              		.cfi_def_cfa_offset 8
 2163              		@ sp needed
 2164 00b8 10BD     		pop	{r4, pc}
 2165              	.LVL263:
 2166              	.L150:
 2167 00ba 00BF     		.align	2
 2168              	.L149:
 2169 00bc 00000000 		.word	.LANCHOR1
 2170 00c0 00000000 		.word	.LANCHOR2
 2171 00c4 00000000 		.word	.LANCHOR6
 2172 00c8 00000000 		.word	.LANCHOR3
 2173 00cc 00000000 		.word	.LANCHOR4
 2174 00d0 00000000 		.word	.LANCHOR5
 2175              		.cfi_endproc
 2176              	.LFE136:
 2178              		.section	.text.HAL_JPEG_MspDeInit,"ax",%progbits
 2179              		.align	2
 2180              		.weak	HAL_JPEG_MspDeInit
 2181              		.thumb
 2182              		.thumb_func
 2184              	HAL_JPEG_MspDeInit:
 2185              	.LFB139:
 616:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 2186              		.loc 1 616 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 0, uses_anonymous_args = 0
 2190              		@ link register save eliminated.
 2191              	.LVL264:
ARM GAS  /tmp/ccSvCFam.s 			page 102


 2192 0000 7047     		bx	lr
 2193              		.cfi_endproc
 2194              	.LFE139:
 2196 0002 00BF     		.section	.text.HAL_JPEG_DeInit,"ax",%progbits
 2197              		.align	2
 2198              		.global	HAL_JPEG_DeInit
 2199              		.thumb
 2200              		.thumb_func
 2202              	HAL_JPEG_DeInit:
 2203              	.LFB137:
 560:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the JPEG handle allocation */
 2204              		.loc 1 560 0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 0
 2207              		@ frame_needed = 0, uses_anonymous_args = 0
 2208              	.LVL265:
 562:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2209              		.loc 1 562 0
 2210 0000 80B1     		cbz	r0, .L154
 560:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the JPEG handle allocation */
 2211              		.loc 1 560 0
 2212 0002 10B5     		push	{r4, lr}
 2213              	.LCFI33:
 2214              		.cfi_def_cfa_offset 8
 2215              		.cfi_offset 4, -8
 2216              		.cfi_offset 14, -4
 2217 0004 0446     		mov	r4, r0
 568:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2218              		.loc 1 568 0
 2219 0006 FFF7FEFF 		bl	HAL_JPEG_MspDeInit
 2220              	.LVL266:
 571:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2221              		.loc 1 571 0
 2222 000a 0223     		movs	r3, #2
 2223 000c 84F84930 		strb	r3, [r4, #73]
 574:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2224              		.loc 1 574 0
 2225 0010 0020     		movs	r0, #0
 2226 0012 E064     		str	r0, [r4, #76]
 577:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegOutCount = 0;
 2227              		.loc 1 577 0
 2228 0014 E061     		str	r0, [r4, #28]
 578:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2229              		.loc 1 578 0
 2230 0016 2062     		str	r0, [r4, #32]
 581:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2231              		.loc 1 581 0
 2232 0018 84F84900 		strb	r0, [r4, #73]
 584:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2233              		.loc 1 584 0
 2234 001c 2065     		str	r0, [r4, #80]
 587:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2235              		.loc 1 587 0
 2236 001e 84F84800 		strb	r0, [r4, #72]
 590:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 2237              		.loc 1 590 0
 2238 0022 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccSvCFam.s 			page 103


 2239              	.LVL267:
 2240              	.L154:
 2241              	.LCFI34:
 2242              		.cfi_def_cfa_offset 0
 2243              		.cfi_restore 4
 2244              		.cfi_restore 14
 564:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2245              		.loc 1 564 0
 2246 0024 0120     		movs	r0, #1
 2247              	.LVL268:
 2248 0026 7047     		bx	lr
 2249              		.cfi_endproc
 2250              	.LFE137:
 2252              		.section	.text.HAL_JPEG_ConfigEncoding,"ax",%progbits
 2253              		.align	2
 2254              		.global	HAL_JPEG_ConfigEncoding
 2255              		.thumb
 2256              		.thumb_func
 2258              	HAL_JPEG_ConfigEncoding:
 2259              	.LFB140:
 656:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t error = HAL_OK;
 2260              		.loc 1 656 0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 0
 2263              		@ frame_needed = 0, uses_anonymous_args = 0
 2264              	.LVL269:
 661:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2265              		.loc 1 661 0
 2266 0000 0029     		cmp	r1, #0
 2267 0002 18BF     		it	ne
 2268 0004 0028     		cmpne	r0, #0
 2269 0006 00F0FB80 		beq	.L167
 656:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t error = HAL_OK;
 2270              		.loc 1 656 0
 2271 000a 38B5     		push	{r3, r4, r5, lr}
 2272              	.LCFI35:
 2273              		.cfi_def_cfa_offset 16
 2274              		.cfi_offset 3, -16
 2275              		.cfi_offset 4, -12
 2276              		.cfi_offset 5, -8
 2277              		.cfi_offset 14, -4
 2278 000c 0A46     		mov	r2, r1
 673:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2279              		.loc 1 673 0
 2280 000e 90F84810 		ldrb	r1, [r0, #72]	@ zero_extendqisi2
 2281              	.LVL270:
 2282 0012 0129     		cmp	r1, #1
 2283 0014 00F0F680 		beq	.L168
 673:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2284              		.loc 1 673 0 is_stmt 0 discriminator 2
 2285 0018 0121     		movs	r1, #1
 2286 001a 80F84810 		strb	r1, [r0, #72]
 675:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {      
 2287              		.loc 1 675 0 is_stmt 1 discriminator 2
 2288 001e 90F84910 		ldrb	r1, [r0, #73]	@ zero_extendqisi2
 2289 0022 C9B2     		uxtb	r1, r1
 2290 0024 0129     		cmp	r1, #1
ARM GAS  /tmp/ccSvCFam.s 			page 104


 2291 0026 40F0E680 		bne	.L159
 2292 002a 0446     		mov	r4, r0
 677:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2293              		.loc 1 677 0
 2294 002c 0223     		movs	r3, #2
 2295 002e 80F84930 		strb	r3, [r0, #73]
 679:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ChromaSubsampling   =  pConf->ChromaSubsampling; 
 2296              		.loc 1 679 0
 2297 0032 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2298 0034 0371     		strb	r3, [r0, #4]
 680:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ImageHeight         =  pConf->ImageHeight;
 2299              		.loc 1 680 0
 2300 0036 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 2301 0038 4371     		strb	r3, [r0, #5]
 681:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ImageWidth          =  pConf->ImageWidth; 
 2302              		.loc 1 681 0
 2303 003a 5368     		ldr	r3, [r2, #4]
 2304 003c 8360     		str	r3, [r0, #8]
 682:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Conf.ImageQuality        =  pConf->ImageQuality;     
 2305              		.loc 1 682 0
 2306 003e 9368     		ldr	r3, [r2, #8]
 2307 0040 C360     		str	r3, [r0, #12]
 683:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2308              		.loc 1 683 0
 2309 0042 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 2310 0044 0374     		strb	r3, [r0, #16]
 686:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2311              		.loc 1 686 0
 2312 0046 0268     		ldr	r2, [r0]
 2313              	.LVL271:
 2314 0048 5368     		ldr	r3, [r2, #4]
 2315 004a 23F03003 		bic	r3, r3, #48
 2316 004e 5360     		str	r3, [r2, #4]
 689:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {        
 2317              		.loc 1 689 0
 2318 0050 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2319 0052 4BB9     		cbnz	r3, .L160
 692:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 2320              		.loc 1 692 0
 2321 0054 4371     		strb	r3, [r0, #5]
 694:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /* Set quantization table 0*/
 2322              		.loc 1 694 0
 2323 0056 FFF7FEFF 		bl	JPEG_SetColorGrayScale
 2324              	.LVL272:
 696:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 2325              		.loc 1 696 0
 2326 005a 2268     		ldr	r2, [r4]
 2327 005c 5032     		adds	r2, r2, #80
 2328 005e A16B     		ldr	r1, [r4, #56]
 2329 0060 2046     		mov	r0, r4
 2330 0062 FFF7FEFF 		bl	JPEG_Set_Quantization_Mem
 2331              	.LVL273:
 2332 0066 81E0     		b	.L161
 2333              	.LVL274:
 2334              	.L160:
 698:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 2335              		.loc 1 698 0
ARM GAS  /tmp/ccSvCFam.s 			page 105


 2336 0068 102B     		cmp	r3, #16
 2337 006a 41D1     		bne	.L162
 704:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 2338              		.loc 1 704 0
 2339 006c 0268     		ldr	r2, [r0]
 2340 006e 5368     		ldr	r3, [r2, #4]
 2341 0070 43F01003 		orr	r3, r3, #16
 2342 0074 5360     		str	r3, [r2, #4]
 706:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 2343              		.loc 1 706 0
 2344 0076 FFF7FEFF 		bl	JPEG_SetColorYCBCR
 2345              	.LVL275:
 709:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /*By default quantization table 0 for component 0 and quantization table 1 for both compone
 2346              		.loc 1 709 0
 2347 007a 2268     		ldr	r2, [r4]
 2348 007c 5032     		adds	r2, r2, #80
 2349 007e A16B     		ldr	r1, [r4, #56]
 2350 0080 2046     		mov	r0, r4
 2351 0082 FFF7FEFF 		bl	JPEG_Set_Quantization_Mem
 2352              	.LVL276:
 2353 0086 0546     		mov	r5, r0
 2354              	.LVL277:
 711:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2355              		.loc 1 711 0
 2356 0088 2268     		ldr	r2, [r4]
 2357 008a 9032     		adds	r2, r2, #144
 2358 008c E16B     		ldr	r1, [r4, #60]
 2359 008e 2046     		mov	r0, r4
 2360 0090 FFF7FEFF 		bl	JPEG_Set_Quantization_Mem
 2361              	.LVL278:
 2362 0094 2843     		orrs	r0, r0, r5
 2363 0096 C5B2     		uxtb	r5, r0
 2364              	.LVL279:
 2365 0098 2846     		mov	r0, r5
 2366              	.LVL280:
 713:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 2367              		.loc 1 713 0
 2368 009a 236D     		ldr	r3, [r4, #80]
 2369 009c 13F4804F 		tst	r3, #16384
 2370 00a0 64D0     		beq	.L161
 716:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR1 |= JPEG_CONFR1_COLORSPACE_1;
 2371              		.loc 1 716 0
 2372 00a2 2268     		ldr	r2, [r4]
 2373 00a4 5368     		ldr	r3, [r2, #4]
 2374 00a6 23F03003 		bic	r3, r3, #48
 2375 00aa 5360     		str	r3, [r2, #4]
 717:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 2376              		.loc 1 717 0
 2377 00ac 2268     		ldr	r2, [r4]
 2378 00ae 5368     		ldr	r3, [r2, #4]
 2379 00b0 43F02003 		orr	r3, r3, #32
 2380 00b4 5360     		str	r3, [r2, #4]
 719:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
 2381              		.loc 1 719 0
 2382 00b6 2268     		ldr	r2, [r4]
 2383 00b8 D032     		adds	r2, r2, #208
 2384 00ba 216C     		ldr	r1, [r4, #64]
ARM GAS  /tmp/ccSvCFam.s 			page 106


 2385 00bc 2046     		mov	r0, r4
 2386              	.LVL281:
 2387 00be FFF7FEFF 		bl	JPEG_Set_Quantization_Mem
 2388              	.LVL282:
 2389 00c2 2843     		orrs	r0, r0, r5
 2390 00c4 C0B2     		uxtb	r0, r0
 2391              	.LVL283:
 722:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR5 |=  JPEG_CONFR5_QT_0; 
 2392              		.loc 1 722 0
 2393 00c6 2268     		ldr	r2, [r4]
 2394 00c8 5369     		ldr	r3, [r2, #20]
 2395 00ca 23F00C03 		bic	r3, r3, #12
 2396 00ce 5361     		str	r3, [r2, #20]
 723:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 2397              		.loc 1 723 0
 2398 00d0 2268     		ldr	r2, [r4]
 2399 00d2 5369     		ldr	r3, [r2, #20]
 2400 00d4 43F00403 		orr	r3, r3, #4
 2401 00d8 5361     		str	r3, [r2, #20]
 726:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->Instance->CONFR6 |=  JPEG_CONFR6_QT_1;                   
 2402              		.loc 1 726 0
 2403 00da 2268     		ldr	r2, [r4]
 2404 00dc 9369     		ldr	r3, [r2, #24]
 2405 00de 23F00C03 		bic	r3, r3, #12
 2406 00e2 9361     		str	r3, [r2, #24]
 727:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
 2407              		.loc 1 727 0
 2408 00e4 2268     		ldr	r2, [r4]
 2409 00e6 9369     		ldr	r3, [r2, #24]
 2410 00e8 43F00803 		orr	r3, r3, #8
 2411 00ec 9361     		str	r3, [r2, #24]
 2412 00ee 3DE0     		b	.L161
 2413              	.LVL284:
 2414              	.L162:
 730:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 2415              		.loc 1 730 0
 2416 00f0 302B     		cmp	r3, #48
 2417 00f2 3AD1     		bne	.L169
 732:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 2418              		.loc 1 732 0
 2419 00f4 FFF7FEFF 		bl	JPEG_SetColorCMYK
 2420              	.LVL285:
 735:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         /*By default quantization table 0 for All components*/      
 2421              		.loc 1 735 0
 2422 00f8 2268     		ldr	r2, [r4]
 2423 00fa 5032     		adds	r2, r2, #80
 2424 00fc A16B     		ldr	r1, [r4, #56]
 2425 00fe 2046     		mov	r0, r4
 2426 0100 FFF7FEFF 		bl	JPEG_Set_Quantization_Mem
 2427              	.LVL286:
 2428 0104 0546     		mov	r5, r0
 2429              	.LVL287:
 738:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 2430              		.loc 1 738 0
 2431 0106 236D     		ldr	r3, [r4, #80]
 2432 0108 13F4804F 		tst	r3, #16384
 2433 010c 2ED0     		beq	.L161
ARM GAS  /tmp/ccSvCFam.s 			page 107


 741:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 2434              		.loc 1 741 0
 2435 010e 2268     		ldr	r2, [r4]
 2436 0110 5368     		ldr	r3, [r2, #4]
 2437 0112 43F03003 		orr	r3, r3, #48
 2438 0116 5360     		str	r3, [r2, #4]
 743:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           error |= JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable2, (uint32_t *)(hjpeg->Instanc
 2439              		.loc 1 743 0
 2440 0118 2268     		ldr	r2, [r4]
 2441 011a 9032     		adds	r2, r2, #144
 2442 011c E16B     		ldr	r1, [r4, #60]
 2443 011e 2046     		mov	r0, r4
 2444              	.LVL288:
 2445 0120 FFF7FEFF 		bl	JPEG_Set_Quantization_Mem
 2446              	.LVL289:
 2447 0124 2843     		orrs	r0, r0, r5
 2448 0126 C5B2     		uxtb	r5, r0
 2449              	.LVL290:
 744:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           error |= JPEG_Set_Quantization_Mem(hjpeg, hjpeg->QuantTable3, (uint32_t *)(hjpeg->Instanc
 2450              		.loc 1 744 0
 2451 0128 2268     		ldr	r2, [r4]
 2452 012a D032     		adds	r2, r2, #208
 2453 012c 216C     		ldr	r1, [r4, #64]
 2454 012e 2046     		mov	r0, r4
 2455 0130 FFF7FEFF 		bl	JPEG_Set_Quantization_Mem
 2456              	.LVL291:
 2457 0134 2843     		orrs	r0, r0, r5
 2458 0136 C5B2     		uxtb	r5, r0
 2459              	.LVL292:
 745:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 2460              		.loc 1 745 0
 2461 0138 2268     		ldr	r2, [r4]
 2462 013a 02F58872 		add	r2, r2, #272
 2463 013e 616C     		ldr	r1, [r4, #68]
 2464 0140 2046     		mov	r0, r4
 2465 0142 FFF7FEFF 		bl	JPEG_Set_Quantization_Mem
 2466              	.LVL293:
 2467 0146 2843     		orrs	r0, r0, r5
 2468 0148 C0B2     		uxtb	r0, r0
 2469              	.LVL294:
 748:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 2470              		.loc 1 748 0
 2471 014a 2268     		ldr	r2, [r4]
 2472 014c 5369     		ldr	r3, [r2, #20]
 2473 014e 43F00403 		orr	r3, r3, #4
 2474 0152 5361     		str	r3, [r2, #20]
 751:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           
 2475              		.loc 1 751 0
 2476 0154 2268     		ldr	r2, [r4]
 2477 0156 9369     		ldr	r3, [r2, #24]
 2478 0158 43F00803 		orr	r3, r3, #8
 2479 015c 9361     		str	r3, [r2, #24]
 754:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
 2480              		.loc 1 754 0
 2481 015e 2268     		ldr	r2, [r4]
 2482 0160 D369     		ldr	r3, [r2, #28]
 2483 0162 43F00C03 		orr	r3, r3, #12
ARM GAS  /tmp/ccSvCFam.s 			page 108


 2484 0166 D361     		str	r3, [r2, #28]
 2485 0168 00E0     		b	.L161
 2486              	.LVL295:
 2487              	.L169:
 657:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t numberMCU, hfactor, vfactor,hMCU, vMCU;  
 2488              		.loc 1 657 0
 2489 016a 0020     		movs	r0, #0
 2490              	.LVL296:
 2491              	.L161:
 758:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 2492              		.loc 1 758 0
 2493 016c 40B1     		cbz	r0, .L163
 760:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 2494              		.loc 1 760 0
 2495 016e 0223     		movs	r3, #2
 2496 0170 E364     		str	r3, [r4, #76]
 763:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 2497              		.loc 1 763 0
 2498 0172 0023     		movs	r3, #0
 2499 0174 84F84830 		strb	r3, [r4, #72]
 766:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 2500              		.loc 1 766 0
 2501 0178 0120     		movs	r0, #1
 2502              	.LVL297:
 2503 017a 84F84900 		strb	r0, [r4, #73]
 768:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 2504              		.loc 1 768 0
 2505 017e 38BD     		pop	{r3, r4, r5, pc}
 2506              	.LVL298:
 2507              	.L163:
 771:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       MODIFY_REG(hjpeg->Instance->CONFR3, JPEG_CONFR3_XSIZE, ((hjpeg->Conf.ImageWidth & 0x0000FFFF)
 2508              		.loc 1 771 0
 2509 0180 2268     		ldr	r2, [r4]
 2510 0182 5368     		ldr	r3, [r2, #4]
 2511 0184 9BB2     		uxth	r3, r3
 2512 0186 A168     		ldr	r1, [r4, #8]
 2513 0188 43EA0143 		orr	r3, r3, r1, lsl #16
 2514 018c 5360     		str	r3, [r2, #4]
 772:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2515              		.loc 1 772 0
 2516 018e 2268     		ldr	r2, [r4]
 2517 0190 D368     		ldr	r3, [r2, #12]
 2518 0192 9BB2     		uxth	r3, r3
 2519 0194 E168     		ldr	r1, [r4, #12]
 2520 0196 43EA0143 		orr	r3, r3, r1, lsl #16
 2521 019a D360     		str	r3, [r2, #12]
 774:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 2522              		.loc 1 774 0
 2523 019c 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 2524 019e 012B     		cmp	r3, #1
 2525 01a0 04D0     		beq	.L170
 779:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 2526              		.loc 1 779 0
 2527 01a2 022B     		cmp	r3, #2
 2528 01a4 05D1     		bne	.L171
 782:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }   
 2529              		.loc 1 782 0
ARM GAS  /tmp/ccSvCFam.s 			page 109


 2530 01a6 0822     		movs	r2, #8
 781:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         vfactor = 8;        
 2531              		.loc 1 781 0
 2532 01a8 1021     		movs	r1, #16
 2533 01aa 04E0     		b	.L164
 2534              	.L170:
 777:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 2535              		.loc 1 777 0
 2536 01ac 1022     		movs	r2, #16
 776:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         vfactor = 16;
 2537              		.loc 1 776 0
 2538 01ae 1146     		mov	r1, r2
 2539 01b0 01E0     		b	.L164
 2540              	.L171:
 787:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }        
 2541              		.loc 1 787 0
 2542 01b2 0822     		movs	r2, #8
 786:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         vfactor = 8;          
 2543              		.loc 1 786 0
 2544 01b4 1146     		mov	r1, r2
 2545              	.L164:
 2546              	.LVL299:
 790:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if((hjpeg->Conf.ImageWidth % hfactor) != 0)
 2547              		.loc 1 790 0
 2548 01b6 E368     		ldr	r3, [r4, #12]
 2549 01b8 B3FBF1F0 		udiv	r0, r3, r1
 2550              	.LVL300:
 791:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 2551              		.loc 1 791 0
 2552 01bc 01FB1031 		mls	r1, r1, r0, r3
 2553              	.LVL301:
 2554 01c0 01B1     		cbz	r1, .L165
 793:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 2555              		.loc 1 793 0
 2556 01c2 0130     		adds	r0, r0, #1
 2557              	.LVL302:
 2558              	.L165:
 796:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       if((hjpeg->Conf.ImageHeight % vfactor) != 0)
 2559              		.loc 1 796 0
 2560 01c4 A168     		ldr	r1, [r4, #8]
 2561 01c6 B1FBF2F3 		udiv	r3, r1, r2
 2562              	.LVL303:
 797:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 2563              		.loc 1 797 0
 2564 01ca 02FB1312 		mls	r2, r2, r3, r1
 2565              	.LVL304:
 2566 01ce 02B1     		cbz	r2, .L166
 799:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 2567              		.loc 1 799 0
 2568 01d0 0133     		adds	r3, r3, #1
 2569              	.LVL305:
 2570              	.L166:
 802:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /* Set the number of MCU*/
 2571              		.loc 1 802 0
 2572 01d2 03FB00F3 		mul	r3, r3, r0
 2573              	.LVL306:
 2574 01d6 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccSvCFam.s 			page 110


 2575              	.LVL307:
 804:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2576              		.loc 1 804 0
 2577 01d8 2268     		ldr	r2, [r4]
 2578 01da 23F07C43 		bic	r3, r3, #-67108864
 2579              	.LVL308:
 2580 01de 9360     		str	r3, [r2, #8]
 806:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2581              		.loc 1 806 0
 2582 01e0 236D     		ldr	r3, [r4, #80]
 2583 01e2 43F48073 		orr	r3, r3, #256
 2584 01e6 2365     		str	r3, [r4, #80]
 809:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2585              		.loc 1 809 0
 2586 01e8 0020     		movs	r0, #0
 2587              	.LVL309:
 2588 01ea 84F84800 		strb	r0, [r4, #72]
 812:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2589              		.loc 1 812 0
 2590 01ee 0123     		movs	r3, #1
 2591 01f0 84F84930 		strb	r3, [r4, #73]
 815:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 2592              		.loc 1 815 0
 2593 01f4 38BD     		pop	{r3, r4, r5, pc}
 2594              	.LVL310:
 2595              	.L159:
 820:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2596              		.loc 1 820 0
 2597 01f6 0022     		movs	r2, #0
 2598              	.LVL311:
 2599 01f8 80F84820 		strb	r2, [r0, #72]
 823:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 2600              		.loc 1 823 0
 2601 01fc 0220     		movs	r0, #2
 2602              	.LVL312:
 2603 01fe 38BD     		pop	{r3, r4, r5, pc}
 2604              	.LVL313:
 2605              	.L167:
 2606              	.LCFI36:
 2607              		.cfi_def_cfa_offset 0
 2608              		.cfi_restore 3
 2609              		.cfi_restore 4
 2610              		.cfi_restore 5
 2611              		.cfi_restore 14
 663:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2612              		.loc 1 663 0
 2613 0200 0120     		movs	r0, #1
 2614              	.LVL314:
 826:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2615              		.loc 1 826 0
 2616 0202 7047     		bx	lr
 2617              	.LVL315:
 2618              	.L168:
 2619              	.LCFI37:
 2620              		.cfi_def_cfa_offset 16
 2621              		.cfi_offset 3, -16
 2622              		.cfi_offset 4, -12
ARM GAS  /tmp/ccSvCFam.s 			page 111


 2623              		.cfi_offset 5, -8
 2624              		.cfi_offset 14, -4
 673:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 2625              		.loc 1 673 0
 2626 0204 0220     		movs	r0, #2
 2627              	.LVL316:
 826:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2628              		.loc 1 826 0
 2629 0206 38BD     		pop	{r3, r4, r5, pc}
 2630              		.cfi_endproc
 2631              	.LFE140:
 2633              		.section	.text.HAL_JPEG_GetInfo,"ax",%progbits
 2634              		.align	2
 2635              		.global	HAL_JPEG_GetInfo
 2636              		.thumb
 2637              		.thumb_func
 2639              	HAL_JPEG_GetInfo:
 2640              	.LFB141:
 837:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t yblockNb, cBblockNb, cRblockNb;
 2641              		.loc 1 837 0
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 0
 2644              		@ frame_needed = 0, uses_anonymous_args = 0
 2645              	.LVL317:
 841:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2646              		.loc 1 841 0
 2647 0000 0029     		cmp	r1, #0
 2648 0002 18BF     		it	ne
 2649 0004 0028     		cmpne	r0, #0
 2650 0006 5DD0     		beq	.L183
 837:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t yblockNb, cBblockNb, cRblockNb;
 2651              		.loc 1 837 0
 2652 0008 38B5     		push	{r3, r4, r5, lr}
 2653              	.LCFI38:
 2654              		.cfi_def_cfa_offset 16
 2655              		.cfi_offset 3, -16
 2656              		.cfi_offset 4, -12
 2657              		.cfi_offset 5, -8
 2658              		.cfi_offset 14, -4
 2659 000a 0246     		mov	r2, r0
 2660 000c 0B46     		mov	r3, r1
 847:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2661              		.loc 1 847 0
 2662 000e 0068     		ldr	r0, [r0]
 2663              	.LVL318:
 2664 0010 4168     		ldr	r1, [r0, #4]
 2665              	.LVL319:
 2666 0012 01F00301 		and	r1, r1, #3
 2667 0016 0229     		cmp	r1, #2
 2668 0018 02D1     		bne	.L175
 849:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }    
 2669              		.loc 1 849 0
 2670 001a 1021     		movs	r1, #16
 2671 001c 1970     		strb	r1, [r3]
 2672 001e 0DE0     		b	.L176
 2673              	.L175:
 851:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
ARM GAS  /tmp/ccSvCFam.s 			page 112


 2674              		.loc 1 851 0
 2675 0020 4168     		ldr	r1, [r0, #4]
 2676 0022 11F0030F 		tst	r1, #3
 2677 0026 02D1     		bne	.L177
 853:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2678              		.loc 1 853 0
 2679 0028 0021     		movs	r1, #0
 2680 002a 1970     		strb	r1, [r3]
 2681 002c 06E0     		b	.L176
 2682              	.L177:
 855:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2683              		.loc 1 855 0
 2684 002e 4168     		ldr	r1, [r0, #4]
 2685 0030 01F00301 		and	r1, r1, #3
 2686 0034 0329     		cmp	r1, #3
 2687 0036 01D1     		bne	.L176
 857:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2688              		.loc 1 857 0
 2689 0038 3021     		movs	r1, #48
 2690 003a 1970     		strb	r1, [r3]
 2691              	.L176:
 860:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000U) >> 16;
 2692              		.loc 1 860 0
 2693 003c 1168     		ldr	r1, [r2]
 2694 003e 4968     		ldr	r1, [r1, #4]
 2695 0040 090C     		lsrs	r1, r1, #16
 2696 0042 5960     		str	r1, [r3, #4]
 861:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2697              		.loc 1 861 0
 2698 0044 1168     		ldr	r1, [r2]
 2699 0046 C968     		ldr	r1, [r1, #12]
 2700 0048 090C     		lsrs	r1, r1, #16
 2701 004a 9960     		str	r1, [r3, #8]
 863:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2702              		.loc 1 863 0
 2703 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2704 004e 3029     		cmp	r1, #48
 2705 0050 18BF     		it	ne
 2706 0052 1029     		cmpne	r1, #16
 2707 0054 2DD1     		bne	.L178
 865:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
 2708              		.loc 1 865 0
 2709 0056 1068     		ldr	r0, [r2]
 2710 0058 0169     		ldr	r1, [r0, #16]
 2711 005a C1F30311 		ubfx	r1, r1, #4, #4
 2712              	.LVL320:
 866:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
 2713              		.loc 1 866 0
 2714 005e 4569     		ldr	r5, [r0, #20]
 2715              	.LVL321:
 867:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2716              		.loc 1 867 0
 2717 0060 8469     		ldr	r4, [r0, #24]
 2718 0062 C4F30314 		ubfx	r4, r4, #4, #4
 2719              	.LVL322:
 869:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 2720              		.loc 1 869 0
ARM GAS  /tmp/ccSvCFam.s 			page 113


 2721 0066 15F0F00F 		tst	r5, #240
 2722 006a 0CBF     		ite	eq
 2723 006c 0120     		moveq	r0, #1
 2724 006e 0020     		movne	r0, #0
 2725 0070 0129     		cmp	r1, #1
 2726 0072 14BF     		ite	ne
 2727 0074 0025     		movne	r5, #0
 2728 0076 00F00105 		andeq	r5, r0, #1
 2729              	.LVL323:
 2730 007a 1DB1     		cbz	r5, .L179
 869:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 2731              		.loc 1 869 0 is_stmt 0 discriminator 1
 2732 007c 14B9     		cbnz	r4, .L179
 871:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 2733              		.loc 1 871 0 is_stmt 1
 2734 007e 0221     		movs	r1, #2
 2735              	.LVL324:
 2736 0080 5970     		strb	r1, [r3, #1]
 2737 0082 18E0     		b	.L180
 2738              	.LVL325:
 2739              	.L179:
 873:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 2740              		.loc 1 873 0
 2741 0084 0029     		cmp	r1, #0
 2742 0086 14BF     		ite	ne
 2743 0088 0025     		movne	r5, #0
 2744 008a 00F00105 		andeq	r5, r0, #1
 2745 008e 1DB1     		cbz	r5, .L181
 873:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 2746              		.loc 1 873 0 is_stmt 0 discriminator 1
 2747 0090 14B9     		cbnz	r4, .L181
 875:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 2748              		.loc 1 875 0 is_stmt 1
 2749 0092 0021     		movs	r1, #0
 2750              	.LVL326:
 2751 0094 5970     		strb	r1, [r3, #1]
 2752 0096 0EE0     		b	.L180
 2753              	.LVL327:
 2754              	.L181:
 877:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 2755              		.loc 1 877 0
 2756 0098 0329     		cmp	r1, #3
 2757 009a 14BF     		ite	ne
 2758 009c 0021     		movne	r1, #0
 2759 009e 00F00101 		andeq	r1, r0, #1
 2760              	.LVL328:
 2761 00a2 19B1     		cbz	r1, .L182
 877:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 2762              		.loc 1 877 0 is_stmt 0 discriminator 1
 2763 00a4 14B9     		cbnz	r4, .L182
 879:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 2764              		.loc 1 879 0 is_stmt 1
 2765 00a6 0121     		movs	r1, #1
 2766 00a8 5970     		strb	r1, [r3, #1]
 2767 00aa 04E0     		b	.L180
 2768              	.L182:
 883:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     } 
ARM GAS  /tmp/ccSvCFam.s 			page 114


 2769              		.loc 1 883 0
 2770 00ac 0021     		movs	r1, #0
 2771 00ae 5970     		strb	r1, [r3, #1]
 2772 00b0 01E0     		b	.L180
 2773              	.LVL329:
 2774              	.L178:
 888:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2775              		.loc 1 888 0
 2776 00b2 0021     		movs	r1, #0
 2777 00b4 5970     		strb	r1, [r3, #1]
 2778              	.L180:
 2779 00b6 1C46     		mov	r4, r3
 2780 00b8 1046     		mov	r0, r2
 891:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2781              		.loc 1 891 0
 2782 00ba FFF7FEFF 		bl	JPEG_GetQuality
 2783              	.LVL330:
 2784 00be 2073     		strb	r0, [r4, #12]
 894:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 2785              		.loc 1 894 0
 2786 00c0 0020     		movs	r0, #0
 2787 00c2 38BD     		pop	{r3, r4, r5, pc}
 2788              	.LVL331:
 2789              	.L183:
 2790              	.LCFI39:
 2791              		.cfi_def_cfa_offset 0
 2792              		.cfi_restore 3
 2793              		.cfi_restore 4
 2794              		.cfi_restore 5
 2795              		.cfi_restore 14
 843:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2796              		.loc 1 843 0
 2797 00c4 0120     		movs	r0, #1
 2798              	.LVL332:
 2799 00c6 7047     		bx	lr
 2800              		.cfi_endproc
 2801              	.LFE141:
 2803              		.section	.text.HAL_JPEG_EnableHeaderParsing,"ax",%progbits
 2804              		.align	2
 2805              		.global	HAL_JPEG_EnableHeaderParsing
 2806              		.thumb
 2807              		.thumb_func
 2809              	HAL_JPEG_EnableHeaderParsing:
 2810              	.LFB142:
 904:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process locked */
 2811              		.loc 1 904 0
 2812              		.cfi_startproc
 2813              		@ args = 0, pretend = 0, frame = 0
 2814              		@ frame_needed = 0, uses_anonymous_args = 0
 2815              		@ link register save eliminated.
 2816              	.LVL333:
 906:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2817              		.loc 1 906 0
 2818 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 2819 0004 012B     		cmp	r3, #1
 2820 0006 1CD0     		beq	.L189
 906:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
ARM GAS  /tmp/ccSvCFam.s 			page 115


 2821              		.loc 1 906 0 is_stmt 0 discriminator 2
 2822 0008 0123     		movs	r3, #1
 2823 000a 80F84830 		strb	r3, [r0, #72]
 908:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2824              		.loc 1 908 0 is_stmt 1 discriminator 2
 2825 000e 90F84930 		ldrb	r3, [r0, #73]	@ zero_extendqisi2
 2826 0012 DBB2     		uxtb	r3, r3
 2827 0014 012B     		cmp	r3, #1
 2828 0016 0FD1     		bne	.L188
 911:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2829              		.loc 1 911 0
 2830 0018 0223     		movs	r3, #2
 2831 001a 80F84930 		strb	r3, [r0, #73]
 914:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2832              		.loc 1 914 0
 2833 001e 0268     		ldr	r2, [r0]
 2834 0020 5368     		ldr	r3, [r2, #4]
 2835 0022 43F48073 		orr	r3, r3, #256
 2836 0026 5360     		str	r3, [r2, #4]
 917:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2837              		.loc 1 917 0
 2838 0028 0023     		movs	r3, #0
 2839 002a 80F84830 		strb	r3, [r0, #72]
 920:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2840              		.loc 1 920 0
 2841 002e 0122     		movs	r2, #1
 2842 0030 80F84920 		strb	r2, [r0, #73]
 922:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2843              		.loc 1 922 0
 2844 0034 1846     		mov	r0, r3
 2845              	.LVL334:
 2846 0036 7047     		bx	lr
 2847              	.LVL335:
 2848              	.L188:
 927:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2849              		.loc 1 927 0
 2850 0038 0023     		movs	r3, #0
 2851 003a 80F84830 		strb	r3, [r0, #72]
 929:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2852              		.loc 1 929 0
 2853 003e 0220     		movs	r0, #2
 2854              	.LVL336:
 2855 0040 7047     		bx	lr
 2856              	.LVL337:
 2857              	.L189:
 906:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2858              		.loc 1 906 0
 2859 0042 0220     		movs	r0, #2
 2860              	.LVL338:
 931:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2861              		.loc 1 931 0
 2862 0044 7047     		bx	lr
 2863              		.cfi_endproc
 2864              	.LFE142:
 2866              		.section	.text.HAL_JPEG_DisableHeaderParsing,"ax",%progbits
 2867              		.align	2
 2868              		.global	HAL_JPEG_DisableHeaderParsing
ARM GAS  /tmp/ccSvCFam.s 			page 116


 2869              		.thumb
 2870              		.thumb_func
 2872              	HAL_JPEG_DisableHeaderParsing:
 2873              	.LFB143:
 940:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process locked */
 2874              		.loc 1 940 0
 2875              		.cfi_startproc
 2876              		@ args = 0, pretend = 0, frame = 0
 2877              		@ frame_needed = 0, uses_anonymous_args = 0
 2878              		@ link register save eliminated.
 2879              	.LVL339:
 942:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2880              		.loc 1 942 0
 2881 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 2882 0004 012B     		cmp	r3, #1
 2883 0006 1CD0     		beq	.L193
 942:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2884              		.loc 1 942 0 is_stmt 0 discriminator 2
 2885 0008 0123     		movs	r3, #1
 2886 000a 80F84830 		strb	r3, [r0, #72]
 944:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2887              		.loc 1 944 0 is_stmt 1 discriminator 2
 2888 000e 90F84930 		ldrb	r3, [r0, #73]	@ zero_extendqisi2
 2889 0012 DBB2     		uxtb	r3, r3
 2890 0014 012B     		cmp	r3, #1
 2891 0016 0FD1     		bne	.L192
 947:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2892              		.loc 1 947 0
 2893 0018 0223     		movs	r3, #2
 2894 001a 80F84930 		strb	r3, [r0, #73]
 950:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2895              		.loc 1 950 0
 2896 001e 0268     		ldr	r2, [r0]
 2897 0020 5368     		ldr	r3, [r2, #4]
 2898 0022 23F48073 		bic	r3, r3, #256
 2899 0026 5360     		str	r3, [r2, #4]
 953:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2900              		.loc 1 953 0
 2901 0028 0023     		movs	r3, #0
 2902 002a 80F84830 		strb	r3, [r0, #72]
 956:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2903              		.loc 1 956 0
 2904 002e 0122     		movs	r2, #1
 2905 0030 80F84920 		strb	r2, [r0, #73]
 958:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2906              		.loc 1 958 0
 2907 0034 1846     		mov	r0, r3
 2908              	.LVL340:
 2909 0036 7047     		bx	lr
 2910              	.LVL341:
 2911              	.L192:
 963:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
 2912              		.loc 1 963 0
 2913 0038 0023     		movs	r3, #0
 2914 003a 80F84830 		strb	r3, [r0, #72]
 965:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2915              		.loc 1 965 0
ARM GAS  /tmp/ccSvCFam.s 			page 117


 2916 003e 0220     		movs	r0, #2
 2917              	.LVL342:
 2918 0040 7047     		bx	lr
 2919              	.LVL343:
 2920              	.L193:
 942:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2921              		.loc 1 942 0
 2922 0042 0220     		movs	r0, #2
 2923              	.LVL344:
 967:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 2924              		.loc 1 967 0
 2925 0044 7047     		bx	lr
 2926              		.cfi_endproc
 2927              	.LFE143:
 2929              		.section	.text.HAL_JPEG_SetUserQuantTables,"ax",%progbits
 2930              		.align	2
 2931              		.global	HAL_JPEG_SetUserQuantTables
 2932              		.thumb
 2933              		.thumb_func
 2935              	HAL_JPEG_SetUserQuantTables:
 2936              	.LFB144:
 987:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Process Locked */
 2937              		.loc 1 987 0
 2938              		.cfi_startproc
 2939              		@ args = 4, pretend = 0, frame = 0
 2940              		@ frame_needed = 0, uses_anonymous_args = 0
 2941              		@ link register save eliminated.
 2942              	.LVL345:
 2943 0000 10B4     		push	{r4}
 2944              	.LCFI40:
 2945              		.cfi_def_cfa_offset 4
 2946              		.cfi_offset 4, -4
 989:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2947              		.loc 1 989 0
 2948 0002 90F84840 		ldrb	r4, [r0, #72]	@ zero_extendqisi2
 2949 0006 012C     		cmp	r4, #1
 2950 0008 20D0     		beq	.L197
 989:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2951              		.loc 1 989 0 is_stmt 0 discriminator 2
 2952 000a 0124     		movs	r4, #1
 2953 000c 80F84840 		strb	r4, [r0, #72]
 991:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 2954              		.loc 1 991 0 is_stmt 1 discriminator 2
 2955 0010 90F84940 		ldrb	r4, [r0, #73]	@ zero_extendqisi2
 2956 0014 E4B2     		uxtb	r4, r4
 2957 0016 012C     		cmp	r4, #1
 2958 0018 13D1     		bne	.L196
 994:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2959              		.loc 1 994 0
 2960 001a 0224     		movs	r4, #2
 2961 001c 80F84940 		strb	r4, [r0, #73]
 996:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2962              		.loc 1 996 0
 2963 0020 046D     		ldr	r4, [r0, #80]
 2964 0022 44F48044 		orr	r4, r4, #16384
 2965 0026 0465     		str	r4, [r0, #80]
 998:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->QuantTable1 = QTable1;
ARM GAS  /tmp/ccSvCFam.s 			page 118


 2966              		.loc 1 998 0
 2967 0028 8163     		str	r1, [r0, #56]
 999:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->QuantTable2 = QTable2;
 2968              		.loc 1 999 0
 2969 002a C263     		str	r2, [r0, #60]
1000:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->QuantTable3 = QTable3;
 2970              		.loc 1 1000 0
 2971 002c 0364     		str	r3, [r0, #64]
1001:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2972              		.loc 1 1001 0
 2973 002e 019B     		ldr	r3, [sp, #4]
 2974              	.LVL346:
 2975 0030 4364     		str	r3, [r0, #68]
1004:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2976              		.loc 1 1004 0
 2977 0032 0023     		movs	r3, #0
 2978 0034 80F84830 		strb	r3, [r0, #72]
1007:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2979              		.loc 1 1007 0
 2980 0038 0122     		movs	r2, #1
 2981              	.LVL347:
 2982 003a 80F84920 		strb	r2, [r0, #73]
1010:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2983              		.loc 1 1010 0
 2984 003e 1846     		mov	r0, r3
 2985              	.LVL348:
 2986 0040 05E0     		b	.L195
 2987              	.LVL349:
 2988              	.L196:
1015:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 2989              		.loc 1 1015 0
 2990 0042 0023     		movs	r3, #0
 2991              	.LVL350:
 2992 0044 80F84830 		strb	r3, [r0, #72]
1017:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 2993              		.loc 1 1017 0
 2994 0048 0220     		movs	r0, #2
 2995              	.LVL351:
 2996 004a 00E0     		b	.L195
 2997              	.LVL352:
 2998              	.L197:
 989:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 2999              		.loc 1 989 0
 3000 004c 0220     		movs	r0, #2
 3001              	.LVL353:
 3002              	.L195:
1019:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3003              		.loc 1 1019 0
 3004 004e 5DF8044B 		ldr	r4, [sp], #4
 3005              	.LCFI41:
 3006              		.cfi_restore 4
 3007              		.cfi_def_cfa_offset 0
 3008              	.LVL354:
 3009 0052 7047     		bx	lr
 3010              		.cfi_endproc
 3011              	.LFE144:
 3013              		.section	.text.HAL_JPEG_Encode_IT,"ax",%progbits
ARM GAS  /tmp/ccSvCFam.s 			page 119


 3014              		.align	2
 3015              		.global	HAL_JPEG_Encode_IT
 3016              		.thumb
 3017              		.thumb_func
 3019              	HAL_JPEG_Encode_IT:
 3020              	.LFB147:
1264:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
 3021              		.loc 1 1264 0
 3022              		.cfi_startproc
 3023              		@ args = 4, pretend = 0, frame = 0
 3024              		@ frame_needed = 0, uses_anonymous_args = 0
 3025              	.LVL355:
1270:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
 3026              		.loc 1 1270 0
 3027 0000 0029     		cmp	r1, #0
 3028 0002 18BF     		it	ne
 3029 0004 0028     		cmpne	r0, #0
 3030 0006 41D0     		beq	.L203
1264:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
 3031              		.loc 1 1264 0 discriminator 1
 3032 0008 38B5     		push	{r3, r4, r5, lr}
 3033              	.LCFI42:
 3034              		.cfi_def_cfa_offset 16
 3035              		.cfi_offset 3, -16
 3036              		.cfi_offset 4, -12
 3037              		.cfi_offset 5, -8
 3038              		.cfi_offset 14, -4
 3039 000a 0D46     		mov	r5, r1
1271:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3040              		.loc 1 1271 0 discriminator 1
 3041 000c B2FA82F1 		clz	r1, r2
 3042              	.LVL356:
 3043 0010 4909     		lsrs	r1, r1, #5
1270:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
 3044              		.loc 1 1270 0 discriminator 1
 3045 0012 002B     		cmp	r3, #0
 3046 0014 3CD0     		beq	.L204
 3047 0016 0029     		cmp	r1, #0
 3048 0018 3AD1     		bne	.L204
1271:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3049              		.loc 1 1271 0
 3050 001a 0499     		ldr	r1, [sp, #16]
 3051 001c 0029     		cmp	r1, #0
 3052 001e 39D0     		beq	.L205
1277:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3053              		.loc 1 1277 0
 3054 0020 90F84810 		ldrb	r1, [r0, #72]	@ zero_extendqisi2
 3055 0024 0129     		cmp	r1, #1
 3056 0026 37D0     		beq	.L206
1277:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3057              		.loc 1 1277 0 is_stmt 0 discriminator 2
 3058 0028 0121     		movs	r1, #1
 3059 002a 80F84810 		strb	r1, [r0, #72]
1279:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3060              		.loc 1 1279 0 is_stmt 1 discriminator 2
 3061 002e 90F84910 		ldrb	r1, [r0, #73]	@ zero_extendqisi2
 3062 0032 C9B2     		uxtb	r1, r1
ARM GAS  /tmp/ccSvCFam.s 			page 120


 3063 0034 0129     		cmp	r1, #1
 3064 0036 04D0     		beq	.L201
1282:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3065              		.loc 1 1282 0
 3066 0038 0023     		movs	r3, #0
 3067              	.LVL357:
 3068 003a 80F84830 		strb	r3, [r0, #72]
1284:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 3069              		.loc 1 1284 0
 3070 003e 0220     		movs	r0, #2
 3071              	.LVL358:
 3072 0040 38BD     		pop	{r3, r4, r5, pc}
 3073              	.LVL359:
 3074              	.L201:
1288:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 3075              		.loc 1 1288 0
 3076 0042 016D     		ldr	r1, [r0, #80]
 3077 0044 11F4807F 		tst	r1, #256
 3078 0048 1BD0     		beq	.L202
 3079 004a 2946     		mov	r1, r5
1291:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3080              		.loc 1 1291 0
 3081 004c 0324     		movs	r4, #3
 3082 004e 80F84940 		strb	r4, [r0, #73]
1294:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= (JPEG_CONTEXT_ENCODE | JPEG_CONTEXT_IT);    
 3083              		.loc 1 1294 0
 3084 0052 046D     		ldr	r4, [r0, #80]
 3085 0054 24F00F04 		bic	r4, r4, #15
 3086 0058 0465     		str	r4, [r0, #80]
1295:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3087              		.loc 1 1295 0
 3088 005a 046D     		ldr	r4, [r0, #80]
 3089 005c 44F00904 		orr	r4, r4, #9
 3090 0060 0465     		str	r4, [r0, #80]
1298:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       OutDataLength = OutDataLength - (OutDataLength % 4);
 3091              		.loc 1 1298 0
 3092 0062 22F00302 		bic	r2, r2, #3
 3093              	.LVL360:
1299:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3094              		.loc 1 1299 0
 3095 0066 049C     		ldr	r4, [sp, #16]
 3096 0068 24F00305 		bic	r5, r4, #3
 3097              	.LVL361:
1302:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegOutBuffPtr = pDataOut;
 3098              		.loc 1 1302 0
 3099 006c 4161     		str	r1, [r0, #20]
1303:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = InDataLength;
 3100              		.loc 1 1303 0
 3101 006e 8361     		str	r3, [r0, #24]
1304:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->OutDataLength = OutDataLength;
 3102              		.loc 1 1304 0
 3103 0070 4262     		str	r2, [r0, #36]
1305:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3104              		.loc 1 1305 0
 3105 0072 8562     		str	r5, [r0, #40]
1308:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
 3106              		.loc 1 1308 0
ARM GAS  /tmp/ccSvCFam.s 			page 121


 3107 0074 0024     		movs	r4, #0
 3108 0076 C461     		str	r4, [r0, #28]
1309:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3109              		.loc 1 1309 0
 3110 0078 0462     		str	r4, [r0, #32]
1312:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3111              		.loc 1 1312 0
 3112 007a FFF7FEFF 		bl	JPEG_Init_Process
 3113              	.LVL362:
1324:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 3114              		.loc 1 1324 0
 3115 007e 2046     		mov	r0, r4
 3116 0080 38BD     		pop	{r3, r4, r5, pc}
 3117              	.LVL363:
 3118              	.L202:
1318:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3119              		.loc 1 1318 0
 3120 0082 0023     		movs	r3, #0
 3121              	.LVL364:
 3122 0084 80F84830 		strb	r3, [r0, #72]
1320:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 3123              		.loc 1 1320 0
 3124 0088 0120     		movs	r0, #1
 3125              	.LVL365:
 3126 008a 38BD     		pop	{r3, r4, r5, pc}
 3127              	.LVL366:
 3128              	.L203:
 3129              	.LCFI43:
 3130              		.cfi_def_cfa_offset 0
 3131              		.cfi_restore 3
 3132              		.cfi_restore 4
 3133              		.cfi_restore 5
 3134              		.cfi_restore 14
1273:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3135              		.loc 1 1273 0
 3136 008c 0120     		movs	r0, #1
 3137              	.LVL367:
1325:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3138              		.loc 1 1325 0
 3139 008e 7047     		bx	lr
 3140              	.LVL368:
 3141              	.L204:
 3142              	.LCFI44:
 3143              		.cfi_def_cfa_offset 16
 3144              		.cfi_offset 3, -16
 3145              		.cfi_offset 4, -12
 3146              		.cfi_offset 5, -8
 3147              		.cfi_offset 14, -4
1273:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3148              		.loc 1 1273 0
 3149 0090 0120     		movs	r0, #1
 3150              	.LVL369:
 3151 0092 38BD     		pop	{r3, r4, r5, pc}
 3152              	.LVL370:
 3153              	.L205:
 3154 0094 0120     		movs	r0, #1
 3155              	.LVL371:
ARM GAS  /tmp/ccSvCFam.s 			page 122


 3156 0096 38BD     		pop	{r3, r4, r5, pc}
 3157              	.LVL372:
 3158              	.L206:
1277:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3159              		.loc 1 1277 0
 3160 0098 0220     		movs	r0, #2
 3161              	.LVL373:
1325:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3162              		.loc 1 1325 0
 3163 009a 38BD     		pop	{r3, r4, r5, pc}
 3164              		.cfi_endproc
 3165              	.LFE147:
 3167              		.section	.text.HAL_JPEG_Decode_IT,"ax",%progbits
 3168              		.align	2
 3169              		.global	HAL_JPEG_Decode_IT
 3170              		.thumb
 3171              		.thumb_func
 3173              	HAL_JPEG_Decode_IT:
 3174              	.LFB148:
1338:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
 3175              		.loc 1 1338 0
 3176              		.cfi_startproc
 3177              		@ args = 4, pretend = 0, frame = 0
 3178              		@ frame_needed = 0, uses_anonymous_args = 0
 3179              	.LVL374:
1344:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (InDataLength == 0) || (OutDataLength == 0))
 3180              		.loc 1 1344 0
 3181 0000 0029     		cmp	r1, #0
 3182 0002 18BF     		it	ne
 3183 0004 0028     		cmpne	r0, #0
 3184 0006 35D0     		beq	.L211
1338:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
 3185              		.loc 1 1338 0 discriminator 1
 3186 0008 38B5     		push	{r3, r4, r5, lr}
 3187              	.LCFI45:
 3188              		.cfi_def_cfa_offset 16
 3189              		.cfi_offset 3, -16
 3190              		.cfi_offset 4, -12
 3191              		.cfi_offset 5, -8
 3192              		.cfi_offset 14, -4
 3193 000a 0D46     		mov	r5, r1
1345:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3194              		.loc 1 1345 0 discriminator 1
 3195 000c B2FA82F1 		clz	r1, r2
 3196              	.LVL375:
 3197 0010 4909     		lsrs	r1, r1, #5
1344:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (InDataLength == 0) || (OutDataLength == 0))
 3198              		.loc 1 1344 0 discriminator 1
 3199 0012 002B     		cmp	r3, #0
 3200 0014 30D0     		beq	.L212
 3201 0016 79BB     		cbnz	r1, .L212
1345:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3202              		.loc 1 1345 0
 3203 0018 0499     		ldr	r1, [sp, #16]
 3204 001a 79B3     		cbz	r1, .L213
1351:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3205              		.loc 1 1351 0
ARM GAS  /tmp/ccSvCFam.s 			page 123


 3206 001c 90F84810 		ldrb	r1, [r0, #72]	@ zero_extendqisi2
 3207 0020 0129     		cmp	r1, #1
 3208 0022 2DD0     		beq	.L214
1351:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3209              		.loc 1 1351 0 is_stmt 0 discriminator 2
 3210 0024 0121     		movs	r1, #1
 3211 0026 80F84810 		strb	r1, [r0, #72]
1353:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3212              		.loc 1 1353 0 is_stmt 1 discriminator 2
 3213 002a 90F84910 		ldrb	r1, [r0, #73]	@ zero_extendqisi2
 3214 002e C9B2     		uxtb	r1, r1
 3215 0030 0129     		cmp	r1, #1
 3216 0032 1AD1     		bne	.L210
1356:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3217              		.loc 1 1356 0
 3218 0034 0421     		movs	r1, #4
 3219 0036 80F84910 		strb	r1, [r0, #73]
1359:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_IT);      
 3220              		.loc 1 1359 0
 3221 003a 016D     		ldr	r1, [r0, #80]
 3222 003c 21F00F01 		bic	r1, r1, #15
 3223 0040 0165     		str	r1, [r0, #80]
1360:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3224              		.loc 1 1360 0
 3225 0042 016D     		ldr	r1, [r0, #80]
 3226 0044 41F00A01 		orr	r1, r1, #10
 3227 0048 0165     		str	r1, [r0, #80]
1363:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     OutDataLength = OutDataLength - (OutDataLength % 4);
 3228              		.loc 1 1363 0
 3229 004a 22F00302 		bic	r2, r2, #3
 3230              	.LVL376:
1364:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3231              		.loc 1 1364 0
 3232 004e 0499     		ldr	r1, [sp, #16]
 3233 0050 21F00304 		bic	r4, r1, #3
 3234              	.LVL377:
1367:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegOutBuffPtr = pDataOutMCU;
 3235              		.loc 1 1367 0
 3236 0054 4561     		str	r5, [r0, #20]
1368:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->InDataLength = InDataLength;
 3237              		.loc 1 1368 0
 3238 0056 8361     		str	r3, [r0, #24]
1369:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->OutDataLength = OutDataLength;
 3239              		.loc 1 1369 0
 3240 0058 4262     		str	r2, [r0, #36]
1370:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3241              		.loc 1 1370 0
 3242 005a 8462     		str	r4, [r0, #40]
1373:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;    
 3243              		.loc 1 1373 0
 3244 005c 0024     		movs	r4, #0
 3245              	.LVL378:
 3246 005e C461     		str	r4, [r0, #28]
1374:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3247              		.loc 1 1374 0
 3248 0060 0462     		str	r4, [r0, #32]
1377:HALLIB/Src/stm32f7xx_hal_jpeg.c ****  
ARM GAS  /tmp/ccSvCFam.s 			page 124


 3249              		.loc 1 1377 0
 3250 0062 FFF7FEFF 		bl	JPEG_Init_Process
 3251              	.LVL379:
1388:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 3252              		.loc 1 1388 0
 3253 0066 2046     		mov	r0, r4
 3254 0068 38BD     		pop	{r3, r4, r5, pc}
 3255              	.LVL380:
 3256              	.L210:
1383:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3257              		.loc 1 1383 0
 3258 006a 0023     		movs	r3, #0
 3259              	.LVL381:
 3260 006c 80F84830 		strb	r3, [r0, #72]
1385:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3261              		.loc 1 1385 0
 3262 0070 0220     		movs	r0, #2
 3263              	.LVL382:
 3264 0072 38BD     		pop	{r3, r4, r5, pc}
 3265              	.LVL383:
 3266              	.L211:
 3267              	.LCFI46:
 3268              		.cfi_def_cfa_offset 0
 3269              		.cfi_restore 3
 3270              		.cfi_restore 4
 3271              		.cfi_restore 5
 3272              		.cfi_restore 14
1347:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3273              		.loc 1 1347 0
 3274 0074 0120     		movs	r0, #1
 3275              	.LVL384:
1389:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3276              		.loc 1 1389 0
 3277 0076 7047     		bx	lr
 3278              	.LVL385:
 3279              	.L212:
 3280              	.LCFI47:
 3281              		.cfi_def_cfa_offset 16
 3282              		.cfi_offset 3, -16
 3283              		.cfi_offset 4, -12
 3284              		.cfi_offset 5, -8
 3285              		.cfi_offset 14, -4
1347:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3286              		.loc 1 1347 0
 3287 0078 0120     		movs	r0, #1
 3288              	.LVL386:
 3289 007a 38BD     		pop	{r3, r4, r5, pc}
 3290              	.LVL387:
 3291              	.L213:
 3292 007c 0120     		movs	r0, #1
 3293              	.LVL388:
 3294 007e 38BD     		pop	{r3, r4, r5, pc}
 3295              	.LVL389:
 3296              	.L214:
1351:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3297              		.loc 1 1351 0
 3298 0080 0220     		movs	r0, #2
ARM GAS  /tmp/ccSvCFam.s 			page 125


 3299              	.LVL390:
1389:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3300              		.loc 1 1389 0
 3301 0082 38BD     		pop	{r3, r4, r5, pc}
 3302              		.cfi_endproc
 3303              	.LFE148:
 3305              		.section	.text.HAL_JPEG_Encode_DMA,"ax",%progbits
 3306              		.align	2
 3307              		.global	HAL_JPEG_Encode_DMA
 3308              		.thumb
 3309              		.thumb_func
 3311              	HAL_JPEG_Encode_DMA:
 3312              	.LFB149:
1402:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
 3313              		.loc 1 1402 0
 3314              		.cfi_startproc
 3315              		@ args = 4, pretend = 0, frame = 0
 3316              		@ frame_needed = 0, uses_anonymous_args = 0
 3317              	.LVL391:
1408:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
 3318              		.loc 1 1408 0
 3319 0000 0029     		cmp	r1, #0
 3320 0002 18BF     		it	ne
 3321 0004 0028     		cmpne	r0, #0
 3322 0006 40D0     		beq	.L220
1402:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
 3323              		.loc 1 1402 0 discriminator 1
 3324 0008 70B5     		push	{r4, r5, r6, lr}
 3325              	.LCFI48:
 3326              		.cfi_def_cfa_offset 16
 3327              		.cfi_offset 4, -16
 3328              		.cfi_offset 5, -12
 3329              		.cfi_offset 6, -8
 3330              		.cfi_offset 14, -4
 3331 000a 0D46     		mov	r5, r1
1409:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3332              		.loc 1 1409 0 discriminator 1
 3333 000c B2FA82F1 		clz	r1, r2
 3334              	.LVL392:
 3335 0010 4909     		lsrs	r1, r1, #5
1408:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
 3336              		.loc 1 1408 0 discriminator 1
 3337 0012 002B     		cmp	r3, #0
 3338 0014 3BD0     		beq	.L221
 3339 0016 0029     		cmp	r1, #0
 3340 0018 39D1     		bne	.L221
1409:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3341              		.loc 1 1409 0
 3342 001a 0499     		ldr	r1, [sp, #16]
 3343 001c 0029     		cmp	r1, #0
 3344 001e 38D0     		beq	.L222
1415:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3345              		.loc 1 1415 0
 3346 0020 90F84810 		ldrb	r1, [r0, #72]	@ zero_extendqisi2
 3347 0024 0129     		cmp	r1, #1
 3348 0026 36D0     		beq	.L223
1415:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
ARM GAS  /tmp/ccSvCFam.s 			page 126


 3349              		.loc 1 1415 0 is_stmt 0 discriminator 2
 3350 0028 0121     		movs	r1, #1
 3351 002a 80F84810 		strb	r1, [r0, #72]
1417:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3352              		.loc 1 1417 0 is_stmt 1 discriminator 2
 3353 002e 90F84910 		ldrb	r1, [r0, #73]	@ zero_extendqisi2
 3354 0032 C9B2     		uxtb	r1, r1
 3355 0034 0129     		cmp	r1, #1
 3356 0036 04D0     		beq	.L218
1420:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3357              		.loc 1 1420 0
 3358 0038 0023     		movs	r3, #0
 3359              	.LVL393:
 3360 003a 80F84830 		strb	r3, [r0, #72]
1422:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 3361              		.loc 1 1422 0
 3362 003e 0220     		movs	r0, #2
 3363              	.LVL394:
 3364 0040 70BD     		pop	{r4, r5, r6, pc}
 3365              	.LVL395:
 3366              	.L218:
1426:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 3367              		.loc 1 1426 0
 3368 0042 016D     		ldr	r1, [r0, #80]
 3369 0044 11F4807F 		tst	r1, #256
 3370 0048 1AD0     		beq	.L219
 3371 004a 0646     		mov	r6, r0
1429:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3372              		.loc 1 1429 0
 3373 004c 0321     		movs	r1, #3
 3374 004e 80F84910 		strb	r1, [r0, #73]
1432:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= (JPEG_CONTEXT_ENCODE | JPEG_CONTEXT_DMA);    
 3375              		.loc 1 1432 0
 3376 0052 016D     		ldr	r1, [r0, #80]
 3377 0054 21F00F01 		bic	r1, r1, #15
 3378 0058 0165     		str	r1, [r0, #80]
1433:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3379              		.loc 1 1433 0
 3380 005a 016D     		ldr	r1, [r0, #80]
 3381 005c 41F00D01 		orr	r1, r1, #13
 3382 0060 0165     		str	r1, [r0, #80]
1436:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegOutBuffPtr = pDataOut;
 3383              		.loc 1 1436 0
 3384 0062 4561     		str	r5, [r0, #20]
1437:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = InDataLength;
 3385              		.loc 1 1437 0
 3386 0064 8361     		str	r3, [r0, #24]
1438:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->OutDataLength = OutDataLength;
 3387              		.loc 1 1438 0
 3388 0066 4262     		str	r2, [r0, #36]
1439:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3389              		.loc 1 1439 0
 3390 0068 049B     		ldr	r3, [sp, #16]
 3391              	.LVL396:
 3392 006a 8362     		str	r3, [r0, #40]
1442:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
 3393              		.loc 1 1442 0
ARM GAS  /tmp/ccSvCFam.s 			page 127


 3394 006c 0024     		movs	r4, #0
 3395 006e C461     		str	r4, [r0, #28]
1443:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3396              		.loc 1 1443 0
 3397 0070 0462     		str	r4, [r0, #32]
1446:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3398              		.loc 1 1446 0
 3399 0072 FFF7FEFF 		bl	JPEG_Init_Process
 3400              	.LVL397:
1449:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3401              		.loc 1 1449 0
 3402 0076 3046     		mov	r0, r6
 3403 0078 FFF7FEFF 		bl	JPEG_DMA_StartProcess
 3404              	.LVL398:
1461:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 3405              		.loc 1 1461 0
 3406 007c 2046     		mov	r0, r4
 3407 007e 70BD     		pop	{r4, r5, r6, pc}
 3408              	.LVL399:
 3409              	.L219:
1455:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3410              		.loc 1 1455 0
 3411 0080 0023     		movs	r3, #0
 3412              	.LVL400:
 3413 0082 80F84830 		strb	r3, [r0, #72]
1457:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 3414              		.loc 1 1457 0
 3415 0086 0120     		movs	r0, #1
 3416              	.LVL401:
 3417 0088 70BD     		pop	{r4, r5, r6, pc}
 3418              	.LVL402:
 3419              	.L220:
 3420              	.LCFI49:
 3421              		.cfi_def_cfa_offset 0
 3422              		.cfi_restore 4
 3423              		.cfi_restore 5
 3424              		.cfi_restore 6
 3425              		.cfi_restore 14
1411:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3426              		.loc 1 1411 0
 3427 008a 0120     		movs	r0, #1
 3428              	.LVL403:
1462:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3429              		.loc 1 1462 0
 3430 008c 7047     		bx	lr
 3431              	.LVL404:
 3432              	.L221:
 3433              	.LCFI50:
 3434              		.cfi_def_cfa_offset 16
 3435              		.cfi_offset 4, -16
 3436              		.cfi_offset 5, -12
 3437              		.cfi_offset 6, -8
 3438              		.cfi_offset 14, -4
1411:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3439              		.loc 1 1411 0
 3440 008e 0120     		movs	r0, #1
 3441              	.LVL405:
ARM GAS  /tmp/ccSvCFam.s 			page 128


 3442 0090 70BD     		pop	{r4, r5, r6, pc}
 3443              	.LVL406:
 3444              	.L222:
 3445 0092 0120     		movs	r0, #1
 3446              	.LVL407:
 3447 0094 70BD     		pop	{r4, r5, r6, pc}
 3448              	.LVL408:
 3449              	.L223:
1415:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3450              		.loc 1 1415 0
 3451 0096 0220     		movs	r0, #2
 3452              	.LVL409:
1462:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3453              		.loc 1 1462 0
 3454 0098 70BD     		pop	{r4, r5, r6, pc}
 3455              		.cfi_endproc
 3456              	.LFE149:
 3458 009a 00BF     		.section	.text.HAL_JPEG_Decode_DMA,"ax",%progbits
 3459              		.align	2
 3460              		.global	HAL_JPEG_Decode_DMA
 3461              		.thumb
 3462              		.thumb_func
 3464              	HAL_JPEG_Decode_DMA:
 3465              	.LFB150:
1475:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
 3466              		.loc 1 1475 0
 3467              		.cfi_startproc
 3468              		@ args = 4, pretend = 0, frame = 0
 3469              		@ frame_needed = 0, uses_anonymous_args = 0
 3470              	.LVL410:
1481:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
 3471              		.loc 1 1481 0
 3472 0000 0029     		cmp	r1, #0
 3473 0002 18BF     		it	ne
 3474 0004 0028     		cmpne	r0, #0
 3475 0006 3AD0     		beq	.L228
1475:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Check the parameters */
 3476              		.loc 1 1475 0 discriminator 1
 3477 0008 38B5     		push	{r3, r4, r5, lr}
 3478              	.LCFI51:
 3479              		.cfi_def_cfa_offset 16
 3480              		.cfi_offset 3, -16
 3481              		.cfi_offset 4, -12
 3482              		.cfi_offset 5, -8
 3483              		.cfi_offset 14, -4
 3484 000a 0446     		mov	r4, r0
 3485 000c 0D46     		mov	r5, r1
1482:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3486              		.loc 1 1482 0 discriminator 1
 3487 000e B2FA82F1 		clz	r1, r2
 3488              	.LVL411:
 3489 0012 4909     		lsrs	r1, r1, #5
1481:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
 3490              		.loc 1 1481 0 discriminator 1
 3491 0014 002B     		cmp	r3, #0
 3492 0016 34D0     		beq	.L229
 3493 0018 0029     		cmp	r1, #0
ARM GAS  /tmp/ccSvCFam.s 			page 129


 3494 001a 32D1     		bne	.L229
1482:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3495              		.loc 1 1482 0
 3496 001c 0499     		ldr	r1, [sp, #16]
 3497 001e 0029     		cmp	r1, #0
 3498 0020 31D0     		beq	.L230
1488:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3499              		.loc 1 1488 0
 3500 0022 90F84810 		ldrb	r1, [r0, #72]	@ zero_extendqisi2
 3501 0026 0129     		cmp	r1, #1
 3502 0028 2FD0     		beq	.L231
1488:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3503              		.loc 1 1488 0 is_stmt 0 discriminator 2
 3504 002a 0121     		movs	r1, #1
 3505 002c 80F84810 		strb	r1, [r0, #72]
1490:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3506              		.loc 1 1490 0 is_stmt 1 discriminator 2
 3507 0030 90F84910 		ldrb	r1, [r0, #73]	@ zero_extendqisi2
 3508 0034 C9B2     		uxtb	r1, r1
 3509 0036 0129     		cmp	r1, #1
 3510 0038 1CD1     		bne	.L227
 3511 003a 2946     		mov	r1, r5
 3512 003c 0546     		mov	r5, r0
 3513              	.LVL412:
1493:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3514              		.loc 1 1493 0
 3515 003e 0420     		movs	r0, #4
 3516              	.LVL413:
 3517 0040 84F84900 		strb	r0, [r4, #73]
1496:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);         
 3518              		.loc 1 1496 0
 3519 0044 206D     		ldr	r0, [r4, #80]
 3520 0046 20F00F00 		bic	r0, r0, #15
 3521 004a 2065     		str	r0, [r4, #80]
1497:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3522              		.loc 1 1497 0
 3523 004c 206D     		ldr	r0, [r4, #80]
 3524 004e 40F00E00 		orr	r0, r0, #14
 3525 0052 2065     		str	r0, [r4, #80]
1500:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegOutBuffPtr = pDataOutMCU;
 3526              		.loc 1 1500 0
 3527 0054 6161     		str	r1, [r4, #20]
1501:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->InDataLength = InDataLength;
 3528              		.loc 1 1501 0
 3529 0056 A361     		str	r3, [r4, #24]
1502:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->OutDataLength = OutDataLength;
 3530              		.loc 1 1502 0
 3531 0058 6262     		str	r2, [r4, #36]
1503:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3532              		.loc 1 1503 0
 3533 005a 049B     		ldr	r3, [sp, #16]
 3534              	.LVL414:
 3535 005c A362     		str	r3, [r4, #40]
1506:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;    
 3536              		.loc 1 1506 0
 3537 005e 0024     		movs	r4, #0
 3538              	.LVL415:
ARM GAS  /tmp/ccSvCFam.s 			page 130


 3539 0060 EC61     		str	r4, [r5, #28]
1507:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3540              		.loc 1 1507 0
 3541 0062 2C62     		str	r4, [r5, #32]
1510:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3542              		.loc 1 1510 0
 3543 0064 2846     		mov	r0, r5
 3544 0066 FFF7FEFF 		bl	JPEG_Init_Process
 3545              	.LVL416:
1513:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3546              		.loc 1 1513 0
 3547 006a 2846     		mov	r0, r5
 3548 006c FFF7FEFF 		bl	JPEG_DMA_StartProcess
 3549              	.LVL417:
1524:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 3550              		.loc 1 1524 0
 3551 0070 2046     		mov	r0, r4
 3552 0072 38BD     		pop	{r3, r4, r5, pc}
 3553              	.LVL418:
 3554              	.L227:
1519:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3555              		.loc 1 1519 0
 3556 0074 0023     		movs	r3, #0
 3557              	.LVL419:
 3558 0076 80F84830 		strb	r3, [r0, #72]
1521:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3559              		.loc 1 1521 0
 3560 007a 0220     		movs	r0, #2
 3561              	.LVL420:
 3562 007c 38BD     		pop	{r3, r4, r5, pc}
 3563              	.LVL421:
 3564              	.L228:
 3565              	.LCFI52:
 3566              		.cfi_def_cfa_offset 0
 3567              		.cfi_restore 3
 3568              		.cfi_restore 4
 3569              		.cfi_restore 5
 3570              		.cfi_restore 14
1484:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3571              		.loc 1 1484 0
 3572 007e 0120     		movs	r0, #1
 3573              	.LVL422:
1525:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3574              		.loc 1 1525 0
 3575 0080 7047     		bx	lr
 3576              	.LVL423:
 3577              	.L229:
 3578              	.LCFI53:
 3579              		.cfi_def_cfa_offset 16
 3580              		.cfi_offset 3, -16
 3581              		.cfi_offset 4, -12
 3582              		.cfi_offset 5, -8
 3583              		.cfi_offset 14, -4
1484:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3584              		.loc 1 1484 0
 3585 0082 0120     		movs	r0, #1
 3586              	.LVL424:
ARM GAS  /tmp/ccSvCFam.s 			page 131


 3587 0084 38BD     		pop	{r3, r4, r5, pc}
 3588              	.LVL425:
 3589              	.L230:
 3590 0086 0120     		movs	r0, #1
 3591              	.LVL426:
 3592 0088 38BD     		pop	{r3, r4, r5, pc}
 3593              	.LVL427:
 3594              	.L231:
1488:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3595              		.loc 1 1488 0
 3596 008a 0220     		movs	r0, #2
 3597              	.LVL428:
1525:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3598              		.loc 1 1525 0
 3599 008c 38BD     		pop	{r3, r4, r5, pc}
 3600              		.cfi_endproc
 3601              	.LFE150:
 3603 008e 00BF     		.section	.text.HAL_JPEG_Pause,"ax",%progbits
 3604              		.align	2
 3605              		.global	HAL_JPEG_Pause
 3606              		.thumb
 3607              		.thumb_func
 3609              	HAL_JPEG_Pause:
 3610              	.LFB151:
1538:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t mask = 0;
 3611              		.loc 1 1538 0
 3612              		.cfi_startproc
 3613              		@ args = 0, pretend = 0, frame = 0
 3614              		@ frame_needed = 0, uses_anonymous_args = 0
 3615              		@ link register save eliminated.
 3616              	.LVL429:
1543:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 3617              		.loc 1 1543 0
 3618 0000 036D     		ldr	r3, [r0, #80]
 3619 0002 03F00C03 		and	r3, r3, #12
 3620 0006 0C2B     		cmp	r3, #12
 3621 0008 1CD1     		bne	.L234
1545:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 3622              		.loc 1 1545 0
 3623 000a 11F0010F 		tst	r1, #1
 3624 000e 06D0     		beq	.L240
1547:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= JPEG_DMA_IDMA;
 3625              		.loc 1 1547 0
 3626 0010 036D     		ldr	r3, [r0, #80]
 3627 0012 43F48053 		orr	r3, r3, #4096
 3628 0016 0365     		str	r3, [r0, #80]
 3629              	.LVL430:
1548:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 3630              		.loc 1 1548 0
 3631 0018 4FF40063 		mov	r3, #2048
 3632 001c 00E0     		b	.L235
 3633              	.LVL431:
 3634              	.L240:
1539:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3635              		.loc 1 1539 0
 3636 001e 0023     		movs	r3, #0
 3637              	.LVL432:
ARM GAS  /tmp/ccSvCFam.s 			page 132


 3638              	.L235:
1550:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 3639              		.loc 1 1550 0
 3640 0020 11F0020F 		tst	r1, #2
 3641 0024 05D0     		beq	.L236
1552:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= JPEG_DMA_ODMA;
 3642              		.loc 1 1552 0
 3643 0026 026D     		ldr	r2, [r0, #80]
 3644 0028 42F40052 		orr	r2, r2, #8192
 3645 002c 0265     		str	r2, [r0, #80]
1553:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
 3646              		.loc 1 1553 0
 3647 002e 43F48053 		orr	r3, r3, #4096
 3648              	.LVL433:
 3649              	.L236:
1555:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3650              		.loc 1 1555 0
 3651 0032 0168     		ldr	r1, [r0]
 3652              	.LVL434:
 3653 0034 0A6B     		ldr	r2, [r1, #48]
 3654 0036 03F4C053 		and	r3, r3, #6144
 3655              	.LVL435:
 3656 003a 22EA0303 		bic	r3, r2, r3
 3657 003e 0B63     		str	r3, [r1, #48]
 3658              	.L243:
1577:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3659              		.loc 1 1577 0
 3660 0040 0020     		movs	r0, #0
 3661              	.LVL436:
 3662 0042 7047     		bx	lr
 3663              	.LVL437:
 3664              	.L234:
1558:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 3665              		.loc 1 1558 0
 3666 0044 036D     		ldr	r3, [r0, #80]
 3667 0046 03F00C03 		and	r3, r3, #12
 3668 004a 082B     		cmp	r3, #8
 3669 004c F8D1     		bne	.L243
1538:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t mask = 0;
 3670              		.loc 1 1538 0
 3671 004e 10B4     		push	{r4}
 3672              	.LCFI54:
 3673              		.cfi_def_cfa_offset 4
 3674              		.cfi_offset 4, -4
1561:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 3675              		.loc 1 1561 0
 3676 0050 11F0010F 		tst	r1, #1
 3677 0054 05D0     		beq	.L241
1563:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= (JPEG_IT_IFT | JPEG_IT_IFNF); 
 3678              		.loc 1 1563 0
 3679 0056 036D     		ldr	r3, [r0, #80]
 3680 0058 43F48053 		orr	r3, r3, #4096
 3681 005c 0365     		str	r3, [r0, #80]
 3682              	.LVL438:
1564:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 3683              		.loc 1 1564 0
 3684 005e 0624     		movs	r4, #6
ARM GAS  /tmp/ccSvCFam.s 			page 133


 3685 0060 00E0     		b	.L238
 3686              	.LVL439:
 3687              	.L241:
1539:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3688              		.loc 1 1539 0
 3689 0062 0024     		movs	r4, #0
 3690              	.LVL440:
 3691              	.L238:
1566:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 3692              		.loc 1 1566 0
 3693 0064 11F0020F 		tst	r1, #2
 3694 0068 05D0     		beq	.L239
1568:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |=  (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC); 
 3695              		.loc 1 1568 0
 3696 006a 036D     		ldr	r3, [r0, #80]
 3697 006c 43F40053 		orr	r3, r3, #8192
 3698 0070 0365     		str	r3, [r0, #80]
1569:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
 3699              		.loc 1 1569 0
 3700 0072 44F02804 		orr	r4, r4, #40
 3701              	.LVL441:
 3702              	.L239:
1571:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3703              		.loc 1 1571 0
 3704 0076 0268     		ldr	r2, [r0]
 3705 0078 136B     		ldr	r3, [r2, #48]
 3706 007a 23EA0403 		bic	r3, r3, r4
 3707 007e 1363     		str	r3, [r2, #48]
1577:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3708              		.loc 1 1577 0
 3709 0080 0020     		movs	r0, #0
 3710              	.LVL442:
 3711 0082 5DF8044B 		ldr	r4, [sp], #4
 3712              	.LCFI55:
 3713              		.cfi_restore 4
 3714              		.cfi_def_cfa_offset 0
 3715              	.LVL443:
 3716 0086 7047     		bx	lr
 3717              		.cfi_endproc
 3718              	.LFE151:
 3720              		.section	.text.HAL_JPEG_ConfigInputBuffer,"ax",%progbits
 3721              		.align	2
 3722              		.global	HAL_JPEG_ConfigInputBuffer
 3723              		.thumb
 3724              		.thumb_func
 3726              	HAL_JPEG_ConfigInputBuffer:
 3727              	.LFB153:
1669:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
 3728              		.loc 1 1669 0
 3729              		.cfi_startproc
 3730              		@ args = 0, pretend = 0, frame = 0
 3731              		@ frame_needed = 0, uses_anonymous_args = 0
 3732              		@ link register save eliminated.
 3733              	.LVL444:
1670:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->InDataLength = InDataLength;
 3734              		.loc 1 1670 0
 3735 0000 4161     		str	r1, [r0, #20]
ARM GAS  /tmp/ccSvCFam.s 			page 134


1671:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 3736              		.loc 1 1671 0
 3737 0002 4262     		str	r2, [r0, #36]
 3738 0004 7047     		bx	lr
 3739              		.cfi_endproc
 3740              	.LFE153:
 3742 0006 00BF     		.section	.text.HAL_JPEG_ConfigOutputBuffer,"ax",%progbits
 3743              		.align	2
 3744              		.global	HAL_JPEG_ConfigOutputBuffer
 3745              		.thumb
 3746              		.thumb_func
 3748              	HAL_JPEG_ConfigOutputBuffer:
 3749              	.LFB154:
1683:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
 3750              		.loc 1 1683 0
 3751              		.cfi_startproc
 3752              		@ args = 0, pretend = 0, frame = 0
 3753              		@ frame_needed = 0, uses_anonymous_args = 0
 3754              		@ link register save eliminated.
 3755              	.LVL445:
1684:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->OutDataLength = OutDataLength;  
 3756              		.loc 1 1684 0
 3757 0000 8161     		str	r1, [r0, #24]
1685:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 3758              		.loc 1 1685 0
 3759 0002 8262     		str	r2, [r0, #40]
 3760 0004 7047     		bx	lr
 3761              		.cfi_endproc
 3762              	.LFE154:
 3764 0006 00BF     		.section	.text.HAL_JPEG_Abort,"ax",%progbits
 3765              		.align	2
 3766              		.global	HAL_JPEG_Abort
 3767              		.thumb
 3768              		.thumb_func
 3770              	HAL_JPEG_Abort:
 3771              	.LFB155:
1695:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tickstart, tmpContext;  
 3772              		.loc 1 1695 0
 3773              		.cfi_startproc
 3774              		@ args = 0, pretend = 0, frame = 0
 3775              		@ frame_needed = 0, uses_anonymous_args = 0
 3776              	.LVL446:
 3777 0000 38B5     		push	{r3, r4, r5, lr}
 3778              	.LCFI56:
 3779              		.cfi_def_cfa_offset 16
 3780              		.cfi_offset 3, -16
 3781              		.cfi_offset 4, -12
 3782              		.cfi_offset 5, -8
 3783              		.cfi_offset 14, -4
 3784 0002 0446     		mov	r4, r0
1698:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3785              		.loc 1 1698 0
 3786 0004 036D     		ldr	r3, [r0, #80]
 3787              	.LVL447:
1701:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3788              		.loc 1 1701 0
 3789 0006 016D     		ldr	r1, [r0, #80]
ARM GAS  /tmp/ccSvCFam.s 			page 135


 3790 0008 284A     		ldr	r2, .L252
 3791 000a 0A40     		ands	r2, r2, r1
 3792 000c 0265     		str	r2, [r0, #80]
1703:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3793              		.loc 1 1703 0
 3794 000e 03F00C03 		and	r3, r3, #12
 3795              	.LVL448:
 3796 0012 0C2B     		cmp	r3, #12
 3797 0014 05D1     		bne	.L247
1706:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_DMA_Abort(hjpeg->hdmain);
 3798              		.loc 1 1706 0
 3799 0016 006B     		ldr	r0, [r0, #48]
 3800              	.LVL449:
 3801 0018 FFF7FEFF 		bl	HAL_DMA_Abort
 3802              	.LVL450:
1707:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 3803              		.loc 1 1707 0
 3804 001c E06A     		ldr	r0, [r4, #44]
 3805 001e FFF7FEFF 		bl	HAL_DMA_Abort
 3806              	.LVL451:
 3807              	.L247:
1711:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3808              		.loc 1 1711 0
 3809 0022 2268     		ldr	r2, [r4]
 3810 0024 1368     		ldr	r3, [r2]
 3811 0026 23F00103 		bic	r3, r3, #1
 3812 002a 1360     		str	r3, [r2]
1714:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3813              		.loc 1 1714 0
 3814 002c FFF7FEFF 		bl	HAL_GetTick
 3815              	.LVL452:
 3816 0030 0546     		mov	r5, r0
 3817              	.LVL453:
1717:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3818              		.loc 1 1717 0
 3819 0032 11E0     		b	.L248
 3820              	.LVL454:
 3821              	.L250:
1720:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 3822              		.loc 1 1720 0
 3823 0034 FFF7FEFF 		bl	HAL_GetTick
 3824              	.LVL455:
 3825 0038 401B     		subs	r0, r0, r5
 3826 003a B0F57A7F 		cmp	r0, #1000
 3827 003e 0BD9     		bls	.L248
1723:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3828              		.loc 1 1723 0
 3829 0040 E36C     		ldr	r3, [r4, #76]
 3830 0042 43F00803 		orr	r3, r3, #8
 3831 0046 E364     		str	r3, [r4, #76]
1726:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3832              		.loc 1 1726 0
 3833 0048 0523     		movs	r3, #5
 3834 004a 84F84930 		strb	r3, [r4, #73]
1729:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 3835              		.loc 1 1729 0
 3836 004e 0023     		movs	r3, #0
ARM GAS  /tmp/ccSvCFam.s 			page 136


 3837 0050 84F84830 		strb	r3, [r4, #72]
1731:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 3838              		.loc 1 1731 0
 3839 0054 0320     		movs	r0, #3
 3840 0056 38BD     		pop	{r3, r4, r5, pc}
 3841              	.LVL456:
 3842              	.L248:
1717:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3843              		.loc 1 1717 0
 3844 0058 2368     		ldr	r3, [r4]
 3845 005a 5A6B     		ldr	r2, [r3, #52]
 3846 005c 12F0800F 		tst	r2, #128
 3847 0060 E8D1     		bne	.L250
1736:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3848              		.loc 1 1736 0
 3849 0062 1A6B     		ldr	r2, [r3, #48]
 3850 0064 22F07E02 		bic	r2, r2, #126
 3851 0068 1A63     		str	r2, [r3, #48]
1739:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3852              		.loc 1 1739 0
 3853 006a 2268     		ldr	r2, [r4]
 3854 006c 136B     		ldr	r3, [r2, #48]
 3855 006e 23F4C053 		bic	r3, r3, #6144
 3856 0072 1363     		str	r3, [r2, #48]
1742:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->Instance->CR |= JPEG_CR_OFF;  
 3857              		.loc 1 1742 0
 3858 0074 2268     		ldr	r2, [r4]
 3859 0076 136B     		ldr	r3, [r2, #48]
 3860 0078 43F40053 		orr	r3, r3, #8192
 3861 007c 1363     		str	r3, [r2, #48]
1743:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3862              		.loc 1 1743 0
 3863 007e 2268     		ldr	r2, [r4]
 3864 0080 136B     		ldr	r3, [r2, #48]
 3865 0082 43F48043 		orr	r3, r3, #16384
 3866 0086 1363     		str	r3, [r2, #48]
1746:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 3867              		.loc 1 1746 0
 3868 0088 2268     		ldr	r2, [r4]
 3869 008a 936B     		ldr	r3, [r2, #56]
 3870 008c 43F06003 		orr	r3, r3, #96
 3871 0090 9363     		str	r3, [r2, #56]
1749:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   hjpeg->JpegOutCount = 0; 
 3872              		.loc 1 1749 0
 3873 0092 0020     		movs	r0, #0
 3874 0094 E061     		str	r0, [r4, #28]
1750:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3875              		.loc 1 1750 0
 3876 0096 2062     		str	r0, [r4, #32]
1753:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3877              		.loc 1 1753 0
 3878 0098 236D     		ldr	r3, [r4, #80]
 3879 009a 23F44053 		bic	r3, r3, #12288
 3880 009e 2365     		str	r3, [r4, #80]
1756:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3881              		.loc 1 1756 0
 3882 00a0 0123     		movs	r3, #1
ARM GAS  /tmp/ccSvCFam.s 			page 137


 3883 00a2 84F84930 		strb	r3, [r4, #73]
1759:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3884              		.loc 1 1759 0
 3885 00a6 84F84800 		strb	r0, [r4, #72]
1763:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3886              		.loc 1 1763 0
 3887 00aa 38BD     		pop	{r3, r4, r5, pc}
 3888              	.LVL457:
 3889              	.L253:
 3890              		.align	2
 3891              	.L252:
 3892 00ac F07FFFFF 		.word	-32784
 3893              		.cfi_endproc
 3894              	.LFE155:
 3896              		.section	.text.HAL_JPEG_InfoReadyCallback,"ax",%progbits
 3897              		.align	2
 3898              		.weak	HAL_JPEG_InfoReadyCallback
 3899              		.thumb
 3900              		.thumb_func
 3902              	HAL_JPEG_InfoReadyCallback:
 3903              	.LFB156:
1798:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 3904              		.loc 1 1798 0
 3905              		.cfi_startproc
 3906              		@ args = 0, pretend = 0, frame = 0
 3907              		@ frame_needed = 0, uses_anonymous_args = 0
 3908              		@ link register save eliminated.
 3909              	.LVL458:
 3910 0000 7047     		bx	lr
 3911              		.cfi_endproc
 3912              	.LFE156:
 3914 0002 00BF     		.section	.text.HAL_JPEG_EncodeCpltCallback,"ax",%progbits
 3915              		.align	2
 3916              		.weak	HAL_JPEG_EncodeCpltCallback
 3917              		.thumb
 3918              		.thumb_func
 3920              	HAL_JPEG_EncodeCpltCallback:
 3921              	.LFB157:
1815:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 3922              		.loc 1 1815 0
 3923              		.cfi_startproc
 3924              		@ args = 0, pretend = 0, frame = 0
 3925              		@ frame_needed = 0, uses_anonymous_args = 0
 3926              		@ link register save eliminated.
 3927              	.LVL459:
 3928 0000 7047     		bx	lr
 3929              		.cfi_endproc
 3930              	.LFE157:
 3932 0002 00BF     		.section	.text.HAL_JPEG_DecodeCpltCallback,"ax",%progbits
 3933              		.align	2
 3934              		.weak	HAL_JPEG_DecodeCpltCallback
 3935              		.thumb
 3936              		.thumb_func
 3938              	HAL_JPEG_DecodeCpltCallback:
 3939              	.LFB158:
1831:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 3940              		.loc 1 1831 0
ARM GAS  /tmp/ccSvCFam.s 			page 138


 3941              		.cfi_startproc
 3942              		@ args = 0, pretend = 0, frame = 0
 3943              		@ frame_needed = 0, uses_anonymous_args = 0
 3944              		@ link register save eliminated.
 3945              	.LVL460:
 3946 0000 7047     		bx	lr
 3947              		.cfi_endproc
 3948              	.LFE158:
 3950 0002 00BF     		.section	.text.HAL_JPEG_ErrorCallback,"ax",%progbits
 3951              		.align	2
 3952              		.weak	HAL_JPEG_ErrorCallback
 3953              		.thumb
 3954              		.thumb_func
 3956              	HAL_JPEG_ErrorCallback:
 3957              	.LFB159:
1847:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 3958              		.loc 1 1847 0
 3959              		.cfi_startproc
 3960              		@ args = 0, pretend = 0, frame = 0
 3961              		@ frame_needed = 0, uses_anonymous_args = 0
 3962              		@ link register save eliminated.
 3963              	.LVL461:
 3964 0000 7047     		bx	lr
 3965              		.cfi_endproc
 3966              	.LFE159:
 3968 0002 00BF     		.section	.text.JPEG_DMAErrorCallback,"ax",%progbits
 3969              		.align	2
 3970              		.thumb
 3971              		.thumb_func
 3973              	JPEG_DMAErrorCallback:
 3974              	.LFB186:
3362:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3975              		.loc 1 3362 0
 3976              		.cfi_startproc
 3977              		@ args = 0, pretend = 0, frame = 0
 3978              		@ frame_needed = 0, uses_anonymous_args = 0
 3979              	.LVL462:
3362:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3980              		.loc 1 3362 0
 3981 0000 10B5     		push	{r4, lr}
 3982              	.LCFI57:
 3983              		.cfi_def_cfa_offset 8
 3984              		.cfi_offset 4, -8
 3985              		.cfi_offset 14, -4
3363:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 3986              		.loc 1 3363 0
 3987 0002 846B     		ldr	r4, [r0, #56]
 3988              	.LVL463:
3366:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 3989              		.loc 1 3366 0
 3990 0004 FFF7FEFF 		bl	HAL_DMA_GetError
 3991              	.LVL464:
 3992 0008 0228     		cmp	r0, #2
 3993 000a 18D0     		beq	.L258
3369:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3994              		.loc 1 3369 0
 3995 000c 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccSvCFam.s 			page 139


 3996 000e 1368     		ldr	r3, [r2]
 3997 0010 23F00103 		bic	r3, r3, #1
 3998 0014 1360     		str	r3, [r2]
3372:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 3999              		.loc 1 3372 0
 4000 0016 2268     		ldr	r2, [r4]
 4001 0018 136B     		ldr	r3, [r2, #48]
 4002 001a 23F07E03 		bic	r3, r3, #126
 4003 001e 1363     		str	r3, [r2, #48]
3375:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4004              		.loc 1 3375 0
 4005 0020 2268     		ldr	r2, [r4]
 4006 0022 136B     		ldr	r3, [r2, #48]
 4007 0024 23F4C053 		bic	r3, r3, #6144
 4008 0028 1363     		str	r3, [r2, #48]
3377:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA; 
 4009              		.loc 1 3377 0
 4010 002a 0123     		movs	r3, #1
 4011 002c 84F84930 		strb	r3, [r4, #73]
3378:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     HAL_JPEG_ErrorCallback(hjpeg);
 4012              		.loc 1 3378 0
 4013 0030 E36C     		ldr	r3, [r4, #76]
 4014 0032 43F00403 		orr	r3, r3, #4
 4015 0036 E364     		str	r3, [r4, #76]
3379:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4016              		.loc 1 3379 0
 4017 0038 2046     		mov	r0, r4
 4018 003a FFF7FEFF 		bl	HAL_JPEG_ErrorCallback
 4019              	.LVL465:
 4020              	.L258:
 4021 003e 10BD     		pop	{r4, pc}
 4022              		.cfi_endproc
 4023              	.LFE186:
 4025              		.section	.text.HAL_JPEG_GetDataCallback,"ax",%progbits
 4026              		.align	2
 4027              		.weak	HAL_JPEG_GetDataCallback
 4028              		.thumb
 4029              		.thumb_func
 4031              	HAL_JPEG_GetDataCallback:
 4032              	.LFB160:
1864:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 4033              		.loc 1 1864 0
 4034              		.cfi_startproc
 4035              		@ args = 0, pretend = 0, frame = 0
 4036              		@ frame_needed = 0, uses_anonymous_args = 0
 4037              		@ link register save eliminated.
 4038              	.LVL466:
 4039 0000 7047     		bx	lr
 4040              		.cfi_endproc
 4041              	.LFE160:
 4043 0002 00BF     		.section	.text.JPEG_ReadInputData,"ax",%progbits
 4044              		.align	2
 4045              		.thumb
 4046              		.thumb_func
 4048              	JPEG_ReadInputData:
 4049              	.LFB179:
2991:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t nbBytes = 0, nBwords, index, Dataword;  
ARM GAS  /tmp/ccSvCFam.s 			page 140


 4050              		.loc 1 2991 0
 4051              		.cfi_startproc
 4052              		@ args = 0, pretend = 0, frame = 0
 4053              		@ frame_needed = 0, uses_anonymous_args = 0
 4054              	.LVL467:
2991:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t nbBytes = 0, nBwords, index, Dataword;  
 4055              		.loc 1 2991 0
 4056 0000 38B5     		push	{r3, r4, r5, lr}
 4057              	.LCFI58:
 4058              		.cfi_def_cfa_offset 16
 4059              		.cfi_offset 3, -16
 4060              		.cfi_offset 4, -12
 4061              		.cfi_offset 5, -8
 4062              		.cfi_offset 14, -4
 4063 0002 0446     		mov	r4, r0
 4064 0004 0D46     		mov	r5, r1
 4065              	.LVL468:
2994:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4066              		.loc 1 2994 0
 4067 0006 436A     		ldr	r3, [r0, #36]
 4068 0008 03B1     		cbz	r3, .L263
2994:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4069              		.loc 1 2994 0 is_stmt 0 discriminator 1
 4070 000a 29B9     		cbnz	r1, .L264
 4071              	.L263:
2997:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4072              		.loc 1 2997 0 is_stmt 1
 4073 000c 0121     		movs	r1, #1
 4074              	.LVL469:
 4075 000e 2046     		mov	r0, r4
 4076              	.LVL470:
 4077 0010 FFF7FEFF 		bl	HAL_JPEG_Pause
 4078              	.LVL471:
2992:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 4079              		.loc 1 2992 0
 4080 0014 0023     		movs	r3, #0
2997:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4081              		.loc 1 2997 0
 4082 0016 16E0     		b	.L265
 4083              	.LVL472:
 4084              	.L264:
2999:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4085              		.loc 1 2999 0
 4086 0018 C269     		ldr	r2, [r0, #28]
 4087 001a 9342     		cmp	r3, r2
 4088 001c 02D9     		bls	.L266
3001:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4089              		.loc 1 3001 0
 4090 001e C269     		ldr	r2, [r0, #28]
 4091 0020 9B1A     		subs	r3, r3, r2
 4092              	.LVL473:
 4093 0022 10E0     		b	.L265
 4094              	.LVL474:
 4095              	.L266:
3003:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4096              		.loc 1 3003 0
 4097 0024 C269     		ldr	r2, [r0, #28]
ARM GAS  /tmp/ccSvCFam.s 			page 141


 4098 0026 9342     		cmp	r3, r2
 4099 0028 0CD1     		bne	.L276
3006:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(hjpeg->InDataLength > 4)
 4100              		.loc 1 3006 0
 4101 002a C169     		ldr	r1, [r0, #28]
 4102              	.LVL475:
 4103 002c FFF7FEFF 		bl	HAL_JPEG_GetDataCallback
 4104              	.LVL476:
3007:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {      
 4105              		.loc 1 3007 0
 4106 0030 636A     		ldr	r3, [r4, #36]
 4107 0032 042B     		cmp	r3, #4
 4108 0034 02D9     		bls	.L267
3009:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4109              		.loc 1 3009 0
 4110 0036 23F00303 		bic	r3, r3, #3
 4111 003a 6362     		str	r3, [r4, #36]
 4112              	.L267:
3011:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     nbBytes = hjpeg->InDataLength;      
 4113              		.loc 1 3011 0
 4114 003c 0023     		movs	r3, #0
 4115 003e E361     		str	r3, [r4, #28]
3012:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4116              		.loc 1 3012 0
 4117 0040 636A     		ldr	r3, [r4, #36]
 4118              	.LVL477:
 4119 0042 00E0     		b	.L265
 4120              	.LVL478:
 4121              	.L276:
2992:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 4122              		.loc 1 2992 0
 4123 0044 0023     		movs	r3, #0
 4124              	.LVL479:
 4125              	.L265:
3014:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 4126              		.loc 1 3014 0
 4127 0046 002B     		cmp	r3, #0
 4128 0048 39D0     		beq	.L262
3014:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 4129              		.loc 1 3014 0 is_stmt 0 discriminator 1
 4130 004a 226D     		ldr	r2, [r4, #80]
 4131 004c 12F4805F 		tst	r2, #4096
 4132 0050 35D1     		bne	.L262
3016:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     if(nBwords >= nbRequestWords)
 4133              		.loc 1 3016 0 is_stmt 1
 4134 0052 9908     		lsrs	r1, r3, #2
 4135              	.LVL480:
3017:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4136              		.loc 1 3017 0
 4137 0054 8D42     		cmp	r5, r1
 4138 0056 0CD9     		bls	.L277
 4139 0058 0FE0     		b	.L279
 4140              	.LVL481:
 4141              	.L271:
3021:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4142              		.loc 1 3021 0 discriminator 3
 4143 005a 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccSvCFam.s 			page 142


 4144 005c 6069     		ldr	r0, [r4, #20]
 4145 005e E369     		ldr	r3, [r4, #28]
 4146 0060 9B08     		lsrs	r3, r3, #2
 4147 0062 50F82330 		ldr	r3, [r0, r3, lsl #2]
 4148 0066 0B64     		str	r3, [r1, #64]
3023:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 4149              		.loc 1 3023 0 discriminator 3
 4150 0068 E369     		ldr	r3, [r4, #28]
 4151 006a 0433     		adds	r3, r3, #4
 4152 006c E361     		str	r3, [r4, #28]
3019:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {      
 4153              		.loc 1 3019 0 discriminator 3
 4154 006e 0132     		adds	r2, r2, #1
 4155              	.LVL482:
 4156 0070 00E0     		b	.L269
 4157              	.LVL483:
 4158              	.L277:
 4159 0072 0022     		movs	r2, #0
 4160              	.LVL484:
 4161              	.L269:
3019:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {      
 4162              		.loc 1 3019 0 is_stmt 0 discriminator 1
 4163 0074 AA42     		cmp	r2, r5
 4164 0076 F0D3     		bcc	.L271
 4165 0078 38BD     		pop	{r3, r4, r5, pc}
 4166              	.LVL485:
 4167              	.L279:
3028:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4168              		.loc 1 3028 0 is_stmt 1
 4169 007a 71B9     		cbnz	r1, .L278
 4170 007c 0020     		movs	r0, #0
 4171 007e 0246     		mov	r2, r0
 4172 0080 19E0     		b	.L273
 4173              	.LVL486:
 4174              	.L274:
3032:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4175              		.loc 1 3032 0 discriminator 3
 4176 0082 2068     		ldr	r0, [r4]
 4177 0084 6569     		ldr	r5, [r4, #20]
 4178 0086 E369     		ldr	r3, [r4, #28]
 4179 0088 9B08     		lsrs	r3, r3, #2
 4180 008a 55F82330 		ldr	r3, [r5, r3, lsl #2]
 4181 008e 0364     		str	r3, [r0, #64]
3034:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }        
 4182              		.loc 1 3034 0 discriminator 3
 4183 0090 E369     		ldr	r3, [r4, #28]
 4184 0092 0433     		adds	r3, r3, #4
 4185 0094 E361     		str	r3, [r4, #28]
3030:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {      
 4186              		.loc 1 3030 0 discriminator 3
 4187 0096 0132     		adds	r2, r2, #1
 4188              	.LVL487:
 4189 0098 00E0     		b	.L272
 4190              	.LVL488:
 4191              	.L278:
 4192 009a 0022     		movs	r2, #0
 4193              	.LVL489:
ARM GAS  /tmp/ccSvCFam.s 			page 143


 4194              	.L272:
3030:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {      
 4195              		.loc 1 3030 0 is_stmt 0 discriminator 1
 4196 009c 8A42     		cmp	r2, r1
 4197 009e F0D3     		bcc	.L274
 4198 00a0 38BD     		pop	{r3, r4, r5, pc}
 4199              	.LVL490:
 4200              	.L275:
3043:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           hjpeg->JpegInCount++;
 4201              		.loc 1 3043 0 is_stmt 1 discriminator 3
 4202 00a2 6569     		ldr	r5, [r4, #20]
 4203 00a4 E169     		ldr	r1, [r4, #28]
 4204 00a6 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 4205 00a8 D500     		lsls	r5, r2, #3
 4206 00aa A940     		lsls	r1, r1, r5
 4207 00ac 0843     		orrs	r0, r0, r1
 4208              	.LVL491:
3044:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
 4209              		.loc 1 3044 0 discriminator 3
 4210 00ae E169     		ldr	r1, [r4, #28]
 4211 00b0 0131     		adds	r1, r1, #1
 4212 00b2 E161     		str	r1, [r4, #28]
3041:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 4213              		.loc 1 3041 0 discriminator 3
 4214 00b4 0132     		adds	r2, r2, #1
 4215              	.LVL492:
 4216              	.L273:
3041:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 4217              		.loc 1 3041 0 is_stmt 0 discriminator 1
 4218 00b6 9342     		cmp	r3, r2
 4219 00b8 F3D8     		bhi	.L275
3046:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }       
 4220              		.loc 1 3046 0 is_stmt 1
 4221 00ba 2368     		ldr	r3, [r4]
 4222              	.LVL493:
 4223 00bc 1864     		str	r0, [r3, #64]
 4224              	.LVL494:
 4225              	.L262:
 4226 00be 38BD     		pop	{r3, r4, r5, pc}
 4227              		.cfi_endproc
 4228              	.LFE179:
 4230              		.section	.text.JPEG_DMAInCpltCallback,"ax",%progbits
 4231              		.align	2
 4232              		.thumb
 4233              		.thumb_func
 4235              	JPEG_DMAInCpltCallback:
 4236              	.LFB184:
3282:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4237              		.loc 1 3282 0
 4238              		.cfi_startproc
 4239              		@ args = 0, pretend = 0, frame = 0
 4240              		@ frame_needed = 0, uses_anonymous_args = 0
 4241              	.LVL495:
 4242 0000 10B5     		push	{r4, lr}
 4243              	.LCFI59:
 4244              		.cfi_def_cfa_offset 8
 4245              		.cfi_offset 4, -8
ARM GAS  /tmp/ccSvCFam.s 			page 144


 4246              		.cfi_offset 14, -4
3283:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 4247              		.loc 1 3283 0
 4248 0002 846B     		ldr	r4, [r0, #56]
 4249              	.LVL496:
3286:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 4250              		.loc 1 3286 0
 4251 0004 2268     		ldr	r2, [r4]
 4252 0006 136B     		ldr	r3, [r2, #48]
 4253 0008 23F07E03 		bic	r3, r3, #126
 4254 000c 1363     		str	r3, [r2, #48]
3288:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 4255              		.loc 1 3288 0
 4256 000e 236D     		ldr	r3, [r4, #80]
 4257 0010 03F00C03 		and	r3, r3, #12
 4258 0014 0C2B     		cmp	r3, #12
 4259 0016 35D1     		bne	.L281
3288:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 4260              		.loc 1 3288 0 is_stmt 0 discriminator 1
 4261 0018 236D     		ldr	r3, [r4, #80]
 4262 001a 13F4004F 		tst	r3, #32768
 4263 001e 31D1     		bne	.L281
3290:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4264              		.loc 1 3290 0 is_stmt 1
 4265 0020 2268     		ldr	r2, [r4]
 4266 0022 136B     		ldr	r3, [r2, #48]
 4267 0024 23F40063 		bic	r3, r3, #2048
 4268 0028 1363     		str	r3, [r2, #48]
3292:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 4269              		.loc 1 3292 0
 4270 002a 636A     		ldr	r3, [r4, #36]
 4271 002c 0268     		ldr	r2, [r0]
 4272 002e 5168     		ldr	r1, [r2, #4]
 4273 0030 154A     		ldr	r2, .L287
 4274 0032 02EA8102 		and	r2, r2, r1, lsl #2
 4275 0036 9B1A     		subs	r3, r3, r2
 4276 0038 E361     		str	r3, [r4, #28]
3295:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4277              		.loc 1 3295 0
 4278 003a E169     		ldr	r1, [r4, #28]
 4279 003c 2046     		mov	r0, r4
 4280              	.LVL497:
 4281 003e FFF7FEFF 		bl	HAL_JPEG_GetDataCallback
 4282              	.LVL498:
3297:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4283              		.loc 1 3297 0
 4284 0042 636A     		ldr	r3, [r4, #36]
 4285 0044 032B     		cmp	r3, #3
 4286 0046 03D9     		bls	.L283
3301:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4287              		.loc 1 3301 0
 4288 0048 23F00303 		bic	r3, r3, #3
 4289 004c 6362     		str	r3, [r4, #36]
 4290 004e 02E0     		b	.L284
 4291              	.L283:
3303:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4292              		.loc 1 3303 0
ARM GAS  /tmp/ccSvCFam.s 			page 145


 4293 0050 0BB1     		cbz	r3, .L284
3306:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4294              		.loc 1 3306 0
 4295 0052 0423     		movs	r3, #4
 4296 0054 6362     		str	r3, [r4, #36]
 4297              	.L284:
3309:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {  
 4298              		.loc 1 3309 0
 4299 0056 236D     		ldr	r3, [r4, #80]
 4300 0058 13F4805F 		tst	r3, #4096
 4301 005c 0DD1     		bne	.L285
3309:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {  
 4302              		.loc 1 3309 0 is_stmt 0 discriminator 1
 4303 005e 636A     		ldr	r3, [r4, #36]
 4304 0060 5BB1     		cbz	r3, .L285
3312:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       JPEG_ENABLE_DMA(hjpeg,JPEG_DMA_IDMA);
 4305              		.loc 1 3312 0 is_stmt 1
 4306 0062 2268     		ldr	r2, [r4]
 4307 0064 9B08     		lsrs	r3, r3, #2
 4308 0066 4032     		adds	r2, r2, #64
 4309 0068 6169     		ldr	r1, [r4, #20]
 4310 006a E06A     		ldr	r0, [r4, #44]
 4311 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 4312              	.LVL499:
3313:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }       
 4313              		.loc 1 3313 0
 4314 0070 2268     		ldr	r2, [r4]
 4315 0072 136B     		ldr	r3, [r2, #48]
 4316 0074 43F40063 		orr	r3, r3, #2048
 4317 0078 1363     		str	r3, [r2, #48]
 4318              	.L285:
3317:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 4319              		.loc 1 3317 0
 4320 007a 2268     		ldr	r2, [r4]
 4321 007c 136B     		ldr	r3, [r2, #48]
 4322 007e 43F06003 		orr	r3, r3, #96
 4323 0082 1363     		str	r3, [r2, #48]
 4324              	.L281:
 4325 0084 10BD     		pop	{r4, pc}
 4326              	.LVL500:
 4327              	.L288:
 4328 0086 00BF     		.align	2
 4329              	.L287:
 4330 0088 FCFF0300 		.word	262140
 4331              		.cfi_endproc
 4332              	.LFE184:
 4334              		.section	.text.HAL_JPEG_DataReadyCallback,"ax",%progbits
 4335              		.align	2
 4336              		.weak	HAL_JPEG_DataReadyCallback
 4337              		.thumb
 4338              		.thumb_func
 4340              	HAL_JPEG_DataReadyCallback:
 4341              	.LFB161:
1883:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /* Prevent unused argument(s) compilation warning */
 4342              		.loc 1 1883 0
 4343              		.cfi_startproc
 4344              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSvCFam.s 			page 146


 4345              		@ frame_needed = 0, uses_anonymous_args = 0
 4346              		@ link register save eliminated.
 4347              	.LVL501:
 4348 0000 7047     		bx	lr
 4349              		.cfi_endproc
 4350              	.LFE161:
 4352 0002 00BF     		.section	.text.JPEG_StoreOutputData,"ax",%progbits
 4353              		.align	2
 4354              		.thumb
 4355              		.thumb_func
 4357              	JPEG_StoreOutputData:
 4358              	.LFB178:
2921:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t index, nBwords, nbBytes , dataword, *pOutData;
 4359              		.loc 1 2921 0
 4360              		.cfi_startproc
 4361              		@ args = 0, pretend = 0, frame = 0
 4362              		@ frame_needed = 0, uses_anonymous_args = 0
 4363              	.LVL502:
2921:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t index, nBwords, nbBytes , dataword, *pOutData;
 4364              		.loc 1 2921 0
 4365 0000 70B5     		push	{r4, r5, r6, lr}
 4366              	.LCFI60:
 4367              		.cfi_def_cfa_offset 16
 4368              		.cfi_offset 4, -16
 4369              		.cfi_offset 5, -12
 4370              		.cfi_offset 6, -8
 4371              		.cfi_offset 14, -4
 4372 0002 0446     		mov	r4, r0
2924:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4373              		.loc 1 2924 0
 4374 0004 8269     		ldr	r2, [r0, #24]
 4375 0006 036A     		ldr	r3, [r0, #32]
 4376 0008 23F00303 		bic	r3, r3, #3
 4377 000c 1344     		add	r3, r3, r2
 4378              	.LVL503:
2926:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4379              		.loc 1 2926 0
 4380 000e 826A     		ldr	r2, [r0, #40]
 4381 0010 006A     		ldr	r0, [r0, #32]
 4382              	.LVL504:
 4383 0012 00EB8100 		add	r0, r0, r1, lsl #2
 4384 0016 8242     		cmp	r2, r0
 4385 0018 09D2     		bcs	.L302
 4386 001a 17E0     		b	.L303
 4387              	.LVL505:
 4388              	.L293:
2931:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       pOutData++;
 4389              		.loc 1 2931 0 discriminator 3
 4390 001c 2268     		ldr	r2, [r4]
 4391 001e 526C     		ldr	r2, [r2, #68]
 4392 0020 43F8042B 		str	r2, [r3], #4
 4393              	.LVL506:
2933:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4394              		.loc 1 2933 0 discriminator 3
 4395 0024 226A     		ldr	r2, [r4, #32]
 4396 0026 0432     		adds	r2, r2, #4
 4397 0028 2262     		str	r2, [r4, #32]
ARM GAS  /tmp/ccSvCFam.s 			page 147


2928:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4398              		.loc 1 2928 0 discriminator 3
 4399 002a 0130     		adds	r0, r0, #1
 4400              	.LVL507:
 4401 002c 00E0     		b	.L291
 4402              	.LVL508:
 4403              	.L302:
 4404 002e 0020     		movs	r0, #0
 4405              	.L291:
 4406              	.LVL509:
2928:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4407              		.loc 1 2928 0 is_stmt 0 discriminator 1
 4408 0030 8842     		cmp	r0, r1
 4409 0032 F3D3     		bcc	.L293
2935:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4410              		.loc 1 2935 0 is_stmt 1
 4411 0034 A26A     		ldr	r2, [r4, #40]
 4412 0036 236A     		ldr	r3, [r4, #32]
 4413              	.LVL510:
 4414 0038 9A42     		cmp	r2, r3
 4415 003a 4DD1     		bne	.L290
2938:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;            
 4416              		.loc 1 2938 0
 4417 003c 226A     		ldr	r2, [r4, #32]
 4418 003e A169     		ldr	r1, [r4, #24]
 4419              	.LVL511:
 4420 0040 2046     		mov	r0, r4
 4421              	.LVL512:
 4422 0042 FFF7FEFF 		bl	HAL_JPEG_DataReadyCallback
 4423              	.LVL513:
2939:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4424              		.loc 1 2939 0
 4425 0046 0023     		movs	r3, #0
 4426 0048 2362     		str	r3, [r4, #32]
 4427 004a 70BD     		pop	{r4, r5, r6, pc}
 4428              	.LVL514:
 4429              	.L303:
2942:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4430              		.loc 1 2942 0
 4431 004c 216A     		ldr	r1, [r4, #32]
 4432              	.LVL515:
 4433 004e 8A42     		cmp	r2, r1
 4434 0050 42D9     		bls	.L290
2944:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     for(index = 0; index < nBwords; index++)    
 4435              		.loc 1 2944 0
 4436 0052 206A     		ldr	r0, [r4, #32]
 4437 0054 101A     		subs	r0, r2, r0
 4438 0056 8008     		lsrs	r0, r0, #2
 4439              	.LVL516:
2945:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4440              		.loc 1 2945 0
 4441 0058 0021     		movs	r1, #0
 4442 005a 07E0     		b	.L295
 4443              	.LVL517:
 4444              	.L296:
2948:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       pOutData++;
 4445              		.loc 1 2948 0 discriminator 3
ARM GAS  /tmp/ccSvCFam.s 			page 148


 4446 005c 2268     		ldr	r2, [r4]
 4447 005e 526C     		ldr	r2, [r2, #68]
 4448 0060 43F8042B 		str	r2, [r3], #4
 4449              	.LVL518:
2950:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4450              		.loc 1 2950 0 discriminator 3
 4451 0064 226A     		ldr	r2, [r4, #32]
 4452 0066 0432     		adds	r2, r2, #4
 4453 0068 2262     		str	r2, [r4, #32]
2945:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4454              		.loc 1 2945 0 discriminator 3
 4455 006a 0131     		adds	r1, r1, #1
 4456              	.LVL519:
 4457              	.L295:
2945:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4458              		.loc 1 2945 0 is_stmt 0 discriminator 1
 4459 006c 8142     		cmp	r1, r0
 4460 006e F5D3     		bcc	.L296
2952:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4461              		.loc 1 2952 0 is_stmt 1
 4462 0070 A36A     		ldr	r3, [r4, #40]
 4463              	.LVL520:
 4464 0072 226A     		ldr	r2, [r4, #32]
 4465 0074 9342     		cmp	r3, r2
 4466 0076 07D1     		bne	.L297
2955:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;            
 4467              		.loc 1 2955 0
 4468 0078 226A     		ldr	r2, [r4, #32]
 4469 007a A169     		ldr	r1, [r4, #24]
 4470              	.LVL521:
 4471 007c 2046     		mov	r0, r4
 4472              	.LVL522:
 4473 007e FFF7FEFF 		bl	HAL_JPEG_DataReadyCallback
 4474              	.LVL523:
2956:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4475              		.loc 1 2956 0
 4476 0082 0023     		movs	r3, #0
 4477 0084 2362     		str	r3, [r4, #32]
 4478 0086 70BD     		pop	{r4, r5, r6, pc}
 4479              	.LVL524:
 4480              	.L297:
2960:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       dataword = hjpeg->Instance->DOR;
 4481              		.loc 1 2960 0
 4482 0088 256A     		ldr	r5, [r4, #32]
 4483 008a 5D1B     		subs	r5, r3, r5
 4484              	.LVL525:
2961:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       for(index = 0; index < nbBytes; index++)
 4485              		.loc 1 2961 0
 4486 008c 2368     		ldr	r3, [r4]
 4487 008e 5E6C     		ldr	r6, [r3, #68]
 4488              	.LVL526:
2962:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4489              		.loc 1 2962 0
 4490 0090 0023     		movs	r3, #0
 4491 0092 09E0     		b	.L298
 4492              	.LVL527:
 4493              	.L299:
ARM GAS  /tmp/ccSvCFam.s 			page 149


2964:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->JpegOutCount++;
 4494              		.loc 1 2964 0 discriminator 3
 4495 0094 A069     		ldr	r0, [r4, #24]
 4496 0096 216A     		ldr	r1, [r4, #32]
 4497 0098 DA00     		lsls	r2, r3, #3
 4498 009a 26FA02F2 		lsr	r2, r6, r2
 4499 009e 4254     		strb	r2, [r0, r1]
2965:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }        
 4500              		.loc 1 2965 0 discriminator 3
 4501 00a0 226A     		ldr	r2, [r4, #32]
 4502 00a2 0132     		adds	r2, r2, #1
 4503 00a4 2262     		str	r2, [r4, #32]
2962:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4504              		.loc 1 2962 0 discriminator 3
 4505 00a6 0133     		adds	r3, r3, #1
 4506              	.LVL528:
 4507              	.L298:
2962:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4508              		.loc 1 2962 0 is_stmt 0 discriminator 1
 4509 00a8 AB42     		cmp	r3, r5
 4510 00aa F3D3     		bcc	.L299
2968:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
 4511              		.loc 1 2968 0 is_stmt 1
 4512 00ac 226A     		ldr	r2, [r4, #32]
 4513 00ae A169     		ldr	r1, [r4, #24]
 4514 00b0 2046     		mov	r0, r4
 4515 00b2 FFF7FEFF 		bl	HAL_JPEG_DataReadyCallback
 4516              	.LVL529:
2969:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4517              		.loc 1 2969 0
 4518 00b6 0023     		movs	r3, #0
 4519 00b8 2362     		str	r3, [r4, #32]
2971:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       for(index = nbBytes; index < 4; index++)
 4520              		.loc 1 2971 0
 4521 00ba C5F10403 		rsb	r3, r5, #4
 4522              	.LVL530:
2972:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4523              		.loc 1 2972 0
 4524 00be 09E0     		b	.L300
 4525              	.LVL531:
 4526              	.L301:
2974:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         hjpeg->JpegOutCount++;
 4527              		.loc 1 2974 0 discriminator 3
 4528 00c0 A069     		ldr	r0, [r4, #24]
 4529 00c2 216A     		ldr	r1, [r4, #32]
 4530 00c4 DA00     		lsls	r2, r3, #3
 4531 00c6 26FA02F2 		lsr	r2, r6, r2
 4532 00ca 4254     		strb	r2, [r0, r1]
2975:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 4533              		.loc 1 2975 0 discriminator 3
 4534 00cc 226A     		ldr	r2, [r4, #32]
 4535 00ce 0132     		adds	r2, r2, #1
 4536 00d0 2262     		str	r2, [r4, #32]
2972:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4537              		.loc 1 2972 0 discriminator 3
 4538 00d2 0133     		adds	r3, r3, #1
 4539              	.LVL532:
ARM GAS  /tmp/ccSvCFam.s 			page 150


 4540              	.L300:
2972:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4541              		.loc 1 2972 0 is_stmt 0 discriminator 1
 4542 00d4 032B     		cmp	r3, #3
 4543 00d6 F3D9     		bls	.L301
 4544              	.LVL533:
 4545              	.L290:
 4546 00d8 70BD     		pop	{r4, r5, r6, pc}
 4547              		.cfi_endproc
 4548              	.LFE178:
 4550 00da 00BF     		.section	.text.JPEG_Process,"ax",%progbits
 4551              		.align	2
 4552              		.thumb
 4553              		.thumb_func
 4555              	JPEG_Process:
 4556              	.LFB177:
2803:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tmpContext;
 4557              		.loc 1 2803 0 is_stmt 1
 4558              		.cfi_startproc
 4559              		@ args = 0, pretend = 0, frame = 0
 4560              		@ frame_needed = 0, uses_anonymous_args = 0
 4561              	.LVL534:
 4562 0000 38B5     		push	{r3, r4, r5, lr}
 4563              	.LCFI61:
 4564              		.cfi_def_cfa_offset 16
 4565              		.cfi_offset 3, -16
 4566              		.cfi_offset 4, -12
 4567              		.cfi_offset 5, -8
 4568              		.cfi_offset 14, -4
 4569 0002 0446     		mov	r4, r0
2807:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4570              		.loc 1 2807 0
 4571 0004 036D     		ldr	r3, [r0, #80]
 4572 0006 03F00303 		and	r3, r3, #3
 4573 000a 022B     		cmp	r3, #2
 4574 000c 18D1     		bne	.L306
2807:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4575              		.loc 1 2807 0 is_stmt 0 discriminator 1
 4576 000e 0368     		ldr	r3, [r0]
 4577 0010 5B6B     		ldr	r3, [r3, #52]
 4578 0012 13F0400F 		tst	r3, #64
 4579 0016 13D0     		beq	.L306
2810:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Reset the ImageQuality */
 4580              		.loc 1 2810 0 is_stmt 1
 4581 0018 051D     		adds	r5, r0, #4
 4582 001a 2946     		mov	r1, r5
 4583 001c FFF7FEFF 		bl	HAL_JPEG_GetInfo
 4584              	.LVL535:
2812:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Note : the image quality is only available at the end of the decoding operation */
 4585              		.loc 1 2812 0
 4586 0020 0023     		movs	r3, #0
 4587 0022 2374     		strb	r3, [r4, #16]
2817:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4588              		.loc 1 2817 0
 4589 0024 2946     		mov	r1, r5
 4590 0026 2046     		mov	r0, r4
 4591 0028 FFF7FEFF 		bl	HAL_JPEG_InfoReadyCallback
ARM GAS  /tmp/ccSvCFam.s 			page 151


 4592              	.LVL536:
2819:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4593              		.loc 1 2819 0
 4594 002c 2268     		ldr	r2, [r4]
 4595 002e 136B     		ldr	r3, [r2, #48]
 4596 0030 23F04003 		bic	r3, r3, #64
 4597 0034 1363     		str	r3, [r2, #48]
2822:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4598              		.loc 1 2822 0
 4599 0036 2268     		ldr	r2, [r4]
 4600 0038 936B     		ldr	r3, [r2, #56]
 4601 003a 43F04003 		orr	r3, r3, #64
 4602 003e 9363     		str	r3, [r2, #56]
 4603              	.L306:
2826:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 4604              		.loc 1 2826 0
 4605 0040 236D     		ldr	r3, [r4, #80]
 4606 0042 13F4805F 		tst	r3, #4096
 4607 0046 11D1     		bne	.L307
2828:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4608              		.loc 1 2828 0
 4609 0048 2368     		ldr	r3, [r4]
 4610 004a 5A6B     		ldr	r2, [r3, #52]
 4611 004c 12F0020F 		tst	r2, #2
 4612 0050 04D0     		beq	.L308
2832:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4613              		.loc 1 2832 0
 4614 0052 0421     		movs	r1, #4
 4615 0054 2046     		mov	r0, r4
 4616 0056 FFF7FEFF 		bl	JPEG_ReadInputData
 4617              	.LVL537:
 4618 005a 07E0     		b	.L307
 4619              	.L308:
2834:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4620              		.loc 1 2834 0
 4621 005c 5B6B     		ldr	r3, [r3, #52]
 4622 005e 13F0040F 		tst	r3, #4
 4623 0062 03D0     		beq	.L307
2838:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4624              		.loc 1 2838 0
 4625 0064 0121     		movs	r1, #1
 4626 0066 2046     		mov	r0, r4
 4627 0068 FFF7FEFF 		bl	JPEG_ReadInputData
 4628              	.LVL538:
 4629              	.L307:
2844:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 4630              		.loc 1 2844 0
 4631 006c 236D     		ldr	r3, [r4, #80]
 4632 006e 13F4005F 		tst	r3, #8192
 4633 0072 11D1     		bne	.L309
2846:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4634              		.loc 1 2846 0
 4635 0074 2368     		ldr	r3, [r4]
 4636 0076 5A6B     		ldr	r2, [r3, #52]
 4637 0078 12F0080F 		tst	r2, #8
 4638 007c 04D0     		beq	.L310
2850:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
ARM GAS  /tmp/ccSvCFam.s 			page 152


 4639              		.loc 1 2850 0
 4640 007e 0421     		movs	r1, #4
 4641 0080 2046     		mov	r0, r4
 4642 0082 FFF7FEFF 		bl	JPEG_StoreOutputData
 4643              	.LVL539:
 4644 0086 07E0     		b	.L309
 4645              	.L310:
2852:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4646              		.loc 1 2852 0
 4647 0088 5B6B     		ldr	r3, [r3, #52]
 4648 008a 13F0100F 		tst	r3, #16
 4649 008e 03D0     		beq	.L309
2856:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4650              		.loc 1 2856 0
 4651 0090 0121     		movs	r1, #1
 4652 0092 2046     		mov	r0, r4
 4653 0094 FFF7FEFF 		bl	JPEG_StoreOutputData
 4654              	.LVL540:
 4655              	.L309:
2861:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {    
 4656              		.loc 1 2861 0
 4657 0098 2268     		ldr	r2, [r4]
 4658 009a 536B     		ldr	r3, [r2, #52]
 4659 009c 03F03803 		and	r3, r3, #56
 4660 00a0 202B     		cmp	r3, #32
 4661 00a2 35D1     		bne	.L315
2864:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 4662              		.loc 1 2864 0
 4663 00a4 1368     		ldr	r3, [r2]
 4664 00a6 23F00103 		bic	r3, r3, #1
 4665 00aa 1360     		str	r3, [r2]
2866:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4666              		.loc 1 2866 0
 4667 00ac 236D     		ldr	r3, [r4, #80]
 4668 00ae 03F00C03 		and	r3, r3, #12
 4669 00b2 082B     		cmp	r3, #8
 4670 00b4 04D1     		bne	.L312
2869:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4671              		.loc 1 2869 0
 4672 00b6 2268     		ldr	r2, [r4]
 4673 00b8 136B     		ldr	r3, [r2, #48]
 4674 00ba 23F07E03 		bic	r3, r3, #126
 4675 00be 1363     		str	r3, [r2, #48]
 4676              	.L312:
2873:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 4677              		.loc 1 2873 0
 4678 00c0 2268     		ldr	r2, [r4]
 4679 00c2 936B     		ldr	r3, [r2, #56]
 4680 00c4 43F06003 		orr	r3, r3, #96
 4681 00c8 9363     		str	r3, [r2, #56]
2876:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4682              		.loc 1 2876 0
 4683 00ca 236A     		ldr	r3, [r4, #32]
 4684 00cc 33B1     		cbz	r3, .L313
2879:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
 4685              		.loc 1 2879 0
 4686 00ce 226A     		ldr	r2, [r4, #32]
ARM GAS  /tmp/ccSvCFam.s 			page 153


 4687 00d0 A169     		ldr	r1, [r4, #24]
 4688 00d2 2046     		mov	r0, r4
 4689 00d4 FFF7FEFF 		bl	HAL_JPEG_DataReadyCallback
 4690              	.LVL541:
2880:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4691              		.loc 1 2880 0
 4692 00d8 0023     		movs	r3, #0
 4693 00da 2362     		str	r3, [r4, #32]
 4694              	.L313:
2884:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Clear all context fields execpt JPEG_CONTEXT_CONF_ENCODING and JPEG_CONTEXT_CUSTOM_TABLES*/
 4695              		.loc 1 2884 0
 4696 00dc 256D     		ldr	r5, [r4, #80]
 4697              	.LVL542:
2886:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4698              		.loc 1 2886 0
 4699 00de 236D     		ldr	r3, [r4, #80]
 4700 00e0 03F48243 		and	r3, r3, #16640
 4701 00e4 2365     		str	r3, [r4, #80]
2889:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4702              		.loc 1 2889 0
 4703 00e6 0023     		movs	r3, #0
 4704 00e8 84F84830 		strb	r3, [r4, #72]
2892:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4705              		.loc 1 2892 0
 4706 00ec 0123     		movs	r3, #1
 4707 00ee 84F84930 		strb	r3, [r4, #73]
2895:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4708              		.loc 1 2895 0
 4709 00f2 05F00305 		and	r5, r5, #3
 4710              	.LVL543:
 4711 00f6 022D     		cmp	r5, #2
 4712 00f8 04D1     		bne	.L314
2897:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4713              		.loc 1 2897 0
 4714 00fa 2046     		mov	r0, r4
 4715 00fc FFF7FEFF 		bl	HAL_JPEG_DecodeCpltCallback
 4716              	.LVL544:
2904:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 4717              		.loc 1 2904 0
 4718 0100 0125     		movs	r5, #1
 4719 0102 08E0     		b	.L311
 4720              	.L314:
2899:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 4721              		.loc 1 2899 0
 4722 0104 012D     		cmp	r5, #1
 4723 0106 05D1     		bne	.L316
2901:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4724              		.loc 1 2901 0
 4725 0108 2046     		mov	r0, r4
 4726 010a FFF7FEFF 		bl	HAL_JPEG_EncodeCpltCallback
 4727              	.LVL545:
 4728 010e 02E0     		b	.L311
 4729              	.L315:
2908:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 4730              		.loc 1 2908 0
 4731 0110 0025     		movs	r5, #0
 4732 0112 00E0     		b	.L311
ARM GAS  /tmp/ccSvCFam.s 			page 154


 4733              	.L316:
2904:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 4734              		.loc 1 2904 0
 4735 0114 0125     		movs	r5, #1
 4736              	.L311:
2909:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 4737              		.loc 1 2909 0
 4738 0116 2846     		mov	r0, r5
 4739 0118 38BD     		pop	{r3, r4, r5, pc}
 4740              		.cfi_endproc
 4741              	.LFE177:
 4743 011a 00BF     		.section	.text.HAL_JPEG_Encode,"ax",%progbits
 4744              		.align	2
 4745              		.global	HAL_JPEG_Encode
 4746              		.thumb
 4747              		.thumb_func
 4749              	HAL_JPEG_Encode:
 4750              	.LFB145:
1061:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tickstart = 0;
 4751              		.loc 1 1061 0
 4752              		.cfi_startproc
 4753              		@ args = 8, pretend = 0, frame = 0
 4754              		@ frame_needed = 0, uses_anonymous_args = 0
 4755              	.LVL546:
1069:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
 4756              		.loc 1 1069 0
 4757 0000 0029     		cmp	r1, #0
 4758 0002 18BF     		it	ne
 4759 0004 0028     		cmpne	r0, #0
 4760 0006 74D0     		beq	.L326
1061:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tickstart = 0;
 4761              		.loc 1 1061 0 discriminator 1
 4762 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4763              	.LCFI62:
 4764              		.cfi_def_cfa_offset 24
 4765              		.cfi_offset 4, -24
 4766              		.cfi_offset 5, -20
 4767              		.cfi_offset 6, -16
 4768              		.cfi_offset 7, -12
 4769              		.cfi_offset 8, -8
 4770              		.cfi_offset 14, -4
 4771 000c 0446     		mov	r4, r0
 4772 000e 0D46     		mov	r5, r1
1070:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4773              		.loc 1 1070 0 discriminator 1
 4774 0010 B2FA82F1 		clz	r1, r2
 4775              	.LVL547:
 4776 0014 4909     		lsrs	r1, r1, #5
1069:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     (InDataLength == 0) || (OutDataLength == 0))
 4777              		.loc 1 1069 0 discriminator 1
 4778 0016 002B     		cmp	r3, #0
 4779 0018 6DD0     		beq	.L327
 4780 001a 0029     		cmp	r1, #0
 4781 001c 6BD1     		bne	.L327
1070:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4782              		.loc 1 1070 0
 4783 001e 0699     		ldr	r1, [sp, #24]
ARM GAS  /tmp/ccSvCFam.s 			page 155


 4784 0020 0029     		cmp	r1, #0
 4785 0022 6BD0     		beq	.L328
1075:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 4786              		.loc 1 1075 0
 4787 0024 90F84810 		ldrb	r1, [r0, #72]	@ zero_extendqisi2
 4788 0028 0129     		cmp	r1, #1
 4789 002a 6AD0     		beq	.L329
1075:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 4790              		.loc 1 1075 0 is_stmt 0 discriminator 2
 4791 002c 0121     		movs	r1, #1
 4792 002e 80F84810 		strb	r1, [r0, #72]
1077:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4793              		.loc 1 1077 0 is_stmt 1 discriminator 2
 4794 0032 90F84910 		ldrb	r1, [r0, #73]	@ zero_extendqisi2
 4795 0036 C9B2     		uxtb	r1, r1
 4796 0038 0129     		cmp	r1, #1
 4797 003a 05D0     		beq	.L320
1080:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 4798              		.loc 1 1080 0
 4799 003c 0023     		movs	r3, #0
 4800              	.LVL548:
 4801 003e 80F84830 		strb	r3, [r0, #72]
1082:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4802              		.loc 1 1082 0
 4803 0042 0220     		movs	r0, #2
 4804              	.LVL549:
 4805 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4806              	.LVL550:
 4807              	.L320:
1085:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 4808              		.loc 1 1085 0
 4809 0048 90F84910 		ldrb	r1, [r0, #73]	@ zero_extendqisi2
 4810 004c C9B2     		uxtb	r1, r1
 4811 004e 0129     		cmp	r1, #1
 4812 0050 5AD1     		bne	.L330
1087:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {      
 4813              		.loc 1 1087 0
 4814 0052 016D     		ldr	r1, [r0, #80]
 4815 0054 11F4807F 		tst	r1, #256
 4816 0058 45D0     		beq	.L321
 4817 005a 1F46     		mov	r7, r3
 4818 005c 1646     		mov	r6, r2
1090:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4819              		.loc 1 1090 0
 4820 005e 0323     		movs	r3, #3
 4821              	.LVL551:
 4822 0060 80F84930 		strb	r3, [r0, #73]
1093:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->Context |= (JPEG_CONTEXT_ENCODE | JPEG_CONTEXT_POLLING);
 4823              		.loc 1 1093 0
 4824 0064 036D     		ldr	r3, [r0, #80]
 4825 0066 23F00F03 		bic	r3, r3, #15
 4826 006a 0365     		str	r3, [r0, #80]
1094:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4827              		.loc 1 1094 0
 4828 006c 036D     		ldr	r3, [r0, #80]
 4829 006e 43F00503 		orr	r3, r3, #5
 4830 0072 0365     		str	r3, [r0, #80]
ARM GAS  /tmp/ccSvCFam.s 			page 156


1097:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       /*In/Out Data length must be multiple of 4 Bytes (1 word)*/
 4831              		.loc 1 1097 0
 4832 0074 FFF7FEFF 		bl	HAL_GetTick
 4833              	.LVL552:
 4834 0078 8046     		mov	r8, r0
 4835              	.LVL553:
1099:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       OutDataLength = OutDataLength - (OutDataLength % 4);
 4836              		.loc 1 1099 0
 4837 007a 26F00306 		bic	r6, r6, #3
 4838              	.LVL554:
1100:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4839              		.loc 1 1100 0
 4840 007e 069B     		ldr	r3, [sp, #24]
 4841 0080 23F00302 		bic	r2, r3, #3
 4842              	.LVL555:
1103:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->pJpegOutBuffPtr = pDataOut;
 4843              		.loc 1 1103 0
 4844 0084 6561     		str	r5, [r4, #20]
1104:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->InDataLength = InDataLength;
 4845              		.loc 1 1104 0
 4846 0086 A761     		str	r7, [r4, #24]
1105:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->OutDataLength = OutDataLength;
 4847              		.loc 1 1105 0
 4848 0088 6662     		str	r6, [r4, #36]
1106:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4849              		.loc 1 1106 0
 4850 008a A262     		str	r2, [r4, #40]
1109:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;
 4851              		.loc 1 1109 0
 4852 008c 0023     		movs	r3, #0
 4853 008e E361     		str	r3, [r4, #28]
1110:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4854              		.loc 1 1110 0
 4855 0090 2362     		str	r3, [r4, #32]
1113:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4856              		.loc 1 1113 0
 4857 0092 2046     		mov	r0, r4
 4858              	.LVL556:
 4859 0094 FFF7FEFF 		bl	JPEG_Init_Process
 4860              	.LVL557:
1116:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4861              		.loc 1 1116 0
 4862 0098 18E0     		b	.L323
 4863              	.L325:
1118:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 4864              		.loc 1 1118 0
 4865 009a 079B     		ldr	r3, [sp, #28]
 4866 009c B3F1FF3F 		cmp	r3, #-1
 4867 00a0 14D0     		beq	.L323
1120:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           {
 4868              		.loc 1 1120 0
 4869 00a2 33B1     		cbz	r3, .L324
1120:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           {
 4870              		.loc 1 1120 0 is_stmt 0 discriminator 1
 4871 00a4 FFF7FEFF 		bl	HAL_GetTick
 4872              	.LVL558:
 4873 00a8 C8EB0000 		rsb	r0, r8, r0
ARM GAS  /tmp/ccSvCFam.s 			page 157


 4874 00ac 079B     		ldr	r3, [sp, #28]
 4875 00ae 8342     		cmp	r3, r0
 4876 00b0 0CD2     		bcs	.L323
 4877              	.L324:
1124:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             
 4878              		.loc 1 1124 0 is_stmt 1
 4879 00b2 E36C     		ldr	r3, [r4, #76]
 4880 00b4 43F00803 		orr	r3, r3, #8
 4881 00b8 E364     		str	r3, [r4, #76]
1127:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             
 4882              		.loc 1 1127 0
 4883 00ba 0023     		movs	r3, #0
 4884 00bc 84F84830 		strb	r3, [r4, #72]
1130:HALLIB/Src/stm32f7xx_hal_jpeg.c ****             
 4885              		.loc 1 1130 0
 4886 00c0 0123     		movs	r3, #1
 4887 00c2 84F84930 		strb	r3, [r4, #73]
1132:HALLIB/Src/stm32f7xx_hal_jpeg.c ****           }
 4888              		.loc 1 1132 0
 4889 00c6 0320     		movs	r0, #3
 4890 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4891              	.LVL559:
 4892              	.L323:
1116:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 4893              		.loc 1 1116 0
 4894 00cc 2046     		mov	r0, r4
 4895 00ce FFF7FEFF 		bl	JPEG_Process
 4896              	.LVL560:
 4897 00d2 0028     		cmp	r0, #0
 4898 00d4 E1D0     		beq	.L325
1138:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4899              		.loc 1 1138 0
 4900 00d6 0020     		movs	r0, #0
 4901 00d8 84F84800 		strb	r0, [r4, #72]
1141:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4902              		.loc 1 1141 0
 4903 00dc 0123     		movs	r3, #1
 4904 00de 84F84930 		strb	r3, [r4, #73]
 4905 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4906              	.LVL561:
 4907              	.L321:
1146:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 4908              		.loc 1 1146 0
 4909 00e6 0023     		movs	r3, #0
 4910              	.LVL562:
 4911 00e8 80F84830 		strb	r3, [r0, #72]
1148:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 4912              		.loc 1 1148 0
 4913 00ec 0120     		movs	r0, #1
 4914              	.LVL563:
 4915 00ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4916              	.LVL564:
 4917              	.L326:
 4918              	.LCFI63:
 4919              		.cfi_def_cfa_offset 0
 4920              		.cfi_restore 4
 4921              		.cfi_restore 5
ARM GAS  /tmp/ccSvCFam.s 			page 158


 4922              		.cfi_restore 6
 4923              		.cfi_restore 7
 4924              		.cfi_restore 8
 4925              		.cfi_restore 14
1072:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4926              		.loc 1 1072 0
 4927 00f2 0120     		movs	r0, #1
 4928              	.LVL565:
1153:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 4929              		.loc 1 1153 0
 4930 00f4 7047     		bx	lr
 4931              	.LVL566:
 4932              	.L327:
 4933              	.LCFI64:
 4934              		.cfi_def_cfa_offset 24
 4935              		.cfi_offset 4, -24
 4936              		.cfi_offset 5, -20
 4937              		.cfi_offset 6, -16
 4938              		.cfi_offset 7, -12
 4939              		.cfi_offset 8, -8
 4940              		.cfi_offset 14, -4
1072:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 4941              		.loc 1 1072 0
 4942 00f6 0120     		movs	r0, #1
 4943              	.LVL567:
 4944 00f8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4945              	.LVL568:
 4946              	.L328:
 4947 00fc 0120     		movs	r0, #1
 4948              	.LVL569:
 4949 00fe BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4950              	.LVL570:
 4951              	.L329:
1075:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 4952              		.loc 1 1075 0
 4953 0102 0220     		movs	r0, #2
 4954              	.LVL571:
 4955 0104 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4956              	.LVL572:
 4957              	.L330:
1152:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 4958              		.loc 1 1152 0
 4959 0108 0020     		movs	r0, #0
 4960              	.LVL573:
1153:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 4961              		.loc 1 1153 0
 4962 010a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4963              		.cfi_endproc
 4964              	.LFE145:
 4966 010e 00BF     		.section	.text.HAL_JPEG_Decode,"ax",%progbits
 4967              		.align	2
 4968              		.global	HAL_JPEG_Decode
 4969              		.thumb
 4970              		.thumb_func
 4972              	HAL_JPEG_Decode:
 4973              	.LFB146:
1167:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tickstart = 0;
ARM GAS  /tmp/ccSvCFam.s 			page 159


 4974              		.loc 1 1167 0
 4975              		.cfi_startproc
 4976              		@ args = 8, pretend = 0, frame = 0
 4977              		@ frame_needed = 0, uses_anonymous_args = 0
 4978              	.LVL574:
1175:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (InDataLength == 0) || (OutDataLength == 0))
 4979              		.loc 1 1175 0
 4980 0000 0029     		cmp	r1, #0
 4981 0002 18BF     		it	ne
 4982 0004 0028     		cmpne	r0, #0
 4983 0006 67D0     		beq	.L339
1167:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tickstart = 0;
 4984              		.loc 1 1167 0 discriminator 1
 4985 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4986              	.LCFI65:
 4987              		.cfi_def_cfa_offset 24
 4988              		.cfi_offset 4, -24
 4989              		.cfi_offset 5, -20
 4990              		.cfi_offset 6, -16
 4991              		.cfi_offset 7, -12
 4992              		.cfi_offset 8, -8
 4993              		.cfi_offset 14, -4
 4994 000c 0D46     		mov	r5, r1
1176:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 4995              		.loc 1 1176 0 discriminator 1
 4996 000e B2FA82F1 		clz	r1, r2
 4997              	.LVL575:
 4998 0012 4909     		lsrs	r1, r1, #5
1175:HALLIB/Src/stm32f7xx_hal_jpeg.c ****      (InDataLength == 0) || (OutDataLength == 0))
 4999              		.loc 1 1175 0 discriminator 1
 5000 0014 002B     		cmp	r3, #0
 5001 0016 61D0     		beq	.L340
 5002 0018 0029     		cmp	r1, #0
 5003 001a 5FD1     		bne	.L340
1176:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5004              		.loc 1 1176 0
 5005 001c 0699     		ldr	r1, [sp, #24]
 5006 001e 0029     		cmp	r1, #0
 5007 0020 5FD0     		beq	.L341
1182:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5008              		.loc 1 1182 0
 5009 0022 90F84810 		ldrb	r1, [r0, #72]	@ zero_extendqisi2
 5010 0026 0129     		cmp	r1, #1
 5011 0028 5ED0     		beq	.L342
 5012 002a 2F46     		mov	r7, r5
 5013 002c 0646     		mov	r6, r0
 5014 002e 1D46     		mov	r5, r3
 5015              	.LVL576:
 5016 0030 1446     		mov	r4, r2
1182:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5017              		.loc 1 1182 0 is_stmt 0 discriminator 2
 5018 0032 0123     		movs	r3, #1
 5019              	.LVL577:
 5020 0034 80F84830 		strb	r3, [r0, #72]
1185:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5021              		.loc 1 1185 0 is_stmt 1 discriminator 2
 5022 0038 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccSvCFam.s 			page 160


 5023              	.LVL578:
 5024 003c 8046     		mov	r8, r0
 5025              	.LVL579:
1187:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5026              		.loc 1 1187 0 discriminator 2
 5027 003e 96F84930 		ldrb	r3, [r6, #73]	@ zero_extendqisi2
 5028 0042 DBB2     		uxtb	r3, r3
 5029 0044 012B     		cmp	r3, #1
 5030 0046 41D1     		bne	.L334
1190:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5031              		.loc 1 1190 0
 5032 0048 0423     		movs	r3, #4
 5033 004a 86F84930 		strb	r3, [r6, #73]
1194:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_POLLING);  
 5034              		.loc 1 1194 0
 5035 004e 336D     		ldr	r3, [r6, #80]
 5036 0050 23F00F03 		bic	r3, r3, #15
 5037 0054 3365     		str	r3, [r6, #80]
1195:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5038              		.loc 1 1195 0
 5039 0056 336D     		ldr	r3, [r6, #80]
 5040 0058 43F00603 		orr	r3, r3, #6
 5041 005c 3365     		str	r3, [r6, #80]
1198:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     OutDataLength = OutDataLength - (OutDataLength % 4);
 5042              		.loc 1 1198 0
 5043 005e 24F00302 		bic	r2, r4, #3
 5044              	.LVL580:
1199:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5045              		.loc 1 1199 0
 5046 0062 069B     		ldr	r3, [sp, #24]
 5047 0064 23F00303 		bic	r3, r3, #3
 5048              	.LVL581:
1202:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->pJpegOutBuffPtr = pDataOutMCU;
 5049              		.loc 1 1202 0
 5050 0068 7761     		str	r7, [r6, #20]
1203:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->InDataLength = InDataLength;
 5051              		.loc 1 1203 0
 5052 006a B561     		str	r5, [r6, #24]
1204:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->OutDataLength = OutDataLength;
 5053              		.loc 1 1204 0
 5054 006c 7262     		str	r2, [r6, #36]
1205:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5055              		.loc 1 1205 0
 5056 006e B362     		str	r3, [r6, #40]
1208:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;
 5057              		.loc 1 1208 0
 5058 0070 0023     		movs	r3, #0
 5059              	.LVL582:
 5060 0072 F361     		str	r3, [r6, #28]
1209:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5061              		.loc 1 1209 0
 5062 0074 3362     		str	r3, [r6, #32]
1212:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5063              		.loc 1 1212 0
 5064 0076 3046     		mov	r0, r6
 5065              	.LVL583:
 5066 0078 FFF7FEFF 		bl	JPEG_Init_Process
ARM GAS  /tmp/ccSvCFam.s 			page 161


 5067              	.LVL584:
1215:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5068              		.loc 1 1215 0
 5069 007c 18E0     		b	.L336
 5070              	.L338:
1217:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 5071              		.loc 1 1217 0
 5072 007e 079B     		ldr	r3, [sp, #28]
 5073 0080 B3F1FF3F 		cmp	r3, #-1
 5074 0084 14D0     		beq	.L336
1219:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 5075              		.loc 1 1219 0
 5076 0086 33B1     		cbz	r3, .L337
1219:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         {
 5077              		.loc 1 1219 0 is_stmt 0 discriminator 1
 5078 0088 FFF7FEFF 		bl	HAL_GetTick
 5079              	.LVL585:
 5080 008c C8EB0000 		rsb	r0, r8, r0
 5081 0090 079B     		ldr	r3, [sp, #28]
 5082 0092 8342     		cmp	r3, r0
 5083 0094 0CD2     		bcs	.L336
 5084              	.L337:
1223:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5085              		.loc 1 1223 0 is_stmt 1
 5086 0096 F36C     		ldr	r3, [r6, #76]
 5087 0098 43F00803 		orr	r3, r3, #8
 5088 009c F364     		str	r3, [r6, #76]
1226:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5089              		.loc 1 1226 0
 5090 009e 0023     		movs	r3, #0
 5091 00a0 86F84830 		strb	r3, [r6, #72]
1229:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5092              		.loc 1 1229 0
 5093 00a4 0123     		movs	r3, #1
 5094 00a6 86F84930 		strb	r3, [r6, #73]
1231:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         }
 5095              		.loc 1 1231 0
 5096 00aa 0320     		movs	r0, #3
 5097 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5098              	.LVL586:
 5099              	.L336:
1215:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5100              		.loc 1 1215 0
 5101 00b0 3046     		mov	r0, r6
 5102 00b2 FFF7FEFF 		bl	JPEG_Process
 5103              	.LVL587:
 5104 00b6 0028     		cmp	r0, #0
 5105 00b8 E1D0     		beq	.L338
1237:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5106              		.loc 1 1237 0
 5107 00ba 0023     		movs	r3, #0
 5108 00bc 86F84830 		strb	r3, [r6, #72]
1240:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5109              		.loc 1 1240 0
 5110 00c0 0122     		movs	r2, #1
 5111 00c2 86F84920 		strb	r2, [r6, #73]
1250:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
ARM GAS  /tmp/ccSvCFam.s 			page 162


 5112              		.loc 1 1250 0
 5113 00c6 1846     		mov	r0, r3
 5114 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5115              	.LVL588:
 5116              	.L334:
1245:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 5117              		.loc 1 1245 0
 5118 00cc 0023     		movs	r3, #0
 5119 00ce 86F84830 		strb	r3, [r6, #72]
1247:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 5120              		.loc 1 1247 0
 5121 00d2 0220     		movs	r0, #2
 5122              	.LVL589:
 5123 00d4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5124              	.LVL590:
 5125              	.L339:
 5126              	.LCFI66:
 5127              		.cfi_def_cfa_offset 0
 5128              		.cfi_restore 4
 5129              		.cfi_restore 5
 5130              		.cfi_restore 6
 5131              		.cfi_restore 7
 5132              		.cfi_restore 8
 5133              		.cfi_restore 14
1178:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 5134              		.loc 1 1178 0
 5135 00d8 0120     		movs	r0, #1
 5136              	.LVL591:
1251:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5137              		.loc 1 1251 0
 5138 00da 7047     		bx	lr
 5139              	.LVL592:
 5140              	.L340:
 5141              	.LCFI67:
 5142              		.cfi_def_cfa_offset 24
 5143              		.cfi_offset 4, -24
 5144              		.cfi_offset 5, -20
 5145              		.cfi_offset 6, -16
 5146              		.cfi_offset 7, -12
 5147              		.cfi_offset 8, -8
 5148              		.cfi_offset 14, -4
1178:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 5149              		.loc 1 1178 0
 5150 00dc 0120     		movs	r0, #1
 5151              	.LVL593:
 5152 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5153              	.LVL594:
 5154              	.L341:
 5155 00e2 0120     		movs	r0, #1
 5156              	.LVL595:
 5157 00e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5158              	.LVL596:
 5159              	.L342:
1182:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5160              		.loc 1 1182 0
 5161 00e8 0220     		movs	r0, #2
 5162              	.LVL597:
ARM GAS  /tmp/ccSvCFam.s 			page 163


1251:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5163              		.loc 1 1251 0
 5164 00ea BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5165              		.cfi_endproc
 5166              	.LFE146:
 5168 00ee 00BF     		.section	.text.JPEG_DMA_PollResidualData,"ax",%progbits
 5169              		.align	2
 5170              		.thumb
 5171              		.thumb_func
 5173              	JPEG_DMA_PollResidualData:
 5174              	.LFB183:
3225:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tmpContext, count = JPEG_FIFO_SIZE, *pDataOut;  
 5175              		.loc 1 3225 0
 5176              		.cfi_startproc
 5177              		@ args = 0, pretend = 0, frame = 0
 5178              		@ frame_needed = 0, uses_anonymous_args = 0
 5179              	.LVL598:
 5180 0000 70B5     		push	{r4, r5, r6, lr}
 5181              	.LCFI68:
 5182              		.cfi_def_cfa_offset 16
 5183              		.cfi_offset 4, -16
 5184              		.cfi_offset 5, -12
 5185              		.cfi_offset 6, -8
 5186              		.cfi_offset 14, -4
 5187 0002 0446     		mov	r4, r0
 5188              	.LVL599:
3227:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5189              		.loc 1 3227 0
 5190 0004 8669     		ldr	r6, [r0, #24]
 5191 0006 036A     		ldr	r3, [r0, #32]
 5192 0008 1E44     		add	r6, r6, r3
 5193              	.LVL600:
3226:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   pDataOut = (uint32_t *)(hjpeg->pJpegOutBuffPtr + hjpeg->JpegOutCount);
 5194              		.loc 1 3226 0
 5195 000a 1025     		movs	r5, #16
3229:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5196              		.loc 1 3229 0
 5197 000c 11E0     		b	.L345
 5198              	.LVL601:
 5199              	.L348:
3231:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5200              		.loc 1 3231 0
 5201 000e 013D     		subs	r5, r5, #1
 5202              	.LVL602:
3233:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     pDataOut++;
 5203              		.loc 1 3233 0
 5204 0010 5B6C     		ldr	r3, [r3, #68]
 5205 0012 46F8043B 		str	r3, [r6], #4
 5206              	.LVL603:
3235:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5207              		.loc 1 3235 0
 5208 0016 236A     		ldr	r3, [r4, #32]
 5209 0018 0433     		adds	r3, r3, #4
 5210 001a 2362     		str	r3, [r4, #32]
3237:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5211              		.loc 1 3237 0
 5212 001c 226A     		ldr	r2, [r4, #32]
ARM GAS  /tmp/ccSvCFam.s 			page 164


 5213 001e A36A     		ldr	r3, [r4, #40]
 5214 0020 9A42     		cmp	r2, r3
 5215 0022 06D1     		bne	.L345
3240:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = 0;      
 5216              		.loc 1 3240 0
 5217 0024 226A     		ldr	r2, [r4, #32]
 5218 0026 A169     		ldr	r1, [r4, #24]
 5219 0028 2046     		mov	r0, r4
 5220 002a FFF7FEFF 		bl	HAL_JPEG_DataReadyCallback
 5221              	.LVL604:
3241:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 5222              		.loc 1 3241 0
 5223 002e 0023     		movs	r3, #0
 5224 0030 2362     		str	r3, [r4, #32]
 5225              	.LVL605:
 5226              	.L345:
3229:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5227              		.loc 1 3229 0
 5228 0032 2368     		ldr	r3, [r4]
 5229 0034 5A6B     		ldr	r2, [r3, #52]
 5230 0036 12F0100F 		tst	r2, #16
 5231 003a 01D0     		beq	.L347
3229:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5232              		.loc 1 3229 0 is_stmt 0 discriminator 1
 5233 003c 002D     		cmp	r5, #0
 5234 003e E6D1     		bne	.L348
 5235              	.L347:
3246:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5236              		.loc 1 3246 0 is_stmt 1
 5237 0040 1A68     		ldr	r2, [r3]
 5238 0042 22F00102 		bic	r2, r2, #1
 5239 0046 1A60     		str	r2, [r3]
3248:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5240              		.loc 1 3248 0
 5241 0048 236A     		ldr	r3, [r4, #32]
 5242 004a 33B1     		cbz	r3, .L349
3251:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;
 5243              		.loc 1 3251 0
 5244 004c 226A     		ldr	r2, [r4, #32]
 5245 004e A169     		ldr	r1, [r4, #24]
 5246 0050 2046     		mov	r0, r4
 5247 0052 FFF7FEFF 		bl	HAL_JPEG_DataReadyCallback
 5248              	.LVL606:
3252:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 5249              		.loc 1 3252 0
 5250 0056 0023     		movs	r3, #0
 5251 0058 2362     		str	r3, [r4, #32]
 5252              	.L349:
3255:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*Clear all context fileds execpt JPEG_CONTEXT_CONF_ENCODING and JPEG_CONTEXT_CUSTOM_TABLES*/
 5253              		.loc 1 3255 0
 5254 005a 236D     		ldr	r3, [r4, #80]
 5255              	.LVL607:
3257:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5256              		.loc 1 3257 0
 5257 005c 226D     		ldr	r2, [r4, #80]
 5258 005e 02F48242 		and	r2, r2, #16640
 5259 0062 2265     		str	r2, [r4, #80]
ARM GAS  /tmp/ccSvCFam.s 			page 165


3260:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5260              		.loc 1 3260 0
 5261 0064 0022     		movs	r2, #0
 5262 0066 84F84820 		strb	r2, [r4, #72]
3263:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5263              		.loc 1 3263 0
 5264 006a 0122     		movs	r2, #1
 5265 006c 84F84920 		strb	r2, [r4, #73]
3266:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5266              		.loc 1 3266 0
 5267 0070 03F00303 		and	r3, r3, #3
 5268              	.LVL608:
 5269 0074 022B     		cmp	r3, #2
 5270 0076 03D1     		bne	.L350
3268:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 5271              		.loc 1 3268 0
 5272 0078 2046     		mov	r0, r4
 5273 007a FFF7FEFF 		bl	HAL_JPEG_DecodeCpltCallback
 5274              	.LVL609:
 5275 007e 70BD     		pop	{r4, r5, r6, pc}
 5276              	.LVL610:
 5277              	.L350:
3270:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5278              		.loc 1 3270 0
 5279 0080 012B     		cmp	r3, #1
 5280 0082 02D1     		bne	.L344
3272:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 5281              		.loc 1 3272 0
 5282 0084 2046     		mov	r0, r4
 5283 0086 FFF7FEFF 		bl	HAL_JPEG_EncodeCpltCallback
 5284              	.LVL611:
 5285              	.L344:
 5286 008a 70BD     		pop	{r4, r5, r6, pc}
 5287              		.cfi_endproc
 5288              	.LFE183:
 5290              		.section	.text.HAL_JPEG_Resume,"ax",%progbits
 5291              		.align	2
 5292              		.global	HAL_JPEG_Resume
 5293              		.thumb
 5294              		.thumb_func
 5296              	HAL_JPEG_Resume:
 5297              	.LFB152:
1590:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t mask = 0;
 5298              		.loc 1 1590 0
 5299              		.cfi_startproc
 5300              		@ args = 0, pretend = 0, frame = 0
 5301              		@ frame_needed = 0, uses_anonymous_args = 0
 5302              	.LVL612:
 5303 0000 70B5     		push	{r4, r5, r6, lr}
 5304              	.LCFI69:
 5305              		.cfi_def_cfa_offset 16
 5306              		.cfi_offset 4, -16
 5307              		.cfi_offset 5, -12
 5308              		.cfi_offset 6, -8
 5309              		.cfi_offset 14, -4
 5310              	.LVL613:
1595:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
ARM GAS  /tmp/ccSvCFam.s 			page 166


 5311              		.loc 1 1595 0
 5312 0002 036D     		ldr	r3, [r0, #80]
 5313 0004 13F4805F 		tst	r3, #4096
 5314 0008 03D1     		bne	.L354
1595:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5315              		.loc 1 1595 0 is_stmt 0 discriminator 1
 5316 000a 036D     		ldr	r3, [r0, #80]
 5317 000c 13F4005F 		tst	r3, #8192
 5318 0010 5FD0     		beq	.L362
 5319              	.L354:
1601:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5320              		.loc 1 1601 0 is_stmt 1
 5321 0012 036D     		ldr	r3, [r0, #80]
 5322 0014 03F00C03 		and	r3, r3, #12
 5323 0018 0C2B     		cmp	r3, #12
 5324 001a 3CD1     		bne	.L356
 5325 001c 0C46     		mov	r4, r1
 5326 001e 0546     		mov	r5, r0
1604:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5327              		.loc 1 1604 0
 5328 0020 11F0010F 		tst	r1, #1
 5329 0024 12D0     		beq	.L363
1606:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= JPEG_DMA_IDMA;
 5330              		.loc 1 1606 0
 5331 0026 036D     		ldr	r3, [r0, #80]
 5332 0028 23F48053 		bic	r3, r3, #4096
 5333 002c 0365     		str	r3, [r0, #80]
 5334              	.LVL614:
1611:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 5335              		.loc 1 1611 0
 5336 002e 436A     		ldr	r3, [r0, #36]
 5337 0030 23F00303 		bic	r3, r3, #3
 5338 0034 4362     		str	r3, [r0, #36]
1613:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {  
 5339              		.loc 1 1613 0
 5340 0036 5BB1     		cbz	r3, .L364
1616:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 5341              		.loc 1 1616 0
 5342 0038 0268     		ldr	r2, [r0]
 5343 003a 9B08     		lsrs	r3, r3, #2
 5344 003c 4032     		adds	r2, r2, #64
 5345 003e 4169     		ldr	r1, [r0, #20]
 5346              	.LVL615:
 5347 0040 C06A     		ldr	r0, [r0, #44]
 5348              	.LVL616:
 5349 0042 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5350              	.LVL617:
1607:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 5351              		.loc 1 1607 0
 5352 0046 4FF40066 		mov	r6, #2048
 5353 004a 03E0     		b	.L357
 5354              	.LVL618:
 5355              	.L363:
1591:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5356              		.loc 1 1591 0
 5357 004c 0026     		movs	r6, #0
 5358 004e 01E0     		b	.L357
ARM GAS  /tmp/ccSvCFam.s 			page 167


 5359              	.LVL619:
 5360              	.L364:
1607:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 5361              		.loc 1 1607 0
 5362 0050 4FF40066 		mov	r6, #2048
 5363              	.LVL620:
 5364              	.L357:
1620:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5365              		.loc 1 1620 0
 5366 0054 14F0020F 		tst	r4, #2
 5367 0058 15D0     		beq	.L358
1623:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 5368              		.loc 1 1623 0
 5369 005a 2B6D     		ldr	r3, [r5, #80]
 5370 005c 13F4004F 		tst	r3, #32768
 5371 0060 03D0     		beq	.L359
1625:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 5372              		.loc 1 1625 0
 5373 0062 2846     		mov	r0, r5
 5374 0064 FFF7FEFF 		bl	JPEG_DMA_PollResidualData
 5375              	.LVL621:
 5376 0068 0DE0     		b	.L358
 5377              	.L359:
1629:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         mask |= JPEG_DMA_ODMA;
 5378              		.loc 1 1629 0
 5379 006a 2B6D     		ldr	r3, [r5, #80]
 5380 006c 23F40053 		bic	r3, r3, #8192
 5381 0070 2B65     		str	r3, [r5, #80]
1630:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         
 5382              		.loc 1 1630 0
 5383 0072 46F48056 		orr	r6, r6, #4096
 5384              	.LVL622:
1633:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }  
 5385              		.loc 1 1633 0
 5386 0076 2968     		ldr	r1, [r5]
 5387 0078 AB6A     		ldr	r3, [r5, #40]
 5388 007a 9B08     		lsrs	r3, r3, #2
 5389 007c AA69     		ldr	r2, [r5, #24]
 5390 007e 4431     		adds	r1, r1, #68
 5391 0080 286B     		ldr	r0, [r5, #48]
 5392 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5393              	.LVL623:
 5394              	.L358:
1637:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5395              		.loc 1 1637 0
 5396 0086 2B68     		ldr	r3, [r5]
 5397 0088 1A6B     		ldr	r2, [r3, #48]
 5398 008a 06F4C056 		and	r6, r6, #6144
 5399              	.LVL624:
 5400 008e 1643     		orrs	r6, r6, r2
 5401 0090 1E63     		str	r6, [r3, #48]
1657:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 5402              		.loc 1 1657 0
 5403 0092 0020     		movs	r0, #0
 5404 0094 70BD     		pop	{r4, r5, r6, pc}
 5405              	.LVL625:
 5406              	.L356:
ARM GAS  /tmp/ccSvCFam.s 			page 168


1640:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {  
 5407              		.loc 1 1640 0
 5408 0096 036D     		ldr	r3, [r0, #80]
 5409 0098 03F00C03 		and	r3, r3, #12
 5410 009c 082B     		cmp	r3, #8
 5411 009e 1AD1     		bne	.L365
1642:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5412              		.loc 1 1642 0
 5413 00a0 11F0010F 		tst	r1, #1
 5414 00a4 05D0     		beq	.L366
1644:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |= (JPEG_IT_IFT | JPEG_IT_IFNF); 
 5415              		.loc 1 1644 0
 5416 00a6 036D     		ldr	r3, [r0, #80]
 5417 00a8 23F48053 		bic	r3, r3, #4096
 5418 00ac 0365     		str	r3, [r0, #80]
 5419              	.LVL626:
1645:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 5420              		.loc 1 1645 0
 5421 00ae 0624     		movs	r4, #6
 5422 00b0 00E0     		b	.L360
 5423              	.LVL627:
 5424              	.L366:
1591:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5425              		.loc 1 1591 0
 5426 00b2 0024     		movs	r4, #0
 5427              	.LVL628:
 5428              	.L360:
1647:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5429              		.loc 1 1647 0
 5430 00b4 11F0020F 		tst	r1, #2
 5431 00b8 05D0     		beq	.L361
1649:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       mask |=  (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC); 
 5432              		.loc 1 1649 0
 5433 00ba 036D     		ldr	r3, [r0, #80]
 5434 00bc 23F40053 		bic	r3, r3, #8192
 5435 00c0 0365     		str	r3, [r0, #80]
1650:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
 5436              		.loc 1 1650 0
 5437 00c2 44F02804 		orr	r4, r4, #40
 5438              	.LVL629:
 5439              	.L361:
1652:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5440              		.loc 1 1652 0
 5441 00c6 0268     		ldr	r2, [r0]
 5442 00c8 136B     		ldr	r3, [r2, #48]
 5443 00ca 2343     		orrs	r3, r3, r4
 5444 00cc 1363     		str	r3, [r2, #48]
1657:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 5445              		.loc 1 1657 0
 5446 00ce 0020     		movs	r0, #0
 5447              	.LVL630:
 5448 00d0 70BD     		pop	{r4, r5, r6, pc}
 5449              	.LVL631:
 5450              	.L362:
1598:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 5451              		.loc 1 1598 0
 5452 00d2 0120     		movs	r0, #1
ARM GAS  /tmp/ccSvCFam.s 			page 169


 5453              	.LVL632:
 5454 00d4 70BD     		pop	{r4, r5, r6, pc}
 5455              	.LVL633:
 5456              	.L365:
1657:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 5457              		.loc 1 1657 0
 5458 00d6 0020     		movs	r0, #0
 5459              	.LVL634:
1658:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5460              		.loc 1 1658 0
 5461 00d8 70BD     		pop	{r4, r5, r6, pc}
 5462              		.cfi_endproc
 5463              	.LFE152:
 5465 00da 00BF     		.section	.text.JPEG_DMA_EndProcess,"ax",%progbits
 5466              		.align	2
 5467              		.thumb
 5468              		.thumb_func
 5470              	JPEG_DMA_EndProcess:
 5471              	.LFB182:
3171:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   uint32_t tmpContext;  
 5472              		.loc 1 3171 0
 5473              		.cfi_startproc
 5474              		@ args = 0, pretend = 0, frame = 0
 5475              		@ frame_needed = 0, uses_anonymous_args = 0
 5476              	.LVL635:
 5477 0000 38B5     		push	{r3, r4, r5, lr}
 5478              	.LCFI70:
 5479              		.cfi_def_cfa_offset 16
 5480              		.cfi_offset 3, -16
 5481              		.cfi_offset 4, -12
 5482              		.cfi_offset 5, -8
 5483              		.cfi_offset 14, -4
 5484 0002 0446     		mov	r4, r0
3173:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5485              		.loc 1 3173 0
 5486 0004 826A     		ldr	r2, [r0, #40]
 5487 0006 036B     		ldr	r3, [r0, #48]
 5488 0008 1B68     		ldr	r3, [r3]
 5489 000a 5968     		ldr	r1, [r3, #4]
 5490 000c 1D4B     		ldr	r3, .L375
 5491 000e 03EA8103 		and	r3, r3, r1, lsl #2
 5492 0012 D31A     		subs	r3, r2, r3
 5493 0014 0362     		str	r3, [r0, #32]
3176:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5494              		.loc 1 3176 0
 5495 0016 036A     		ldr	r3, [r0, #32]
 5496 0018 9A42     		cmp	r2, r3
 5497 001a 05D1     		bne	.L369
3178:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     hjpeg->JpegOutCount = 0;
 5498              		.loc 1 3178 0
 5499 001c 026A     		ldr	r2, [r0, #32]
 5500 001e 8169     		ldr	r1, [r0, #24]
 5501 0020 FFF7FEFF 		bl	HAL_JPEG_DataReadyCallback
 5502              	.LVL636:
3179:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 5503              		.loc 1 3179 0
 5504 0024 0023     		movs	r3, #0
ARM GAS  /tmp/ccSvCFam.s 			page 170


 5505 0026 2362     		str	r3, [r4, #32]
 5506              	.L369:
3183:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5507              		.loc 1 3183 0
 5508 0028 2368     		ldr	r3, [r4]
 5509 002a 586B     		ldr	r0, [r3, #52]
 5510 002c 10F01005 		ands	r5, r0, #16
 5511 0030 1CD1     		bne	.L370
3186:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5512              		.loc 1 3186 0
 5513 0032 1A68     		ldr	r2, [r3]
 5514 0034 22F00102 		bic	r2, r2, #1
 5515 0038 1A60     		str	r2, [r3]
3188:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /*Clear all context fileds execpt JPEG_CONTEXT_CONF_ENCODING and JPEG_CONTEXT_CUSTOM_TABLES*/
 5516              		.loc 1 3188 0
 5517 003a 236D     		ldr	r3, [r4, #80]
 5518              	.LVL637:
3190:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5519              		.loc 1 3190 0
 5520 003c 226D     		ldr	r2, [r4, #80]
 5521 003e 02F48242 		and	r2, r2, #16640
 5522 0042 2265     		str	r2, [r4, #80]
3193:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5523              		.loc 1 3193 0
 5524 0044 0022     		movs	r2, #0
 5525 0046 84F84820 		strb	r2, [r4, #72]
3196:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5526              		.loc 1 3196 0
 5527 004a 0122     		movs	r2, #1
 5528 004c 84F84920 		strb	r2, [r4, #73]
3199:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5529              		.loc 1 3199 0
 5530 0050 03F00303 		and	r3, r3, #3
 5531              	.LVL638:
 5532 0054 022B     		cmp	r3, #2
 5533 0056 03D1     		bne	.L371
3201:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 5534              		.loc 1 3201 0
 5535 0058 2046     		mov	r0, r4
 5536 005a FFF7FEFF 		bl	HAL_JPEG_DecodeCpltCallback
 5537              	.LVL639:
 5538 005e 0FE0     		b	.L372
 5539              	.L371:
3203:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5540              		.loc 1 3203 0
 5541 0060 012B     		cmp	r3, #1
 5542 0062 0DD1     		bne	.L372
3205:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
 5543              		.loc 1 3205 0
 5544 0064 2046     		mov	r0, r4
 5545 0066 FFF7FEFF 		bl	HAL_JPEG_EncodeCpltCallback
 5546              	.LVL640:
 5547 006a 09E0     		b	.L372
 5548              	.L370:
3208:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5549              		.loc 1 3208 0
 5550 006c 236D     		ldr	r3, [r4, #80]
ARM GAS  /tmp/ccSvCFam.s 			page 171


 5551 006e 13F4005F 		tst	r3, #8192
 5552 0072 04D1     		bne	.L373
3210:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5553              		.loc 1 3210 0
 5554 0074 2046     		mov	r0, r4
 5555 0076 FFF7FEFF 		bl	JPEG_DMA_PollResidualData
 5556              	.LVL641:
3212:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 5557              		.loc 1 3212 0
 5558 007a 0125     		movs	r5, #1
 5559 007c 00E0     		b	.L372
 5560              	.L373:
3215:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 5561              		.loc 1 3215 0
 5562 007e 0025     		movs	r5, #0
 5563              	.L372:
3216:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5564              		.loc 1 3216 0
 5565 0080 2846     		mov	r0, r5
 5566 0082 38BD     		pop	{r3, r4, r5, pc}
 5567              	.LVL642:
 5568              	.L376:
 5569              		.align	2
 5570              	.L375:
 5571 0084 FCFF0300 		.word	262140
 5572              		.cfi_endproc
 5573              	.LFE182:
 5575              		.section	.text.JPEG_DMAOutAbortCallback,"ax",%progbits
 5576              		.align	2
 5577              		.thumb
 5578              		.thumb_func
 5580              	JPEG_DMAOutAbortCallback:
 5581              	.LFB187:
3389:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 5582              		.loc 1 3389 0
 5583              		.cfi_startproc
 5584              		@ args = 0, pretend = 0, frame = 0
 5585              		@ frame_needed = 0, uses_anonymous_args = 0
 5586              	.LVL643:
 5587 0000 08B5     		push	{r3, lr}
 5588              	.LCFI71:
 5589              		.cfi_def_cfa_offset 8
 5590              		.cfi_offset 3, -8
 5591              		.cfi_offset 14, -4
3390:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5592              		.loc 1 3390 0
 5593 0002 806B     		ldr	r0, [r0, #56]
 5594              	.LVL644:
3392:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5595              		.loc 1 3392 0
 5596 0004 036D     		ldr	r3, [r0, #80]
 5597 0006 13F4004F 		tst	r3, #32768
 5598 000a 01D0     		beq	.L377
3394:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }  
 5599              		.loc 1 3394 0
 5600 000c FFF7FEFF 		bl	JPEG_DMA_EndProcess
 5601              	.LVL645:
ARM GAS  /tmp/ccSvCFam.s 			page 172


 5602              	.L377:
 5603 0010 08BD     		pop	{r3, pc}
 5604              		.cfi_endproc
 5605              	.LFE187:
 5607 0012 00BF     		.section	.text.JPEG_DMA_ContinueProcess,"ax",%progbits
 5608              		.align	2
 5609              		.thumb
 5610              		.thumb_func
 5612              	JPEG_DMA_ContinueProcess:
 5613              	.LFB181:
3107:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   /*End of header processing flag rises*/
 5614              		.loc 1 3107 0
 5615              		.cfi_startproc
 5616              		@ args = 0, pretend = 0, frame = 0
 5617              		@ frame_needed = 0, uses_anonymous_args = 0
 5618              	.LVL646:
 5619 0000 38B5     		push	{r3, r4, r5, lr}
 5620              	.LCFI72:
 5621              		.cfi_def_cfa_offset 16
 5622              		.cfi_offset 3, -16
 5623              		.cfi_offset 4, -12
 5624              		.cfi_offset 5, -8
 5625              		.cfi_offset 14, -4
 5626 0002 0446     		mov	r4, r0
3109:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5627              		.loc 1 3109 0
 5628 0004 036D     		ldr	r3, [r0, #80]
 5629 0006 03F00303 		and	r3, r3, #3
 5630 000a 022B     		cmp	r3, #2
 5631 000c 18D1     		bne	.L381
3109:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5632              		.loc 1 3109 0 is_stmt 0 discriminator 1
 5633 000e 0368     		ldr	r3, [r0]
 5634 0010 5B6B     		ldr	r3, [r3, #52]
 5635 0012 13F0400F 		tst	r3, #64
 5636 0016 13D0     		beq	.L381
3112:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5637              		.loc 1 3112 0 is_stmt 1
 5638 0018 051D     		adds	r5, r0, #4
 5639 001a 2946     		mov	r1, r5
 5640 001c FFF7FEFF 		bl	HAL_JPEG_GetInfo
 5641              	.LVL647:
3115:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     /* Note : the image quality is only available at the end of the decoding operation */
 5642              		.loc 1 3115 0
 5643 0020 0023     		movs	r3, #0
 5644 0022 2374     		strb	r3, [r4, #16]
3120:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5645              		.loc 1 3120 0
 5646 0024 2946     		mov	r1, r5
 5647 0026 2046     		mov	r0, r4
 5648 0028 FFF7FEFF 		bl	HAL_JPEG_InfoReadyCallback
 5649              	.LVL648:
3122:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5650              		.loc 1 3122 0
 5651 002c 2268     		ldr	r2, [r4]
 5652 002e 136B     		ldr	r3, [r2, #48]
 5653 0030 23F04003 		bic	r3, r3, #64
ARM GAS  /tmp/ccSvCFam.s 			page 173


 5654 0034 1363     		str	r3, [r2, #48]
3125:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
 5655              		.loc 1 3125 0
 5656 0036 2268     		ldr	r2, [r4]
 5657 0038 936B     		ldr	r3, [r2, #56]
 5658 003a 43F04003 		orr	r3, r3, #64
 5659 003e 9363     		str	r3, [r2, #56]
 5660              	.L381:
3129:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {   
 5661              		.loc 1 3129 0
 5662 0040 2368     		ldr	r3, [r4]
 5663 0042 586B     		ldr	r0, [r3, #52]
 5664 0044 10F02000 		ands	r0, r0, #32
 5665 0048 2BD0     		beq	.L382
3132:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5666              		.loc 1 3132 0
 5667 004a 1A6B     		ldr	r2, [r3, #48]
 5668 004c 22F4C052 		bic	r2, r2, #6144
 5669 0050 1A63     		str	r2, [r3, #48]
3134:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5670              		.loc 1 3134 0
 5671 0052 236D     		ldr	r3, [r4, #80]
 5672 0054 43F40043 		orr	r3, r3, #32768
 5673 0058 2365     		str	r3, [r4, #80]
3137:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5674              		.loc 1 3137 0
 5675 005a 2268     		ldr	r2, [r4]
 5676 005c 1368     		ldr	r3, [r2]
 5677 005e 23F00103 		bic	r3, r3, #1
 5678 0062 1360     		str	r3, [r2]
3139:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5679              		.loc 1 3139 0
 5680 0064 2268     		ldr	r2, [r4]
 5681 0066 136B     		ldr	r3, [r2, #48]
 5682 0068 23F07E03 		bic	r3, r3, #126
 5683 006c 1363     		str	r3, [r2, #48]
3142:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5684              		.loc 1 3142 0
 5685 006e 2268     		ldr	r2, [r4]
 5686 0070 936B     		ldr	r3, [r2, #56]
 5687 0072 43F06003 		orr	r3, r3, #96
 5688 0076 9363     		str	r3, [r2, #56]
3144:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5689              		.loc 1 3144 0
 5690 0078 E06A     		ldr	r0, [r4, #44]
 5691 007a 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 5692 007e DBB2     		uxtb	r3, r3
 5693 0080 022B     		cmp	r3, #2
 5694 0082 01D1     		bne	.L383
3147:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 5695              		.loc 1 3147 0
 5696 0084 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5697              	.LVL649:
 5698              	.L383:
3150:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {
 5699              		.loc 1 3150 0
 5700 0088 206B     		ldr	r0, [r4, #48]
ARM GAS  /tmp/ccSvCFam.s 			page 174


 5701 008a 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 5702 008e DBB2     		uxtb	r3, r3
 5703 0090 022B     		cmp	r3, #2
 5704 0092 03D1     		bne	.L384
3153:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }
 5705              		.loc 1 3153 0
 5706 0094 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5707              	.LVL650:
3161:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 5708              		.loc 1 3161 0
 5709 0098 0020     		movs	r0, #0
 5710 009a 38BD     		pop	{r3, r4, r5, pc}
 5711              	.LVL651:
 5712              	.L384:
3157:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     }    
 5713              		.loc 1 3157 0
 5714 009c 2046     		mov	r0, r4
 5715 009e FFF7FEFF 		bl	JPEG_DMA_EndProcess
 5716              	.LVL652:
 5717              	.L382:
3162:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5718              		.loc 1 3162 0
 5719 00a2 38BD     		pop	{r3, r4, r5, pc}
 5720              		.cfi_endproc
 5721              	.LFE181:
 5723              		.section	.text.JPEG_DMAOutCpltCallback,"ax",%progbits
 5724              		.align	2
 5725              		.thumb
 5726              		.thumb_func
 5728              	JPEG_DMAOutCpltCallback:
 5729              	.LFB185:
3327:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   JPEG_HandleTypeDef* hjpeg = (JPEG_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;  
 5730              		.loc 1 3327 0
 5731              		.cfi_startproc
 5732              		@ args = 0, pretend = 0, frame = 0
 5733              		@ frame_needed = 0, uses_anonymous_args = 0
 5734              	.LVL653:
 5735 0000 10B5     		push	{r4, lr}
 5736              	.LCFI73:
 5737              		.cfi_def_cfa_offset 8
 5738              		.cfi_offset 4, -8
 5739              		.cfi_offset 14, -4
3328:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   
 5740              		.loc 1 3328 0
 5741 0002 846B     		ldr	r4, [r0, #56]
 5742              	.LVL654:
3331:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5743              		.loc 1 3331 0
 5744 0004 2268     		ldr	r2, [r4]
 5745 0006 136B     		ldr	r3, [r2, #48]
 5746 0008 23F07E03 		bic	r3, r3, #126
 5747 000c 1363     		str	r3, [r2, #48]
3333:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {    
 5748              		.loc 1 3333 0
 5749 000e 236D     		ldr	r3, [r4, #80]
 5750 0010 03F00C03 		and	r3, r3, #12
 5751 0014 0C2B     		cmp	r3, #12
ARM GAS  /tmp/ccSvCFam.s 			page 175


 5752 0016 2FD1     		bne	.L386
3333:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {    
 5753              		.loc 1 3333 0 is_stmt 0 discriminator 1
 5754 0018 236D     		ldr	r3, [r4, #80]
 5755 001a 13F4004F 		tst	r3, #32768
 5756 001e 2BD1     		bne	.L386
3335:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     {    
 5757              		.loc 1 3335 0 is_stmt 1
 5758 0020 2368     		ldr	r3, [r4]
 5759 0022 5A6B     		ldr	r2, [r3, #52]
 5760 0024 12F0200F 		tst	r2, #32
 5761 0028 21D1     		bne	.L388
3337:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       hjpeg->JpegOutCount = hjpeg->OutDataLength - ((hdma->Instance->NDTR & DMA_SxNDT) << 2);
 5762              		.loc 1 3337 0
 5763 002a 1A6B     		ldr	r2, [r3, #48]
 5764 002c 22F48052 		bic	r2, r2, #4096
 5765 0030 1A63     		str	r2, [r3, #48]
3338:HALLIB/Src/stm32f7xx_hal_jpeg.c ****     
 5766              		.loc 1 3338 0
 5767 0032 A36A     		ldr	r3, [r4, #40]
 5768 0034 0268     		ldr	r2, [r0]
 5769 0036 5168     		ldr	r1, [r2, #4]
 5770 0038 104A     		ldr	r2, .L390
 5771 003a 02EA8102 		and	r2, r2, r1, lsl #2
 5772 003e 9B1A     		subs	r3, r3, r2
 5773 0040 2362     		str	r3, [r4, #32]
3341:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       
 5774              		.loc 1 3341 0
 5775 0042 226A     		ldr	r2, [r4, #32]
 5776 0044 A169     		ldr	r1, [r4, #24]
 5777 0046 2046     		mov	r0, r4
 5778              	.LVL655:
 5779 0048 FFF7FEFF 		bl	HAL_JPEG_DataReadyCallback
 5780              	.LVL656:
3343:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {   
 5781              		.loc 1 3343 0
 5782 004c 236D     		ldr	r3, [r4, #80]
 5783 004e 13F4005F 		tst	r3, #8192
 5784 0052 0CD1     		bne	.L388
3346:HALLIB/Src/stm32f7xx_hal_jpeg.c ****         JPEG_ENABLE_DMA(hjpeg,JPEG_DMA_ODMA);
 5785              		.loc 1 3346 0
 5786 0054 2168     		ldr	r1, [r4]
 5787 0056 A36A     		ldr	r3, [r4, #40]
 5788 0058 9B08     		lsrs	r3, r3, #2
 5789 005a A269     		ldr	r2, [r4, #24]
 5790 005c 4431     		adds	r1, r1, #68
 5791 005e 206B     		ldr	r0, [r4, #48]
 5792 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5793              	.LVL657:
3347:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 5794              		.loc 1 3347 0
 5795 0064 2268     		ldr	r2, [r4]
 5796 0066 136B     		ldr	r3, [r2, #48]
 5797 0068 43F48053 		orr	r3, r3, #4096
 5798 006c 1363     		str	r3, [r2, #48]
 5799              	.L388:
3352:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   }
ARM GAS  /tmp/ccSvCFam.s 			page 176


 5800              		.loc 1 3352 0
 5801 006e 2268     		ldr	r2, [r4]
 5802 0070 136B     		ldr	r3, [r2, #48]
 5803 0072 43F06003 		orr	r3, r3, #96
 5804 0076 1363     		str	r3, [r2, #48]
 5805              	.L386:
 5806 0078 10BD     		pop	{r4, pc}
 5807              	.LVL658:
 5808              	.L391:
 5809 007a 00BF     		.align	2
 5810              	.L390:
 5811 007c FCFF0300 		.word	262140
 5812              		.cfi_endproc
 5813              	.LFE185:
 5815              		.section	.text.HAL_JPEG_IRQHandler,"ax",%progbits
 5816              		.align	2
 5817              		.global	HAL_JPEG_IRQHandler
 5818              		.thumb
 5819              		.thumb_func
 5821              	HAL_JPEG_IRQHandler:
 5822              	.LFB162:
1920:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   switch(hjpeg->State)
 5823              		.loc 1 1920 0
 5824              		.cfi_startproc
 5825              		@ args = 0, pretend = 0, frame = 0
 5826              		@ frame_needed = 0, uses_anonymous_args = 0
 5827              	.LVL659:
 5828 0000 08B5     		push	{r3, lr}
 5829              	.LCFI74:
 5830              		.cfi_def_cfa_offset 8
 5831              		.cfi_offset 3, -8
 5832              		.cfi_offset 14, -4
1921:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   {
 5833              		.loc 1 1921 0
 5834 0002 90F84930 		ldrb	r3, [r0, #73]	@ zero_extendqisi2
 5835 0006 033B     		subs	r3, r3, #3
 5836 0008 012B     		cmp	r3, #1
 5837 000a 0ED8     		bhi	.L392
1927:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {  
 5838              		.loc 1 1927 0
 5839 000c 036D     		ldr	r3, [r0, #80]
 5840 000e 03F00C03 		and	r3, r3, #12
 5841 0012 082B     		cmp	r3, #8
 5842 0014 02D1     		bne	.L395
1929:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       }
 5843              		.loc 1 1929 0
 5844 0016 FFF7FEFF 		bl	JPEG_Process
 5845              	.LVL660:
 5846 001a 08BD     		pop	{r3, pc}
 5847              	.LVL661:
 5848              	.L395:
1931:HALLIB/Src/stm32f7xx_hal_jpeg.c ****       {
 5849              		.loc 1 1931 0
 5850 001c 036D     		ldr	r3, [r0, #80]
 5851 001e 03F00C03 		and	r3, r3, #12
 5852 0022 0C2B     		cmp	r3, #12
 5853 0024 01D1     		bne	.L392
ARM GAS  /tmp/ccSvCFam.s 			page 177


1933:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5854              		.loc 1 1933 0
 5855 0026 FFF7FEFF 		bl	JPEG_DMA_ContinueProcess
 5856              	.LVL662:
 5857              	.L392:
 5858 002a 08BD     		pop	{r3, pc}
 5859              		.cfi_endproc
 5860              	.LFE162:
 5862              		.section	.text.HAL_JPEG_GetState,"ax",%progbits
 5863              		.align	2
 5864              		.global	HAL_JPEG_GetState
 5865              		.thumb
 5866              		.thumb_func
 5868              	HAL_JPEG_GetState:
 5869              	.LFB163:
1970:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return hjpeg->State;
 5870              		.loc 1 1970 0
 5871              		.cfi_startproc
 5872              		@ args = 0, pretend = 0, frame = 0
 5873              		@ frame_needed = 0, uses_anonymous_args = 0
 5874              		@ link register save eliminated.
 5875              	.LVL663:
1971:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 5876              		.loc 1 1971 0
 5877 0000 90F84900 		ldrb	r0, [r0, #73]	@ zero_extendqisi2
 5878              	.LVL664:
1972:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5879              		.loc 1 1972 0
 5880 0004 7047     		bx	lr
 5881              		.cfi_endproc
 5882              	.LFE163:
 5884 0006 00BF     		.section	.text.HAL_JPEG_GetError,"ax",%progbits
 5885              		.align	2
 5886              		.global	HAL_JPEG_GetError
 5887              		.thumb
 5888              		.thumb_func
 5890              	HAL_JPEG_GetError:
 5891              	.LFB164:
1981:HALLIB/Src/stm32f7xx_hal_jpeg.c ****   return hjpeg->ErrorCode;
 5892              		.loc 1 1981 0
 5893              		.cfi_startproc
 5894              		@ args = 0, pretend = 0, frame = 0
 5895              		@ frame_needed = 0, uses_anonymous_args = 0
 5896              		@ link register save eliminated.
 5897              	.LVL665:
1982:HALLIB/Src/stm32f7xx_hal_jpeg.c **** }
 5898              		.loc 1 1982 0
 5899 0000 C06C     		ldr	r0, [r0, #76]
 5900              	.LVL666:
1983:HALLIB/Src/stm32f7xx_hal_jpeg.c **** 
 5901              		.loc 1 1983 0
 5902 0002 7047     		bx	lr
 5903              		.cfi_endproc
 5904              	.LFE164:
 5906              		.section	.rodata.JPEG_LUM_QuantTable,"a",%progbits
 5907              		.align	2
 5908              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/ccSvCFam.s 			page 178


 5911              	JPEG_LUM_QuantTable:
 5912 0000 10       		.byte	16
 5913 0001 0B       		.byte	11
 5914 0002 0A       		.byte	10
 5915 0003 10       		.byte	16
 5916 0004 18       		.byte	24
 5917 0005 28       		.byte	40
 5918 0006 33       		.byte	51
 5919 0007 3D       		.byte	61
 5920 0008 0C       		.byte	12
 5921 0009 0C       		.byte	12
 5922 000a 0E       		.byte	14
 5923 000b 13       		.byte	19
 5924 000c 1A       		.byte	26
 5925 000d 3A       		.byte	58
 5926 000e 3C       		.byte	60
 5927 000f 37       		.byte	55
 5928 0010 0E       		.byte	14
 5929 0011 0D       		.byte	13
 5930 0012 10       		.byte	16
 5931 0013 18       		.byte	24
 5932 0014 28       		.byte	40
 5933 0015 39       		.byte	57
 5934 0016 45       		.byte	69
 5935 0017 38       		.byte	56
 5936 0018 0E       		.byte	14
 5937 0019 11       		.byte	17
 5938 001a 16       		.byte	22
 5939 001b 1D       		.byte	29
 5940 001c 33       		.byte	51
 5941 001d 57       		.byte	87
 5942 001e 50       		.byte	80
 5943 001f 3E       		.byte	62
 5944 0020 12       		.byte	18
 5945 0021 16       		.byte	22
 5946 0022 25       		.byte	37
 5947 0023 38       		.byte	56
 5948 0024 44       		.byte	68
 5949 0025 6D       		.byte	109
 5950 0026 67       		.byte	103
 5951 0027 4D       		.byte	77
 5952 0028 18       		.byte	24
 5953 0029 23       		.byte	35
 5954 002a 37       		.byte	55
 5955 002b 40       		.byte	64
 5956 002c 51       		.byte	81
 5957 002d 68       		.byte	104
 5958 002e 71       		.byte	113
 5959 002f 5C       		.byte	92
 5960 0030 31       		.byte	49
 5961 0031 40       		.byte	64
 5962 0032 4E       		.byte	78
 5963 0033 57       		.byte	87
 5964 0034 67       		.byte	103
 5965 0035 79       		.byte	121
 5966 0036 78       		.byte	120
 5967 0037 65       		.byte	101
ARM GAS  /tmp/ccSvCFam.s 			page 179


 5968 0038 48       		.byte	72
 5969 0039 5C       		.byte	92
 5970 003a 5F       		.byte	95
 5971 003b 62       		.byte	98
 5972 003c 70       		.byte	112
 5973 003d 64       		.byte	100
 5974 003e 67       		.byte	103
 5975 003f 63       		.byte	99
 5976              		.section	.rodata.JPEG_CHROM_QuantTable,"a",%progbits
 5977              		.align	2
 5978              		.set	.LANCHOR2,. + 0
 5981              	JPEG_CHROM_QuantTable:
 5982 0000 11       		.byte	17
 5983 0001 12       		.byte	18
 5984 0002 18       		.byte	24
 5985 0003 2F       		.byte	47
 5986 0004 63       		.byte	99
 5987 0005 63       		.byte	99
 5988 0006 63       		.byte	99
 5989 0007 63       		.byte	99
 5990 0008 12       		.byte	18
 5991 0009 15       		.byte	21
 5992 000a 1A       		.byte	26
 5993 000b 42       		.byte	66
 5994 000c 63       		.byte	99
 5995 000d 63       		.byte	99
 5996 000e 63       		.byte	99
 5997 000f 63       		.byte	99
 5998 0010 18       		.byte	24
 5999 0011 1A       		.byte	26
 6000 0012 38       		.byte	56
 6001 0013 63       		.byte	99
 6002 0014 63       		.byte	99
 6003 0015 63       		.byte	99
 6004 0016 63       		.byte	99
 6005 0017 63       		.byte	99
 6006 0018 2F       		.byte	47
 6007 0019 42       		.byte	66
 6008 001a 63       		.byte	99
 6009 001b 63       		.byte	99
 6010 001c 63       		.byte	99
 6011 001d 63       		.byte	99
 6012 001e 63       		.byte	99
 6013 001f 63       		.byte	99
 6014 0020 63       		.byte	99
 6015 0021 63       		.byte	99
 6016 0022 63       		.byte	99
 6017 0023 63       		.byte	99
 6018 0024 63       		.byte	99
 6019 0025 63       		.byte	99
 6020 0026 63       		.byte	99
 6021 0027 63       		.byte	99
 6022 0028 63       		.byte	99
 6023 0029 63       		.byte	99
 6024 002a 63       		.byte	99
 6025 002b 63       		.byte	99
 6026 002c 63       		.byte	99
ARM GAS  /tmp/ccSvCFam.s 			page 180


 6027 002d 63       		.byte	99
 6028 002e 63       		.byte	99
 6029 002f 63       		.byte	99
 6030 0030 63       		.byte	99
 6031 0031 63       		.byte	99
 6032 0032 63       		.byte	99
 6033 0033 63       		.byte	99
 6034 0034 63       		.byte	99
 6035 0035 63       		.byte	99
 6036 0036 63       		.byte	99
 6037 0037 63       		.byte	99
 6038 0038 63       		.byte	99
 6039 0039 63       		.byte	99
 6040 003a 63       		.byte	99
 6041 003b 63       		.byte	99
 6042 003c 63       		.byte	99
 6043 003d 63       		.byte	99
 6044 003e 63       		.byte	99
 6045 003f 63       		.byte	99
 6046              		.section	.rodata.JPEG_ACCHROM_HuffTable,"a",%progbits
 6047              		.align	2
 6048              		.set	.LANCHOR3,. + 0
 6051              	JPEG_ACCHROM_HuffTable:
 6052 0000 00       		.byte	0
 6053 0001 02       		.byte	2
 6054 0002 01       		.byte	1
 6055 0003 02       		.byte	2
 6056 0004 04       		.byte	4
 6057 0005 04       		.byte	4
 6058 0006 03       		.byte	3
 6059 0007 04       		.byte	4
 6060 0008 07       		.byte	7
 6061 0009 05       		.byte	5
 6062 000a 04       		.byte	4
 6063 000b 04       		.byte	4
 6064 000c 00       		.byte	0
 6065 000d 01       		.byte	1
 6066 000e 02       		.byte	2
 6067 000f 77       		.byte	119
 6068 0010 00       		.byte	0
 6069 0011 01       		.byte	1
 6070 0012 02       		.byte	2
 6071 0013 03       		.byte	3
 6072 0014 11       		.byte	17
 6073 0015 04       		.byte	4
 6074 0016 05       		.byte	5
 6075 0017 21       		.byte	33
 6076 0018 31       		.byte	49
 6077 0019 06       		.byte	6
 6078 001a 12       		.byte	18
 6079 001b 41       		.byte	65
 6080 001c 51       		.byte	81
 6081 001d 07       		.byte	7
 6082 001e 61       		.byte	97
 6083 001f 71       		.byte	113
 6084 0020 13       		.byte	19
 6085 0021 22       		.byte	34
ARM GAS  /tmp/ccSvCFam.s 			page 181


 6086 0022 32       		.byte	50
 6087 0023 81       		.byte	-127
 6088 0024 08       		.byte	8
 6089 0025 14       		.byte	20
 6090 0026 42       		.byte	66
 6091 0027 91       		.byte	-111
 6092 0028 A1       		.byte	-95
 6093 0029 B1       		.byte	-79
 6094 002a C1       		.byte	-63
 6095 002b 09       		.byte	9
 6096 002c 23       		.byte	35
 6097 002d 33       		.byte	51
 6098 002e 52       		.byte	82
 6099 002f F0       		.byte	-16
 6100 0030 15       		.byte	21
 6101 0031 62       		.byte	98
 6102 0032 72       		.byte	114
 6103 0033 D1       		.byte	-47
 6104 0034 0A       		.byte	10
 6105 0035 16       		.byte	22
 6106 0036 24       		.byte	36
 6107 0037 34       		.byte	52
 6108 0038 E1       		.byte	-31
 6109 0039 25       		.byte	37
 6110 003a F1       		.byte	-15
 6111 003b 17       		.byte	23
 6112 003c 18       		.byte	24
 6113 003d 19       		.byte	25
 6114 003e 1A       		.byte	26
 6115 003f 26       		.byte	38
 6116 0040 27       		.byte	39
 6117 0041 28       		.byte	40
 6118 0042 29       		.byte	41
 6119 0043 2A       		.byte	42
 6120 0044 35       		.byte	53
 6121 0045 36       		.byte	54
 6122 0046 37       		.byte	55
 6123 0047 38       		.byte	56
 6124 0048 39       		.byte	57
 6125 0049 3A       		.byte	58
 6126 004a 43       		.byte	67
 6127 004b 44       		.byte	68
 6128 004c 45       		.byte	69
 6129 004d 46       		.byte	70
 6130 004e 47       		.byte	71
 6131 004f 48       		.byte	72
 6132 0050 49       		.byte	73
 6133 0051 4A       		.byte	74
 6134 0052 53       		.byte	83
 6135 0053 54       		.byte	84
 6136 0054 55       		.byte	85
 6137 0055 56       		.byte	86
 6138 0056 57       		.byte	87
 6139 0057 58       		.byte	88
 6140 0058 59       		.byte	89
 6141 0059 5A       		.byte	90
 6142 005a 63       		.byte	99
ARM GAS  /tmp/ccSvCFam.s 			page 182


 6143 005b 64       		.byte	100
 6144 005c 65       		.byte	101
 6145 005d 66       		.byte	102
 6146 005e 67       		.byte	103
 6147 005f 68       		.byte	104
 6148 0060 69       		.byte	105
 6149 0061 6A       		.byte	106
 6150 0062 73       		.byte	115
 6151 0063 74       		.byte	116
 6152 0064 75       		.byte	117
 6153 0065 76       		.byte	118
 6154 0066 77       		.byte	119
 6155 0067 78       		.byte	120
 6156 0068 79       		.byte	121
 6157 0069 7A       		.byte	122
 6158 006a 82       		.byte	-126
 6159 006b 83       		.byte	-125
 6160 006c 84       		.byte	-124
 6161 006d 85       		.byte	-123
 6162 006e 86       		.byte	-122
 6163 006f 87       		.byte	-121
 6164 0070 88       		.byte	-120
 6165 0071 89       		.byte	-119
 6166 0072 8A       		.byte	-118
 6167 0073 92       		.byte	-110
 6168 0074 93       		.byte	-109
 6169 0075 94       		.byte	-108
 6170 0076 95       		.byte	-107
 6171 0077 96       		.byte	-106
 6172 0078 97       		.byte	-105
 6173 0079 98       		.byte	-104
 6174 007a 99       		.byte	-103
 6175 007b 9A       		.byte	-102
 6176 007c A2       		.byte	-94
 6177 007d A3       		.byte	-93
 6178 007e A4       		.byte	-92
 6179 007f A5       		.byte	-91
 6180 0080 A6       		.byte	-90
 6181 0081 A7       		.byte	-89
 6182 0082 A8       		.byte	-88
 6183 0083 A9       		.byte	-87
 6184 0084 AA       		.byte	-86
 6185 0085 B2       		.byte	-78
 6186 0086 B3       		.byte	-77
 6187 0087 B4       		.byte	-76
 6188 0088 B5       		.byte	-75
 6189 0089 B6       		.byte	-74
 6190 008a B7       		.byte	-73
 6191 008b B8       		.byte	-72
 6192 008c B9       		.byte	-71
 6193 008d BA       		.byte	-70
 6194 008e C2       		.byte	-62
 6195 008f C3       		.byte	-61
 6196 0090 C4       		.byte	-60
 6197 0091 C5       		.byte	-59
 6198 0092 C6       		.byte	-58
 6199 0093 C7       		.byte	-57
ARM GAS  /tmp/ccSvCFam.s 			page 183


 6200 0094 C8       		.byte	-56
 6201 0095 C9       		.byte	-55
 6202 0096 CA       		.byte	-54
 6203 0097 D2       		.byte	-46
 6204 0098 D3       		.byte	-45
 6205 0099 D4       		.byte	-44
 6206 009a D5       		.byte	-43
 6207 009b D6       		.byte	-42
 6208 009c D7       		.byte	-41
 6209 009d D8       		.byte	-40
 6210 009e D9       		.byte	-39
 6211 009f DA       		.byte	-38
 6212 00a0 E2       		.byte	-30
 6213 00a1 E3       		.byte	-29
 6214 00a2 E4       		.byte	-28
 6215 00a3 E5       		.byte	-27
 6216 00a4 E6       		.byte	-26
 6217 00a5 E7       		.byte	-25
 6218 00a6 E8       		.byte	-24
 6219 00a7 E9       		.byte	-23
 6220 00a8 EA       		.byte	-22
 6221 00a9 F2       		.byte	-14
 6222 00aa F3       		.byte	-13
 6223 00ab F4       		.byte	-12
 6224 00ac F5       		.byte	-11
 6225 00ad F6       		.byte	-10
 6226 00ae F7       		.byte	-9
 6227 00af F8       		.byte	-8
 6228 00b0 F9       		.byte	-7
 6229 00b1 FA       		.byte	-6
 6230              		.section	.rodata.JPEG_ACLUM_HuffTable,"a",%progbits
 6231              		.align	2
 6232              		.set	.LANCHOR5,. + 0
 6235              	JPEG_ACLUM_HuffTable:
 6236 0000 00       		.byte	0
 6237 0001 02       		.byte	2
 6238 0002 01       		.byte	1
 6239 0003 03       		.byte	3
 6240 0004 03       		.byte	3
 6241 0005 02       		.byte	2
 6242 0006 04       		.byte	4
 6243 0007 03       		.byte	3
 6244 0008 05       		.byte	5
 6245 0009 05       		.byte	5
 6246 000a 04       		.byte	4
 6247 000b 04       		.byte	4
 6248 000c 00       		.byte	0
 6249 000d 00       		.byte	0
 6250 000e 01       		.byte	1
 6251 000f 7D       		.byte	125
 6252 0010 01       		.byte	1
 6253 0011 02       		.byte	2
 6254 0012 03       		.byte	3
 6255 0013 00       		.byte	0
 6256 0014 04       		.byte	4
 6257 0015 11       		.byte	17
 6258 0016 05       		.byte	5
ARM GAS  /tmp/ccSvCFam.s 			page 184


 6259 0017 12       		.byte	18
 6260 0018 21       		.byte	33
 6261 0019 31       		.byte	49
 6262 001a 41       		.byte	65
 6263 001b 06       		.byte	6
 6264 001c 13       		.byte	19
 6265 001d 51       		.byte	81
 6266 001e 61       		.byte	97
 6267 001f 07       		.byte	7
 6268 0020 22       		.byte	34
 6269 0021 71       		.byte	113
 6270 0022 14       		.byte	20
 6271 0023 32       		.byte	50
 6272 0024 81       		.byte	-127
 6273 0025 91       		.byte	-111
 6274 0026 A1       		.byte	-95
 6275 0027 08       		.byte	8
 6276 0028 23       		.byte	35
 6277 0029 42       		.byte	66
 6278 002a B1       		.byte	-79
 6279 002b C1       		.byte	-63
 6280 002c 15       		.byte	21
 6281 002d 52       		.byte	82
 6282 002e D1       		.byte	-47
 6283 002f F0       		.byte	-16
 6284 0030 24       		.byte	36
 6285 0031 33       		.byte	51
 6286 0032 62       		.byte	98
 6287 0033 72       		.byte	114
 6288 0034 82       		.byte	-126
 6289 0035 09       		.byte	9
 6290 0036 0A       		.byte	10
 6291 0037 16       		.byte	22
 6292 0038 17       		.byte	23
 6293 0039 18       		.byte	24
 6294 003a 19       		.byte	25
 6295 003b 1A       		.byte	26
 6296 003c 25       		.byte	37
 6297 003d 26       		.byte	38
 6298 003e 27       		.byte	39
 6299 003f 28       		.byte	40
 6300 0040 29       		.byte	41
 6301 0041 2A       		.byte	42
 6302 0042 34       		.byte	52
 6303 0043 35       		.byte	53
 6304 0044 36       		.byte	54
 6305 0045 37       		.byte	55
 6306 0046 38       		.byte	56
 6307 0047 39       		.byte	57
 6308 0048 3A       		.byte	58
 6309 0049 43       		.byte	67
 6310 004a 44       		.byte	68
 6311 004b 45       		.byte	69
 6312 004c 46       		.byte	70
 6313 004d 47       		.byte	71
 6314 004e 48       		.byte	72
 6315 004f 49       		.byte	73
ARM GAS  /tmp/ccSvCFam.s 			page 185


 6316 0050 4A       		.byte	74
 6317 0051 53       		.byte	83
 6318 0052 54       		.byte	84
 6319 0053 55       		.byte	85
 6320 0054 56       		.byte	86
 6321 0055 57       		.byte	87
 6322 0056 58       		.byte	88
 6323 0057 59       		.byte	89
 6324 0058 5A       		.byte	90
 6325 0059 63       		.byte	99
 6326 005a 64       		.byte	100
 6327 005b 65       		.byte	101
 6328 005c 66       		.byte	102
 6329 005d 67       		.byte	103
 6330 005e 68       		.byte	104
 6331 005f 69       		.byte	105
 6332 0060 6A       		.byte	106
 6333 0061 73       		.byte	115
 6334 0062 74       		.byte	116
 6335 0063 75       		.byte	117
 6336 0064 76       		.byte	118
 6337 0065 77       		.byte	119
 6338 0066 78       		.byte	120
 6339 0067 79       		.byte	121
 6340 0068 7A       		.byte	122
 6341 0069 83       		.byte	-125
 6342 006a 84       		.byte	-124
 6343 006b 85       		.byte	-123
 6344 006c 86       		.byte	-122
 6345 006d 87       		.byte	-121
 6346 006e 88       		.byte	-120
 6347 006f 89       		.byte	-119
 6348 0070 8A       		.byte	-118
 6349 0071 92       		.byte	-110
 6350 0072 93       		.byte	-109
 6351 0073 94       		.byte	-108
 6352 0074 95       		.byte	-107
 6353 0075 96       		.byte	-106
 6354 0076 97       		.byte	-105
 6355 0077 98       		.byte	-104
 6356 0078 99       		.byte	-103
 6357 0079 9A       		.byte	-102
 6358 007a A2       		.byte	-94
 6359 007b A3       		.byte	-93
 6360 007c A4       		.byte	-92
 6361 007d A5       		.byte	-91
 6362 007e A6       		.byte	-90
 6363 007f A7       		.byte	-89
 6364 0080 A8       		.byte	-88
 6365 0081 A9       		.byte	-87
 6366 0082 AA       		.byte	-86
 6367 0083 B2       		.byte	-78
 6368 0084 B3       		.byte	-77
 6369 0085 B4       		.byte	-76
 6370 0086 B5       		.byte	-75
 6371 0087 B6       		.byte	-74
 6372 0088 B7       		.byte	-73
ARM GAS  /tmp/ccSvCFam.s 			page 186


 6373 0089 B8       		.byte	-72
 6374 008a B9       		.byte	-71
 6375 008b BA       		.byte	-70
 6376 008c C2       		.byte	-62
 6377 008d C3       		.byte	-61
 6378 008e C4       		.byte	-60
 6379 008f C5       		.byte	-59
 6380 0090 C6       		.byte	-58
 6381 0091 C7       		.byte	-57
 6382 0092 C8       		.byte	-56
 6383 0093 C9       		.byte	-55
 6384 0094 CA       		.byte	-54
 6385 0095 D2       		.byte	-46
 6386 0096 D3       		.byte	-45
 6387 0097 D4       		.byte	-44
 6388 0098 D5       		.byte	-43
 6389 0099 D6       		.byte	-42
 6390 009a D7       		.byte	-41
 6391 009b D8       		.byte	-40
 6392 009c D9       		.byte	-39
 6393 009d DA       		.byte	-38
 6394 009e E1       		.byte	-31
 6395 009f E2       		.byte	-30
 6396 00a0 E3       		.byte	-29
 6397 00a1 E4       		.byte	-28
 6398 00a2 E5       		.byte	-27
 6399 00a3 E6       		.byte	-26
 6400 00a4 E7       		.byte	-25
 6401 00a5 E8       		.byte	-24
 6402 00a6 E9       		.byte	-23
 6403 00a7 EA       		.byte	-22
 6404 00a8 F1       		.byte	-15
 6405 00a9 F2       		.byte	-14
 6406 00aa F3       		.byte	-13
 6407 00ab F4       		.byte	-12
 6408 00ac F5       		.byte	-11
 6409 00ad F6       		.byte	-10
 6410 00ae F7       		.byte	-9
 6411 00af F8       		.byte	-8
 6412 00b0 F9       		.byte	-7
 6413 00b1 FA       		.byte	-6
 6414              		.section	.rodata.JPEG_DCLUM_HuffTable,"a",%progbits
 6415              		.align	2
 6416              		.set	.LANCHOR4,. + 0
 6419              	JPEG_DCLUM_HuffTable:
 6420 0000 00       		.byte	0
 6421 0001 01       		.byte	1
 6422 0002 05       		.byte	5
 6423 0003 01       		.byte	1
 6424 0004 01       		.byte	1
 6425 0005 01       		.byte	1
 6426 0006 01       		.byte	1
 6427 0007 01       		.byte	1
 6428 0008 01       		.byte	1
 6429 0009 00       		.byte	0
 6430 000a 00       		.byte	0
 6431 000b 00       		.byte	0
ARM GAS  /tmp/ccSvCFam.s 			page 187


 6432 000c 00       		.byte	0
 6433 000d 00       		.byte	0
 6434 000e 00       		.byte	0
 6435 000f 00       		.byte	0
 6436 0010 00       		.byte	0
 6437 0011 01       		.byte	1
 6438 0012 02       		.byte	2
 6439 0013 03       		.byte	3
 6440 0014 04       		.byte	4
 6441 0015 05       		.byte	5
 6442 0016 06       		.byte	6
 6443 0017 07       		.byte	7
 6444 0018 08       		.byte	8
 6445 0019 09       		.byte	9
 6446 001a 0A       		.byte	10
 6447 001b 0B       		.byte	11
 6448              		.section	.rodata.JPEG_DCCHROM_HuffTable,"a",%progbits
 6449              		.align	2
 6450              		.set	.LANCHOR6,. + 0
 6453              	JPEG_DCCHROM_HuffTable:
 6454 0000 00       		.byte	0
 6455 0001 03       		.byte	3
 6456 0002 01       		.byte	1
 6457 0003 01       		.byte	1
 6458 0004 01       		.byte	1
 6459 0005 01       		.byte	1
 6460 0006 01       		.byte	1
 6461 0007 01       		.byte	1
 6462 0008 01       		.byte	1
 6463 0009 01       		.byte	1
 6464 000a 01       		.byte	1
 6465 000b 00       		.byte	0
 6466 000c 00       		.byte	0
 6467 000d 00       		.byte	0
 6468 000e 00       		.byte	0
 6469 000f 00       		.byte	0
 6470 0010 00       		.byte	0
 6471 0011 01       		.byte	1
 6472 0012 02       		.byte	2
 6473 0013 03       		.byte	3
 6474 0014 04       		.byte	4
 6475 0015 05       		.byte	5
 6476 0016 06       		.byte	6
 6477 0017 07       		.byte	7
 6478 0018 08       		.byte	8
 6479 0019 09       		.byte	9
 6480 001a 0A       		.byte	10
 6481 001b 0B       		.byte	11
 6482              		.section	.rodata.JPEG_ZIGZAG_ORDER,"a",%progbits
 6483              		.align	2
 6484              		.set	.LANCHOR0,. + 0
 6487              	JPEG_ZIGZAG_ORDER:
 6488 0000 00       		.byte	0
 6489 0001 01       		.byte	1
 6490 0002 08       		.byte	8
 6491 0003 10       		.byte	16
 6492 0004 09       		.byte	9
ARM GAS  /tmp/ccSvCFam.s 			page 188


 6493 0005 02       		.byte	2
 6494 0006 03       		.byte	3
 6495 0007 0A       		.byte	10
 6496 0008 11       		.byte	17
 6497 0009 18       		.byte	24
 6498 000a 20       		.byte	32
 6499 000b 19       		.byte	25
 6500 000c 12       		.byte	18
 6501 000d 0B       		.byte	11
 6502 000e 04       		.byte	4
 6503 000f 05       		.byte	5
 6504 0010 0C       		.byte	12
 6505 0011 13       		.byte	19
 6506 0012 1A       		.byte	26
 6507 0013 21       		.byte	33
 6508 0014 28       		.byte	40
 6509 0015 30       		.byte	48
 6510 0016 29       		.byte	41
 6511 0017 22       		.byte	34
 6512 0018 1B       		.byte	27
 6513 0019 14       		.byte	20
 6514 001a 0D       		.byte	13
 6515 001b 06       		.byte	6
 6516 001c 07       		.byte	7
 6517 001d 0E       		.byte	14
 6518 001e 15       		.byte	21
 6519 001f 1C       		.byte	28
 6520 0020 23       		.byte	35
 6521 0021 2A       		.byte	42
 6522 0022 31       		.byte	49
 6523 0023 38       		.byte	56
 6524 0024 39       		.byte	57
 6525 0025 32       		.byte	50
 6526 0026 2B       		.byte	43
 6527 0027 24       		.byte	36
 6528 0028 1D       		.byte	29
 6529 0029 16       		.byte	22
 6530 002a 0F       		.byte	15
 6531 002b 17       		.byte	23
 6532 002c 1E       		.byte	30
 6533 002d 25       		.byte	37
 6534 002e 2C       		.byte	44
 6535 002f 33       		.byte	51
 6536 0030 3A       		.byte	58
 6537 0031 3B       		.byte	59
 6538 0032 34       		.byte	52
 6539 0033 2D       		.byte	45
 6540 0034 26       		.byte	38
 6541 0035 1F       		.byte	31
 6542 0036 27       		.byte	39
 6543 0037 2E       		.byte	46
 6544 0038 35       		.byte	53
 6545 0039 3C       		.byte	60
 6546 003a 3D       		.byte	61
 6547 003b 36       		.byte	54
 6548 003c 2F       		.byte	47
 6549 003d 37       		.byte	55
ARM GAS  /tmp/ccSvCFam.s 			page 189


 6550 003e 3E       		.byte	62
 6551 003f 3F       		.byte	63
 6552              		.text
 6553              	.Letext0:
 6554              		.file 2 "/opt/5.4.2016q3/arm-none-eabi/include/machine/_default_types.h"
 6555              		.file 3 "/opt/5.4.2016q3/arm-none-eabi/include/sys/_stdint.h"
 6556              		.file 4 "Inc/stm32f767xx.h"
 6557              		.file 5 "Inc/stm32f7xx.h"
 6558              		.file 6 "HALLIB/Inc/stm32f7xx_hal_def.h"
 6559              		.file 7 "HALLIB/Inc/stm32f7xx_hal_dma.h"
 6560              		.file 8 "HALLIB/Inc/stm32f7xx_hal_jpeg.h"
 6561              		.file 9 "HALLIB/Inc/stm32f7xx_hal.h"
 6562              		.file 10 "CORE/core_cm7.h"
ARM GAS  /tmp/ccSvCFam.s 			page 190


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_jpeg.c
     /tmp/ccSvCFam.s:21     .text.JPEG_Bits_To_SizeCodes:00000000 $t
     /tmp/ccSvCFam.s:25     .text.JPEG_Bits_To_SizeCodes:00000000 JPEG_Bits_To_SizeCodes
     /tmp/ccSvCFam.s:156    .text.JPEG_ACHuff_BitsVals_To_SizeCodes:00000000 $t
     /tmp/ccSvCFam.s:160    .text.JPEG_ACHuff_BitsVals_To_SizeCodes:00000000 JPEG_ACHuff_BitsVals_To_SizeCodes
     /tmp/ccSvCFam.s:271    .text.JPEG_DCHuff_BitsVals_To_SizeCodes:00000000 $t
     /tmp/ccSvCFam.s:275    .text.JPEG_DCHuff_BitsVals_To_SizeCodes:00000000 JPEG_DCHuff_BitsVals_To_SizeCodes
     /tmp/ccSvCFam.s:354    .text.JPEG_Set_HuffDC_Mem:00000000 $t
     /tmp/ccSvCFam.s:358    .text.JPEG_Set_HuffDC_Mem:00000000 JPEG_Set_HuffDC_Mem
     /tmp/ccSvCFam.s:486    .text.JPEG_Set_HuffAC_Mem:00000000 $t
     /tmp/ccSvCFam.s:490    .text.JPEG_Set_HuffAC_Mem:00000000 JPEG_Set_HuffAC_Mem
     /tmp/ccSvCFam.s:641    .text.JPEG_Set_HuffAC_Mem:000000b0 $d
     /tmp/ccSvCFam.s:646    .text.JPEG_Set_Huff_DHTMem:00000000 $t
     /tmp/ccSvCFam.s:650    .text.JPEG_Set_Huff_DHTMem:00000000 JPEG_Set_Huff_DHTMem
     /tmp/ccSvCFam.s:1142   .text.JPEG_Set_Huff_DHTMem:00000268 $d
     /tmp/ccSvCFam.s:1147   .text.JPEG_Set_HuffEnc_Mem:00000000 $t
     /tmp/ccSvCFam.s:1151   .text.JPEG_Set_HuffEnc_Mem:00000000 JPEG_Set_HuffEnc_Mem
     /tmp/ccSvCFam.s:1258   .text.JPEG_Set_Quantization_Mem:00000000 $t
     /tmp/ccSvCFam.s:1262   .text.JPEG_Set_Quantization_Mem:00000000 JPEG_Set_Quantization_Mem
     /tmp/ccSvCFam.s:1412   .text.JPEG_Set_Quantization_Mem:00000098 $d
     /tmp/ccSvCFam.s:1418   .text.JPEG_SetColorYCBCR:00000000 $t
     /tmp/ccSvCFam.s:1422   .text.JPEG_SetColorYCBCR:00000000 JPEG_SetColorYCBCR
     /tmp/ccSvCFam.s:1530   .text.JPEG_SetColorGrayScale:00000000 $t
     /tmp/ccSvCFam.s:1534   .text.JPEG_SetColorGrayScale:00000000 JPEG_SetColorGrayScale
     /tmp/ccSvCFam.s:1561   .text.JPEG_SetColorCMYK:00000000 $t
     /tmp/ccSvCFam.s:1565   .text.JPEG_SetColorCMYK:00000000 JPEG_SetColorCMYK
     /tmp/ccSvCFam.s:1665   .text.JPEG_Init_Process:00000000 $t
     /tmp/ccSvCFam.s:1669   .text.JPEG_Init_Process:00000000 JPEG_Init_Process
     /tmp/ccSvCFam.s:1767   .text.JPEG_GetQuality:00000000 $t
     /tmp/ccSvCFam.s:1771   .text.JPEG_GetQuality:00000000 JPEG_GetQuality
     /tmp/ccSvCFam.s:1882   .text.JPEG_GetQuality:00000064 $d
     /tmp/ccSvCFam.s:1888   .text.JPEG_DMA_StartProcess:00000000 $t
     /tmp/ccSvCFam.s:1892   .text.JPEG_DMA_StartProcess:00000000 JPEG_DMA_StartProcess
     /tmp/ccSvCFam.s:1994   .text.JPEG_DMA_StartProcess:00000084 $d
     /tmp/ccSvCFam.s:4235   .text.JPEG_DMAInCpltCallback:00000000 JPEG_DMAInCpltCallback
     /tmp/ccSvCFam.s:3973   .text.JPEG_DMAErrorCallback:00000000 JPEG_DMAErrorCallback
     /tmp/ccSvCFam.s:5728   .text.JPEG_DMAOutCpltCallback:00000000 JPEG_DMAOutCpltCallback
     /tmp/ccSvCFam.s:5580   .text.JPEG_DMAOutAbortCallback:00000000 JPEG_DMAOutAbortCallback
     /tmp/ccSvCFam.s:2002   .text.HAL_JPEG_MspInit:00000000 $t
     /tmp/ccSvCFam.s:2007   .text.HAL_JPEG_MspInit:00000000 HAL_JPEG_MspInit
     /tmp/ccSvCFam.s:2020   .text.HAL_JPEG_Init:00000000 $t
     /tmp/ccSvCFam.s:2025   .text.HAL_JPEG_Init:00000000 HAL_JPEG_Init
     /tmp/ccSvCFam.s:2169   .text.HAL_JPEG_Init:000000bc $d
     /tmp/ccSvCFam.s:2179   .text.HAL_JPEG_MspDeInit:00000000 $t
     /tmp/ccSvCFam.s:2184   .text.HAL_JPEG_MspDeInit:00000000 HAL_JPEG_MspDeInit
     /tmp/ccSvCFam.s:2197   .text.HAL_JPEG_DeInit:00000000 $t
     /tmp/ccSvCFam.s:2202   .text.HAL_JPEG_DeInit:00000000 HAL_JPEG_DeInit
     /tmp/ccSvCFam.s:2253   .text.HAL_JPEG_ConfigEncoding:00000000 $t
     /tmp/ccSvCFam.s:2258   .text.HAL_JPEG_ConfigEncoding:00000000 HAL_JPEG_ConfigEncoding
     /tmp/ccSvCFam.s:2634   .text.HAL_JPEG_GetInfo:00000000 $t
     /tmp/ccSvCFam.s:2639   .text.HAL_JPEG_GetInfo:00000000 HAL_JPEG_GetInfo
     /tmp/ccSvCFam.s:2804   .text.HAL_JPEG_EnableHeaderParsing:00000000 $t
     /tmp/ccSvCFam.s:2809   .text.HAL_JPEG_EnableHeaderParsing:00000000 HAL_JPEG_EnableHeaderParsing
     /tmp/ccSvCFam.s:2867   .text.HAL_JPEG_DisableHeaderParsing:00000000 $t
     /tmp/ccSvCFam.s:2872   .text.HAL_JPEG_DisableHeaderParsing:00000000 HAL_JPEG_DisableHeaderParsing
     /tmp/ccSvCFam.s:2930   .text.HAL_JPEG_SetUserQuantTables:00000000 $t
ARM GAS  /tmp/ccSvCFam.s 			page 191


     /tmp/ccSvCFam.s:2935   .text.HAL_JPEG_SetUserQuantTables:00000000 HAL_JPEG_SetUserQuantTables
     /tmp/ccSvCFam.s:3014   .text.HAL_JPEG_Encode_IT:00000000 $t
     /tmp/ccSvCFam.s:3019   .text.HAL_JPEG_Encode_IT:00000000 HAL_JPEG_Encode_IT
     /tmp/ccSvCFam.s:3168   .text.HAL_JPEG_Decode_IT:00000000 $t
     /tmp/ccSvCFam.s:3173   .text.HAL_JPEG_Decode_IT:00000000 HAL_JPEG_Decode_IT
     /tmp/ccSvCFam.s:3306   .text.HAL_JPEG_Encode_DMA:00000000 $t
     /tmp/ccSvCFam.s:3311   .text.HAL_JPEG_Encode_DMA:00000000 HAL_JPEG_Encode_DMA
     /tmp/ccSvCFam.s:3459   .text.HAL_JPEG_Decode_DMA:00000000 $t
     /tmp/ccSvCFam.s:3464   .text.HAL_JPEG_Decode_DMA:00000000 HAL_JPEG_Decode_DMA
     /tmp/ccSvCFam.s:3604   .text.HAL_JPEG_Pause:00000000 $t
     /tmp/ccSvCFam.s:3609   .text.HAL_JPEG_Pause:00000000 HAL_JPEG_Pause
     /tmp/ccSvCFam.s:3721   .text.HAL_JPEG_ConfigInputBuffer:00000000 $t
     /tmp/ccSvCFam.s:3726   .text.HAL_JPEG_ConfigInputBuffer:00000000 HAL_JPEG_ConfigInputBuffer
     /tmp/ccSvCFam.s:3743   .text.HAL_JPEG_ConfigOutputBuffer:00000000 $t
     /tmp/ccSvCFam.s:3748   .text.HAL_JPEG_ConfigOutputBuffer:00000000 HAL_JPEG_ConfigOutputBuffer
     /tmp/ccSvCFam.s:3765   .text.HAL_JPEG_Abort:00000000 $t
     /tmp/ccSvCFam.s:3770   .text.HAL_JPEG_Abort:00000000 HAL_JPEG_Abort
     /tmp/ccSvCFam.s:3892   .text.HAL_JPEG_Abort:000000ac $d
     /tmp/ccSvCFam.s:3897   .text.HAL_JPEG_InfoReadyCallback:00000000 $t
     /tmp/ccSvCFam.s:3902   .text.HAL_JPEG_InfoReadyCallback:00000000 HAL_JPEG_InfoReadyCallback
     /tmp/ccSvCFam.s:3915   .text.HAL_JPEG_EncodeCpltCallback:00000000 $t
     /tmp/ccSvCFam.s:3920   .text.HAL_JPEG_EncodeCpltCallback:00000000 HAL_JPEG_EncodeCpltCallback
     /tmp/ccSvCFam.s:3933   .text.HAL_JPEG_DecodeCpltCallback:00000000 $t
     /tmp/ccSvCFam.s:3938   .text.HAL_JPEG_DecodeCpltCallback:00000000 HAL_JPEG_DecodeCpltCallback
     /tmp/ccSvCFam.s:3951   .text.HAL_JPEG_ErrorCallback:00000000 $t
     /tmp/ccSvCFam.s:3956   .text.HAL_JPEG_ErrorCallback:00000000 HAL_JPEG_ErrorCallback
     /tmp/ccSvCFam.s:3969   .text.JPEG_DMAErrorCallback:00000000 $t
     /tmp/ccSvCFam.s:4026   .text.HAL_JPEG_GetDataCallback:00000000 $t
     /tmp/ccSvCFam.s:4031   .text.HAL_JPEG_GetDataCallback:00000000 HAL_JPEG_GetDataCallback
     /tmp/ccSvCFam.s:4044   .text.JPEG_ReadInputData:00000000 $t
     /tmp/ccSvCFam.s:4048   .text.JPEG_ReadInputData:00000000 JPEG_ReadInputData
     /tmp/ccSvCFam.s:4231   .text.JPEG_DMAInCpltCallback:00000000 $t
     /tmp/ccSvCFam.s:4330   .text.JPEG_DMAInCpltCallback:00000088 $d
     /tmp/ccSvCFam.s:4335   .text.HAL_JPEG_DataReadyCallback:00000000 $t
     /tmp/ccSvCFam.s:4340   .text.HAL_JPEG_DataReadyCallback:00000000 HAL_JPEG_DataReadyCallback
     /tmp/ccSvCFam.s:4353   .text.JPEG_StoreOutputData:00000000 $t
     /tmp/ccSvCFam.s:4357   .text.JPEG_StoreOutputData:00000000 JPEG_StoreOutputData
     /tmp/ccSvCFam.s:4551   .text.JPEG_Process:00000000 $t
     /tmp/ccSvCFam.s:4555   .text.JPEG_Process:00000000 JPEG_Process
     /tmp/ccSvCFam.s:4744   .text.HAL_JPEG_Encode:00000000 $t
     /tmp/ccSvCFam.s:4749   .text.HAL_JPEG_Encode:00000000 HAL_JPEG_Encode
     /tmp/ccSvCFam.s:4967   .text.HAL_JPEG_Decode:00000000 $t
     /tmp/ccSvCFam.s:4972   .text.HAL_JPEG_Decode:00000000 HAL_JPEG_Decode
     /tmp/ccSvCFam.s:5169   .text.JPEG_DMA_PollResidualData:00000000 $t
     /tmp/ccSvCFam.s:5173   .text.JPEG_DMA_PollResidualData:00000000 JPEG_DMA_PollResidualData
     /tmp/ccSvCFam.s:5291   .text.HAL_JPEG_Resume:00000000 $t
     /tmp/ccSvCFam.s:5296   .text.HAL_JPEG_Resume:00000000 HAL_JPEG_Resume
     /tmp/ccSvCFam.s:5466   .text.JPEG_DMA_EndProcess:00000000 $t
     /tmp/ccSvCFam.s:5470   .text.JPEG_DMA_EndProcess:00000000 JPEG_DMA_EndProcess
     /tmp/ccSvCFam.s:5571   .text.JPEG_DMA_EndProcess:00000084 $d
     /tmp/ccSvCFam.s:5576   .text.JPEG_DMAOutAbortCallback:00000000 $t
     /tmp/ccSvCFam.s:5608   .text.JPEG_DMA_ContinueProcess:00000000 $t
     /tmp/ccSvCFam.s:5612   .text.JPEG_DMA_ContinueProcess:00000000 JPEG_DMA_ContinueProcess
     /tmp/ccSvCFam.s:5724   .text.JPEG_DMAOutCpltCallback:00000000 $t
     /tmp/ccSvCFam.s:5811   .text.JPEG_DMAOutCpltCallback:0000007c $d
     /tmp/ccSvCFam.s:5816   .text.HAL_JPEG_IRQHandler:00000000 $t
     /tmp/ccSvCFam.s:5821   .text.HAL_JPEG_IRQHandler:00000000 HAL_JPEG_IRQHandler
ARM GAS  /tmp/ccSvCFam.s 			page 192


     /tmp/ccSvCFam.s:5863   .text.HAL_JPEG_GetState:00000000 $t
     /tmp/ccSvCFam.s:5868   .text.HAL_JPEG_GetState:00000000 HAL_JPEG_GetState
     /tmp/ccSvCFam.s:5885   .text.HAL_JPEG_GetError:00000000 $t
     /tmp/ccSvCFam.s:5890   .text.HAL_JPEG_GetError:00000000 HAL_JPEG_GetError
     /tmp/ccSvCFam.s:5907   .rodata.JPEG_LUM_QuantTable:00000000 $d
     /tmp/ccSvCFam.s:5911   .rodata.JPEG_LUM_QuantTable:00000000 JPEG_LUM_QuantTable
     /tmp/ccSvCFam.s:5977   .rodata.JPEG_CHROM_QuantTable:00000000 $d
     /tmp/ccSvCFam.s:5981   .rodata.JPEG_CHROM_QuantTable:00000000 JPEG_CHROM_QuantTable
     /tmp/ccSvCFam.s:6047   .rodata.JPEG_ACCHROM_HuffTable:00000000 $d
     /tmp/ccSvCFam.s:6051   .rodata.JPEG_ACCHROM_HuffTable:00000000 JPEG_ACCHROM_HuffTable
     /tmp/ccSvCFam.s:6231   .rodata.JPEG_ACLUM_HuffTable:00000000 $d
     /tmp/ccSvCFam.s:6235   .rodata.JPEG_ACLUM_HuffTable:00000000 JPEG_ACLUM_HuffTable
     /tmp/ccSvCFam.s:6415   .rodata.JPEG_DCLUM_HuffTable:00000000 $d
     /tmp/ccSvCFam.s:6419   .rodata.JPEG_DCLUM_HuffTable:00000000 JPEG_DCLUM_HuffTable
     /tmp/ccSvCFam.s:6449   .rodata.JPEG_DCCHROM_HuffTable:00000000 $d
     /tmp/ccSvCFam.s:6453   .rodata.JPEG_DCCHROM_HuffTable:00000000 JPEG_DCCHROM_HuffTable
     /tmp/ccSvCFam.s:6483   .rodata.JPEG_ZIGZAG_ORDER:00000000 $d
     /tmp/ccSvCFam.s:6487   .rodata.JPEG_ZIGZAG_ORDER:00000000 JPEG_ZIGZAG_ORDER
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_GetTick
HAL_DMA_GetError
HAL_DMA_Abort_IT
