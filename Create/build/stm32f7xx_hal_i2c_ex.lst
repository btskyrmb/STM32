ARM GAS  /tmp/ccpSuqpb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f7xx_hal_i2c_ex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_I2CEx_ConfigAnalogFilter,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_I2CEx_ConfigAnalogFilter
  23              		.thumb
  24              		.thumb_func
  26              	HAL_I2CEx_ConfigAnalogFilter:
  27              	.LFB136:
  28              		.file 1 "HALLIB/Src/stm32f7xx_hal_i2c_ex.c"
   1:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /**
   2:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   ******************************************************************************
   3:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @file    stm32f7xx_hal_i2c_ex.c
   4:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @author  MCD Application Team
   5:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @brief   I2C Extended HAL module driver.
   6:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *          This file provides firmware functions to manage the following
   7:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *          functionalities of I2C Extended peripheral:
   8:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *           + Extended features functions
   9:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *
  10:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   @verbatim
  11:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   ==============================================================================
  12:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****                ##### I2C peripheral Extended features  #####
  13:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   ==============================================================================
  14:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  15:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   [..] Comparing to other previous devices, the I2C interface for STM32F7xx
  16:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****        devices contains the following additional features
  17:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  18:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****        (+) Possibility to disable or enable Analog Noise Filter
  19:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****        (+) Use of a configured Digital Noise Filter
  20:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****        (+) Disable or enable Fast Mode Plus
  21:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  22:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****                      ##### How to use this driver #####
  23:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   ==============================================================================
  24:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   [..] This driver provides functions to:
  25:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     (#) Configure I2C Analog noise filter using the function HAL_I2CEx_ConfigAnalogFilter()
  26:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     (#) Configure I2C Digital noise filter using the function HAL_I2CEx_ConfigDigitalFilter()
  27:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     (#) Configure the enable or disable of fast mode plus driving capability using the functions :
  28:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****           (++) HAL_I2CEx_EnableFastModePlus()
  29:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****           (++) HAL_I2CEx_DisableFastModePlus()
  30:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   @endverbatim
ARM GAS  /tmp/ccpSuqpb.s 			page 2


  31:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   ******************************************************************************
  32:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @attention
  33:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *
  34:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  35:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *
  36:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  37:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * are permitted provided that the following conditions are met:
  38:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  39:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *      this list of conditions and the following disclaimer.
  40:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  41:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  42:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *      and/or other materials provided with the distribution.
  43:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  44:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *      may be used to endorse or promote products derived from this software
  45:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *      without specific prior written permission.
  46:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *
  47:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  48:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  49:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  50:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  51:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  52:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  53:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  54:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  55:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  56:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  57:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *
  58:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   ******************************************************************************
  59:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
  60:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  61:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /* Includes ------------------------------------------------------------------*/
  62:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** #include "stm32f7xx_hal.h"
  63:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  64:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
  65:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @{
  66:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
  67:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  68:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /** @defgroup I2CEx I2CEx
  69:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @brief I2C Extended HAL module driver
  70:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @{
  71:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
  72:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  73:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** #ifdef HAL_I2C_MODULE_ENABLED
  74:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  75:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /* Private typedef -----------------------------------------------------------*/
  76:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /* Private define ------------------------------------------------------------*/
  77:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /* Private macro -------------------------------------------------------------*/
  78:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /* Private variables ---------------------------------------------------------*/
  79:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /* Private function prototypes -----------------------------------------------*/
  80:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /* Private functions ---------------------------------------------------------*/
  81:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  82:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /** @defgroup I2CEx_Exported_Functions I2C Extended Exported Functions
  83:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @{
  84:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
  85:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  86:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /** @defgroup I2CEx_Exported_Functions_Group1 Extended features functions
  87:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @brief    Extended features functions
ARM GAS  /tmp/ccpSuqpb.s 			page 3


  88:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****  *
  89:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** @verbatim
  90:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****  ===============================================================================
  91:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****                       ##### Extended features functions #####
  92:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****  ===============================================================================
  93:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     [..] This section provides functions allowing to:
  94:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****       (+) Configure Noise Filters
  95:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****       (+) Configure Fast Mode Plus
  96:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  97:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** @endverbatim
  98:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @{
  99:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
 100:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 101:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /**
 102:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @brief  Configure I2C Analog noise filter.
 103:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 104:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *                the configuration information for the specified I2Cx peripheral.
 105:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @param  AnalogFilter New state of the Analog filter.
 106:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @retval HAL status
 107:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
 108:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
 109:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** {
  29              		.loc 1 109 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 110:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   /* Check the parameters */
 111:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 112:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));
 113:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 114:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
  35              		.loc 1 114 0
  36 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
  37 0004 DBB2     		uxtb	r3, r3
  38 0006 202B     		cmp	r3, #32
  39 0008 24D1     		bne	.L3
 115:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   {
 116:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Process Locked */
 117:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     __HAL_LOCK(hi2c);
  40              		.loc 1 117 0
  41 000a 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
  42 000e 012B     		cmp	r3, #1
  43 0010 22D0     		beq	.L4
  44              		.loc 1 117 0 is_stmt 0 discriminator 2
  45 0012 0123     		movs	r3, #1
  46 0014 80F84030 		strb	r3, [r0, #64]
 118:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 119:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
  47              		.loc 1 119 0 is_stmt 1 discriminator 2
  48 0018 2423     		movs	r3, #36
  49 001a 80F84130 		strb	r3, [r0, #65]
 120:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 121:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Disable the selected I2C peripheral */
 122:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     __HAL_I2C_DISABLE(hi2c);
  50              		.loc 1 122 0 discriminator 2
ARM GAS  /tmp/ccpSuqpb.s 			page 4


  51 001e 0268     		ldr	r2, [r0]
  52 0020 1368     		ldr	r3, [r2]
  53 0022 23F00103 		bic	r3, r3, #1
  54 0026 1360     		str	r3, [r2]
 123:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 124:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Reset I2Cx ANOFF bit */
 125:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
  55              		.loc 1 125 0 discriminator 2
  56 0028 0268     		ldr	r2, [r0]
  57 002a 1368     		ldr	r3, [r2]
  58 002c 23F48053 		bic	r3, r3, #4096
  59 0030 1360     		str	r3, [r2]
 126:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 127:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Set analog filter bit*/
 128:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     hi2c->Instance->CR1 |= AnalogFilter;
  60              		.loc 1 128 0 discriminator 2
  61 0032 0368     		ldr	r3, [r0]
  62 0034 1A68     		ldr	r2, [r3]
  63 0036 1143     		orrs	r1, r1, r2
  64              	.LVL1:
  65 0038 1960     		str	r1, [r3]
 129:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 130:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     __HAL_I2C_ENABLE(hi2c);
  66              		.loc 1 130 0 discriminator 2
  67 003a 0268     		ldr	r2, [r0]
  68 003c 1368     		ldr	r3, [r2]
  69 003e 43F00103 		orr	r3, r3, #1
  70 0042 1360     		str	r3, [r2]
 131:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 132:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     hi2c->State = HAL_I2C_STATE_READY;
  71              		.loc 1 132 0 discriminator 2
  72 0044 2023     		movs	r3, #32
  73 0046 80F84130 		strb	r3, [r0, #65]
 133:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 134:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Process Unlocked */
 135:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     __HAL_UNLOCK(hi2c);
  74              		.loc 1 135 0 discriminator 2
  75 004a 0023     		movs	r3, #0
  76 004c 80F84030 		strb	r3, [r0, #64]
 136:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 137:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     return HAL_OK;
  77              		.loc 1 137 0 discriminator 2
  78 0050 1846     		mov	r0, r3
  79              	.LVL2:
  80 0052 7047     		bx	lr
  81              	.LVL3:
  82              	.L3:
 138:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   }
 139:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   else
 140:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   {
 141:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     return HAL_BUSY;
  83              		.loc 1 141 0
  84 0054 0220     		movs	r0, #2
  85              	.LVL4:
  86 0056 7047     		bx	lr
  87              	.LVL5:
  88              	.L4:
ARM GAS  /tmp/ccpSuqpb.s 			page 5


 117:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
  89              		.loc 1 117 0
  90 0058 0220     		movs	r0, #2
  91              	.LVL6:
 142:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   }
 143:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** }
  92              		.loc 1 143 0
  93 005a 7047     		bx	lr
  94              		.cfi_endproc
  95              	.LFE136:
  97              		.section	.text.HAL_I2CEx_ConfigDigitalFilter,"ax",%progbits
  98              		.align	2
  99              		.global	HAL_I2CEx_ConfigDigitalFilter
 100              		.thumb
 101              		.thumb_func
 103              	HAL_I2CEx_ConfigDigitalFilter:
 104              	.LFB137:
 144:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 145:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /**
 146:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @brief  Configure I2C Digital noise filter.
 147:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 148:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *                the configuration information for the specified I2Cx peripheral.
 149:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x
 150:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @retval HAL status
 151:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
 152:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
 153:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** {
 105              		.loc 1 153 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LVL7:
 154:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   uint32_t tmpreg = 0U;
 155:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 156:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   /* Check the parameters */
 157:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 158:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));
 159:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 160:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 111              		.loc 1 160 0
 112 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 113 0004 DBB2     		uxtb	r3, r3
 114 0006 202B     		cmp	r3, #32
 115 0008 22D1     		bne	.L7
 161:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   {
 162:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Process Locked */
 163:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     __HAL_LOCK(hi2c);
 116              		.loc 1 163 0
 117 000a 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 118 000e 012B     		cmp	r3, #1
 119 0010 20D0     		beq	.L8
 120              		.loc 1 163 0 is_stmt 0 discriminator 2
 121 0012 0123     		movs	r3, #1
 122 0014 80F84030 		strb	r3, [r0, #64]
 164:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 165:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
ARM GAS  /tmp/ccpSuqpb.s 			page 6


 123              		.loc 1 165 0 is_stmt 1 discriminator 2
 124 0018 2423     		movs	r3, #36
 125 001a 80F84130 		strb	r3, [r0, #65]
 166:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 167:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Disable the selected I2C peripheral */
 168:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     __HAL_I2C_DISABLE(hi2c);
 126              		.loc 1 168 0 discriminator 2
 127 001e 0268     		ldr	r2, [r0]
 128 0020 1368     		ldr	r3, [r2]
 129 0022 23F00103 		bic	r3, r3, #1
 130 0026 1360     		str	r3, [r2]
 169:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 170:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Get the old register value */
 171:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     tmpreg = hi2c->Instance->CR1;
 131              		.loc 1 171 0 discriminator 2
 132 0028 0268     		ldr	r2, [r0]
 133 002a 1368     		ldr	r3, [r2]
 134              	.LVL8:
 172:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 173:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Reset I2Cx DNF bits [11:8] */
 174:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     tmpreg &= ~(I2C_CR1_DNF);
 135              		.loc 1 174 0 discriminator 2
 136 002c 23F47063 		bic	r3, r3, #3840
 137              	.LVL9:
 175:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 176:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Set I2Cx DNF coefficient */
 177:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     tmpreg |= DigitalFilter << 8U;
 138              		.loc 1 177 0 discriminator 2
 139 0030 43EA0121 		orr	r1, r3, r1, lsl #8
 140              	.LVL10:
 178:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 179:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Store the new register value */
 180:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     hi2c->Instance->CR1 = tmpreg;
 141              		.loc 1 180 0 discriminator 2
 142 0034 1160     		str	r1, [r2]
 181:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 182:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     __HAL_I2C_ENABLE(hi2c);
 143              		.loc 1 182 0 discriminator 2
 144 0036 0268     		ldr	r2, [r0]
 145 0038 1368     		ldr	r3, [r2]
 146 003a 43F00103 		orr	r3, r3, #1
 147 003e 1360     		str	r3, [r2]
 183:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 184:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     hi2c->State = HAL_I2C_STATE_READY;
 148              		.loc 1 184 0 discriminator 2
 149 0040 2023     		movs	r3, #32
 150 0042 80F84130 		strb	r3, [r0, #65]
 185:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 186:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     /* Process Unlocked */
 187:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     __HAL_UNLOCK(hi2c);
 151              		.loc 1 187 0 discriminator 2
 152 0046 0023     		movs	r3, #0
 153 0048 80F84030 		strb	r3, [r0, #64]
 188:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 189:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     return HAL_OK;
 154              		.loc 1 189 0 discriminator 2
 155 004c 1846     		mov	r0, r3
ARM GAS  /tmp/ccpSuqpb.s 			page 7


 156              	.LVL11:
 157 004e 7047     		bx	lr
 158              	.LVL12:
 159              	.L7:
 190:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   }
 191:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   else
 192:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   {
 193:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****     return HAL_BUSY;
 160              		.loc 1 193 0
 161 0050 0220     		movs	r0, #2
 162              	.LVL13:
 163 0052 7047     		bx	lr
 164              	.LVL14:
 165              	.L8:
 163:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 166              		.loc 1 163 0
 167 0054 0220     		movs	r0, #2
 168              	.LVL15:
 194:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   }
 195:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** }
 169              		.loc 1 195 0
 170 0056 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE137:
 174              		.section	.text.HAL_I2CEx_EnableFastModePlus,"ax",%progbits
 175              		.align	2
 176              		.global	HAL_I2CEx_EnableFastModePlus
 177              		.thumb
 178              		.thumb_func
 180              	HAL_I2CEx_EnableFastModePlus:
 181              	.LFB138:
 196:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 197:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** #if  (defined(SYSCFG_PMC_I2C_PB6_FMP) || defined(SYSCFG_PMC_I2C_PB7_FMP)) || (defined(SYSCFG_PMC_I2
 198:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /**
 199:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @brief Enable the I2C fast mode plus driving capability.
 200:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @param ConfigFastModePlus Selects the pin.
 201:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *   This parameter can be one of the @ref I2CEx_FastModePlus values
 202:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For I2C1, fast mode plus driving capability can be enabled on all selected
 203:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        I2C1 pins using I2C_FASTMODEPLUS_I2C1 parameter or independently
 204:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        on each one of the following pins PB6, PB7, PB8 and PB9.
 205:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For remaining I2C1 pins (PA14, PA15...) fast mode plus driving capability
 206:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        can be enabled only by using I2C_FASTMODEPLUS_I2C1 parameter.
 207:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For all I2C2 pins fast mode plus driving capability can be enabled
 208:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        only by using I2C_FASTMODEPLUS_I2C2 parameter.
 209:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For all I2C3 pins fast mode plus driving capability can be enabled
 210:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        only by using I2C_FASTMODEPLUS_I2C3 parameter.
 211:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For all I2C4 pins fast mode plus driving capability can be enabled
 212:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        only by using I2C_FASTMODEPLUS_I2C4 parameter.
 213:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @retval None
 214:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
 215:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** void HAL_I2CEx_EnableFastModePlus(uint32_t ConfigFastModePlus)
 216:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** {
 182              		.loc 1 216 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 8
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
ARM GAS  /tmp/ccpSuqpb.s 			page 8


 187              	.LVL16:
 188 0000 82B0     		sub	sp, sp, #8
 189              	.LCFI0:
 190              		.cfi_def_cfa_offset 8
 191              	.LBB2:
 217:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   /* Check the parameter */
 218:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   assert_param(IS_I2C_FASTMODEPLUS(ConfigFastModePlus));
 219:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 220:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   /* Enable SYSCFG clock */
 221:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
 192              		.loc 1 221 0
 193 0002 084B     		ldr	r3, .L11
 194 0004 5A6C     		ldr	r2, [r3, #68]
 195 0006 42F48042 		orr	r2, r2, #16384
 196 000a 5A64     		str	r2, [r3, #68]
 197 000c 5B6C     		ldr	r3, [r3, #68]
 198 000e 03F48043 		and	r3, r3, #16384
 199 0012 0193     		str	r3, [sp, #4]
 200 0014 019B     		ldr	r3, [sp, #4]
 201              	.LBE2:
 222:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 223:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   /* Enable fast mode plus driving capability for selected pin */
 224:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   SET_BIT(SYSCFG->PMC, (uint32_t)ConfigFastModePlus);
 202              		.loc 1 224 0
 203 0016 044A     		ldr	r2, .L11+4
 204 0018 5368     		ldr	r3, [r2, #4]
 205 001a 1843     		orrs	r0, r0, r3
 206              	.LVL17:
 207 001c 5060     		str	r0, [r2, #4]
 225:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** }
 208              		.loc 1 225 0
 209 001e 02B0     		add	sp, sp, #8
 210              	.LCFI1:
 211              		.cfi_def_cfa_offset 0
 212              		@ sp needed
 213 0020 7047     		bx	lr
 214              	.L12:
 215 0022 00BF     		.align	2
 216              	.L11:
 217 0024 00380240 		.word	1073887232
 218 0028 00380140 		.word	1073821696
 219              		.cfi_endproc
 220              	.LFE138:
 222              		.section	.text.HAL_I2CEx_DisableFastModePlus,"ax",%progbits
 223              		.align	2
 224              		.global	HAL_I2CEx_DisableFastModePlus
 225              		.thumb
 226              		.thumb_func
 228              	HAL_I2CEx_DisableFastModePlus:
 229              	.LFB139:
 226:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 227:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** /**
 228:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @brief Disable the I2C fast mode plus driving capability.
 229:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @param ConfigFastModePlus Selects the pin.
 230:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *   This parameter can be one of the @ref I2CEx_FastModePlus values
 231:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For I2C1, fast mode plus driving capability can be disabled on all selected
 232:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        I2C1 pins using I2C_FASTMODEPLUS_I2C1 parameter or independently
ARM GAS  /tmp/ccpSuqpb.s 			page 9


 233:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        on each one of the following pins PB6, PB7, PB8 and PB9.
 234:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For remaining I2C1 pins (PA14, PA15...) fast mode plus driving capability
 235:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        can be disabled only by using I2C_FASTMODEPLUS_I2C1 parameter.
 236:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For all I2C2 pins fast mode plus driving capability can be disabled
 237:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        only by using I2C_FASTMODEPLUS_I2C2 parameter.
 238:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For all I2C3 pins fast mode plus driving capability can be disabled
 239:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        only by using I2C_FASTMODEPLUS_I2C3 parameter.
 240:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @note  For all I2C4 pins fast mode plus driving capability can be disabled
 241:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   *        only by using I2C_FASTMODEPLUS_I2C4 parameter.
 242:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   * @retval None
 243:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   */
 244:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** void HAL_I2CEx_DisableFastModePlus(uint32_t ConfigFastModePlus)
 245:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** {
 230              		.loc 1 245 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL18:
 236 0000 82B0     		sub	sp, sp, #8
 237              	.LCFI2:
 238              		.cfi_def_cfa_offset 8
 239              	.LBB3:
 246:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   /* Check the parameter */
 247:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   assert_param(IS_I2C_FASTMODEPLUS(ConfigFastModePlus));
 248:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 249:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   /* Enable SYSCFG clock */
 250:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
 240              		.loc 1 250 0
 241 0002 084B     		ldr	r3, .L15
 242 0004 5A6C     		ldr	r2, [r3, #68]
 243 0006 42F48042 		orr	r2, r2, #16384
 244 000a 5A64     		str	r2, [r3, #68]
 245 000c 5B6C     		ldr	r3, [r3, #68]
 246 000e 03F48043 		and	r3, r3, #16384
 247 0012 0193     		str	r3, [sp, #4]
 248 0014 019B     		ldr	r3, [sp, #4]
 249              	.LBE3:
 251:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** 
 252:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   /* Disable fast mode plus driving capability for selected pin */
 253:HALLIB/Src/stm32f7xx_hal_i2c_ex.c ****   CLEAR_BIT(SYSCFG->PMC, (uint32_t)ConfigFastModePlus);
 250              		.loc 1 253 0
 251 0016 044A     		ldr	r2, .L15+4
 252 0018 5368     		ldr	r3, [r2, #4]
 253 001a 23EA0000 		bic	r0, r3, r0
 254              	.LVL19:
 255 001e 5060     		str	r0, [r2, #4]
 254:HALLIB/Src/stm32f7xx_hal_i2c_ex.c **** }
 256              		.loc 1 254 0
 257 0020 02B0     		add	sp, sp, #8
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 0
 260              		@ sp needed
 261 0022 7047     		bx	lr
 262              	.L16:
 263              		.align	2
 264              	.L15:
ARM GAS  /tmp/ccpSuqpb.s 			page 10


 265 0024 00380240 		.word	1073887232
 266 0028 00380140 		.word	1073821696
 267              		.cfi_endproc
 268              	.LFE139:
 270              		.text
 271              	.Letext0:
 272              		.file 2 "/opt/5.4.2016q3/arm-none-eabi/include/machine/_default_types.h"
 273              		.file 3 "/opt/5.4.2016q3/arm-none-eabi/include/sys/_stdint.h"
 274              		.file 4 "Inc/stm32f767xx.h"
 275              		.file 5 "HALLIB/Inc/stm32f7xx_hal_def.h"
 276              		.file 6 "HALLIB/Inc/stm32f7xx_hal_dma.h"
 277              		.file 7 "HALLIB/Inc/stm32f7xx_hal_i2c.h"
 278              		.file 8 "CORE/core_cm7.h"
ARM GAS  /tmp/ccpSuqpb.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_i2c_ex.c
     /tmp/ccpSuqpb.s:21     .text.HAL_I2CEx_ConfigAnalogFilter:00000000 $t
     /tmp/ccpSuqpb.s:26     .text.HAL_I2CEx_ConfigAnalogFilter:00000000 HAL_I2CEx_ConfigAnalogFilter
     /tmp/ccpSuqpb.s:98     .text.HAL_I2CEx_ConfigDigitalFilter:00000000 $t
     /tmp/ccpSuqpb.s:103    .text.HAL_I2CEx_ConfigDigitalFilter:00000000 HAL_I2CEx_ConfigDigitalFilter
     /tmp/ccpSuqpb.s:175    .text.HAL_I2CEx_EnableFastModePlus:00000000 $t
     /tmp/ccpSuqpb.s:180    .text.HAL_I2CEx_EnableFastModePlus:00000000 HAL_I2CEx_EnableFastModePlus
     /tmp/ccpSuqpb.s:217    .text.HAL_I2CEx_EnableFastModePlus:00000024 $d
     /tmp/ccpSuqpb.s:223    .text.HAL_I2CEx_DisableFastModePlus:00000000 $t
     /tmp/ccpSuqpb.s:228    .text.HAL_I2CEx_DisableFastModePlus:00000000 HAL_I2CEx_DisableFastModePlus
     /tmp/ccpSuqpb.s:265    .text.HAL_I2CEx_DisableFastModePlus:00000024 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
