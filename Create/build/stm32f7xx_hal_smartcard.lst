ARM GAS  /tmp/ccq2I8Qf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f7xx_hal_smartcard.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.SMARTCARD_AdvFeatureConfig,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	SMARTCARD_AdvFeatureConfig:
  26              	.LFB162:
  27              		.file 1 "HALLIB/Src/stm32f7xx_hal_smartcard.c"
   1:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
   2:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ******************************************************************************
   3:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @file    stm32f7xx_hal_smartcard.c
   4:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @author  MCD Application Team
   5:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief   SMARTCARD HAL module driver.
   6:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *          This file provides firmware functions to manage the following
   7:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *          functionalities of the SMARTCARD peripheral:
   8:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           + Initialization and de-initialization functions
   9:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           + IO operation functions
  10:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           + Peripheral Control functions
  11:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           + Peripheral State and Error functions
  12:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *
  13:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   @verbatim
  14:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ==============================================================================
  15:HALLIB/Src/stm32f7xx_hal_smartcard.c ****                      ##### How to use this driver #####
  16:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ==============================================================================
  17:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   [..]
  18:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     The SMARTCARD HAL driver can be used as follows:
  19:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  20:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Declare a SMARTCARD_HandleTypeDef handle structure (eg. SMARTCARD_HandleTypeDef hsmartcard)
  21:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Associate a USART to the SMARTCARD handle hsmartcard.
  22:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Initialize the SMARTCARD low level resources by implementing the HAL_SMARTCARD_MspInit() AP
  23:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (##) Enable the USARTx interface clock.
  24:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (##) SMARTCARD pins configuration:
  25:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Enable the clock for the SMARTCARD GPIOs.
  26:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Configure these SMARTCARD pins as alternate function pull-up.
  27:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_SMARTCARD_Transmit_IT()
  28:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              and HAL_SMARTCARD_Receive_IT() APIs):
  29:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Configure the USARTx interrupt priority.
  30:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) The specific USART interrupts (Transmission complete interrupt, 
ARM GAS  /tmp/ccq2I8Qf.s 			page 2


  32:HALLIB/Src/stm32f7xx_hal_smartcard.c ****                   RXNE interrupt and Error Interrupts) will be managed using the macros
  33:HALLIB/Src/stm32f7xx_hal_smartcard.c ****                   __HAL_SMARTCARD_ENABLE_IT() and __HAL_SMARTCARD_DISABLE_IT() inside the transmit 
  34:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (##) DMA Configuration if you need to use DMA process (HAL_SMARTCARD_Transmit_DMA()
  35:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              and HAL_SMARTCARD_Receive_DMA() APIs):
  36:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  37:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Enable the DMAx interface clock.
  38:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.  
  39:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Configure the DMA Tx/Rx Stream.
  40:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Associate the initialized DMA handle to the SMARTCARD DMA Tx/Rx handle.
  41:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  43:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Program the Baud Rate, Parity, Mode(Receiver/Transmitter), clock enabling/disabling and acc
  44:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         the clock parameters (parity, phase, last bit), prescaler value, guard time and NACK on tra
  45:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         error enabling or disabling in the hsmartcard handle Init structure.
  46:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  47:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) If required, program SMARTCARD advanced features (TX/RX pins swap, TimeOut, auto-retry coun
  48:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         in the hsmartcard handle AdvancedInit structure.
  49:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  50:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Initialize the SMARTCARD registers by calling the HAL_SMARTCARD_Init() API:
  51:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  52:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              by calling the customized HAL_SMARTCARD_MspInit() API.
  53:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         [..]
  54:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (@) The specific SMARTCARD interrupts (Transmission complete interrupt,
  55:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              RXNE interrupt and Error Interrupts) will be managed using the macros
  56:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              __HAL_SMARTCARD_ENABLE_IT() and __HAL_SMARTCARD_DISABLE_IT() inside the transmit and r
  57:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  58:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     [..]
  59:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     [..] Three operation modes are available within this driver :
  60:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  61:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      *** Polling mode IO operation ***
  62:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      =================================
  63:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      [..]
  64:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) Send an amount of data in blocking mode using HAL_SMARTCARD_Transmit()
  65:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) Receive an amount of data in blocking mode using HAL_SMARTCARD_Receive()
  66:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  67:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      *** Interrupt mode IO operation ***
  68:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      ===================================
  69:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      [..]
  70:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) Send an amount of data in non-blocking mode using HAL_SMARTCARD_Transmit_IT()
  71:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) At transmission end of transfer HAL_SMARTCARD_TxCpltCallback() is executed and user can
  72:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             add his own code by customization of function pointer HAL_SMARTCARD_TxCpltCallback()
  73:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) Receive an amount of data in non-blocking mode using HAL_SMARTCARD_Receive_IT()
  74:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) At reception end of transfer HAL_SMARTCARD_RxCpltCallback() is executed and user can
  75:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             add his own code by customization of function pointer HAL_SMARTCARD_RxCpltCallback()
  76:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) In case of transfer Error, HAL_SMARTCARD_ErrorCallback() function is executed and user c
  77:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             add his own code by customization of function pointer HAL_SMARTCARD_ErrorCallback()
  78:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  79:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      *** DMA mode IO operation ***
  80:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      ==============================
  81:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      [..]
  82:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) Send an amount of data in non-blocking mode (DMA) using HAL_SMARTCARD_Transmit_DMA()
  83:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) At transmission end of transfer HAL_SMARTCARD_TxCpltCallback() is executed and user can
  84:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             add his own code by customization of function pointer HAL_SMARTCARD_TxCpltCallback()
  85:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) Receive an amount of data in non-blocking mode (DMA) using HAL_SMARTCARD_Receive_DMA()
  86:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) At reception end of transfer HAL_SMARTCARD_RxCpltCallback() is executed and user can
  87:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             add his own code by customization of function pointer HAL_SMARTCARD_RxCpltCallback()
  88:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) In case of transfer Error, HAL_SMARTCARD_ErrorCallback() function is executed and user c
ARM GAS  /tmp/ccq2I8Qf.s 			page 3


  89:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             add his own code by customization of function pointer HAL_SMARTCARD_ErrorCallback()
  90:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  91:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      *** SMARTCARD HAL driver macros list ***
  92:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      ========================================
  93:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      [..]
  94:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        Below the list of most used macros in SMARTCARD HAL driver.
  95:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
  96:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) __HAL_SMARTCARD_GET_FLAG : Check whether or not the specified SMARTCARD flag is set
  97:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) __HAL_SMARTCARD_CLEAR_FLAG : Clear the specified SMARTCARD pending flag
  98:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) __HAL_SMARTCARD_ENABLE_IT: Enable the specified SMARTCARD interrupt
  99:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) __HAL_SMARTCARD_DISABLE_IT: Disable the specified SMARTCARD interrupt
 100:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (+) __HAL_SMARTCARD_GET_IT_SOURCE: Check whether or not the specified SMARTCARD interrupt is
 101:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 102:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      [..]
 103:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (@) You can refer to the SMARTCARD HAL driver header file for more useful macros
 104:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 105:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   @endverbatim
 106:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ******************************************************************************
 107:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @attention
 108:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *
 109:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 110:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *
 111:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * Redistribution and use in source and binary forms, with or without modification,
 112:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * are permitted provided that the following conditions are met:
 113:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 114:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *      this list of conditions and the following disclaimer.
 115:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 116:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *      this list of conditions and the following disclaimer in the documentation
 117:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *      and/or other materials provided with the distribution.
 118:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 119:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *      may be used to endorse or promote products derived from this software
 120:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *      without specific prior written permission.
 121:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *
 122:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 123:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 124:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 125:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 126:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 127:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 128:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 129:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 130:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 131:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 132:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *
 133:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ******************************************************************************
 134:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 135:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 136:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /* Includes ------------------------------------------------------------------*/
 137:HALLIB/Src/stm32f7xx_hal_smartcard.c **** #include "stm32f7xx_hal.h"
 138:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 139:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @addtogroup STM32F7xx_HAL_Driver
 140:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @{
 141:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 142:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 143:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @defgroup SMARTCARD SMARTCARD
 144:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief HAL SMARTCARD module driver
 145:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @{
ARM GAS  /tmp/ccq2I8Qf.s 			page 4


 146:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 147:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 148:HALLIB/Src/stm32f7xx_hal_smartcard.c **** #ifdef HAL_SMARTCARD_MODULE_ENABLED
 149:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 150:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /* Private typedef -----------------------------------------------------------*/
 151:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /* Private define ------------------------------------------------------------*/
 152:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @defgroup SMARTCARD_Private_Constants SMARTCARD Private Constants
 153:HALLIB/Src/stm32f7xx_hal_smartcard.c ****  * @{
 154:HALLIB/Src/stm32f7xx_hal_smartcard.c ****  */
 155:HALLIB/Src/stm32f7xx_hal_smartcard.c **** #define SMARTCARD_TEACK_REACK_TIMEOUT               1000U
 156:HALLIB/Src/stm32f7xx_hal_smartcard.c **** #define HAL_SMARTCARD_TXDMA_TIMEOUTVALUE  22000U
 157:HALLIB/Src/stm32f7xx_hal_smartcard.c **** #define USART_CR1_FIELDS      ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 158:HALLIB/Src/stm32f7xx_hal_smartcard.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8))       /*!< USA
 159:HALLIB/Src/stm32f7xx_hal_smartcard.c **** #define USART_CR2_CLK_FIELDS  ((uint32_t)(USART_CR2_CLKEN|USART_CR2_CPOL|USART_CR2_CPHA|USART_CR2_L
 160:HALLIB/Src/stm32f7xx_hal_smartcard.c **** #define USART_CR2_FIELDS      ((uint32_t)(USART_CR2_RTOEN|USART_CR2_CLK_FIELDS|USART_CR2_STOP)) /*!
 161:HALLIB/Src/stm32f7xx_hal_smartcard.c **** #define USART_CR3_FIELDS      ((uint32_t)(USART_CR3_ONEBIT|USART_CR3_NACK|USART_CR3_SCARCNT))   /*!
 162:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 163:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @}
 164:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 165:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 166:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /* Private macros ------------------------------------------------------------*/
 167:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /* Private variables ---------------------------------------------------------*/
 168:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /* Private function prototypes -----------------------------------------------*/
 169:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @addtogroup SMARTCARD_Private_Functions
 170:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @{
 171:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 172:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_SetConfig(SMARTCARD_HandleTypeDef *hsmartcard);
 173:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_AdvFeatureConfig(SMARTCARD_HandleTypeDef *hsmartcard);
 174:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_CheckIdleState(SMARTCARD_HandleTypeDef *hsmartcard);
 175:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_WaitOnFlagUntilTimeout(SMARTCARD_HandleTypeDef *hsmartcard, uint
 176:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_EndTxTransfer(SMARTCARD_HandleTypeDef *hsmartcard);
 177:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_EndRxTransfer(SMARTCARD_HandleTypeDef *hsmartcard);
 178:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 179:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 180:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMAError(DMA_HandleTypeDef *hdma);
 181:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 182:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 183:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 184:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 185:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 186:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_Transmit_IT(SMARTCARD_HandleTypeDef *hsmartcard);
 187:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_EndTransmit_IT(SMARTCARD_HandleTypeDef *hsmartcard);
 188:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_Receive_IT(SMARTCARD_HandleTypeDef *hsmartcard);
 189:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 190:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @}
 191:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 192:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 193:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /* Exported functions --------------------------------------------------------*/
 194:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 195:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @defgroup SMARTCARD_Exported_Functions SMARTCARD Exported Functions
 196:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @{
 197:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 198:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 199:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @defgroup SMARTCARD_Exported_Functions_Group1 Initialization and de-initialization functions
 200:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *  @brief    Initialization and Configuration functions
 201:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *
 202:HALLIB/Src/stm32f7xx_hal_smartcard.c **** @verbatim
ARM GAS  /tmp/ccq2I8Qf.s 			page 5


 203:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ==============================================================================
 204:HALLIB/Src/stm32f7xx_hal_smartcard.c ****               ##### Initialization and Configuration functions #####
 205:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ==============================================================================
 206:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   [..]
 207:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   This subsection provides a set of functions allowing to initialize the USARTx
 208:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   associated to the SmartCard.
 209:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   (+) These parameters can be configured:
 210:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Baud Rate
 211:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Parity: parity should be enabled, frame Length is fixed to 8 bits plus parity
 212:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Receiver/transmitter modes
 213:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Synchronous mode (and if enabled, phase, polarity and last bit parameters)
 214:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Prescaler value
 215:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Guard bit time
 216:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) NACK enabling or disabling on transmission error
 217:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 218:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   (+) The following advanced features can be configured as well:
 219:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) TX and/or RX pin level inversion
 220:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) data logical level inversion
 221:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) RX and TX pins swap
 222:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) RX overrun detection disabling
 223:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) DMA disabling on RX error
 224:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) MSB first on communication line
 225:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Time out enabling (and if activated, timeout value)
 226:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Block length
 227:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       (++) Auto-retry counter
 228:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   [..]
 229:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   The HAL_SMARTCARD_Init() API follows the USART synchronous configuration procedures
 230:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   (details for the procedures are available in reference manual).
 231:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 232:HALLIB/Src/stm32f7xx_hal_smartcard.c **** @endverbatim
 233:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 234:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   The USART frame format is given in the following table:
 235:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 236:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     Table 1. USART frame format.
 237:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     +---------------------------------------------------------------+        
 238:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     | M1M0 bits |  PCE bit  |            USART frame                |        
 239:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     |-----------------------|---------------------------------------|        
 240:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     |     01    |    1      |    | SB | 8 bit data | PB | STB |     |        
 241:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     +---------------------------------------------------------------+        
 242:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 243:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 244:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @{
 245:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 246:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 247:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 248:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Initialize the SMARTCARD mode according to the specified
 249:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         parameters in the SMARTCARD_HandleTypeDef and initialize the associated handle.
 250:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 251:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 252:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 253:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 254:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Init(SMARTCARD_HandleTypeDef *hsmartcard)
 255:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 256:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the SMARTCARD handle allocation */
 257:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard == NULL)
 258:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 259:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccq2I8Qf.s 			page 6


 260:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 261:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 262:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the USART associated to the SMARTCARD handle */
 263:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_INSTANCE(hsmartcard->Instance));
 264:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 265:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->gState == HAL_SMARTCARD_STATE_RESET)
 266:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 267:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Allocate lock resource and initialize it */
 268:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->Lock = HAL_UNLOCKED;
 269:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 270:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Init the low level hardware : GPIO, CLOCK */
 271:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     HAL_SMARTCARD_MspInit(hsmartcard);
 272:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 273:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 274:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState = HAL_SMARTCARD_STATE_BUSY;
 275:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 276:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the Peripheral to set smartcard mode */
 277:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 278:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 279:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* In SmartCard mode, the following bits must be kept cleared:
 280:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   - LINEN in the USART_CR2 register,
 281:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   - HDSEL and IREN  bits in the USART_CR3 register.*/
 282:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR2, USART_CR2_LINEN);
 283:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 284:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 285:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* set the USART in SMARTCARD mode */
 286:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SET_BIT(hsmartcard->Instance->CR3, USART_CR3_SCEN);
 287:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 288:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Set the SMARTCARD Communication parameters */
 289:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (SMARTCARD_SetConfig(hsmartcard) == HAL_ERROR)
 290:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 291:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_ERROR;
 292:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 293:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
 294:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Set the SMARTCARD transmission completion indication */  
 295:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_TRANSMISSION_COMPLETION_SETTING(hsmartcard);
 296:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 297:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (hsmartcard->AdvancedInit.AdvFeatureInit != SMARTCARD_ADVFEATURE_NO_INIT)
 298:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 299:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SMARTCARD_AdvFeatureConfig(hsmartcard);
 300:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 301:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 302:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Enable the Peripheral */
 303:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SET_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 304:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 305:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* TEACK and/or REACK to check before moving hsmartcard->gState and hsmartcard->RxState to Ready 
 306:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return (SMARTCARD_CheckIdleState(hsmartcard));
 307:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 308:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 309:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 310:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DeInitialize the SMARTCARD peripheral.
 311:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 312:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 313:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 314:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 315:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_DeInit(SMARTCARD_HandleTypeDef *hsmartcard)
 316:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
ARM GAS  /tmp/ccq2I8Qf.s 			page 7


 317:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the SMARTCARD handle allocation */
 318:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard == NULL)
 319:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 320:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_ERROR;
 321:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 322:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 323:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the USART/UART associated to the SMARTCARD handle */
 324:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_INSTANCE(hsmartcard->Instance));
 325:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 326:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState = HAL_SMARTCARD_STATE_BUSY;
 327:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 328:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the Peripheral */
 329:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 330:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 331:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->CR1, 0x0);
 332:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->CR2, 0x0);
 333:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->CR3, 0x0);
 334:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->RTOR, 0x0);
 335:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->GTPR, 0x0);
 336:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 337:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* DeInit the low level hardware */
 338:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_MspDeInit(hsmartcard);
 339:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 340:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 341:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState    = HAL_SMARTCARD_STATE_RESET;
 342:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState   = HAL_SMARTCARD_STATE_RESET;
 343:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 344:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Process Unlock */
 345:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_UNLOCK(hsmartcard);
 346:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 347:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
 348:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 349:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 350:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 351:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Initialize the SMARTCARD MSP.
 352:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 353:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 354:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
 355:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 356:HALLIB/Src/stm32f7xx_hal_smartcard.c **** __weak void HAL_SMARTCARD_MspInit(SMARTCARD_HandleTypeDef *hsmartcard)
 357:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 358:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 359:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   UNUSED(hsmartcard);
 360:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 361:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 362:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             the HAL_SMARTCARD_MspInit can be implemented in the user file
 363:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    */
 364:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 365:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 366:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 367:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DeInitialize the SMARTCARD MSP.
 368:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 369:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 370:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
 371:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 372:HALLIB/Src/stm32f7xx_hal_smartcard.c **** __weak void HAL_SMARTCARD_MspDeInit(SMARTCARD_HandleTypeDef *hsmartcard)
 373:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
ARM GAS  /tmp/ccq2I8Qf.s 			page 8


 374:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 375:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   UNUSED(hsmartcard);
 376:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 377:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 378:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             the HAL_SMARTCARD_MspDeInit can be implemented in the user file
 379:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    */
 380:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 381:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 382:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 383:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @}
 384:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 385:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 386:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @defgroup SMARTCARD_Exported_Functions_Group2 IO operation functions
 387:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *  @brief   SMARTCARD Transmit and Receive functions
 388:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *
 389:HALLIB/Src/stm32f7xx_hal_smartcard.c **** @verbatim
 390:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ==============================================================================
 391:HALLIB/Src/stm32f7xx_hal_smartcard.c ****                          ##### IO operation functions #####
 392:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ==============================================================================
 393:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   [..]
 394:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     This subsection provides a set of functions allowing to manage the SMARTCARD data transfers.
 395:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 396:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   [..]
 397:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Smartcard is a single wire half duplex communication protocol.
 398:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     The Smartcard interface is designed to support asynchronous protocol Smartcards as
 399:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     defined in the ISO 7816-3 standard. 
 400:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) The USART should be configured as:
 401:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) 8 bits plus parity: where M=1 and PCE=1 in the USART_CR1 register
 402:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) 1.5 stop bits when transmitting and receiving: where STOP=11 in the USART_CR2 register
 403:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 404:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) There are two modes of transfer:
 405:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) Blocking mode: The communication is performed in polling mode.
 406:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              The HAL status of all data processing is returned by the same function
 407:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              after finishing transfer.
 408:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) Non-Blocking mode: The communication is performed using Interrupts
 409:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              or DMA, the relevant API's return the HAL status.
 410:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              The end of the data processing will be indicated through the
 411:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              dedicated SMARTCARD IRQ when using Interrupt mode or the DMA IRQ when
 412:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              using DMA mode.
 413:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) The HAL_SMARTCARD_TxCpltCallback(), HAL_SMARTCARD_RxCpltCallback() user callbacks
 414:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              will be executed respectively at the end of the Transmit or Receive process
 415:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              The HAL_SMARTCARD_ErrorCallback() user callback will be executed when a communication
 416:HALLIB/Src/stm32f7xx_hal_smartcard.c ****              error is detected.
 417:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 418:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Blocking mode APIs are :
 419:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_Transmit()
 420:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_Receive()
 421:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 422:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Non Blocking mode APIs with Interrupt are :
 423:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_Transmit_IT()
 424:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_Receive_IT()
 425:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_IRQHandler()
 426:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 427:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Non Blocking mode functions with DMA are :
 428:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_Transmit_DMA()
 429:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_Receive_DMA()
 430:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 9


 431:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
 432:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_TxCpltCallback()
 433:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_RxCpltCallback()
 434:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_ErrorCallback()
 435:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 436:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 437:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_Abort()
 438:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_AbortTransmit()
 439:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_AbortReceive()
 440:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_Abort_IT()
 441:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_AbortTransmit_IT()
 442:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_AbortReceive_IT()
 443:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 444:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) For Abort services based on interrupts (HAL_SMARTCARD_Abortxxx_IT), a set of Abort Complete
 445:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_AbortCpltCallback()
 446:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_AbortTransmitCpltCallback()
 447:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         (++) HAL_SMARTCARD_AbortReceiveCpltCallback()
 448:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 449:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 450:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         Errors are handled as follows :
 451:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but e
 452:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Int
 453:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             Received character is then retrieved and stored in Rx buffer, Error code is set to allo
 454:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             and HAL_SMARTCARD_ErrorCallback() user callback is executed. Transfer is kept ongoing o
 455:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             If user wants to abort it, Abort services should be called by user.
 456:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (++) Error is considered as Blocking : Transfer could not be completed properly and is abort
 457:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             This concerns Frame Error in Interrupt mode tranmission, Overrun Error in Interrupt mod
 458:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             Error code is set to allow user to identify error type, and HAL_SMARTCARD_ErrorCallback
 459:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 460:HALLIB/Src/stm32f7xx_hal_smartcard.c **** @endverbatim
 461:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @{
 462:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 463:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 464:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 465:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Send an amount of data in blocking mode.
 466:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 467:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 468:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  pData pointer to data buffer.
 469:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Size amount of data to be sent.
 470:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Timeout  Timeout duration.
 471:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 472:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 473:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Transmit(SMARTCARD_HandleTypeDef *hsmartcard, uint8_t *pData, uint1
 474:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 475:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t tickstart = 0;
 476:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 477:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Tx process is not already ongoing */
 478:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (hsmartcard->gState == HAL_SMARTCARD_STATE_READY)
 479:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 480:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if((pData == NULL) || (Size == 0))
 481:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 482:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return  HAL_ERROR;
 483:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 484:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 485:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Locked */
 486:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_LOCK(hsmartcard);
 487:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 10


 488:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->gState = HAL_SMARTCARD_STATE_BUSY_TX;
 489:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 490:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Init tickstart for timeout managment*/
 491:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     tickstart = HAL_GetTick();
 492:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the Peripheral first to update mode for TX master */
 494:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 495:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 496:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable Rx, enable Tx */
 497:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_RE);
 498:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->RQR, SMARTCARD_RXDATA_FLUSH_REQUEST);
 499:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_TE);
 500:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 501:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the Peripheral */
 502:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 503:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 504:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 505:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferSize = Size;
 506:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = Size;
 507:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 508:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     while(hsmartcard->TxXferCount > 0)
 509:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 510:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->TxXferCount--;
 511:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(SMARTCARD_WaitOnFlagUntilTimeout(hsmartcard, SMARTCARD_FLAG_TXE, RESET, tickstart, Timeout
 512:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 513:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         return HAL_TIMEOUT;
 514:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 515:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->Instance->TDR = (*pData++ & (uint8_t)0xFF);
 516:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 517:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(SMARTCARD_WaitOnFlagUntilTimeout(hsmartcard, SMARTCARD_TRANSMISSION_COMPLETION_FLAG(hsmartca
 518:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 519:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_TIMEOUT;
 520:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 521:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Re-enable Rx at end of transmission if initial mode is Rx/Tx */
 522:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->Init.Mode == SMARTCARD_MODE_TX_RX)
 523:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 524:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Disable the Peripheral first to update modes */
 525:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 526:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       SET_BIT(hsmartcard->Instance->CR1, USART_CR1_RE);
 527:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Enable the Peripheral */
 528:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       SET_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 529:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 530:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 531:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* At end of Tx process, restore hsmartcard->gState to Ready */
 532:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->gState = HAL_SMARTCARD_STATE_READY;
 533:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 534:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Unlocked */
 535:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_UNLOCK(hsmartcard);
 536:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 537:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_OK;
 538:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 539:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
 540:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 541:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_BUSY;
 542:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 543:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 544:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 11


 545:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 546:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Receive an amount of data in blocking mode.
 547:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 548:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 549:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  pData pointer to data buffer.
 550:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Size amount of data to be received.
 551:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Timeout Timeout duration.
 552:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 553:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 554:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Receive(SMARTCARD_HandleTypeDef *hsmartcard, uint8_t *pData, uint16
 555:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 556:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t tickstart = 0;
 557:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 558:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Rx process is not already ongoing */
 559:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->RxState == HAL_SMARTCARD_STATE_READY)
 560:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 561:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if((pData == NULL) || (Size == 0))
 562:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 563:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return  HAL_ERROR;
 564:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 565:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 566:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Locked */
 567:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_LOCK(hsmartcard);
 568:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 569:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 570:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState   = HAL_SMARTCARD_STATE_BUSY_RX;
 571:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 572:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Init tickstart for timeout managment*/
 573:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     tickstart = HAL_GetTick();
 574:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 575:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferSize = Size;
 576:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferCount = Size;
 577:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 578:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Check the remain data to be received */
 579:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     while(hsmartcard->RxXferCount > 0)
 580:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 581:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->RxXferCount--;
 582:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 583:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(SMARTCARD_WaitOnFlagUntilTimeout(hsmartcard, SMARTCARD_FLAG_RXNE, RESET, tickstart, Timeou
 584:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 585:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         return HAL_TIMEOUT;
 586:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 587:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       *pData++ = (uint8_t)(hsmartcard->Instance->RDR & (uint8_t)0x00FF);
 588:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 589:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 590:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* At end of Rx process, restore hsmartcard->RxState to Ready */
 591:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 592:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 593:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Unlocked */
 594:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_UNLOCK(hsmartcard);
 595:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 596:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_OK;
 597:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 598:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
 599:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 600:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_BUSY;
 601:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
ARM GAS  /tmp/ccq2I8Qf.s 			page 12


 602:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 603:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 604:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 605:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Send an amount of data in interrupt mode.
 606:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 607:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 608:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  pData pointer to data buffer.
 609:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Size amount of data to be sent.
 610:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 611:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 612:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Transmit_IT(SMARTCARD_HandleTypeDef *hsmartcard, uint8_t *pData, ui
 613:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 614:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Tx process is not already ongoing */
 615:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (hsmartcard->gState == HAL_SMARTCARD_STATE_READY)
 616:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 617:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if((pData == NULL) || (Size == 0))
 618:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 619:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_ERROR;
 620:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 621:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 622:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Locked */
 623:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_LOCK(hsmartcard);
 624:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 625:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 626:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->gState = HAL_SMARTCARD_STATE_BUSY_TX;
 627:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 628:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->pTxBuffPtr = pData;
 629:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferSize = Size;
 630:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = Size;
 631:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 632:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the Peripheral first to update mode for TX master */
 633:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 634:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 635:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable Rx, enable Tx */
 636:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_RE);
 637:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->RQR, SMARTCARD_RXDATA_FLUSH_REQUEST);
 638:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_TE);
 639:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 640:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the Peripheral */
 641:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 642:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 643:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Unlocked */
 644:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_UNLOCK(hsmartcard);
 645:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 646:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the SMARTCARD Error Interrupt: (Frame error) */
 647:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 648:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 649:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the SMARTCARD Transmit Data Register Empty Interrupt */
 650:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_TXEIE);
 651:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 652:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_OK;
 653:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 654:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
 655:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 656:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_BUSY;
 657:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 658:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
ARM GAS  /tmp/ccq2I8Qf.s 			page 13


 659:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 660:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 661:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Receive an amount of data in interrupt mode.
 662:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 663:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 664:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  pData pointer to data buffer.
 665:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Size amount of data to be received.
 666:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 667:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 668:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Receive_IT(SMARTCARD_HandleTypeDef *hsmartcard, uint8_t *pData, uin
 669:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 670:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Rx process is not already ongoing */
 671:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->RxState == HAL_SMARTCARD_STATE_READY)
 672:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 673:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if((pData == NULL) || (Size == 0))
 674:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 675:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_ERROR;
 676:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 677:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 678:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Locked */
 679:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_LOCK(hsmartcard);
 680:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 681:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 682:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState   = HAL_SMARTCARD_STATE_BUSY_RX;
 683:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 684:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->pRxBuffPtr = pData;
 685:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferSize = Size;
 686:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferCount = Size;
 687:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 688:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Unlocked */
 689:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_UNLOCK(hsmartcard);
 690:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 691:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the SMARTCARD Parity Error and Data Register not empty Interrupts */
 692:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_PEIE| USART_CR1_RXNEIE);
 693:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 694:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the SMARTCARD Error Interrupt: (Frame error, noise error, overrun error) */
 695:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 696:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 697:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_OK;
 698:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 699:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
 700:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 701:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_BUSY;
 702:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 703:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 704:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 705:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 706:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Send an amount of data in DMA mode.
 707:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 708:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 709:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  pData pointer to data buffer.
 710:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Size amount of data to be sent.
 711:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 712:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 713:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Transmit_DMA(SMARTCARD_HandleTypeDef *hsmartcard, uint8_t *pData, u
 714:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 715:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Tx process is not already ongoing */
ARM GAS  /tmp/ccq2I8Qf.s 			page 14


 716:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (hsmartcard->gState == HAL_SMARTCARD_STATE_READY)
 717:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 718:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if((pData == NULL) || (Size == 0))
 719:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 720:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_ERROR;
 721:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 722:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 723:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Locked */
 724:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_LOCK(hsmartcard);
 725:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 726:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->gState = HAL_SMARTCARD_STATE_BUSY_TX;
 727:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 729:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->pTxBuffPtr = pData;
 730:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferSize = Size;
 731:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = Size;
 732:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 733:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the Peripheral first to update mode for TX master */
 734:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 735:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 736:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable Rx, enable Tx */
 737:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_RE);
 738:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->RQR, SMARTCARD_RXDATA_FLUSH_REQUEST);
 739:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_TE);
 740:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 741:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the Peripheral */
 742:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 743:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 744:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Set the SMARTCARD DMA transfer complete callback */
 745:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->hdmatx->XferCpltCallback = SMARTCARD_DMATransmitCplt;
 746:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 747:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Set the SMARTCARD error callback */
 748:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->hdmatx->XferErrorCallback = SMARTCARD_DMAError;
 749:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 750:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Set the DMA abort callback */
 751:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->hdmatx->XferAbortCallback = NULL;
 752:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 753:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the SMARTCARD transmit DMA channel */
 754:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     HAL_DMA_Start_IT(hsmartcard->hdmatx, (uint32_t)hsmartcard->pTxBuffPtr, (uint32_t)&hsmartcard->I
 755:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 756:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Clear the TC flag in the ICR register */
 757:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->ICR, USART_ICR_TCCF);
 758:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 759:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Unlocked */
 760:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_UNLOCK(hsmartcard);
 761:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 762:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the UART Error Interrupt: (Frame error) */
 763:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 764:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 765:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 766:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        in the SMARTCARD associated USART CR3 register */
 767:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAT);
 768:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 769:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_OK;
 770:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 771:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
 772:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
ARM GAS  /tmp/ccq2I8Qf.s 			page 15


 773:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_BUSY;
 774:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 775:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 776:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 777:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 778:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Receive an amount of data in DMA mode.
 779:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 780:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 781:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  pData pointer to data buffer.
 782:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Size amount of data to be received.
 783:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   The SMARTCARD-associated USART parity is enabled (PCE = 1),
 784:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         the received data contain the parity bit (MSB position).
 785:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 786:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
 787:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Receive_DMA(SMARTCARD_HandleTypeDef *hsmartcard, uint8_t *pData, ui
 788:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 789:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Rx process is not already ongoing */
 790:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->RxState == HAL_SMARTCARD_STATE_READY)
 791:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 792:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if((pData == NULL) || (Size == 0))
 793:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 794:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_ERROR;
 795:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 796:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 797:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Locked */
 798:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_LOCK(hsmartcard);
 799:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 800:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 801:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState   = HAL_SMARTCARD_STATE_BUSY_RX;
 802:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 803:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->pRxBuffPtr = pData;
 804:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferSize = Size;
 805:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 806:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Set the SMARTCARD DMA transfer complete callback */
 807:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->hdmarx->XferCpltCallback = SMARTCARD_DMAReceiveCplt;
 808:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 809:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Set the SMARTCARD DMA error callback */
 810:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->hdmarx->XferErrorCallback = SMARTCARD_DMAError;
 811:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 812:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Set the DMA abort callback */
 813:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->hdmarx->XferAbortCallback = NULL;
 814:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 815:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the DMA channel */
 816:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     HAL_DMA_Start_IT(hsmartcard->hdmarx, (uint32_t)&hsmartcard->Instance->RDR, (uint32_t)hsmartcard
 817:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 818:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Process Unlocked */
 819:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_UNLOCK(hsmartcard);
 820:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 821:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the UART Parity Error Interrupt */
 822:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_PEIE);
 823:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 824:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 825:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 826:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 827:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
 828:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        in the SMARTCARD associated USART CR3 register */
 829:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAR);
ARM GAS  /tmp/ccq2I8Qf.s 			page 16


 830:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 831:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_OK;
 832:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 833:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
 834:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 835:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_BUSY;
 836:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 837:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 838:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 839:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 840:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Abort ongoing transfers (blocking mode).
 841:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 842:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 843:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
 844:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         This procedure performs following operations :
 845:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable SMARTCARD Interrupts (Tx and Rx)
 846:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
 847:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
 848:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Set handle State to READY
 849:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
 850:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 851:HALLIB/Src/stm32f7xx_hal_smartcard.c **** */
 852:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Abort(SMARTCARD_HandleTypeDef *hsmartcard)
 853:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 854:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RTOIE, EOBIE, TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) 
 855:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART
 856:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 857:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 858:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD DMA Tx request if enabled */
 859:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAT))
 860:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 861:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAT);
 862:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 863:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Abort the SMARTCARD DMA Tx channel : use blocking DMA Abort API (no callback) */
 864:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmatx != NULL)
 865:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 866:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Set the SMARTCARD DMA Abort callback to Null. 
 867:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          No call back execution at end of DMA abort procedure */
 868:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmatx->XferAbortCallback = NULL;
 869:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 870:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       HAL_DMA_Abort(hsmartcard->hdmatx);
 871:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 872:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 873:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 874:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD DMA Rx request if enabled */
 875:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR))
 876:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 877:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAR);
 878:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 879:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Abort the SMARTCARD DMA Rx channel : use blocking DMA Abort API (no callback) */
 880:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmarx != NULL)
 881:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 882:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Set the SMARTCARD DMA Abort callback to Null. 
 883:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          No call back execution at end of DMA abort procedure */
 884:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmarx->XferAbortCallback = NULL;
 885:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 886:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       HAL_DMA_Abort(hsmartcard->hdmarx);
ARM GAS  /tmp/ccq2I8Qf.s 			page 17


 887:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 888:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 889:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 890:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Reset Tx and Rx transfer counters */
 891:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->TxXferCount = 0; 
 892:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0; 
 893:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 894:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Clear the Error flags in the ICR register */
 895:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_OREF | SMARTCARD_CLEAR_NEF | SMARTCARD_CLE
 896:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 897:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Restore hsmartcard->gState and hsmartcard->RxState to Ready */
 898:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState  = HAL_SMARTCARD_STATE_READY;
 899:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 900:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 901:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Reset Handle ErrorCode to No Error */
 902:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 903:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 904:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
 905:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 906:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 907:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 908:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
 909:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 910:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 911:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
 912:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         This procedure performs following operations :
 913:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable SMARTCARD Interrupts (Tx)
 914:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
 915:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
 916:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Set handle State to READY
 917:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
 918:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 919:HALLIB/Src/stm32f7xx_hal_smartcard.c **** */
 920:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_AbortTransmit(SMARTCARD_HandleTypeDef *hsmartcard)
 921:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 922:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable TXEIE and TCIE interrupts */
 923:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 924:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 925:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check if a receive process is ongoing or not. If not disable ERR IT */
 926:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->RxState == HAL_SMARTCARD_STATE_READY)
 927:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 928:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the SMARTCARD Error Interrupt: (Frame error) */
 929:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 930:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 931:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 932:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD DMA Tx request if enabled */
 933:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAT))
 934:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 935:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAT);
 936:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 937:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Abort the SMARTCARD DMA Tx channel : use blocking DMA Abort API (no callback) */
 938:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmatx != NULL)
 939:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 940:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Set the SMARTCARD DMA Abort callback to Null. 
 941:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          No call back execution at end of DMA abort procedure */
 942:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmatx->XferAbortCallback = NULL;
 943:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 18


 944:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       HAL_DMA_Abort(hsmartcard->hdmatx);
 945:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 946:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 947:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 948:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Reset Tx transfer counter */
 949:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->TxXferCount = 0; 
 950:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 951:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Clear the Error flags in the ICR register */
 952:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_FEF);
 953:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 954:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Restore hsmartcard->gState to Ready */
 955:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState = HAL_SMARTCARD_STATE_READY;
 956:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 957:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
 958:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 959:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 960:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
 961:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
 962:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
 963:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
 964:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
 965:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         This procedure performs following operations :
 966:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable SMARTCARD Interrupts (Rx)
 967:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
 968:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
 969:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Set handle State to READY
 970:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
 971:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
 972:HALLIB/Src/stm32f7xx_hal_smartcard.c **** */
 973:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_AbortReceive(SMARTCARD_HandleTypeDef *hsmartcard)
 974:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 975:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RTOIE, EOBIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 976:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE | USART
 977:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 978:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check if a Transmit process is ongoing or not. If not disable ERR IT */
 979:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->gState == HAL_SMARTCARD_STATE_READY)
 980:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 981:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the SMARTCARD Error Interrupt: (Frame error) */
 982:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 983:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 984:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 985:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD DMA Rx request if enabled */
 986:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR))
 987:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 988:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAR);
 989:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 990:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Abort the SMARTCARD DMA Rx channel : use blocking DMA Abort API (no callback) */
 991:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmarx != NULL)
 992:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 993:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Set the SMARTCARD DMA Abort callback to Null. 
 994:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          No call back execution at end of DMA abort procedure */
 995:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmarx->XferAbortCallback = NULL;
 996:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 997:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       HAL_DMA_Abort(hsmartcard->hdmarx);
 998:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 999:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1000:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 19


1001:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Reset Rx transfer counter */
1002:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0; 
1003:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1004:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Clear the Error flags in the ICR register */
1005:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_OREF | SMARTCARD_CLEAR_NEF | SMARTCARD_CLE
1006:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1007:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Restore hsmartcard->RxState to Ready */
1008:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
1009:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1010:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
1011:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1012:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1013:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1014:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1015:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1016:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1017:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1018:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         This procedure performs following operations :
1019:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable SMARTCARD Interrupts (Tx and Rx)
1020:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1021:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1022:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Set handle State to READY
1023:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - At abort completion, call user abort complete callback
1024:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1025:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1026:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
1027:HALLIB/Src/stm32f7xx_hal_smartcard.c **** */
1028:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_Abort_IT(SMARTCARD_HandleTypeDef *hsmartcard)
1029:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1030:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t abortcplt = 1;
1031:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
1032:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RTOIE, EOBIE, TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) 
1033:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART
1034:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
1035:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1036:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SMARTCARD Handle, DMA Abort complete callbac
1037:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      before any call to DMA Abort functions */
1038:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* DMA Tx Handle is valid */
1039:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->hdmatx != NULL)
1040:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1041:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Set DMA Abort Complete callback if SMARTCARD DMA Tx request if enabled.
1042:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        Otherwise, set it to NULL */
1043:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAT))
1044:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1045:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmatx->XferAbortCallback = SMARTCARD_DMATxAbortCallback;
1046:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1047:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     else
1048:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1049:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmatx->XferAbortCallback = NULL;
1050:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1051:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1052:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* DMA Rx Handle is valid */
1053:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->hdmarx != NULL)
1054:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1055:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Set DMA Abort Complete callback if SMARTCARD DMA Rx request if enabled.
1056:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        Otherwise, set it to NULL */
1057:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR))
ARM GAS  /tmp/ccq2I8Qf.s 			page 20


1058:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1059:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmarx->XferAbortCallback = SMARTCARD_DMARxAbortCallback;
1060:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1061:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     else
1062:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1063:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmarx->XferAbortCallback = NULL;
1064:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1065:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1066:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
1067:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD DMA Tx request if enabled */
1068:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAT))
1069:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1070:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable DMA Tx at UART level */
1071:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAT);
1072:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1073:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Abort the SMARTCARD DMA Tx channel : use non blocking DMA Abort API (callback) */
1074:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmatx != NULL)
1075:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1076:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* SMARTCARD Tx DMA Abort callback has already been initialised : 
1077:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          will lead to call HAL_SMARTCARD_AbortCpltCallback() at end of DMA abort procedure */
1078:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1079:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Abort DMA TX */
1080:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(HAL_DMA_Abort_IT(hsmartcard->hdmatx) != HAL_OK)
1081:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1082:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->hdmatx->XferAbortCallback = NULL;
1083:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1084:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       else
1085:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1086:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         abortcplt = 0;
1087:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1088:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1089:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1090:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1091:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD DMA Rx request if enabled */
1092:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR))
1093:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1094:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAR);
1095:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1096:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Abort the SMARTCARD DMA Rx channel : use non blocking DMA Abort API (callback) */
1097:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmarx != NULL)
1098:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1099:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* SMARTCARD Rx DMA Abort callback has already been initialised : 
1100:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          will lead to call HAL_SMARTCARD_AbortCpltCallback() at end of DMA abort procedure */
1101:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1102:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Abort DMA RX */
1103:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(HAL_DMA_Abort_IT(hsmartcard->hdmarx) != HAL_OK)
1104:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1105:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->hdmarx->XferAbortCallback = NULL;
1106:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         abortcplt = 1;
1107:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1108:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       else
1109:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1110:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         abortcplt = 0;
1111:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1112:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1113:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1114:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 21


1115:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1116:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (abortcplt == 1)
1117:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1118:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Reset Tx and Rx transfer counters */
1119:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = 0; 
1120:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferCount = 0;
1121:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1122:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Reset errorCode */
1123:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
1124:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1125:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Clear the Error flags in the ICR register */
1126:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_OREF | SMARTCARD_CLEAR_NEF | SMARTCARD_C
1127:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1128:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Restore hsmartcard->gState and hsmartcard->RxState to Ready */
1129:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->gState  = HAL_SMARTCARD_STATE_READY;
1130:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
1131:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1132:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1133:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     HAL_SMARTCARD_AbortCpltCallback(hsmartcard);
1134:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1135:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1136:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
1137:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1138:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1139:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1140:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1141:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1142:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1143:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1144:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         This procedure performs following operations :
1145:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable SMARTCARD Interrupts (Tx)
1146:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1147:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1148:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Set handle State to READY
1149:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - At abort completion, call user abort complete callback
1150:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1151:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1152:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
1153:HALLIB/Src/stm32f7xx_hal_smartcard.c **** */
1154:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_AbortTransmit_IT(SMARTCARD_HandleTypeDef *hsmartcard)
1155:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1156:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable TXEIE and TCIE interrupts */
1157:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1158:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1159:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check if a receive process is ongoing or not. If not disable ERR IT */
1160:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->RxState == HAL_SMARTCARD_STATE_READY)
1161:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1162:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the SMARTCARD Error Interrupt: (Frame error) */
1163:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
1164:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1165:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1166:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD DMA Tx request if enabled */
1167:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAT))
1168:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1169:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAT);
1170:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1171:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Abort the SMARTCARD DMA Tx channel : use non blocking DMA Abort API (callback) */
ARM GAS  /tmp/ccq2I8Qf.s 			page 22


1172:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmatx != NULL)
1173:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1174:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Set the SMARTCARD DMA Abort callback : 
1175:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          will lead to call HAL_SMARTCARD_AbortCpltCallback() at end of DMA abort procedure */
1176:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmatx->XferAbortCallback = SMARTCARD_DMATxOnlyAbortCallback;
1177:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1178:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Abort DMA TX */
1179:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(HAL_DMA_Abort_IT(hsmartcard->hdmatx) != HAL_OK)
1180:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1181:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Call Directly hsmartcard->hdmatx->XferAbortCallback function in case of error */
1182:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->hdmatx->XferAbortCallback(hsmartcard->hdmatx);
1183:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1184:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1185:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     else
1186:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1187:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Reset Tx transfer counter */
1188:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->TxXferCount = 0; 
1189:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1190:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Restore hsmartcard->gState to Ready */
1191:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->gState = HAL_SMARTCARD_STATE_READY;
1192:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1193:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1194:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       HAL_SMARTCARD_AbortTransmitCpltCallback(hsmartcard);
1195:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1196:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1197:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
1198:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1199:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Reset Tx transfer counter */
1200:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = 0; 
1201:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1202:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Clear the Error flags in the ICR register */
1203:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_FEF);
1204:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1205:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Restore hsmartcard->gState to Ready */
1206:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->gState = HAL_SMARTCARD_STATE_READY;
1207:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1208:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1209:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     HAL_SMARTCARD_AbortTransmitCpltCallback(hsmartcard);
1210:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1211:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1212:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
1213:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1214:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1215:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1216:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1217:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1218:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1219:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1220:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         This procedure performs following operations :
1221:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable SMARTCARD Interrupts (Rx)
1222:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1223:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1224:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - Set handle State to READY
1225:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *           - At abort completion, call user abort complete callback
1226:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1227:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1228:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
ARM GAS  /tmp/ccq2I8Qf.s 			page 23


1229:HALLIB/Src/stm32f7xx_hal_smartcard.c **** */
1230:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_StatusTypeDef HAL_SMARTCARD_AbortReceive_IT(SMARTCARD_HandleTypeDef *hsmartcard)
1231:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1232:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RTOIE, EOBIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1233:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE | USART
1234:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1235:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check if a Transmit process is ongoing or not. If not disable ERR IT */
1236:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->gState == HAL_SMARTCARD_STATE_READY)
1237:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1238:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the SMARTCARD Error Interrupt: (Frame error) */
1239:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
1240:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1241:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1242:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD DMA Rx request if enabled */
1243:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR))
1244:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1245:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAR);
1246:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1247:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Abort the SMARTCARD DMA Rx channel : use non blocking DMA Abort API (callback) */
1248:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmarx != NULL)
1249:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1250:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Set the SMARTCARD DMA Abort callback : 
1251:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          will lead to call HAL_SMARTCARD_AbortCpltCallback() at end of DMA abort procedure */
1252:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->hdmarx->XferAbortCallback = SMARTCARD_DMARxOnlyAbortCallback;
1253:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1254:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Abort DMA RX */
1255:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(HAL_DMA_Abort_IT(hsmartcard->hdmarx) != HAL_OK)
1256:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1257:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Call Directly hsmartcard->hdmarx->XferAbortCallback function in case of error */
1258:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->hdmarx->XferAbortCallback(hsmartcard->hdmarx);
1259:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1260:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1261:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     else
1262:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1263:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Reset Rx transfer counter */
1264:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->RxXferCount = 0; 
1265:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1266:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Clear the Error flags in the ICR register */
1267:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_OREF | SMARTCARD_CLEAR_NEF | SMARTCARD
1268:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1269:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Restore hsmartcard->RxState to Ready */
1270:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
1271:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1272:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1273:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       HAL_SMARTCARD_AbortReceiveCpltCallback(hsmartcard);
1274:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1275:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1276:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
1277:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1278:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Reset Rx transfer counter */
1279:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferCount = 0; 
1280:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1281:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Clear the Error flags in the ICR register */
1282:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_OREF | SMARTCARD_CLEAR_NEF | SMARTCARD_C
1283:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1284:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Restore hsmartcard->RxState to Ready */
1285:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
ARM GAS  /tmp/ccq2I8Qf.s 			page 24


1286:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1287:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1288:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     HAL_SMARTCARD_AbortReceiveCpltCallback(hsmartcard);
1289:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1290:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1291:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
1292:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1293:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1294:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1295:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief Handle SMARTCARD interrupt requests.
1296:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1297:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1298:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1299:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1300:HALLIB/Src/stm32f7xx_hal_smartcard.c **** void HAL_SMARTCARD_IRQHandler(SMARTCARD_HandleTypeDef *hsmartcard)
1301:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1302:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t isrflags   = READ_REG(hsmartcard->Instance->ISR);
1303:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t cr1its     = READ_REG(hsmartcard->Instance->CR1);
1304:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t cr3its;
1305:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t errorflags;
1306:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1307:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* If no error occurs */
1308:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
1309:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (errorflags == RESET)
1310:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1311:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* SMARTCARD in mode Receiver ---------------------------------------------------*/
1312:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1313:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1314:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       SMARTCARD_Receive_IT(hsmartcard);
1315:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Clear RXNE interrupt flag done by reading RDR in SMARTCARD_Receive_IT() */
1316:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return;
1317:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1318:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }  
1319:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1320:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* If some errors occur */
1321:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   cr3its = READ_REG(hsmartcard->Instance->CR3);
1322:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(   (errorflags != RESET) 
1323:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      && (    ((cr3its & USART_CR3_EIE) != RESET)
1324:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != RESET)) )
1325:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1326:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* SMARTCARD parity error interrupt occurred -------------------------------------*/
1327:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1328:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1329:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       __HAL_SMARTCARD_CLEAR_IT(hsmartcard, SMARTCARD_CLEAR_PEF);
1330:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1331:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->ErrorCode |= HAL_SMARTCARD_ERROR_PE;
1332:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1333:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1334:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* SMARTCARD frame error interrupt occurred --------------------------------------*/
1335:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1336:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1337:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       __HAL_SMARTCARD_CLEAR_IT(hsmartcard, SMARTCARD_CLEAR_FEF);
1338:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1339:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->ErrorCode |= HAL_SMARTCARD_ERROR_FE;
1340:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1341:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1342:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* SMARTCARD noise error interrupt occurred --------------------------------------*/
ARM GAS  /tmp/ccq2I8Qf.s 			page 25


1343:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1344:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1345:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       __HAL_SMARTCARD_CLEAR_IT(hsmartcard, SMARTCARD_CLEAR_NEF);
1346:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1347:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->ErrorCode |= HAL_SMARTCARD_ERROR_NE;
1348:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1349:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1350:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* SMARTCARD Over-Run interrupt occurred -----------------------------------------*/
1351:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1352:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1353:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1354:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       __HAL_SMARTCARD_CLEAR_IT(hsmartcard, SMARTCARD_CLEAR_OREF);
1355:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1356:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->ErrorCode |= HAL_SMARTCARD_ERROR_ORE;
1357:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1358:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1359:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* SMARTCARD receiver timeout interrupt occurred -----------------------------------------*/
1360:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(((isrflags & USART_ISR_RTOF) != RESET) && ((cr1its & USART_CR1_RTOIE) != RESET))
1361:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1362:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       __HAL_SMARTCARD_CLEAR_IT(hsmartcard, SMARTCARD_CLEAR_RTOF);
1363:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1364:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->ErrorCode |= HAL_SMARTCARD_ERROR_RTO;
1365:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1366:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1367:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Call SMARTCARD Error Call back function if need be --------------------------*/
1368:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->ErrorCode != HAL_SMARTCARD_ERROR_NONE)
1369:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1370:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* SMARTCARD in mode Receiver ---------------------------------------------------*/
1371:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1372:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1373:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         SMARTCARD_Receive_IT(hsmartcard);
1374:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1375:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1376:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* If Error is to be considered as blocking :
1377:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           - Receiver Timeout error in Reception
1378:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           - Overrun error in Reception
1379:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           - any error occurs in DMA mode reception
1380:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       */
1381:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if (   ((hsmartcard->ErrorCode & (HAL_SMARTCARD_ERROR_RTO | HAL_SMARTCARD_ERROR_ORE)) != RESE
1382:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           || (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR)))
1383:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {  
1384:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Blocking error : transfer is aborted
1385:HALLIB/Src/stm32f7xx_hal_smartcard.c ****            Set the SMARTCARD state ready to be able to start again the process,
1386:HALLIB/Src/stm32f7xx_hal_smartcard.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1387:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         SMARTCARD_EndRxTransfer(hsmartcard);
1388:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1389:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Disable the SMARTCARD DMA Rx request if enabled */
1390:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR))
1391:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         {
1392:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAR);
1393:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1394:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           /* Abort the SMARTCARD DMA Rx channel */
1395:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           if(hsmartcard->hdmarx != NULL)
1396:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           {
1397:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             /* Set the SMARTCARD DMA Abort callback : 
1398:HALLIB/Src/stm32f7xx_hal_smartcard.c ****                will lead to call HAL_SMARTCARD_ErrorCallback() at end of DMA abort procedure */
1399:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             hsmartcard->hdmarx->XferAbortCallback = SMARTCARD_DMAAbortOnError;
ARM GAS  /tmp/ccq2I8Qf.s 			page 26


1400:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1401:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             /* Abort DMA RX */
1402:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             if(HAL_DMA_Abort_IT(hsmartcard->hdmarx) != HAL_OK)
1403:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             {
1404:HALLIB/Src/stm32f7xx_hal_smartcard.c ****               /* Call Directly hsmartcard->hdmarx->XferAbortCallback function in case of error */
1405:HALLIB/Src/stm32f7xx_hal_smartcard.c ****               hsmartcard->hdmarx->XferAbortCallback(hsmartcard->hdmarx);
1406:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             }
1407:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           }
1408:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           else
1409:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           {
1410:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             /* Call user error callback */
1411:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             HAL_SMARTCARD_ErrorCallback(hsmartcard);
1412:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           }
1413:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         }
1414:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         else
1415:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         {
1416:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           /* Call user error callback */
1417:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           HAL_SMARTCARD_ErrorCallback(hsmartcard);
1418:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         }
1419:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1420:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* other error type to be considered as blocking :
1421:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           - Frame error in Transmission
1422:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       */
1423:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       else if ((hsmartcard->gState == HAL_SMARTCARD_STATE_BUSY_TX) && ((hsmartcard->ErrorCode & HAL
1424:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1425:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Blocking error : transfer is aborted
1426:HALLIB/Src/stm32f7xx_hal_smartcard.c ****            Set the SMARTCARD state ready to be able to start again the process,
1427:HALLIB/Src/stm32f7xx_hal_smartcard.c ****            Disable Tx Interrupts, and disable Tx DMA request, if ongoing */
1428:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         SMARTCARD_EndTxTransfer(hsmartcard);
1429:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1430:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Disable the SMARTCARD DMA Tx request if enabled */
1431:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         if (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAT))
1432:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         {
1433:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAT);
1434:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1435:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           /* Abort the SMARTCARD DMA Tx channel */
1436:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           if(hsmartcard->hdmatx != NULL)
1437:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           {
1438:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             /* Set the SMARTCARD DMA Abort callback : 
1439:HALLIB/Src/stm32f7xx_hal_smartcard.c ****                will lead to call HAL_SMARTCARD_ErrorCallback() at end of DMA abort procedure */
1440:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             hsmartcard->hdmatx->XferAbortCallback = SMARTCARD_DMAAbortOnError;
1441:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1442:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             /* Abort DMA TX */
1443:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             if(HAL_DMA_Abort_IT(hsmartcard->hdmatx) != HAL_OK)
1444:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             {
1445:HALLIB/Src/stm32f7xx_hal_smartcard.c ****               /* Call Directly hsmartcard->hdmatx->XferAbortCallback function in case of error */
1446:HALLIB/Src/stm32f7xx_hal_smartcard.c ****               hsmartcard->hdmatx->XferAbortCallback(hsmartcard->hdmatx);
1447:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             }
1448:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           }
1449:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           else
1450:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           {
1451:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             /* Call user error callback */
1452:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             HAL_SMARTCARD_ErrorCallback(hsmartcard);
1453:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           }
1454:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         }
1455:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         else
1456:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         {
ARM GAS  /tmp/ccq2I8Qf.s 			page 27


1457:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           /* Call user error callback */
1458:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           HAL_SMARTCARD_ErrorCallback(hsmartcard);
1459:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         }
1460:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1461:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       else
1462:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1463:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Non Blocking error : transfer could go on. 
1464:HALLIB/Src/stm32f7xx_hal_smartcard.c ****            Error is notified to user through user error callback */
1465:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         HAL_SMARTCARD_ErrorCallback(hsmartcard);
1466:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
1467:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1468:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1469:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return;
1470:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1471:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   } /* End if some error occurs */
1472:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1473:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* SMARTCARD in mode Receiver, end of block interruption ------------------------*/
1474:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(((isrflags & USART_ISR_EOBF) != RESET) && ((cr1its & USART_CR1_EOBIE) != RESET))
1475:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1476:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
1477:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_UNLOCK(hsmartcard);
1478:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     HAL_SMARTCARD_RxCpltCallback(hsmartcard);
1479:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Clear EOBF interrupt after HAL_SMARTCARD_RxCpltCallback() call for the End of Block informat
1480:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      * to be available during HAL_SMARTCARD_RxCpltCallback() processing */
1481:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_SMARTCARD_CLEAR_IT(hsmartcard, SMARTCARD_CLEAR_EOBF);
1482:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return;
1483:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1484:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1485:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* SMARTCARD in mode Transmitter ------------------------------------------------*/
1486:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1487:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1488:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SMARTCARD_Transmit_IT(hsmartcard);
1489:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return;
1490:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1491:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1492:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* SMARTCARD in mode Transmitter (transmission end) ------------------------*/
1493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if((__HAL_SMARTCARD_GET_IT(hsmartcard, hsmartcard->AdvancedInit.TxCompletionIndication) != RESET)
1494:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1495:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SMARTCARD_EndTransmit_IT(hsmartcard);
1496:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return;
1497:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1498:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1499:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1500:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1501:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Tx Transfer completed callback.
1502:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1503:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1504:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1505:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1506:HALLIB/Src/stm32f7xx_hal_smartcard.c **** __weak void HAL_SMARTCARD_TxCpltCallback(SMARTCARD_HandleTypeDef *hsmartcard)
1507:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1508:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
1509:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   UNUSED(hsmartcard);
1510:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1511:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1512:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             the HAL_SMARTCARD_TxCpltCallback can be implemented in the user file.
1513:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    */
ARM GAS  /tmp/ccq2I8Qf.s 			page 28


1514:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1515:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1516:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1517:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Rx Transfer completed callback.
1518:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1519:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1520:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1521:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1522:HALLIB/Src/stm32f7xx_hal_smartcard.c **** __weak void HAL_SMARTCARD_RxCpltCallback(SMARTCARD_HandleTypeDef *hsmartcard)
1523:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1524:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
1525:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   UNUSED(hsmartcard);
1526:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1527:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1528:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             the HAL_SMARTCARD_RxCpltCallback can be implemented in the user file.
1529:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    */
1530:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1531:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1532:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1533:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  SMARTCARD error callback.
1534:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1535:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1536:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1537:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1538:HALLIB/Src/stm32f7xx_hal_smartcard.c **** __weak void HAL_SMARTCARD_ErrorCallback(SMARTCARD_HandleTypeDef *hsmartcard)
1539:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1540:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
1541:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   UNUSED(hsmartcard);
1542:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1543:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1544:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             the HAL_SMARTCARD_ErrorCallback can be implemented in the user file.
1545:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    */
1546:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1547:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1548:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1549:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  SMARTCARD Abort Complete callback.
1550:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1551:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1552:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1553:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1554:HALLIB/Src/stm32f7xx_hal_smartcard.c **** __weak void HAL_SMARTCARD_AbortCpltCallback (SMARTCARD_HandleTypeDef *hsmartcard)
1555:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1556:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
1557:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   UNUSED(hsmartcard);
1558:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1559:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1560:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             the HAL_SMARTCARD_AbortCpltCallback can be implemented in the user file.
1561:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    */
1562:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1563:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1564:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1565:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  SMARTCARD Abort Complete callback.
1566:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1567:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1568:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1569:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1570:HALLIB/Src/stm32f7xx_hal_smartcard.c **** __weak void HAL_SMARTCARD_AbortTransmitCpltCallback (SMARTCARD_HandleTypeDef *hsmartcard)
ARM GAS  /tmp/ccq2I8Qf.s 			page 29


1571:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1572:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
1573:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   UNUSED(hsmartcard);
1574:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1575:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1576:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             the HAL_SMARTCARD_AbortTransmitCpltCallback can be implemented in the user file.
1577:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    */
1578:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1579:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1580:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1581:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  SMARTCARD Abort Receive Complete callback.
1582:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1583:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1584:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1585:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1586:HALLIB/Src/stm32f7xx_hal_smartcard.c **** __weak void HAL_SMARTCARD_AbortReceiveCpltCallback (SMARTCARD_HandleTypeDef *hsmartcard)
1587:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1588:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
1589:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   UNUSED(hsmartcard);
1590:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1591:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1592:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             the HAL_SMARTCARD_AbortReceiveCpltCallback can be implemented in the user file.
1593:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    */
1594:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1595:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1596:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1597:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @}
1598:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1599:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1600:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @defgroup SMARTCARD_Exported_Functions_Group4 Peripheral State and Errors functions
1601:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *  @brief   SMARTCARD State and Errors functions
1602:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *
1603:HALLIB/Src/stm32f7xx_hal_smartcard.c **** @verbatim
1604:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ==============================================================================
1605:HALLIB/Src/stm32f7xx_hal_smartcard.c ****                   ##### Peripheral State and Errors functions #####
1606:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   ==============================================================================
1607:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   [..]
1608:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     This subsection provides a set of functions allowing to return the State of SmartCard
1609:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     handle and also return Peripheral Errors occurred during communication process
1610:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      (+) HAL_SMARTCARD_GetState() API can be helpful to check in run-time the state
1611:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          of the SMARTCARD peripheral.
1612:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      (+) HAL_SMARTCARD_GetError() checks in run-time errors that could occur during
1613:HALLIB/Src/stm32f7xx_hal_smartcard.c ****          communication.
1614:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1615:HALLIB/Src/stm32f7xx_hal_smartcard.c **** @endverbatim
1616:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @{
1617:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1618:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1619:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1620:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Return the SMARTCARD handle state.
1621:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1622:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1623:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval SMARTCARD handle state
1624:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1625:HALLIB/Src/stm32f7xx_hal_smartcard.c **** HAL_SMARTCARD_StateTypeDef HAL_SMARTCARD_GetState(SMARTCARD_HandleTypeDef *hsmartcard)
1626:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1627:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Return SMARTCARD handle state */
ARM GAS  /tmp/ccq2I8Qf.s 			page 30


1628:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t temp1= 0x00, temp2 = 0x00;
1629:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   temp1 = hsmartcard->gState;
1630:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   temp2 = hsmartcard->RxState;
1631:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1632:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return (HAL_SMARTCARD_StateTypeDef)(temp1 | temp2);
1633:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1634:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1635:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1636:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Return the SMARTCARD handle error code.
1637:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1638:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1639:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval SMARTCARD handle Error Code
1640:HALLIB/Src/stm32f7xx_hal_smartcard.c **** */
1641:HALLIB/Src/stm32f7xx_hal_smartcard.c **** uint32_t HAL_SMARTCARD_GetError(SMARTCARD_HandleTypeDef *hsmartcard)
1642:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1643:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return hsmartcard->ErrorCode;
1644:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1645:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1646:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1647:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @}
1648:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1649:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1650:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1651:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @}
1652:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1653:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1654:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /** @defgroup SMARTCARD_Private_Functions SMARTCARD Private Functions
1655:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @{
1656:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1657:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1658:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1659:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief Configure the SMARTCARD associated USART peripheral.
1660:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1661:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1662:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1663:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1664:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_SetConfig(SMARTCARD_HandleTypeDef *hsmartcard)
1665:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1666:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t tmpreg                          = 0x00000000;
1667:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_ClockSourceTypeDef clocksource = SMARTCARD_CLOCKSOURCE_UNDEFINED;
1668:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_StatusTypeDef ret                    = HAL_OK;
1669:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1670:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the parameters */
1671:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_INSTANCE(hsmartcard->Instance));
1672:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_BAUDRATE(hsmartcard->Init.BaudRate));
1673:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_WORD_LENGTH(hsmartcard->Init.WordLength));
1674:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_STOPBITS(hsmartcard->Init.StopBits));
1675:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_PARITY(hsmartcard->Init.Parity));
1676:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_MODE(hsmartcard->Init.Mode));
1677:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_POLARITY(hsmartcard->Init.CLKPolarity));
1678:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_PHASE(hsmartcard->Init.CLKPhase));
1679:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_LASTBIT(hsmartcard->Init.CLKLastBit));
1680:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_ONE_BIT_SAMPLE(hsmartcard->Init.OneBitSampling));
1681:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_NACK(hsmartcard->Init.NACKEnable));
1682:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_TIMEOUT(hsmartcard->Init.TimeOutEnable));
1683:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_AUTORETRY_COUNT(hsmartcard->Init.AutoRetryCount));
1684:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 31


1685:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1686:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* In SmartCard mode, M and PCE are forced to 1 (8 bits + parity).
1687:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    * Oversampling is forced to 16 (OVER8 = 0).
1688:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    * Configure the Parity and Mode:
1689:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    *  set PS bit according to hsmartcard->Init.Parity value
1690:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    *  set TE and RE bits according to hsmartcard->Init.Mode value */
1691:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg = (uint32_t) hsmartcard->Init.Parity | hsmartcard->Init.Mode;
1692:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= (uint32_t) hsmartcard->Init.WordLength;
1693:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance->CR1, USART_CR1_FIELDS, tmpreg);
1694:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1695:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1696:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg = hsmartcard->Init.StopBits;
1697:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Synchronous mode is activated by default */
1698:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= (uint32_t) USART_CR2_CLKEN | hsmartcard->Init.CLKPolarity;
1699:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= (uint32_t) hsmartcard->Init.CLKPhase | hsmartcard->Init.CLKLastBit;
1700:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= (uint32_t) hsmartcard->Init.TimeOutEnable;
1701:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance->CR2, USART_CR2_FIELDS, tmpreg);
1702:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1703:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1704:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Configure
1705:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    * - one-bit sampling method versus three samples' majority rule
1706:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    *   according to hsmartcard->Init.OneBitSampling
1707:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    * - NACK transmission in case of parity error according
1708:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    *   to hsmartcard->Init.NACKEnable
1709:HALLIB/Src/stm32f7xx_hal_smartcard.c ****    * - autoretry counter according to hsmartcard->Init.AutoRetryCount     */
1710:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg =  (uint32_t) hsmartcard->Init.OneBitSampling | hsmartcard->Init.NACKEnable;
1711:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= ((uint32_t)hsmartcard->Init.AutoRetryCount << SMARTCARD_CR3_SCARCNT_LSB_POS);
1712:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance-> CR3,USART_CR3_FIELDS, tmpreg);
1713:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1714:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /*-------------------------- USART GTPR Configuration ----------------------*/
1715:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg = (hsmartcard->Init.Prescaler | ((uint32_t)hsmartcard->Init.GuardTime << SMARTCARD_GTPR_GT
1716:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance->GTPR, (USART_GTPR_GT|USART_GTPR_PSC), tmpreg);
1717:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1718:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /*-------------------------- USART RTOR Configuration ----------------------*/
1719:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg =   ((uint32_t)hsmartcard->Init.BlockLength << SMARTCARD_RTOR_BLEN_LSB_POS);
1720:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (hsmartcard->Init.TimeOutEnable == SMARTCARD_TIMEOUT_ENABLE)
1721:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1722:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     assert_param(IS_SMARTCARD_TIMEOUT_VALUE(hsmartcard->Init.TimeOutValue));
1723:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     tmpreg |=  (uint32_t) hsmartcard->Init.TimeOutValue;
1724:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1725:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance->RTOR, (USART_RTOR_RTO|USART_RTOR_BLEN), tmpreg);
1726:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1727:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_GETCLOCKSOURCE(hsmartcard, clocksource);
1729:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
1730:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1731:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_PCLK1:
1732:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->Instance->BRR = (uint16_t)((HAL_RCC_GetPCLK1Freq() + (hsmartcard->Init.BaudRate/2
1733:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
1734:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_PCLK2:
1735:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->Instance->BRR = (uint16_t)((HAL_RCC_GetPCLK2Freq() + (hsmartcard->Init.BaudRate/2
1736:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
1737:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_HSI:
1738:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->Instance->BRR = (uint16_t)((HSI_VALUE + (hsmartcard->Init.BaudRate/2)) / hsmartca
1739:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
1740:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_SYSCLK:
1741:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->Instance->BRR = (uint16_t)((HAL_RCC_GetSysClockFreq() + (hsmartcard->Init.BaudRat
ARM GAS  /tmp/ccq2I8Qf.s 			page 32


1742:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
1743:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_LSE:
1744:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->Instance->BRR = (uint16_t)((LSE_VALUE + (hsmartcard->Init.BaudRate/2)) / hsmartca
1745:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
1746:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_UNDEFINED:
1747:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     default:
1748:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       ret = HAL_ERROR;
1749:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
1750:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1751:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1752:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return ret;
1753:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1754:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1755:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1756:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1757:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief Configure the SMARTCARD associated USART peripheral advanced features.
1758:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1759:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1760:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1761:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1762:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_AdvFeatureConfig(SMARTCARD_HandleTypeDef *hsmartcard)
1763:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
  28              		.loc 1 1763 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1764:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check whether the set of advanced features to configure is properly set */
1765:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   assert_param(IS_SMARTCARD_ADVFEATURE_INIT(hsmartcard->AdvancedInit.AdvFeatureInit));
1766:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1767:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* if required, configure TX pin active level inversion */
1768:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->AdvancedInit.AdvFeatureInit, SMARTCARD_ADVFEATURE_TXINVERT_INIT))
  34              		.loc 1 1768 0
  35 0000 436C     		ldr	r3, [r0, #68]
  36 0002 13F0010F 		tst	r3, #1
  37 0006 06D0     		beq	.L2
1769:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1770:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     assert_param(IS_SMARTCARD_ADVFEATURE_TXINV(hsmartcard->AdvancedInit.TxPinLevelInvert));
1771:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     MODIFY_REG(hsmartcard->Instance->CR2, USART_CR2_TXINV, hsmartcard->AdvancedInit.TxPinLevelInver
  38              		.loc 1 1771 0
  39 0008 0168     		ldr	r1, [r0]
  40 000a 4B68     		ldr	r3, [r1, #4]
  41 000c 23F40032 		bic	r2, r3, #131072
  42 0010 836C     		ldr	r3, [r0, #72]
  43 0012 1343     		orrs	r3, r3, r2
  44 0014 4B60     		str	r3, [r1, #4]
  45              	.L2:
1772:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1773:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1774:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* if required, configure RX pin active level inversion */
1775:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->AdvancedInit.AdvFeatureInit, SMARTCARD_ADVFEATURE_RXINVERT_INIT))
  46              		.loc 1 1775 0
  47 0016 436C     		ldr	r3, [r0, #68]
  48 0018 13F0020F 		tst	r3, #2
  49 001c 06D0     		beq	.L3
1776:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
ARM GAS  /tmp/ccq2I8Qf.s 			page 33


1777:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     assert_param(IS_SMARTCARD_ADVFEATURE_RXINV(hsmartcard->AdvancedInit.RxPinLevelInvert));
1778:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     MODIFY_REG(hsmartcard->Instance->CR2, USART_CR2_RXINV, hsmartcard->AdvancedInit.RxPinLevelInver
  50              		.loc 1 1778 0
  51 001e 0168     		ldr	r1, [r0]
  52 0020 4B68     		ldr	r3, [r1, #4]
  53 0022 23F48032 		bic	r2, r3, #65536
  54 0026 C36C     		ldr	r3, [r0, #76]
  55 0028 1343     		orrs	r3, r3, r2
  56 002a 4B60     		str	r3, [r1, #4]
  57              	.L3:
1779:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1780:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1781:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* if required, configure data inversion */
1782:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->AdvancedInit.AdvFeatureInit, SMARTCARD_ADVFEATURE_DATAINVERT_INIT)
  58              		.loc 1 1782 0
  59 002c 436C     		ldr	r3, [r0, #68]
  60 002e 13F0040F 		tst	r3, #4
  61 0032 06D0     		beq	.L4
1783:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1784:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     assert_param(IS_SMARTCARD_ADVFEATURE_DATAINV(hsmartcard->AdvancedInit.DataInvert));
1785:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     MODIFY_REG(hsmartcard->Instance->CR2, USART_CR2_DATAINV, hsmartcard->AdvancedInit.DataInvert);
  62              		.loc 1 1785 0
  63 0034 0168     		ldr	r1, [r0]
  64 0036 4B68     		ldr	r3, [r1, #4]
  65 0038 23F48022 		bic	r2, r3, #262144
  66 003c 036D     		ldr	r3, [r0, #80]
  67 003e 1343     		orrs	r3, r3, r2
  68 0040 4B60     		str	r3, [r1, #4]
  69              	.L4:
1786:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1787:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1788:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* if required, configure RX/TX pins swap */
1789:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->AdvancedInit.AdvFeatureInit, SMARTCARD_ADVFEATURE_SWAP_INIT))
  70              		.loc 1 1789 0
  71 0042 436C     		ldr	r3, [r0, #68]
  72 0044 13F0080F 		tst	r3, #8
  73 0048 06D0     		beq	.L5
1790:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1791:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     assert_param(IS_SMARTCARD_ADVFEATURE_SWAP(hsmartcard->AdvancedInit.Swap));
1792:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     MODIFY_REG(hsmartcard->Instance->CR2, USART_CR2_SWAP, hsmartcard->AdvancedInit.Swap);
  74              		.loc 1 1792 0
  75 004a 0168     		ldr	r1, [r0]
  76 004c 4B68     		ldr	r3, [r1, #4]
  77 004e 23F40042 		bic	r2, r3, #32768
  78 0052 436D     		ldr	r3, [r0, #84]
  79 0054 1343     		orrs	r3, r3, r2
  80 0056 4B60     		str	r3, [r1, #4]
  81              	.L5:
1793:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1794:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1795:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* if required, configure RX overrun detection disabling */
1796:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->AdvancedInit.AdvFeatureInit, SMARTCARD_ADVFEATURE_RXOVERRUNDISABLE
  82              		.loc 1 1796 0
  83 0058 436C     		ldr	r3, [r0, #68]
  84 005a 13F0100F 		tst	r3, #16
  85 005e 06D0     		beq	.L6
1797:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
ARM GAS  /tmp/ccq2I8Qf.s 			page 34


1798:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     assert_param(IS_SMARTCARD_OVERRUN(hsmartcard->AdvancedInit.OverrunDisable));
1799:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     MODIFY_REG(hsmartcard->Instance->CR3, USART_CR3_OVRDIS, hsmartcard->AdvancedInit.OverrunDisable
  86              		.loc 1 1799 0
  87 0060 0168     		ldr	r1, [r0]
  88 0062 8B68     		ldr	r3, [r1, #8]
  89 0064 23F48052 		bic	r2, r3, #4096
  90 0068 836D     		ldr	r3, [r0, #88]
  91 006a 1343     		orrs	r3, r3, r2
  92 006c 8B60     		str	r3, [r1, #8]
  93              	.L6:
1800:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1801:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1802:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* if required, configure DMA disabling on reception error */
1803:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->AdvancedInit.AdvFeatureInit, SMARTCARD_ADVFEATURE_DMADISABLEONERRO
  94              		.loc 1 1803 0
  95 006e 436C     		ldr	r3, [r0, #68]
  96 0070 13F0200F 		tst	r3, #32
  97 0074 06D0     		beq	.L7
1804:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1805:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     assert_param(IS_SMARTCARD_ADVFEATURE_DMAONRXERROR(hsmartcard->AdvancedInit.DMADisableonRxError)
1806:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     MODIFY_REG(hsmartcard->Instance->CR3, USART_CR3_DDRE, hsmartcard->AdvancedInit.DMADisableonRxEr
  98              		.loc 1 1806 0
  99 0076 0168     		ldr	r1, [r0]
 100 0078 8B68     		ldr	r3, [r1, #8]
 101 007a 23F40052 		bic	r2, r3, #8192
 102 007e C36D     		ldr	r3, [r0, #92]
 103 0080 1343     		orrs	r3, r3, r2
 104 0082 8B60     		str	r3, [r1, #8]
 105              	.L7:
1807:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1808:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1809:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* if required, configure MSB first on communication line */
1810:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (HAL_IS_BIT_SET(hsmartcard->AdvancedInit.AdvFeatureInit, SMARTCARD_ADVFEATURE_MSBFIRST_INIT))
 106              		.loc 1 1810 0
 107 0084 436C     		ldr	r3, [r0, #68]
 108 0086 13F0800F 		tst	r3, #128
 109 008a 06D0     		beq	.L1
1811:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1812:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     assert_param(IS_SMARTCARD_ADVFEATURE_MSBFIRST(hsmartcard->AdvancedInit.MSBFirst));
1813:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     MODIFY_REG(hsmartcard->Instance->CR2, USART_CR2_MSBFIRST, hsmartcard->AdvancedInit.MSBFirst);
 110              		.loc 1 1813 0
 111 008c 0168     		ldr	r1, [r0]
 112 008e 4B68     		ldr	r3, [r1, #4]
 113 0090 23F40022 		bic	r2, r3, #524288
 114 0094 036E     		ldr	r3, [r0, #96]
 115 0096 1343     		orrs	r3, r3, r2
 116 0098 4B60     		str	r3, [r1, #4]
 117              	.L1:
 118 009a 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE162:
 122              		.section	.text.SMARTCARD_EndTxTransfer,"ax",%progbits
 123              		.align	2
 124              		.thumb
 125              		.thumb_func
 127              	SMARTCARD_EndTxTransfer:
 128              	.LFB165:
ARM GAS  /tmp/ccq2I8Qf.s 			page 35


1814:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1815:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1816:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1817:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1818:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1819:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief Check the SMARTCARD Idle State.
1820:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1821:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1822:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
1823:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1824:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_CheckIdleState(SMARTCARD_HandleTypeDef *hsmartcard)
1825:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1826:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t tickstart = 0;
1827:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1828:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Initialize the SMARTCARD ErrorCode */
1829:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
1830:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1831:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Init tickstart for timeout managment*/
1832:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tickstart = HAL_GetTick();
1833:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1834:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check if the Transmitter is enabled */
1835:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if((hsmartcard->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
1836:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1837:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Wait until TEACK flag is set */
1838:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(SMARTCARD_WaitOnFlagUntilTimeout(hsmartcard, USART_ISR_TEACK, RESET, tickstart, SMARTCARD_TE
1839:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1840:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Timeout occurred */
1841:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_TIMEOUT;
1842:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1843:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1844:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1845:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Initialize the SMARTCARD states */
1846:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState  = HAL_SMARTCARD_STATE_READY;
1847:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
1848:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1849:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Process Unlocked */
1850:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_UNLOCK(hsmartcard);
1851:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1852:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
1853:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1854:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1855:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1856:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Handle SMARTCARD Communication Timeout.
1857:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1858:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
1859:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Flag Specifies the SMARTCARD flag to check.
1860:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Status The new Flag status (SET or RESET).
1861:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Tickstart Tick start value
1862:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  Timeout Timeout duration.
1863:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
1864:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1865:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_WaitOnFlagUntilTimeout(SMARTCARD_HandleTypeDef *hsmartcard, uint
1866:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1867:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Wait until flag is set */
1868:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   while((__HAL_SMARTCARD_GET_FLAG(hsmartcard, Flag) ? SET : RESET) == Status)
1869:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1870:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Check for the Timeout */
ARM GAS  /tmp/ccq2I8Qf.s 			page 36


1871:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(Timeout != HAL_MAX_DELAY)
1872:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
1873:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if((Timeout == 0) || ((HAL_GetTick()-Tickstart) > Timeout))
1874:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
1875:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1876:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE))
1877:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
1878:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1879:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->gState  = HAL_SMARTCARD_STATE_READY;
1880:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
1881:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1882:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Process Unlocked */
1883:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         __HAL_UNLOCK(hsmartcard);
1884:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         return HAL_TIMEOUT;
1885:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
1886:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
1887:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1888:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
1889:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1890:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1891:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1892:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1893:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  End ongoing Tx transfer on SMARTCARD peripheral (following error detection or Transmit 
1894:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1895:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *               the configuration information for the specified SMARTCARD module.
1896:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1897:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1898:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_EndTxTransfer(SMARTCARD_HandleTypeDef *hsmartcard)
1899:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 129              		.loc 1 1899 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL1:
1900:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable TXEIE, TCIE and ERR (Frame error, noise error, overrun error) interrupts */
1901:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 135              		.loc 1 1901 0
 136 0000 0268     		ldr	r2, [r0]
 137 0002 1368     		ldr	r3, [r2]
 138 0004 23F0C003 		bic	r3, r3, #192
 139 0008 1360     		str	r3, [r2]
1902:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 140              		.loc 1 1902 0
 141 000a 0268     		ldr	r2, [r0]
 142 000c 9368     		ldr	r3, [r2, #8]
 143 000e 23F00103 		bic	r3, r3, #1
 144 0012 9360     		str	r3, [r2, #8]
1903:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1904:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* At end of Tx process, restore hsmartcard->gState to Ready */
1905:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState = HAL_SMARTCARD_STATE_READY;
 145              		.loc 1 1905 0
 146 0014 2023     		movs	r3, #32
 147 0016 80F88130 		strb	r3, [r0, #129]
 148 001a 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE165:
ARM GAS  /tmp/ccq2I8Qf.s 			page 37


 152              		.section	.text.SMARTCARD_EndRxTransfer,"ax",%progbits
 153              		.align	2
 154              		.thumb
 155              		.thumb_func
 157              	SMARTCARD_EndRxTransfer:
 158              	.LFB166:
1906:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1907:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1908:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1909:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1910:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
1911:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
1912:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *               the configuration information for the specified SMARTCARD module.
1913:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1914:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1915:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_EndRxTransfer(SMARTCARD_HandleTypeDef *hsmartcard)
1916:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 159              		.loc 1 1916 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
1917:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1918:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 165              		.loc 1 1918 0
 166 0000 0268     		ldr	r2, [r0]
 167 0002 1368     		ldr	r3, [r2]
 168 0004 23F49073 		bic	r3, r3, #288
 169 0008 1360     		str	r3, [r2]
1919:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 170              		.loc 1 1919 0
 171 000a 0268     		ldr	r2, [r0]
 172 000c 9368     		ldr	r3, [r2, #8]
 173 000e 23F00103 		bic	r3, r3, #1
 174 0012 9360     		str	r3, [r2, #8]
1920:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1921:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* At end of Rx process, restore hsmartcard->RxState to Ready */
1922:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 175              		.loc 1 1922 0
 176 0014 2023     		movs	r3, #32
 177 0016 80F88230 		strb	r3, [r0, #130]
 178 001a 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE166:
 182              		.section	.text.SMARTCARD_DMATransmitCplt,"ax",%progbits
 183              		.align	2
 184              		.thumb
 185              		.thumb_func
 187              	SMARTCARD_DMATransmitCplt:
 188              	.LFB167:
1923:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1924:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1925:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1926:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1927:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DMA SMARTCARD transmit process complete callback.
1928:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  /tmp/ccq2I8Qf.s 			page 38


1929:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *              the configuration information for the specified DMA module.
1930:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1931:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1932:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1933:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 189              		.loc 1 1933 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL3:
1934:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
 195              		.loc 1 1934 0
 196 0000 836B     		ldr	r3, [r0, #56]
 197              	.LVL4:
1935:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->TxXferCount = 0;
 198              		.loc 1 1935 0
 199 0002 0022     		movs	r2, #0
 200 0004 A3F86E20 		strh	r2, [r3, #110]	@ movhi
1936:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1937:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the DMA transfer for transmit request by resetting the DMAT bit
1938:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   in the SMARTCARD associated USART CR3 register */
1939:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAT);
 201              		.loc 1 1939 0
 202 0008 1968     		ldr	r1, [r3]
 203 000a 8A68     		ldr	r2, [r1, #8]
 204 000c 22F08002 		bic	r2, r2, #128
 205 0010 8A60     		str	r2, [r1, #8]
1940:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1941:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Enable the SMARTCARD Transmit Complete Interrupt */
1942:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_ENABLE_IT(hsmartcard, hsmartcard->AdvancedInit.TxCompletionIndication);
 206              		.loc 1 1942 0
 207 0012 B3F86420 		ldrh	r2, [r3, #100]
 208 0016 C2F34211 		ubfx	r1, r2, #5, #3
 209 001a 0129     		cmp	r1, #1
 210 001c 09D1     		bne	.L12
 211              		.loc 1 1942 0 is_stmt 0 discriminator 1
 212 001e 1968     		ldr	r1, [r3]
 213 0020 0868     		ldr	r0, [r1]
 214              	.LVL5:
 215 0022 02F01F02 		and	r2, r2, #31
 216 0026 0123     		movs	r3, #1
 217              	.LVL6:
 218 0028 03FA02F2 		lsl	r2, r3, r2
 219 002c 0243     		orrs	r2, r2, r0
 220 002e 0A60     		str	r2, [r1]
 221 0030 7047     		bx	lr
 222              	.LVL7:
 223              	.L12:
 224              		.loc 1 1942 0 discriminator 2
 225 0032 0229     		cmp	r1, #2
 226 0034 09D1     		bne	.L14
 227              		.loc 1 1942 0 discriminator 3
 228 0036 1968     		ldr	r1, [r3]
 229 0038 4868     		ldr	r0, [r1, #4]
 230              	.LVL8:
 231 003a 02F01F02 		and	r2, r2, #31
ARM GAS  /tmp/ccq2I8Qf.s 			page 39


 232 003e 0123     		movs	r3, #1
 233              	.LVL9:
 234 0040 03FA02F2 		lsl	r2, r3, r2
 235 0044 0243     		orrs	r2, r2, r0
 236 0046 4A60     		str	r2, [r1, #4]
 237 0048 7047     		bx	lr
 238              	.LVL10:
 239              	.L14:
 240              		.loc 1 1942 0 discriminator 4
 241 004a 1968     		ldr	r1, [r3]
 242 004c 8868     		ldr	r0, [r1, #8]
 243              	.LVL11:
 244 004e 02F01F02 		and	r2, r2, #31
 245 0052 0123     		movs	r3, #1
 246              	.LVL12:
 247 0054 03FA02F2 		lsl	r2, r3, r2
 248 0058 0243     		orrs	r2, r2, r0
 249 005a 8A60     		str	r2, [r1, #8]
 250 005c 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE167:
 254 005e 00BF     		.section	.text.SMARTCARD_Transmit_IT,"ax",%progbits
 255              		.align	2
 256              		.thumb
 257              		.thumb_func
 259              	SMARTCARD_Transmit_IT:
 260              	.LFB175:
1943:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1944:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1945:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1946:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DMA SMARTCARD receive process complete callback.
1947:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
1948:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *              the configuration information for the specified DMA module.
1949:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1950:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1951:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1952:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1953:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
1954:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
1955:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1956:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1957:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_PEIE);
1958:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
1959:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1960:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
1961:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      in the SMARTCARD associated USART CR3 register */
1962:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_DMAR);
1963:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1964:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* At end of Rx process, restore hsmartcard->RxState to Ready */
1965:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
1966:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1967:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_RxCpltCallback(hsmartcard);
1968:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1969:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1970:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
1971:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DMA SMARTCARD communication error callback.
1972:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  /tmp/ccq2I8Qf.s 			page 40


1973:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *              the configuration information for the specified DMA module.
1974:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
1975:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
1976:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMAError(DMA_HandleTypeDef *hdma)
1977:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
1978:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
1979:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1980:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Stop SMARTCARD DMA Tx request if ongoing */
1981:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (  (hsmartcard->gState == HAL_SMARTCARD_STATE_BUSY_TX)
1982:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       &&(HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAT)) )
1983:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1984:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = 0;
1985:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SMARTCARD_EndTxTransfer(hsmartcard);
1986:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1987:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1988:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Stop SMARTCARD DMA Rx request if ongoing */
1989:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (  (hsmartcard->RxState == HAL_SMARTCARD_STATE_BUSY_RX)
1990:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       &&(HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR)) )
1991:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
1992:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferCount = 0;
1993:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SMARTCARD_EndRxTransfer(hsmartcard);
1994:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
1995:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
1996:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->ErrorCode |= HAL_SMARTCARD_ERROR_DMA;
1997:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_ErrorCallback(hsmartcard);
1998:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
1999:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2000:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
2001:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DMA SMARTCARD communication abort callback, when initiated by HAL services on Error
2002:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2003:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hdma DMA handle.
2004:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
2005:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
2006:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2007:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
2008:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
2009:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
2010:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->TxXferCount = 0;
2011:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2012:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_ErrorCallback(hsmartcard);
2013:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
2014:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2015:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
2016:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DMA SMARTCARD Tx communication abort callback, when initiated by user
2017:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2018:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2019:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         Abort still ongoing for Rx DMA Handle.
2020:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hdma DMA handle.
2021:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
2022:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
2023:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2024:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
2025:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef* )(hdma->Parent);
2026:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
2027:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->hdmatx->XferAbortCallback = NULL;
2028:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2029:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check if an Abort process is still ongoing */
ARM GAS  /tmp/ccq2I8Qf.s 			page 41


2030:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->hdmarx != NULL)
2031:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
2032:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmarx->XferAbortCallback != NULL)
2033:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
2034:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return;
2035:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
2036:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
2037:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
2038:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2039:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->TxXferCount = 0;
2040:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
2041:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2042:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Reset errorCode */
2043:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
2044:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2045:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Clear the Error flags in the ICR register */
2046:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_OREF | SMARTCARD_CLEAR_NEF | SMARTCARD_CLE
2047:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2048:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Restore hsmartcard->gState and hsmartcard->RxState to Ready */
2049:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState  = HAL_SMARTCARD_STATE_READY;
2050:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
2051:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2052:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Call user Abort complete callback */
2053:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_AbortCpltCallback(hsmartcard);
2054:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
2055:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2056:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2057:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
2058:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DMA SMARTCARD Rx communication abort callback, when initiated by user
2059:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2060:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2061:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         Abort still ongoing for Tx DMA Handle.
2062:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hdma DMA handle.
2063:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
2064:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
2065:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2066:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
2067:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef* )(hdma->Parent);
2068:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
2069:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->hdmarx->XferAbortCallback = NULL;
2070:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2071:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check if an Abort process is still ongoing */
2072:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->hdmatx != NULL)
2073:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
2074:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->hdmatx->XferAbortCallback != NULL)
2075:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
2076:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return;
2077:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
2078:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
2079:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
2080:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2081:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->TxXferCount = 0;
2082:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
2083:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2084:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Reset errorCode */
2085:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
2086:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 42


2087:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Clear the Error flags in the ICR register */
2088:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_OREF | SMARTCARD_CLEAR_NEF | SMARTCARD_CLE
2089:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2090:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Restore hsmartcard->gState and hsmartcard->RxState to Ready */
2091:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState  = HAL_SMARTCARD_STATE_READY;
2092:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
2093:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2094:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Call user Abort complete callback */
2095:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_AbortCpltCallback(hsmartcard);
2096:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
2097:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2098:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2099:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
2100:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DMA SMARTCARD Tx communication abort callback, when initiated by user by a call to
2101:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         HAL_SMARTCARD_AbortTransmit_IT API (Abort only Tx transfer)
2102:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2103:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         and leads to user Tx Abort Complete callback execution).
2104:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hdma DMA handle.
2105:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
2106:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
2107:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2108:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
2109:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
2110:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2111:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->TxXferCount = 0;
2112:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2113:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Clear the Error flags in the ICR register */
2114:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_FEF);
2115:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2116:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Restore hsmartcard->gState to Ready */
2117:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState = HAL_SMARTCARD_STATE_READY;
2118:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2119:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Call user Abort complete callback */
2120:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_AbortTransmitCpltCallback(hsmartcard);
2121:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
2122:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2123:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
2124:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  DMA SMARTCARD Rx communication abort callback, when initiated by user by a call to
2125:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         HAL_SMARTCARD_AbortReceive_IT API (Abort only Rx transfer)
2126:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2127:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         and leads to user Rx Abort Complete callback execution).
2128:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hdma DMA handle.
2129:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval None
2130:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
2131:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static void SMARTCARD_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2132:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
2133:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = ( SMARTCARD_HandleTypeDef* )(hdma->Parent);
2134:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2135:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
2136:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2137:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Clear the Error flags in the ICR register */
2138:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_CLEAR_FLAG(hsmartcard, SMARTCARD_CLEAR_OREF | SMARTCARD_CLEAR_NEF | SMARTCARD_CLE
2139:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2140:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Restore hsmartcard->RxState to Ready */
2141:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
2142:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2143:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Call user Abort complete callback */
ARM GAS  /tmp/ccq2I8Qf.s 			page 43


2144:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_AbortReceiveCpltCallback(hsmartcard);
2145:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
2146:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2147:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
2148:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief Send an amount of data in non-blocking mode.
2149:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
2150:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                the configuration information for the specified SMARTCARD module.
2151:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         Function called under interruption only, once
2152:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         interruptions have been enabled by HAL_SMARTCARD_Transmit_IT()
2153:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
2154:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
2155:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_Transmit_IT(SMARTCARD_HandleTypeDef *hsmartcard)
2156:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 261              		.loc 1 2156 0 is_stmt 1
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL13:
2157:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Tx process is ongoing */
2158:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (hsmartcard->gState == HAL_SMARTCARD_STATE_BUSY_TX)
 267              		.loc 1 2158 0
 268 0000 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 269 0004 DBB2     		uxtb	r3, r3
 270 0006 212B     		cmp	r3, #33
 271 0008 3ED1     		bne	.L22
2159:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
2160:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(hsmartcard->TxXferCount == 0)
 272              		.loc 1 2160 0
 273 000a B0F86E30 		ldrh	r3, [r0, #110]
 274 000e 9BB2     		uxth	r3, r3
 275 0010 5BBB     		cbnz	r3, .L18
2161:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
2162:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Disable the SMARTCARD Transmit Data Register Empty Interrupt */
2163:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_TXEIE);
 276              		.loc 1 2163 0
 277 0012 0268     		ldr	r2, [r0]
 278 0014 1368     		ldr	r3, [r2]
 279 0016 23F08003 		bic	r3, r3, #128
 280 001a 1360     		str	r3, [r2]
2164:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2165:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Enable the SMARTCARD Transmit Complete Interrupt */
2166:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       __HAL_SMARTCARD_ENABLE_IT(hsmartcard, hsmartcard->AdvancedInit.TxCompletionIndication);
 281              		.loc 1 2166 0
 282 001c B0F86430 		ldrh	r3, [r0, #100]
 283 0020 C3F34212 		ubfx	r2, r3, #5, #3
 284 0024 012A     		cmp	r2, #1
 285 0026 09D1     		bne	.L19
 286              		.loc 1 2166 0 is_stmt 0 discriminator 1
 287 0028 0168     		ldr	r1, [r0]
 288 002a 0868     		ldr	r0, [r1]
 289              	.LVL14:
 290 002c 03F01F03 		and	r3, r3, #31
 291 0030 02FA03F3 		lsl	r3, r2, r3
 292 0034 0343     		orrs	r3, r3, r0
 293 0036 0B60     		str	r3, [r1]
2167:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 44


2168:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_OK;
 294              		.loc 1 2168 0 is_stmt 1 discriminator 1
 295 0038 0020     		movs	r0, #0
 296 003a 7047     		bx	lr
 297              	.LVL15:
 298              	.L19:
2166:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 299              		.loc 1 2166 0 discriminator 2
 300 003c 022A     		cmp	r2, #2
 301 003e 09D1     		bne	.L20
2166:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 302              		.loc 1 2166 0 is_stmt 0 discriminator 3
 303 0040 0168     		ldr	r1, [r0]
 304 0042 4868     		ldr	r0, [r1, #4]
 305              	.LVL16:
 306 0044 03F01F03 		and	r3, r3, #31
 307 0048 0122     		movs	r2, #1
 308 004a 02FA03F3 		lsl	r3, r2, r3
 309 004e 0343     		orrs	r3, r3, r0
 310 0050 4B60     		str	r3, [r1, #4]
 311 0052 08E0     		b	.L21
 312              	.LVL17:
 313              	.L20:
2166:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 314              		.loc 1 2166 0 discriminator 4
 315 0054 0168     		ldr	r1, [r0]
 316 0056 8868     		ldr	r0, [r1, #8]
 317              	.LVL18:
 318 0058 03F01F03 		and	r3, r3, #31
 319 005c 0122     		movs	r2, #1
 320 005e 02FA03F3 		lsl	r3, r2, r3
 321 0062 0343     		orrs	r3, r3, r0
 322 0064 8B60     		str	r3, [r1, #8]
 323              	.L21:
 324              		.loc 1 2168 0 is_stmt 1 discriminator 6
 325 0066 0020     		movs	r0, #0
 326 0068 7047     		bx	lr
 327              	.LVL19:
 328              	.L18:
2169:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
2170:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     else
2171:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
2172:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->Instance->TDR = (*hsmartcard->pTxBuffPtr++ & (uint8_t)0xFF);
 329              		.loc 1 2172 0
 330 006a 0268     		ldr	r2, [r0]
 331 006c 836E     		ldr	r3, [r0, #104]
 332 006e 591C     		adds	r1, r3, #1
 333 0070 8166     		str	r1, [r0, #104]
 334 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 335 0074 9362     		str	r3, [r2, #40]
2173:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->TxXferCount--;
 336              		.loc 1 2173 0
 337 0076 B0F86E30 		ldrh	r3, [r0, #110]
 338 007a 9BB2     		uxth	r3, r3
 339 007c 013B     		subs	r3, r3, #1
 340 007e 9BB2     		uxth	r3, r3
 341 0080 A0F86E30 		strh	r3, [r0, #110]	@ movhi
ARM GAS  /tmp/ccq2I8Qf.s 			page 45


2174:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2175:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_OK;
 342              		.loc 1 2175 0
 343 0084 0020     		movs	r0, #0
 344              	.LVL20:
 345 0086 7047     		bx	lr
 346              	.LVL21:
 347              	.L22:
2176:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
2177:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
2178:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
2179:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
2180:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_BUSY;
 348              		.loc 1 2180 0
 349 0088 0220     		movs	r0, #2
 350              	.LVL22:
2181:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
2182:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 351              		.loc 1 2182 0
 352 008a 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE175:
 356              		.section	.text.SMARTCARD_SetConfig,"ax",%progbits
 357              		.align	2
 358              		.thumb
 359              		.thumb_func
 361              	SMARTCARD_SetConfig:
 362              	.LFB161:
1665:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t tmpreg                          = 0x00000000;
 363              		.loc 1 1665 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              	.LVL23:
 368 0000 38B5     		push	{r3, r4, r5, lr}
 369              	.LCFI0:
 370              		.cfi_def_cfa_offset 16
 371              		.cfi_offset 3, -16
 372              		.cfi_offset 4, -12
 373              		.cfi_offset 5, -8
 374              		.cfi_offset 14, -4
 375 0002 0446     		mov	r4, r0
 376              	.LVL24:
1691:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= (uint32_t) hsmartcard->Init.WordLength;
 377              		.loc 1 1691 0
 378 0004 0269     		ldr	r2, [r0, #16]
 379 0006 4369     		ldr	r3, [r0, #20]
 380 0008 1A43     		orrs	r2, r2, r3
 381              	.LVL25:
1692:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 382              		.loc 1 1692 0
 383 000a 8368     		ldr	r3, [r0, #8]
 384 000c 1A43     		orrs	r2, r2, r3
 385              	.LVL26:
1693:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 386              		.loc 1 1693 0
 387 000e 0168     		ldr	r1, [r0]
ARM GAS  /tmp/ccq2I8Qf.s 			page 46


 388 0010 0868     		ldr	r0, [r1]
 389              	.LVL27:
 390 0012 754B     		ldr	r3, .L63
 391 0014 0340     		ands	r3, r3, r0
 392 0016 1343     		orrs	r3, r3, r2
 393 0018 0B60     		str	r3, [r1]
1696:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Synchronous mode is activated by default */
 394              		.loc 1 1696 0
 395 001a E268     		ldr	r2, [r4, #12]
 396              	.LVL28:
1698:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= (uint32_t) hsmartcard->Init.CLKPhase | hsmartcard->Init.CLKLastBit;
 397              		.loc 1 1698 0
 398 001c A369     		ldr	r3, [r4, #24]
 399 001e 1343     		orrs	r3, r3, r2
 400 0020 43F40063 		orr	r3, r3, #2048
 401              	.LVL29:
1699:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= (uint32_t) hsmartcard->Init.TimeOutEnable;
 402              		.loc 1 1699 0
 403 0024 E169     		ldr	r1, [r4, #28]
 404 0026 226A     		ldr	r2, [r4, #32]
 405 0028 0A43     		orrs	r2, r2, r1
 406 002a 1A43     		orrs	r2, r2, r3
 407              	.LVL30:
1700:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance->CR2, USART_CR2_FIELDS, tmpreg);
 408              		.loc 1 1700 0
 409 002c 636B     		ldr	r3, [r4, #52]
 410 002e 1A43     		orrs	r2, r2, r3
 411              	.LVL31:
1701:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 412              		.loc 1 1701 0
 413 0030 2168     		ldr	r1, [r4]
 414 0032 4868     		ldr	r0, [r1, #4]
 415 0034 6D4B     		ldr	r3, .L63+4
 416 0036 0340     		ands	r3, r3, r0
 417 0038 1343     		orrs	r3, r3, r2
 418 003a 4B60     		str	r3, [r1, #4]
1710:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   tmpreg |= ((uint32_t)hsmartcard->Init.AutoRetryCount << SMARTCARD_CR3_SCARCNT_LSB_POS);
 419              		.loc 1 1710 0
 420 003c 626A     		ldr	r2, [r4, #36]
 421              	.LVL32:
 422 003e 238E     		ldrh	r3, [r4, #48]
 423 0040 1343     		orrs	r3, r3, r2
 424              	.LVL33:
1711:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance-> CR3,USART_CR3_FIELDS, tmpreg);
 425              		.loc 1 1711 0
 426 0042 226C     		ldr	r2, [r4, #64]
 427 0044 43EA4242 		orr	r2, r3, r2, lsl #17
 428              	.LVL34:
1712:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 429              		.loc 1 1712 0
 430 0048 2168     		ldr	r1, [r4]
 431 004a 8868     		ldr	r0, [r1, #8]
 432 004c 684B     		ldr	r3, .L63+8
 433 004e 0340     		ands	r3, r3, r0
 434 0050 1343     		orrs	r3, r3, r2
 435 0052 8B60     		str	r3, [r1, #8]
1715:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   MODIFY_REG(hsmartcard->Instance->GTPR, (USART_GTPR_GT|USART_GTPR_PSC), tmpreg);
ARM GAS  /tmp/ccq2I8Qf.s 			page 47


 436              		.loc 1 1715 0
 437 0054 A36A     		ldr	r3, [r4, #40]
 438 0056 E26A     		ldr	r2, [r4, #44]
 439              	.LVL35:
 440 0058 43EA0222 		orr	r2, r3, r2, lsl #8
 441              	.LVL36:
1716:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 442              		.loc 1 1716 0
 443 005c 2168     		ldr	r1, [r4]
 444 005e 0869     		ldr	r0, [r1, #16]
 445 0060 644B     		ldr	r3, .L63+12
 446 0062 0340     		ands	r3, r3, r0
 447 0064 1343     		orrs	r3, r3, r2
 448 0066 0B61     		str	r3, [r1, #16]
1719:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (hsmartcard->Init.TimeOutEnable == SMARTCARD_TIMEOUT_ENABLE)
 449              		.loc 1 1719 0
 450 0068 E36B     		ldr	r3, [r4, #60]
 451 006a 1B06     		lsls	r3, r3, #24
 452              	.LVL37:
1720:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 453              		.loc 1 1720 0
 454 006c 626B     		ldr	r2, [r4, #52]
 455 006e B2F5000F 		cmp	r2, #8388608
 456 0072 01D1     		bne	.L24
1723:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 457              		.loc 1 1723 0
 458 0074 A26B     		ldr	r2, [r4, #56]
 459 0076 1343     		orrs	r3, r3, r2
 460              	.LVL38:
 461              	.L24:
1725:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 462              		.loc 1 1725 0
 463 0078 2268     		ldr	r2, [r4]
 464 007a 5169     		ldr	r1, [r2, #20]
 465 007c 5361     		str	r3, [r2, #20]
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 466              		.loc 1 1728 0
 467 007e 2568     		ldr	r5, [r4]
 468 0080 5D4B     		ldr	r3, .L63+16
 469              	.LVL39:
 470 0082 9D42     		cmp	r5, r3
 471 0084 13D1     		bne	.L25
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 472              		.loc 1 1728 0 is_stmt 0 discriminator 1
 473 0086 03F59433 		add	r3, r3, #75776
 474 008a D3F89030 		ldr	r3, [r3, #144]
 475 008e 03F00303 		and	r3, r3, #3
 476 0092 032B     		cmp	r3, #3
 477 0094 03D8     		bhi	.L26
 478 0096 DFE803F0 		tbb	[pc, r3]
 479              	.LVL40:
 480              	.L28:
 481 009a 5D       		.byte	(.L56-.L28)/2
 482 009b 06       		.byte	(.L29-.L28)/2
 483 009c 04       		.byte	(.L30-.L28)/2
 484 009d 08       		.byte	(.L31-.L28)/2
 485              		.p2align 1
ARM GAS  /tmp/ccq2I8Qf.s 			page 48


 486              	.L26:
1667:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_StatusTypeDef ret                    = HAL_OK;
 487              		.loc 1 1667 0 is_stmt 1
 488 009e 1023     		movs	r3, #16
 489 00a0 61E0     		b	.L27
 490              	.L30:
 491              	.LVL41:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 492              		.loc 1 1728 0 discriminator 5
 493 00a2 0223     		movs	r3, #2
 494 00a4 5FE0     		b	.L27
 495              	.LVL42:
 496              	.L29:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 497              		.loc 1 1728 0 is_stmt 0 discriminator 4
 498 00a6 0423     		movs	r3, #4
 499 00a8 5DE0     		b	.L27
 500              	.LVL43:
 501              	.L31:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 502              		.loc 1 1728 0 discriminator 6
 503 00aa 0823     		movs	r3, #8
 504 00ac 5BE0     		b	.L27
 505              	.LVL44:
 506              	.L25:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 507              		.loc 1 1728 0 discriminator 2
 508 00ae 534B     		ldr	r3, .L63+20
 509 00b0 9D42     		cmp	r5, r3
 510 00b2 18D1     		bne	.L32
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 511              		.loc 1 1728 0 discriminator 7
 512 00b4 03F5FA33 		add	r3, r3, #128000
 513 00b8 D3F89030 		ldr	r3, [r3, #144]
 514 00bc 03F00C03 		and	r3, r3, #12
 515 00c0 0C2B     		cmp	r3, #12
 516 00c2 08D8     		bhi	.L33
 517 00c4 DFE803F0 		tbb	[pc, r3]
 518              	.LVL45:
 519              	.L34:
 520 00c8 48       		.byte	(.L57-.L34)/2
 521 00c9 07       		.byte	(.L33-.L34)/2
 522 00ca 07       		.byte	(.L33-.L34)/2
 523 00cb 07       		.byte	(.L33-.L34)/2
 524 00cc 0B       		.byte	(.L35-.L34)/2
 525 00cd 07       		.byte	(.L33-.L34)/2
 526 00ce 07       		.byte	(.L33-.L34)/2
 527 00cf 07       		.byte	(.L33-.L34)/2
 528 00d0 09       		.byte	(.L36-.L34)/2
 529 00d1 07       		.byte	(.L33-.L34)/2
 530 00d2 07       		.byte	(.L33-.L34)/2
 531 00d3 07       		.byte	(.L33-.L34)/2
 532 00d4 0D       		.byte	(.L37-.L34)/2
 533 00d5 00       		.p2align 1
 534              	.L33:
1667:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_StatusTypeDef ret                    = HAL_OK;
 535              		.loc 1 1667 0 is_stmt 1
ARM GAS  /tmp/ccq2I8Qf.s 			page 49


 536 00d6 1023     		movs	r3, #16
 537 00d8 45E0     		b	.L27
 538              	.L36:
 539              	.LVL46:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 540              		.loc 1 1728 0 discriminator 11
 541 00da 0223     		movs	r3, #2
 542 00dc 43E0     		b	.L27
 543              	.LVL47:
 544              	.L35:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 545              		.loc 1 1728 0 is_stmt 0 discriminator 10
 546 00de 0423     		movs	r3, #4
 547 00e0 41E0     		b	.L27
 548              	.LVL48:
 549              	.L37:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 550              		.loc 1 1728 0 discriminator 12
 551 00e2 0823     		movs	r3, #8
 552 00e4 3FE0     		b	.L27
 553              	.LVL49:
 554              	.L32:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 555              		.loc 1 1728 0 discriminator 8
 556 00e6 464B     		ldr	r3, .L63+24
 557 00e8 9D42     		cmp	r5, r3
 558 00ea 16D1     		bne	.L38
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 559              		.loc 1 1728 0 discriminator 13
 560 00ec 03F5F833 		add	r3, r3, #126976
 561 00f0 D3F89030 		ldr	r3, [r3, #144]
 562 00f4 03F03003 		and	r3, r3, #48
 563 00f8 102B     		cmp	r3, #16
 564 00fa 0AD0     		beq	.L40
 565 00fc 01D8     		bhi	.L41
 566 00fe 6BB3     		cbz	r3, .L58
 567 0100 03E0     		b	.L39
 568              	.L41:
 569 0102 202B     		cmp	r3, #32
 570 0104 03D0     		beq	.L42
 571 0106 302B     		cmp	r3, #48
 572 0108 05D0     		beq	.L43
 573              	.L39:
1667:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_StatusTypeDef ret                    = HAL_OK;
 574              		.loc 1 1667 0 is_stmt 1
 575 010a 1023     		movs	r3, #16
 576 010c 2BE0     		b	.L27
 577              	.L42:
 578              	.LVL50:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 579              		.loc 1 1728 0 discriminator 17
 580 010e 0223     		movs	r3, #2
 581 0110 29E0     		b	.L27
 582              	.LVL51:
 583              	.L40:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 584              		.loc 1 1728 0 is_stmt 0 discriminator 16
ARM GAS  /tmp/ccq2I8Qf.s 			page 50


 585 0112 0423     		movs	r3, #4
 586 0114 27E0     		b	.L27
 587              	.LVL52:
 588              	.L43:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 589              		.loc 1 1728 0 discriminator 18
 590 0116 0823     		movs	r3, #8
 591 0118 25E0     		b	.L27
 592              	.LVL53:
 593              	.L38:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 594              		.loc 1 1728 0 discriminator 14
 595 011a 3A4B     		ldr	r3, .L63+28
 596 011c 9D42     		cmp	r5, r3
 597 011e 1FD1     		bne	.L59
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 598              		.loc 1 1728 0 discriminator 19
 599 0120 03F59233 		add	r3, r3, #74752
 600 0124 D3F89030 		ldr	r3, [r3, #144]
 601 0128 03F44063 		and	r3, r3, #3072
 602 012c B3F5806F 		cmp	r3, #1024
 603 0130 0CD0     		beq	.L45
 604 0132 01D8     		bhi	.L46
 605 0134 B3B1     		cbz	r3, .L60
 606 0136 05E0     		b	.L44
 607              	.L46:
 608 0138 B3F5006F 		cmp	r3, #2048
 609 013c 04D0     		beq	.L47
 610 013e B3F5406F 		cmp	r3, #3072
 611 0142 05D0     		beq	.L48
 612              	.L44:
1667:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_StatusTypeDef ret                    = HAL_OK;
 613              		.loc 1 1667 0 is_stmt 1
 614 0144 1023     		movs	r3, #16
 615 0146 0EE0     		b	.L27
 616              	.L47:
 617              	.LVL54:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 618              		.loc 1 1728 0 discriminator 22
 619 0148 0223     		movs	r3, #2
 620 014a 0CE0     		b	.L27
 621              	.LVL55:
 622              	.L45:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 623              		.loc 1 1728 0 is_stmt 0 discriminator 21
 624 014c 0423     		movs	r3, #4
 625 014e 0AE0     		b	.L27
 626              	.LVL56:
 627              	.L48:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 628              		.loc 1 1728 0 discriminator 23
 629 0150 0823     		movs	r3, #8
 630 0152 08E0     		b	.L27
 631              	.LVL57:
 632              	.L56:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 633              		.loc 1 1728 0
ARM GAS  /tmp/ccq2I8Qf.s 			page 51


 634 0154 0123     		movs	r3, #1
 635 0156 06E0     		b	.L27
 636              	.L57:
 637 0158 0023     		movs	r3, #0
 638 015a 04E0     		b	.L27
 639              	.LVL58:
 640              	.L58:
 641 015c 0023     		movs	r3, #0
 642 015e 02E0     		b	.L27
 643              	.L59:
1667:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_StatusTypeDef ret                    = HAL_OK;
 644              		.loc 1 1667 0 is_stmt 1
 645 0160 1023     		movs	r3, #16
 646 0162 00E0     		b	.L27
 647              	.L60:
1728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   switch (clocksource)
 648              		.loc 1 1728 0
 649 0164 0123     		movs	r3, #1
 650              	.LVL59:
 651              	.L27:
1729:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 652              		.loc 1 1729 0
 653 0166 082B     		cmp	r3, #8
 654 0168 3BD8     		bhi	.L61
 655 016a DFE803F0 		tbb	[pc, r3]
 656              	.L51:
 657 016e 05       		.byte	(.L50-.L51)/2
 658 016f 10       		.byte	(.L52-.L51)/2
 659 0170 1B       		.byte	(.L53-.L51)/2
 660 0171 3A       		.byte	(.L61-.L51)/2
 661 0172 25       		.byte	(.L54-.L51)/2
 662 0173 3A       		.byte	(.L61-.L51)/2
 663 0174 3A       		.byte	(.L61-.L51)/2
 664 0175 3A       		.byte	(.L61-.L51)/2
 665 0176 30       		.byte	(.L55-.L51)/2
 666 0177 00       		.p2align 1
 667              	.L50:
1732:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
 668              		.loc 1 1732 0
 669 0178 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 670              	.LVL60:
 671 017c 6368     		ldr	r3, [r4, #4]
 672 017e 00EB5300 		add	r0, r0, r3, lsr #1
 673 0182 B0FBF3F0 		udiv	r0, r0, r3
 674 0186 80B2     		uxth	r0, r0
 675 0188 E860     		str	r0, [r5, #12]
1668:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 676              		.loc 1 1668 0
 677 018a 0020     		movs	r0, #0
1733:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_PCLK2:
 678              		.loc 1 1733 0
 679 018c 38BD     		pop	{r3, r4, r5, pc}
 680              	.LVL61:
 681              	.L52:
1735:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
 682              		.loc 1 1735 0
 683 018e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
ARM GAS  /tmp/ccq2I8Qf.s 			page 52


 684              	.LVL62:
 685 0192 6368     		ldr	r3, [r4, #4]
 686 0194 00EB5300 		add	r0, r0, r3, lsr #1
 687 0198 B0FBF3F0 		udiv	r0, r0, r3
 688 019c 80B2     		uxth	r0, r0
 689 019e E860     		str	r0, [r5, #12]
1668:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 690              		.loc 1 1668 0
 691 01a0 0020     		movs	r0, #0
1736:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_HSI:
 692              		.loc 1 1736 0
 693 01a2 38BD     		pop	{r3, r4, r5, pc}
 694              	.LVL63:
 695              	.L53:
1738:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
 696              		.loc 1 1738 0
 697 01a4 6268     		ldr	r2, [r4, #4]
 698 01a6 184B     		ldr	r3, .L63+32
 699              	.LVL64:
 700 01a8 03EB5203 		add	r3, r3, r2, lsr #1
 701 01ac B3FBF2F3 		udiv	r3, r3, r2
 702 01b0 9BB2     		uxth	r3, r3
 703 01b2 EB60     		str	r3, [r5, #12]
1668:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 704              		.loc 1 1668 0
 705 01b4 0020     		movs	r0, #0
1739:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_SYSCLK:
 706              		.loc 1 1739 0
 707 01b6 38BD     		pop	{r3, r4, r5, pc}
 708              	.LVL65:
 709              	.L54:
1741:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
 710              		.loc 1 1741 0
 711 01b8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 712              	.LVL66:
 713 01bc 6368     		ldr	r3, [r4, #4]
 714 01be 00EB5300 		add	r0, r0, r3, lsr #1
 715 01c2 B0FBF3F0 		udiv	r0, r0, r3
 716 01c6 80B2     		uxth	r0, r0
 717 01c8 E860     		str	r0, [r5, #12]
1668:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 718              		.loc 1 1668 0
 719 01ca 0020     		movs	r0, #0
1742:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_LSE:
 720              		.loc 1 1742 0
 721 01cc 38BD     		pop	{r3, r4, r5, pc}
 722              	.LVL67:
 723              	.L55:
1744:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
 724              		.loc 1 1744 0
 725 01ce 6268     		ldr	r2, [r4, #4]
 726 01d0 5308     		lsrs	r3, r2, #1
 727              	.LVL68:
 728 01d2 03F50043 		add	r3, r3, #32768
 729 01d6 B3FBF2F3 		udiv	r3, r3, r2
 730 01da 9BB2     		uxth	r3, r3
 731 01dc EB60     		str	r3, [r5, #12]
ARM GAS  /tmp/ccq2I8Qf.s 			page 53


1668:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 732              		.loc 1 1668 0
 733 01de 0020     		movs	r0, #0
1745:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     case SMARTCARD_CLOCKSOURCE_UNDEFINED:
 734              		.loc 1 1745 0
 735 01e0 38BD     		pop	{r3, r4, r5, pc}
 736              	.LVL69:
 737              	.L61:
1748:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       break;
 738              		.loc 1 1748 0
 739 01e2 0120     		movs	r0, #1
 740              	.LVL70:
1753:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 741              		.loc 1 1753 0
 742 01e4 38BD     		pop	{r3, r4, r5, pc}
 743              	.LVL71:
 744              	.L64:
 745 01e6 00BF     		.align	2
 746              	.L63:
 747 01e8 F369FFEF 		.word	-268473869
 748 01ec FFC07FFF 		.word	-8404737
 749 01f0 EFF7F1FF 		.word	-919569
 750 01f4 0000FFFF 		.word	-65536
 751 01f8 00100140 		.word	1073811456
 752 01fc 00440040 		.word	1073759232
 753 0200 00480040 		.word	1073760256
 754 0204 00140140 		.word	1073812480
 755 0208 0024F400 		.word	16000000
 756              		.cfi_endproc
 757              	.LFE161:
 759              		.section	.text.SMARTCARD_WaitOnFlagUntilTimeout,"ax",%progbits
 760              		.align	2
 761              		.thumb
 762              		.thumb_func
 764              	SMARTCARD_WaitOnFlagUntilTimeout:
 765              	.LFB164:
1866:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Wait until flag is set */
 766              		.loc 1 1866 0
 767              		.cfi_startproc
 768              		@ args = 4, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL72:
 771 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 772              	.LCFI1:
 773              		.cfi_def_cfa_offset 24
 774              		.cfi_offset 4, -24
 775              		.cfi_offset 5, -20
 776              		.cfi_offset 6, -16
 777              		.cfi_offset 7, -12
 778              		.cfi_offset 8, -8
 779              		.cfi_offset 14, -4
 780 0004 0546     		mov	r5, r0
 781 0006 0F46     		mov	r7, r1
 782 0008 1646     		mov	r6, r2
 783 000a 9846     		mov	r8, r3
 784 000c 069C     		ldr	r4, [sp, #24]
1868:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
ARM GAS  /tmp/ccq2I8Qf.s 			page 54


 785              		.loc 1 1868 0
 786 000e 1EE0     		b	.L67
 787              	.LVL73:
 788              	.L70:
1871:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 789              		.loc 1 1871 0
 790 0010 B4F1FF3F 		cmp	r4, #-1
 791 0014 1BD0     		beq	.L67
1873:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 792              		.loc 1 1873 0
 793 0016 2CB1     		cbz	r4, .L68
1873:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 794              		.loc 1 1873 0 is_stmt 0 discriminator 1
 795 0018 FFF7FEFF 		bl	HAL_GetTick
 796              	.LVL74:
 797 001c C8EB0000 		rsb	r0, r8, r0
 798 0020 8442     		cmp	r4, r0
 799 0022 14D2     		bcs	.L67
 800              	.L68:
1876:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 801              		.loc 1 1876 0 is_stmt 1
 802 0024 2A68     		ldr	r2, [r5]
 803 0026 1368     		ldr	r3, [r2]
 804 0028 23F4D073 		bic	r3, r3, #416
 805 002c 1360     		str	r3, [r2]
1877:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 806              		.loc 1 1877 0
 807 002e 2A68     		ldr	r2, [r5]
 808 0030 9368     		ldr	r3, [r2, #8]
 809 0032 23F00103 		bic	r3, r3, #1
 810 0036 9360     		str	r3, [r2, #8]
1879:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 811              		.loc 1 1879 0
 812 0038 2023     		movs	r3, #32
 813 003a 85F88130 		strb	r3, [r5, #129]
1880:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 814              		.loc 1 1880 0
 815 003e 85F88230 		strb	r3, [r5, #130]
1883:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         return HAL_TIMEOUT;
 816              		.loc 1 1883 0
 817 0042 0023     		movs	r3, #0
 818 0044 85F88030 		strb	r3, [r5, #128]
1884:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 819              		.loc 1 1884 0
 820 0048 0320     		movs	r0, #3
 821 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 822              	.LVL75:
 823              	.L67:
1868:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 824              		.loc 1 1868 0
 825 004e 2B68     		ldr	r3, [r5]
 826 0050 DB69     		ldr	r3, [r3, #28]
 827 0052 37EA0303 		bics	r3, r7, r3
 828 0056 0CBF     		ite	eq
 829 0058 0123     		moveq	r3, #1
 830 005a 0023     		movne	r3, #0
 831 005c B342     		cmp	r3, r6
ARM GAS  /tmp/ccq2I8Qf.s 			page 55


 832 005e D7D0     		beq	.L70
1888:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 833              		.loc 1 1888 0
 834 0060 0020     		movs	r0, #0
1889:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 835              		.loc 1 1889 0
 836 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 837              		.cfi_endproc
 838              	.LFE164:
 840 0066 00BF     		.section	.text.SMARTCARD_CheckIdleState,"ax",%progbits
 841              		.align	2
 842              		.thumb
 843              		.thumb_func
 845              	SMARTCARD_CheckIdleState:
 846              	.LFB163:
1825:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t tickstart = 0;
 847              		.loc 1 1825 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL76:
 852 0000 10B5     		push	{r4, lr}
 853              	.LCFI2:
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 4, -8
 856              		.cfi_offset 14, -4
 857 0002 82B0     		sub	sp, sp, #8
 858              	.LCFI3:
 859              		.cfi_def_cfa_offset 16
 860 0004 0446     		mov	r4, r0
 861              	.LVL77:
1829:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 862              		.loc 1 1829 0
 863 0006 0023     		movs	r3, #0
 864 0008 C0F88430 		str	r3, [r0, #132]
1832:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 865              		.loc 1 1832 0
 866 000c FFF7FEFF 		bl	HAL_GetTick
 867              	.LVL78:
1835:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 868              		.loc 1 1835 0
 869 0010 2268     		ldr	r2, [r4]
 870 0012 1268     		ldr	r2, [r2]
 871 0014 12F0080F 		tst	r2, #8
 872 0018 0AD0     		beq	.L73
1838:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 873              		.loc 1 1838 0
 874 001a 4FF47A73 		mov	r3, #1000
 875 001e 0093     		str	r3, [sp]
 876 0020 0346     		mov	r3, r0
 877 0022 0022     		movs	r2, #0
 878 0024 4FF40011 		mov	r1, #2097152
 879 0028 2046     		mov	r0, r4
 880              	.LVL79:
 881 002a FFF7FEFF 		bl	SMARTCARD_WaitOnFlagUntilTimeout
 882              	.LVL80:
 883 002e 40B9     		cbnz	r0, .L75
ARM GAS  /tmp/ccq2I8Qf.s 			page 56


 884              	.L73:
1846:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 885              		.loc 1 1846 0
 886 0030 2023     		movs	r3, #32
 887 0032 84F88130 		strb	r3, [r4, #129]
1847:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 888              		.loc 1 1847 0
 889 0036 84F88230 		strb	r3, [r4, #130]
1850:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 890              		.loc 1 1850 0
 891 003a 0020     		movs	r0, #0
 892 003c 84F88000 		strb	r0, [r4, #128]
1852:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 893              		.loc 1 1852 0
 894 0040 00E0     		b	.L74
 895              	.L75:
1841:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 896              		.loc 1 1841 0
 897 0042 0320     		movs	r0, #3
 898              	.L74:
1853:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 899              		.loc 1 1853 0
 900 0044 02B0     		add	sp, sp, #8
 901              	.LCFI4:
 902              		.cfi_def_cfa_offset 8
 903              		@ sp needed
 904 0046 10BD     		pop	{r4, pc}
 905              		.cfi_endproc
 906              	.LFE163:
 908              		.section	.text.HAL_SMARTCARD_MspInit,"ax",%progbits
 909              		.align	2
 910              		.weak	HAL_SMARTCARD_MspInit
 911              		.thumb
 912              		.thumb_func
 914              	HAL_SMARTCARD_MspInit:
 915              	.LFB138:
 357:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 916              		.loc 1 357 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920              		@ link register save eliminated.
 921              	.LVL81:
 922 0000 7047     		bx	lr
 923              		.cfi_endproc
 924              	.LFE138:
 926 0002 00BF     		.section	.text.HAL_SMARTCARD_Init,"ax",%progbits
 927              		.align	2
 928              		.global	HAL_SMARTCARD_Init
 929              		.thumb
 930              		.thumb_func
 932              	HAL_SMARTCARD_Init:
 933              	.LFB136:
 255:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the SMARTCARD handle allocation */
 934              		.loc 1 255 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccq2I8Qf.s 			page 57


 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              	.LVL82:
 257:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 939              		.loc 1 257 0
 940 0000 0028     		cmp	r0, #0
 941 0002 39D0     		beq	.L82
 255:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the SMARTCARD handle allocation */
 942              		.loc 1 255 0
 943 0004 10B5     		push	{r4, lr}
 944              	.LCFI5:
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 4, -8
 947              		.cfi_offset 14, -4
 948 0006 0446     		mov	r4, r0
 265:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 949              		.loc 1 265 0
 950 0008 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 951 000c 13F0FF0F 		tst	r3, #255
 952 0010 04D1     		bne	.L80
 268:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 953              		.loc 1 268 0
 954 0012 0023     		movs	r3, #0
 955 0014 80F88030 		strb	r3, [r0, #128]
 271:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 956              		.loc 1 271 0
 957 0018 FFF7FEFF 		bl	HAL_SMARTCARD_MspInit
 958              	.LVL83:
 959              	.L80:
 274:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 960              		.loc 1 274 0
 961 001c 2423     		movs	r3, #36
 962 001e 84F88130 		strb	r3, [r4, #129]
 277:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 963              		.loc 1 277 0
 964 0022 2268     		ldr	r2, [r4]
 965 0024 1368     		ldr	r3, [r2]
 966 0026 23F00103 		bic	r3, r3, #1
 967 002a 1360     		str	r3, [r2]
 282:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 968              		.loc 1 282 0
 969 002c 2268     		ldr	r2, [r4]
 970 002e 5368     		ldr	r3, [r2, #4]
 971 0030 23F48043 		bic	r3, r3, #16384
 972 0034 5360     		str	r3, [r2, #4]
 283:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 973              		.loc 1 283 0
 974 0036 2268     		ldr	r2, [r4]
 975 0038 9368     		ldr	r3, [r2, #8]
 976 003a 23F00A03 		bic	r3, r3, #10
 977 003e 9360     		str	r3, [r2, #8]
 286:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 978              		.loc 1 286 0
 979 0040 2268     		ldr	r2, [r4]
 980 0042 9368     		ldr	r3, [r2, #8]
 981 0044 43F02003 		orr	r3, r3, #32
 982 0048 9360     		str	r3, [r2, #8]
 289:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
ARM GAS  /tmp/ccq2I8Qf.s 			page 58


 983              		.loc 1 289 0
 984 004a 2046     		mov	r0, r4
 985 004c FFF7FEFF 		bl	SMARTCARD_SetConfig
 986              	.LVL84:
 987 0050 0128     		cmp	r0, #1
 988 0052 13D0     		beq	.L79
 295:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 989              		.loc 1 295 0
 990 0054 40F22663 		movw	r3, #1574
 991 0058 A4F86430 		strh	r3, [r4, #100]	@ movhi
 297:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 992              		.loc 1 297 0
 993 005c 636C     		ldr	r3, [r4, #68]
 994 005e 13B1     		cbz	r3, .L81
 299:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 995              		.loc 1 299 0
 996 0060 2046     		mov	r0, r4
 997 0062 FFF7FEFF 		bl	SMARTCARD_AdvFeatureConfig
 998              	.LVL85:
 999              	.L81:
 303:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1000              		.loc 1 303 0
 1001 0066 2268     		ldr	r2, [r4]
 1002 0068 1368     		ldr	r3, [r2]
 1003 006a 43F00103 		orr	r3, r3, #1
 1004 006e 1360     		str	r3, [r2]
 306:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 1005              		.loc 1 306 0
 1006 0070 2046     		mov	r0, r4
 1007 0072 FFF7FEFF 		bl	SMARTCARD_CheckIdleState
 1008              	.LVL86:
 1009 0076 10BD     		pop	{r4, pc}
 1010              	.LVL87:
 1011              	.L82:
 1012              	.LCFI6:
 1013              		.cfi_def_cfa_offset 0
 1014              		.cfi_restore 4
 1015              		.cfi_restore 14
 259:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1016              		.loc 1 259 0
 1017 0078 0120     		movs	r0, #1
 1018              	.LVL88:
 1019 007a 7047     		bx	lr
 1020              	.LVL89:
 1021              	.L79:
 1022              	.LCFI7:
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 4, -8
 1025              		.cfi_offset 14, -4
 307:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1026              		.loc 1 307 0
 1027 007c 10BD     		pop	{r4, pc}
 1028              		.cfi_endproc
 1029              	.LFE136:
 1031 007e 00BF     		.section	.text.HAL_SMARTCARD_MspDeInit,"ax",%progbits
 1032              		.align	2
 1033              		.weak	HAL_SMARTCARD_MspDeInit
ARM GAS  /tmp/ccq2I8Qf.s 			page 59


 1034              		.thumb
 1035              		.thumb_func
 1037              	HAL_SMARTCARD_MspDeInit:
 1038              	.LFB139:
 373:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 1039              		.loc 1 373 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044              	.LVL90:
 1045 0000 7047     		bx	lr
 1046              		.cfi_endproc
 1047              	.LFE139:
 1049 0002 00BF     		.section	.text.HAL_SMARTCARD_DeInit,"ax",%progbits
 1050              		.align	2
 1051              		.global	HAL_SMARTCARD_DeInit
 1052              		.thumb
 1053              		.thumb_func
 1055              	HAL_SMARTCARD_DeInit:
 1056              	.LFB137:
 316:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the SMARTCARD handle allocation */
 1057              		.loc 1 316 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061              	.LVL91:
 318:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1062              		.loc 1 318 0
 1063 0000 00B3     		cbz	r0, .L88
 316:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check the SMARTCARD handle allocation */
 1064              		.loc 1 316 0
 1065 0002 38B5     		push	{r3, r4, r5, lr}
 1066              	.LCFI8:
 1067              		.cfi_def_cfa_offset 16
 1068              		.cfi_offset 3, -16
 1069              		.cfi_offset 4, -12
 1070              		.cfi_offset 5, -8
 1071              		.cfi_offset 14, -4
 1072 0004 0446     		mov	r4, r0
 326:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1073              		.loc 1 326 0
 1074 0006 2423     		movs	r3, #36
 1075 0008 80F88130 		strb	r3, [r0, #129]
 329:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1076              		.loc 1 329 0
 1077 000c 0268     		ldr	r2, [r0]
 1078 000e 1368     		ldr	r3, [r2]
 1079 0010 23F00103 		bic	r3, r3, #1
 1080 0014 1360     		str	r3, [r2]
 331:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->CR2, 0x0);
 1081              		.loc 1 331 0
 1082 0016 0368     		ldr	r3, [r0]
 1083 0018 0025     		movs	r5, #0
 1084 001a 1D60     		str	r5, [r3]
 332:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->CR3, 0x0);
 1085              		.loc 1 332 0
ARM GAS  /tmp/ccq2I8Qf.s 			page 60


 1086 001c 0368     		ldr	r3, [r0]
 1087 001e 5D60     		str	r5, [r3, #4]
 333:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->RTOR, 0x0);
 1088              		.loc 1 333 0
 1089 0020 0368     		ldr	r3, [r0]
 1090 0022 9D60     		str	r5, [r3, #8]
 334:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   WRITE_REG(hsmartcard->Instance->GTPR, 0x0);
 1091              		.loc 1 334 0
 1092 0024 0368     		ldr	r3, [r0]
 1093 0026 5D61     		str	r5, [r3, #20]
 335:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1094              		.loc 1 335 0
 1095 0028 0368     		ldr	r3, [r0]
 1096 002a 1D61     		str	r5, [r3, #16]
 338:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1097              		.loc 1 338 0
 1098 002c FFF7FEFF 		bl	HAL_SMARTCARD_MspDeInit
 1099              	.LVL92:
 340:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState    = HAL_SMARTCARD_STATE_RESET;
 1100              		.loc 1 340 0
 1101 0030 C4F88450 		str	r5, [r4, #132]
 341:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState   = HAL_SMARTCARD_STATE_RESET;
 1102              		.loc 1 341 0
 1103 0034 84F88150 		strb	r5, [r4, #129]
 342:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1104              		.loc 1 342 0
 1105 0038 84F88250 		strb	r5, [r4, #130]
 345:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1106              		.loc 1 345 0
 1107 003c 84F88050 		strb	r5, [r4, #128]
 347:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 1108              		.loc 1 347 0
 1109 0040 2846     		mov	r0, r5
 1110 0042 38BD     		pop	{r3, r4, r5, pc}
 1111              	.LVL93:
 1112              	.L88:
 1113              	.LCFI9:
 1114              		.cfi_def_cfa_offset 0
 1115              		.cfi_restore 3
 1116              		.cfi_restore 4
 1117              		.cfi_restore 5
 1118              		.cfi_restore 14
 320:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1119              		.loc 1 320 0
 1120 0044 0120     		movs	r0, #1
 1121              	.LVL94:
 1122 0046 7047     		bx	lr
 1123              		.cfi_endproc
 1124              	.LFE137:
 1126              		.section	.text.HAL_SMARTCARD_Transmit,"ax",%progbits
 1127              		.align	2
 1128              		.global	HAL_SMARTCARD_Transmit
 1129              		.thumb
 1130              		.thumb_func
 1132              	HAL_SMARTCARD_Transmit:
 1133              	.LFB140:
 474:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t tickstart = 0;
ARM GAS  /tmp/ccq2I8Qf.s 			page 61


 1134              		.loc 1 474 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              	.LVL95:
 1139 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1140              	.LCFI10:
 1141              		.cfi_def_cfa_offset 24
 1142              		.cfi_offset 4, -24
 1143              		.cfi_offset 5, -20
 1144              		.cfi_offset 6, -16
 1145              		.cfi_offset 7, -12
 1146              		.cfi_offset 8, -8
 1147              		.cfi_offset 14, -4
 1148 0004 82B0     		sub	sp, sp, #8
 1149              	.LCFI11:
 1150              		.cfi_def_cfa_offset 32
 1151 0006 1E46     		mov	r6, r3
 1152              	.LVL96:
 478:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1153              		.loc 1 478 0
 1154 0008 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 1155              	.LVL97:
 1156 000c DBB2     		uxtb	r3, r3
 1157 000e 202B     		cmp	r3, #32
 1158 0010 6FD1     		bne	.L96
 1159 0012 0446     		mov	r4, r0
 1160 0014 0D46     		mov	r5, r1
 1161 0016 9046     		mov	r8, r2
 480:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1162              		.loc 1 480 0
 1163 0018 002A     		cmp	r2, #0
 1164 001a 18BF     		it	ne
 1165 001c 0029     		cmpne	r1, #0
 1166 001e 6AD0     		beq	.L97
 486:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1167              		.loc 1 486 0
 1168 0020 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1169 0024 012B     		cmp	r3, #1
 1170 0026 68D0     		beq	.L98
 486:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1171              		.loc 1 486 0 is_stmt 0 discriminator 2
 1172 0028 0123     		movs	r3, #1
 1173 002a 80F88030 		strb	r3, [r0, #128]
 488:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1174              		.loc 1 488 0 is_stmt 1 discriminator 2
 1175 002e 2123     		movs	r3, #33
 1176 0030 80F88130 		strb	r3, [r0, #129]
 491:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 1177              		.loc 1 491 0 discriminator 2
 1178 0034 FFF7FEFF 		bl	HAL_GetTick
 1179              	.LVL98:
 1180 0038 0746     		mov	r7, r0
 1181              	.LVL99:
 494:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1182              		.loc 1 494 0 discriminator 2
 1183 003a 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccq2I8Qf.s 			page 62


 1184 003c 1368     		ldr	r3, [r2]
 1185 003e 23F00103 		bic	r3, r3, #1
 1186 0042 1360     		str	r3, [r2]
 497:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->RQR, SMARTCARD_RXDATA_FLUSH_REQUEST);
 1187              		.loc 1 497 0 discriminator 2
 1188 0044 2268     		ldr	r2, [r4]
 1189 0046 1368     		ldr	r3, [r2]
 1190 0048 23F00403 		bic	r3, r3, #4
 1191 004c 1360     		str	r3, [r2]
 498:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_TE);
 1192              		.loc 1 498 0 discriminator 2
 1193 004e 2268     		ldr	r2, [r4]
 1194 0050 9369     		ldr	r3, [r2, #24]
 1195 0052 43F00803 		orr	r3, r3, #8
 1196 0056 9361     		str	r3, [r2, #24]
 499:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 1197              		.loc 1 499 0 discriminator 2
 1198 0058 2268     		ldr	r2, [r4]
 1199 005a 1368     		ldr	r3, [r2]
 1200 005c 43F00803 		orr	r3, r3, #8
 1201 0060 1360     		str	r3, [r2]
 502:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1202              		.loc 1 502 0 discriminator 2
 1203 0062 2268     		ldr	r2, [r4]
 1204 0064 1368     		ldr	r3, [r2]
 1205 0066 43F00103 		orr	r3, r3, #1
 1206 006a 1360     		str	r3, [r2]
 504:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferSize = Size;
 1207              		.loc 1 504 0 discriminator 2
 1208 006c 0023     		movs	r3, #0
 1209 006e C4F88430 		str	r3, [r4, #132]
 505:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = Size;
 1210              		.loc 1 505 0 discriminator 2
 1211 0072 A4F86C80 		strh	r8, [r4, #108]	@ movhi
 506:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1212              		.loc 1 506 0 discriminator 2
 1213 0076 A4F86E80 		strh	r8, [r4, #110]	@ movhi
 508:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1214              		.loc 1 508 0 discriminator 2
 1215 007a 13E0     		b	.L93
 1216              	.LVL100:
 1217              	.L94:
 510:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(SMARTCARD_WaitOnFlagUntilTimeout(hsmartcard, SMARTCARD_FLAG_TXE, RESET, tickstart, Timeout
 1218              		.loc 1 510 0
 1219 007c B4F86E30 		ldrh	r3, [r4, #110]
 1220 0080 9BB2     		uxth	r3, r3
 1221 0082 013B     		subs	r3, r3, #1
 1222 0084 9BB2     		uxth	r3, r3
 1223 0086 A4F86E30 		strh	r3, [r4, #110]	@ movhi
 511:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 1224              		.loc 1 511 0
 1225 008a 0096     		str	r6, [sp]
 1226 008c 3B46     		mov	r3, r7
 1227 008e 0022     		movs	r2, #0
 1228 0090 8021     		movs	r1, #128
 1229 0092 2046     		mov	r0, r4
 1230 0094 FFF7FEFF 		bl	SMARTCARD_WaitOnFlagUntilTimeout
ARM GAS  /tmp/ccq2I8Qf.s 			page 63


 1231              	.LVL101:
 1232 0098 0028     		cmp	r0, #0
 1233 009a 30D1     		bne	.L99
 515:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1234              		.loc 1 515 0
 1235 009c 2368     		ldr	r3, [r4]
 1236              	.LVL102:
 1237 009e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1238 00a0 9A62     		str	r2, [r3, #40]
 1239 00a2 0135     		adds	r5, r5, #1
 1240              	.LVL103:
 1241              	.L93:
 508:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1242              		.loc 1 508 0
 1243 00a4 B4F86E30 		ldrh	r3, [r4, #110]
 1244 00a8 9BB2     		uxth	r3, r3
 1245 00aa 002B     		cmp	r3, #0
 1246 00ac E6D1     		bne	.L94
 517:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1247              		.loc 1 517 0
 1248 00ae 0096     		str	r6, [sp]
 1249 00b0 3B46     		mov	r3, r7
 1250 00b2 0022     		movs	r2, #0
 1251 00b4 4021     		movs	r1, #64
 1252 00b6 2046     		mov	r0, r4
 1253 00b8 FFF7FEFF 		bl	SMARTCARD_WaitOnFlagUntilTimeout
 1254              	.LVL104:
 1255 00bc 0346     		mov	r3, r0
 1256 00be 00BB     		cbnz	r0, .L100
 522:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1257              		.loc 1 522 0
 1258 00c0 6269     		ldr	r2, [r4, #20]
 1259 00c2 0C2A     		cmp	r2, #12
 1260 00c4 0ED1     		bne	.L95
 525:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       SET_BIT(hsmartcard->Instance->CR1, USART_CR1_RE);
 1261              		.loc 1 525 0
 1262 00c6 2168     		ldr	r1, [r4]
 1263 00c8 0A68     		ldr	r2, [r1]
 1264 00ca 22F00102 		bic	r2, r2, #1
 1265 00ce 0A60     		str	r2, [r1]
 526:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Enable the Peripheral */
 1266              		.loc 1 526 0
 1267 00d0 2168     		ldr	r1, [r4]
 1268 00d2 0A68     		ldr	r2, [r1]
 1269 00d4 42F00402 		orr	r2, r2, #4
 1270 00d8 0A60     		str	r2, [r1]
 528:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1271              		.loc 1 528 0
 1272 00da 2168     		ldr	r1, [r4]
 1273 00dc 0A68     		ldr	r2, [r1]
 1274 00de 42F00102 		orr	r2, r2, #1
 1275 00e2 0A60     		str	r2, [r1]
 1276              	.L95:
 532:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1277              		.loc 1 532 0
 1278 00e4 2022     		movs	r2, #32
 1279 00e6 84F88120 		strb	r2, [r4, #129]
ARM GAS  /tmp/ccq2I8Qf.s 			page 64


 535:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1280              		.loc 1 535 0
 1281 00ea 0022     		movs	r2, #0
 1282 00ec 84F88020 		strb	r2, [r4, #128]
 537:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1283              		.loc 1 537 0
 1284 00f0 08E0     		b	.L92
 1285              	.LVL105:
 1286              	.L96:
 541:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1287              		.loc 1 541 0
 1288 00f2 0223     		movs	r3, #2
 1289 00f4 06E0     		b	.L92
 1290              	.L97:
 482:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1291              		.loc 1 482 0
 1292 00f6 0123     		movs	r3, #1
 1293 00f8 04E0     		b	.L92
 1294              	.L98:
 486:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1295              		.loc 1 486 0
 1296 00fa 0223     		movs	r3, #2
 1297 00fc 02E0     		b	.L92
 1298              	.LVL106:
 1299              	.L99:
 513:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 1300              		.loc 1 513 0
 1301 00fe 0323     		movs	r3, #3
 1302 0100 00E0     		b	.L92
 1303              	.L100:
 519:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1304              		.loc 1 519 0
 1305 0102 0323     		movs	r3, #3
 1306              	.LVL107:
 1307              	.L92:
 543:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1308              		.loc 1 543 0
 1309 0104 1846     		mov	r0, r3
 1310 0106 02B0     		add	sp, sp, #8
 1311              	.LCFI12:
 1312              		.cfi_def_cfa_offset 24
 1313              		@ sp needed
 1314 0108 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1315              		.cfi_endproc
 1316              	.LFE140:
 1318              		.section	.text.HAL_SMARTCARD_Receive,"ax",%progbits
 1319              		.align	2
 1320              		.global	HAL_SMARTCARD_Receive
 1321              		.thumb
 1322              		.thumb_func
 1324              	HAL_SMARTCARD_Receive:
 1325              	.LFB141:
 555:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t tickstart = 0;
 1326              		.loc 1 555 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccq2I8Qf.s 			page 65


 1330              	.LVL108:
 1331 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1332              	.LCFI13:
 1333              		.cfi_def_cfa_offset 24
 1334              		.cfi_offset 4, -24
 1335              		.cfi_offset 5, -20
 1336              		.cfi_offset 6, -16
 1337              		.cfi_offset 7, -12
 1338              		.cfi_offset 8, -8
 1339              		.cfi_offset 14, -4
 1340 0004 82B0     		sub	sp, sp, #8
 1341              	.LCFI14:
 1342              		.cfi_def_cfa_offset 32
 1343 0006 1E46     		mov	r6, r3
 1344              	.LVL109:
 559:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1345              		.loc 1 559 0
 1346 0008 90F88230 		ldrb	r3, [r0, #130]	@ zero_extendqisi2
 1347              	.LVL110:
 1348 000c DBB2     		uxtb	r3, r3
 1349 000e 202B     		cmp	r3, #32
 1350 0010 3AD1     		bne	.L106
 1351 0012 0446     		mov	r4, r0
 1352 0014 0D46     		mov	r5, r1
 1353 0016 9046     		mov	r8, r2
 561:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1354              		.loc 1 561 0
 1355 0018 002A     		cmp	r2, #0
 1356 001a 18BF     		it	ne
 1357 001c 0029     		cmpne	r1, #0
 1358 001e 35D0     		beq	.L107
 567:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1359              		.loc 1 567 0
 1360 0020 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1361 0024 012B     		cmp	r3, #1
 1362 0026 33D0     		beq	.L108
 567:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1363              		.loc 1 567 0 is_stmt 0 discriminator 2
 1364 0028 0123     		movs	r3, #1
 1365 002a 80F88030 		strb	r3, [r0, #128]
 569:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState   = HAL_SMARTCARD_STATE_BUSY_RX;
 1366              		.loc 1 569 0 is_stmt 1 discriminator 2
 1367 002e 0023     		movs	r3, #0
 1368 0030 C0F88430 		str	r3, [r0, #132]
 570:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1369              		.loc 1 570 0 discriminator 2
 1370 0034 2223     		movs	r3, #34
 1371 0036 80F88230 		strb	r3, [r0, #130]
 573:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1372              		.loc 1 573 0 discriminator 2
 1373 003a FFF7FEFF 		bl	HAL_GetTick
 1374              	.LVL111:
 1375 003e 0746     		mov	r7, r0
 1376              	.LVL112:
 575:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferCount = Size;
 1377              		.loc 1 575 0 discriminator 2
 1378 0040 A4F87480 		strh	r8, [r4, #116]	@ movhi
ARM GAS  /tmp/ccq2I8Qf.s 			page 66


 576:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1379              		.loc 1 576 0 discriminator 2
 1380 0044 A4F87680 		strh	r8, [r4, #118]	@ movhi
 579:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1381              		.loc 1 579 0 discriminator 2
 1382 0048 12E0     		b	.L104
 1383              	.LVL113:
 1384              	.L105:
 581:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1385              		.loc 1 581 0
 1386 004a B4F87630 		ldrh	r3, [r4, #118]
 1387 004e 9BB2     		uxth	r3, r3
 1388 0050 013B     		subs	r3, r3, #1
 1389 0052 9BB2     		uxth	r3, r3
 1390 0054 A4F87630 		strh	r3, [r4, #118]	@ movhi
 583:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 1391              		.loc 1 583 0
 1392 0058 0096     		str	r6, [sp]
 1393 005a 3B46     		mov	r3, r7
 1394 005c 0022     		movs	r2, #0
 1395 005e 2021     		movs	r1, #32
 1396 0060 2046     		mov	r0, r4
 1397 0062 FFF7FEFF 		bl	SMARTCARD_WaitOnFlagUntilTimeout
 1398              	.LVL114:
 1399 0066 A8B9     		cbnz	r0, .L109
 1400              	.LVL115:
 587:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1401              		.loc 1 587 0
 1402 0068 2368     		ldr	r3, [r4]
 1403 006a 5B6A     		ldr	r3, [r3, #36]
 1404 006c 2B70     		strb	r3, [r5]
 1405 006e 0135     		adds	r5, r5, #1
 1406              	.LVL116:
 1407              	.L104:
 579:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1408              		.loc 1 579 0
 1409 0070 B4F87630 		ldrh	r3, [r4, #118]
 1410 0074 9BB2     		uxth	r3, r3
 1411 0076 002B     		cmp	r3, #0
 1412 0078 E7D1     		bne	.L105
 591:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1413              		.loc 1 591 0
 1414 007a 2023     		movs	r3, #32
 1415 007c 84F88230 		strb	r3, [r4, #130]
 594:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1416              		.loc 1 594 0
 1417 0080 0020     		movs	r0, #0
 1418 0082 84F88000 		strb	r0, [r4, #128]
 596:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1419              		.loc 1 596 0
 1420 0086 06E0     		b	.L103
 1421              	.LVL117:
 1422              	.L106:
 600:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1423              		.loc 1 600 0
 1424 0088 0220     		movs	r0, #2
 1425              	.LVL118:
ARM GAS  /tmp/ccq2I8Qf.s 			page 67


 1426 008a 04E0     		b	.L103
 1427              	.LVL119:
 1428              	.L107:
 563:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1429              		.loc 1 563 0
 1430 008c 0120     		movs	r0, #1
 1431              	.LVL120:
 1432 008e 02E0     		b	.L103
 1433              	.LVL121:
 1434              	.L108:
 567:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1435              		.loc 1 567 0
 1436 0090 0220     		movs	r0, #2
 1437              	.LVL122:
 1438 0092 00E0     		b	.L103
 1439              	.LVL123:
 1440              	.L109:
 585:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 1441              		.loc 1 585 0
 1442 0094 0320     		movs	r0, #3
 1443              	.LVL124:
 1444              	.L103:
 602:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1445              		.loc 1 602 0
 1446 0096 02B0     		add	sp, sp, #8
 1447              	.LCFI15:
 1448              		.cfi_def_cfa_offset 24
 1449              		@ sp needed
 1450 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1451              		.cfi_endproc
 1452              	.LFE141:
 1454              		.section	.text.HAL_SMARTCARD_Transmit_IT,"ax",%progbits
 1455              		.align	2
 1456              		.global	HAL_SMARTCARD_Transmit_IT
 1457              		.thumb
 1458              		.thumb_func
 1460              	HAL_SMARTCARD_Transmit_IT:
 1461              	.LFB142:
 613:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Tx process is not already ongoing */
 1462              		.loc 1 613 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              		@ link register save eliminated.
 1467              	.LVL125:
 615:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1468              		.loc 1 615 0
 1469 0000 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 1470 0004 DBB2     		uxtb	r3, r3
 1471 0006 202B     		cmp	r3, #32
 1472 0008 3DD1     		bne	.L113
 617:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1473              		.loc 1 617 0
 1474 000a 002A     		cmp	r2, #0
 1475 000c 18BF     		it	ne
 1476 000e 0029     		cmpne	r1, #0
 1477 0010 3BD0     		beq	.L114
ARM GAS  /tmp/ccq2I8Qf.s 			page 68


 623:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1478              		.loc 1 623 0
 1479 0012 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1480 0016 012B     		cmp	r3, #1
 1481 0018 39D0     		beq	.L115
 613:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Tx process is not already ongoing */
 1482              		.loc 1 613 0 discriminator 2
 1483 001a 10B4     		push	{r4}
 1484              	.LCFI16:
 1485              		.cfi_def_cfa_offset 4
 1486              		.cfi_offset 4, -4
 623:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1487              		.loc 1 623 0 discriminator 2
 1488 001c 0123     		movs	r3, #1
 1489 001e 80F88030 		strb	r3, [r0, #128]
 625:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->gState = HAL_SMARTCARD_STATE_BUSY_TX;
 1490              		.loc 1 625 0 discriminator 2
 1491 0022 0023     		movs	r3, #0
 1492 0024 C0F88430 		str	r3, [r0, #132]
 626:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1493              		.loc 1 626 0 discriminator 2
 1494 0028 2124     		movs	r4, #33
 1495 002a 80F88140 		strb	r4, [r0, #129]
 628:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferSize = Size;
 1496              		.loc 1 628 0 discriminator 2
 1497 002e 8166     		str	r1, [r0, #104]
 629:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = Size;
 1498              		.loc 1 629 0 discriminator 2
 1499 0030 A0F86C20 		strh	r2, [r0, #108]	@ movhi
 630:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1500              		.loc 1 630 0 discriminator 2
 1501 0034 A0F86E20 		strh	r2, [r0, #110]	@ movhi
 633:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1502              		.loc 1 633 0 discriminator 2
 1503 0038 0168     		ldr	r1, [r0]
 1504              	.LVL126:
 1505 003a 0A68     		ldr	r2, [r1]
 1506              	.LVL127:
 1507 003c 22F00102 		bic	r2, r2, #1
 1508 0040 0A60     		str	r2, [r1]
 1509              	.LVL128:
 636:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->RQR, SMARTCARD_RXDATA_FLUSH_REQUEST);
 1510              		.loc 1 636 0 discriminator 2
 1511 0042 0168     		ldr	r1, [r0]
 1512 0044 0A68     		ldr	r2, [r1]
 1513 0046 22F00402 		bic	r2, r2, #4
 1514 004a 0A60     		str	r2, [r1]
 637:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_TE);
 1515              		.loc 1 637 0 discriminator 2
 1516 004c 0168     		ldr	r1, [r0]
 1517 004e 8A69     		ldr	r2, [r1, #24]
 1518 0050 42F00802 		orr	r2, r2, #8
 1519 0054 8A61     		str	r2, [r1, #24]
 638:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 1520              		.loc 1 638 0 discriminator 2
 1521 0056 0168     		ldr	r1, [r0]
 1522 0058 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccq2I8Qf.s 			page 69


 1523 005a 42F00802 		orr	r2, r2, #8
 1524 005e 0A60     		str	r2, [r1]
 641:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1525              		.loc 1 641 0 discriminator 2
 1526 0060 0168     		ldr	r1, [r0]
 1527 0062 0A68     		ldr	r2, [r1]
 1528 0064 42F00102 		orr	r2, r2, #1
 1529 0068 0A60     		str	r2, [r1]
 644:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1530              		.loc 1 644 0 discriminator 2
 1531 006a 80F88030 		strb	r3, [r0, #128]
 647:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1532              		.loc 1 647 0 discriminator 2
 1533 006e 0168     		ldr	r1, [r0]
 1534 0070 8A68     		ldr	r2, [r1, #8]
 1535 0072 42F00102 		orr	r2, r2, #1
 1536 0076 8A60     		str	r2, [r1, #8]
 650:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1537              		.loc 1 650 0 discriminator 2
 1538 0078 0168     		ldr	r1, [r0]
 1539 007a 0A68     		ldr	r2, [r1]
 1540 007c 42F08002 		orr	r2, r2, #128
 1541 0080 0A60     		str	r2, [r1]
 652:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1542              		.loc 1 652 0 discriminator 2
 1543 0082 1846     		mov	r0, r3
 1544              	.LVL129:
 1545 0084 05E0     		b	.L112
 1546              	.LVL130:
 1547              	.L113:
 1548              	.LCFI17:
 1549              		.cfi_def_cfa_offset 0
 1550              		.cfi_restore 4
 656:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1551              		.loc 1 656 0
 1552 0086 0220     		movs	r0, #2
 1553              	.LVL131:
 1554 0088 7047     		bx	lr
 1555              	.LVL132:
 1556              	.L114:
 619:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1557              		.loc 1 619 0
 1558 008a 0120     		movs	r0, #1
 1559              	.LVL133:
 1560 008c 7047     		bx	lr
 1561              	.LVL134:
 1562              	.L115:
 623:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1563              		.loc 1 623 0
 1564 008e 0220     		movs	r0, #2
 1565              	.LVL135:
 1566 0090 7047     		bx	lr
 1567              	.LVL136:
 1568              	.L112:
 1569              	.LCFI18:
 1570              		.cfi_def_cfa_offset 4
 1571              		.cfi_offset 4, -4
ARM GAS  /tmp/ccq2I8Qf.s 			page 70


 658:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1572              		.loc 1 658 0
 1573 0092 5DF8044B 		ldr	r4, [sp], #4
 1574              	.LCFI19:
 1575              		.cfi_restore 4
 1576              		.cfi_def_cfa_offset 0
 1577 0096 7047     		bx	lr
 1578              		.cfi_endproc
 1579              	.LFE142:
 1581              		.section	.text.HAL_SMARTCARD_Receive_IT,"ax",%progbits
 1582              		.align	2
 1583              		.global	HAL_SMARTCARD_Receive_IT
 1584              		.thumb
 1585              		.thumb_func
 1587              	HAL_SMARTCARD_Receive_IT:
 1588              	.LFB143:
 669:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Rx process is not already ongoing */
 1589              		.loc 1 669 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              		@ link register save eliminated.
 1594              	.LVL137:
 671:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1595              		.loc 1 671 0
 1596 0000 90F88230 		ldrb	r3, [r0, #130]	@ zero_extendqisi2
 1597 0004 DBB2     		uxtb	r3, r3
 1598 0006 202B     		cmp	r3, #32
 1599 0008 21D1     		bne	.L120
 673:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1600              		.loc 1 673 0
 1601 000a 002A     		cmp	r2, #0
 1602 000c 18BF     		it	ne
 1603 000e 0029     		cmpne	r1, #0
 1604 0010 1FD0     		beq	.L121
 679:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1605              		.loc 1 679 0
 1606 0012 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1607 0016 012B     		cmp	r3, #1
 1608 0018 1DD0     		beq	.L122
 669:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Rx process is not already ongoing */
 1609              		.loc 1 669 0 discriminator 2
 1610 001a 10B4     		push	{r4}
 1611              	.LCFI20:
 1612              		.cfi_def_cfa_offset 4
 1613              		.cfi_offset 4, -4
 681:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState   = HAL_SMARTCARD_STATE_BUSY_RX;
 1614              		.loc 1 681 0 discriminator 2
 1615 001c 0023     		movs	r3, #0
 1616 001e C0F88430 		str	r3, [r0, #132]
 682:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1617              		.loc 1 682 0 discriminator 2
 1618 0022 2224     		movs	r4, #34
 1619 0024 80F88240 		strb	r4, [r0, #130]
 684:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferSize = Size;
 1620              		.loc 1 684 0 discriminator 2
 1621 0028 0167     		str	r1, [r0, #112]
ARM GAS  /tmp/ccq2I8Qf.s 			page 71


 685:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferCount = Size;
 1622              		.loc 1 685 0 discriminator 2
 1623 002a A0F87420 		strh	r2, [r0, #116]	@ movhi
 686:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1624              		.loc 1 686 0 discriminator 2
 1625 002e A0F87620 		strh	r2, [r0, #118]	@ movhi
 689:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1626              		.loc 1 689 0 discriminator 2
 1627 0032 80F88030 		strb	r3, [r0, #128]
 692:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1628              		.loc 1 692 0 discriminator 2
 1629 0036 0168     		ldr	r1, [r0]
 1630              	.LVL138:
 1631 0038 0A68     		ldr	r2, [r1]
 1632              	.LVL139:
 1633 003a 42F49072 		orr	r2, r2, #288
 1634 003e 0A60     		str	r2, [r1]
 1635              	.LVL140:
 695:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1636              		.loc 1 695 0 discriminator 2
 1637 0040 0168     		ldr	r1, [r0]
 1638 0042 8A68     		ldr	r2, [r1, #8]
 1639 0044 42F00102 		orr	r2, r2, #1
 1640 0048 8A60     		str	r2, [r1, #8]
 697:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1641              		.loc 1 697 0 discriminator 2
 1642 004a 1846     		mov	r0, r3
 1643              	.LVL141:
 1644 004c 05E0     		b	.L119
 1645              	.LVL142:
 1646              	.L120:
 1647              	.LCFI21:
 1648              		.cfi_def_cfa_offset 0
 1649              		.cfi_restore 4
 701:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1650              		.loc 1 701 0
 1651 004e 0220     		movs	r0, #2
 1652              	.LVL143:
 1653 0050 7047     		bx	lr
 1654              	.LVL144:
 1655              	.L121:
 675:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1656              		.loc 1 675 0
 1657 0052 0120     		movs	r0, #1
 1658              	.LVL145:
 1659 0054 7047     		bx	lr
 1660              	.LVL146:
 1661              	.L122:
 679:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1662              		.loc 1 679 0
 1663 0056 0220     		movs	r0, #2
 1664              	.LVL147:
 1665 0058 7047     		bx	lr
 1666              	.LVL148:
 1667              	.L119:
 1668              	.LCFI22:
 1669              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccq2I8Qf.s 			page 72


 1670              		.cfi_offset 4, -4
 703:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1671              		.loc 1 703 0
 1672 005a 5DF8044B 		ldr	r4, [sp], #4
 1673              	.LCFI23:
 1674              		.cfi_restore 4
 1675              		.cfi_def_cfa_offset 0
 1676 005e 7047     		bx	lr
 1677              		.cfi_endproc
 1678              	.LFE143:
 1680              		.section	.text.HAL_SMARTCARD_Transmit_DMA,"ax",%progbits
 1681              		.align	2
 1682              		.global	HAL_SMARTCARD_Transmit_DMA
 1683              		.thumb
 1684              		.thumb_func
 1686              	HAL_SMARTCARD_Transmit_DMA:
 1687              	.LFB144:
 714:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Tx process is not already ongoing */
 1688              		.loc 1 714 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 1692              	.LVL149:
 1693 0000 38B5     		push	{r3, r4, r5, lr}
 1694              	.LCFI24:
 1695              		.cfi_def_cfa_offset 16
 1696              		.cfi_offset 3, -16
 1697              		.cfi_offset 4, -12
 1698              		.cfi_offset 5, -8
 1699              		.cfi_offset 14, -4
 716:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1700              		.loc 1 716 0
 1701 0002 90F88140 		ldrb	r4, [r0, #129]	@ zero_extendqisi2
 1702 0006 E4B2     		uxtb	r4, r4
 1703 0008 202C     		cmp	r4, #32
 1704 000a 51D1     		bne	.L127
 718:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1705              		.loc 1 718 0
 1706 000c 002A     		cmp	r2, #0
 1707 000e 18BF     		it	ne
 1708 0010 0029     		cmpne	r1, #0
 1709 0012 4FD0     		beq	.L128
 724:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1710              		.loc 1 724 0
 1711 0014 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1712 0018 012B     		cmp	r3, #1
 1713 001a 4DD0     		beq	.L129
 1714 001c 1346     		mov	r3, r2
 1715 001e 0446     		mov	r4, r0
 724:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1716              		.loc 1 724 0 is_stmt 0 discriminator 2
 1717 0020 0122     		movs	r2, #1
 1718              	.LVL150:
 1719 0022 80F88020 		strb	r2, [r0, #128]
 726:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1720              		.loc 1 726 0 is_stmt 1 discriminator 2
 1721 0026 2122     		movs	r2, #33
ARM GAS  /tmp/ccq2I8Qf.s 			page 73


 1722 0028 80F88120 		strb	r2, [r0, #129]
 728:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->pTxBuffPtr = pData;
 1723              		.loc 1 728 0 discriminator 2
 1724 002c 0025     		movs	r5, #0
 1725 002e C0F88450 		str	r5, [r0, #132]
 729:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferSize = Size;
 1726              		.loc 1 729 0 discriminator 2
 1727 0032 8166     		str	r1, [r0, #104]
 730:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->TxXferCount = Size;
 1728              		.loc 1 730 0 discriminator 2
 1729 0034 A0F86C30 		strh	r3, [r0, #108]	@ movhi
 731:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1730              		.loc 1 731 0 discriminator 2
 1731 0038 A0F86E30 		strh	r3, [r0, #110]	@ movhi
 734:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1732              		.loc 1 734 0 discriminator 2
 1733 003c 0168     		ldr	r1, [r0]
 1734              	.LVL151:
 1735 003e 0A68     		ldr	r2, [r1]
 1736 0040 22F00102 		bic	r2, r2, #1
 1737 0044 0A60     		str	r2, [r1]
 1738              	.LVL152:
 737:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->RQR, SMARTCARD_RXDATA_FLUSH_REQUEST);
 1739              		.loc 1 737 0 discriminator 2
 1740 0046 0168     		ldr	r1, [r0]
 1741 0048 0A68     		ldr	r2, [r1]
 1742 004a 22F00402 		bic	r2, r2, #4
 1743 004e 0A60     		str	r2, [r1]
 738:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_TE);
 1744              		.loc 1 738 0 discriminator 2
 1745 0050 0168     		ldr	r1, [r0]
 1746 0052 8A69     		ldr	r2, [r1, #24]
 1747 0054 42F00802 		orr	r2, r2, #8
 1748 0058 8A61     		str	r2, [r1, #24]
 739:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     
 1749              		.loc 1 739 0 discriminator 2
 1750 005a 0168     		ldr	r1, [r0]
 1751 005c 0A68     		ldr	r2, [r1]
 1752 005e 42F00802 		orr	r2, r2, #8
 1753 0062 0A60     		str	r2, [r1]
 742:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1754              		.loc 1 742 0 discriminator 2
 1755 0064 0168     		ldr	r1, [r0]
 1756 0066 0A68     		ldr	r2, [r1]
 1757 0068 42F00102 		orr	r2, r2, #1
 1758 006c 0A60     		str	r2, [r1]
 745:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1759              		.loc 1 745 0 discriminator 2
 1760 006e 826F     		ldr	r2, [r0, #120]
 1761 0070 1249     		ldr	r1, .L131
 1762 0072 D163     		str	r1, [r2, #60]
 748:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1763              		.loc 1 748 0 discriminator 2
 1764 0074 826F     		ldr	r2, [r0, #120]
 1765 0076 1249     		ldr	r1, .L131+4
 1766 0078 D164     		str	r1, [r2, #76]
 751:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 74


 1767              		.loc 1 751 0 discriminator 2
 1768 007a 826F     		ldr	r2, [r0, #120]
 1769 007c 1565     		str	r5, [r2, #80]
 754:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1770              		.loc 1 754 0 discriminator 2
 1771 007e 0268     		ldr	r2, [r0]
 1772 0080 2832     		adds	r2, r2, #40
 1773 0082 816E     		ldr	r1, [r0, #104]
 1774 0084 806F     		ldr	r0, [r0, #120]
 1775              	.LVL153:
 1776 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1777              	.LVL154:
 757:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1778              		.loc 1 757 0 discriminator 2
 1779 008a 2268     		ldr	r2, [r4]
 1780 008c 136A     		ldr	r3, [r2, #32]
 1781 008e 23F04003 		bic	r3, r3, #64
 1782 0092 1362     		str	r3, [r2, #32]
 760:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1783              		.loc 1 760 0 discriminator 2
 1784 0094 84F88050 		strb	r5, [r4, #128]
 763:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1785              		.loc 1 763 0 discriminator 2
 1786 0098 2268     		ldr	r2, [r4]
 1787 009a 9368     		ldr	r3, [r2, #8]
 1788 009c 43F00103 		orr	r3, r3, #1
 1789 00a0 9360     		str	r3, [r2, #8]
 767:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1790              		.loc 1 767 0 discriminator 2
 1791 00a2 2268     		ldr	r2, [r4]
 1792 00a4 9368     		ldr	r3, [r2, #8]
 1793 00a6 43F08003 		orr	r3, r3, #128
 1794 00aa 9360     		str	r3, [r2, #8]
 769:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1795              		.loc 1 769 0 discriminator 2
 1796 00ac 2846     		mov	r0, r5
 1797 00ae 38BD     		pop	{r3, r4, r5, pc}
 1798              	.LVL155:
 1799              	.L127:
 773:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1800              		.loc 1 773 0
 1801 00b0 0220     		movs	r0, #2
 1802              	.LVL156:
 1803 00b2 38BD     		pop	{r3, r4, r5, pc}
 1804              	.LVL157:
 1805              	.L128:
 720:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1806              		.loc 1 720 0
 1807 00b4 0120     		movs	r0, #1
 1808              	.LVL158:
 1809 00b6 38BD     		pop	{r3, r4, r5, pc}
 1810              	.LVL159:
 1811              	.L129:
 724:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1812              		.loc 1 724 0
 1813 00b8 0220     		movs	r0, #2
 1814              	.LVL160:
ARM GAS  /tmp/ccq2I8Qf.s 			page 75


 775:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1815              		.loc 1 775 0
 1816 00ba 38BD     		pop	{r3, r4, r5, pc}
 1817              	.L132:
 1818              		.align	2
 1819              	.L131:
 1820 00bc 00000000 		.word	SMARTCARD_DMATransmitCplt
 1821 00c0 00000000 		.word	SMARTCARD_DMAError
 1822              		.cfi_endproc
 1823              	.LFE144:
 1825              		.section	.text.HAL_SMARTCARD_Receive_DMA,"ax",%progbits
 1826              		.align	2
 1827              		.global	HAL_SMARTCARD_Receive_DMA
 1828              		.thumb
 1829              		.thumb_func
 1831              	HAL_SMARTCARD_Receive_DMA:
 1832              	.LFB145:
 788:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Rx process is not already ongoing */
 1833              		.loc 1 788 0
 1834              		.cfi_startproc
 1835              		@ args = 0, pretend = 0, frame = 0
 1836              		@ frame_needed = 0, uses_anonymous_args = 0
 1837              	.LVL161:
 1838 0000 38B5     		push	{r3, r4, r5, lr}
 1839              	.LCFI25:
 1840              		.cfi_def_cfa_offset 16
 1841              		.cfi_offset 3, -16
 1842              		.cfi_offset 4, -12
 1843              		.cfi_offset 5, -8
 1844              		.cfi_offset 14, -4
 790:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1845              		.loc 1 790 0
 1846 0002 90F88240 		ldrb	r4, [r0, #130]	@ zero_extendqisi2
 1847 0006 E4B2     		uxtb	r4, r4
 1848 0008 202C     		cmp	r4, #32
 1849 000a 36D1     		bne	.L135
 792:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1850              		.loc 1 792 0
 1851 000c 002A     		cmp	r2, #0
 1852 000e 18BF     		it	ne
 1853 0010 0029     		cmpne	r1, #0
 1854 0012 34D0     		beq	.L136
 798:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1855              		.loc 1 798 0
 1856 0014 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1857 0018 012B     		cmp	r3, #1
 1858 001a 32D0     		beq	.L137
 1859 001c 1346     		mov	r3, r2
 1860 001e 0446     		mov	r4, r0
 798:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1861              		.loc 1 798 0 is_stmt 0 discriminator 2
 1862 0020 0122     		movs	r2, #1
 1863              	.LVL162:
 1864 0022 80F88020 		strb	r2, [r0, #128]
 800:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState   = HAL_SMARTCARD_STATE_BUSY_RX;
 1865              		.loc 1 800 0 is_stmt 1 discriminator 2
 1866 0026 0025     		movs	r5, #0
ARM GAS  /tmp/ccq2I8Qf.s 			page 76


 1867 0028 C0F88450 		str	r5, [r0, #132]
 801:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1868              		.loc 1 801 0 discriminator 2
 1869 002c 2222     		movs	r2, #34
 1870 002e 80F88220 		strb	r2, [r0, #130]
 803:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferSize = Size;
 1871              		.loc 1 803 0 discriminator 2
 1872 0032 0167     		str	r1, [r0, #112]
 804:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1873              		.loc 1 804 0 discriminator 2
 1874 0034 A0F87430 		strh	r3, [r0, #116]	@ movhi
 807:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1875              		.loc 1 807 0 discriminator 2
 1876 0038 C26F     		ldr	r2, [r0, #124]
 1877 003a 1349     		ldr	r1, .L139
 1878              	.LVL163:
 1879 003c D163     		str	r1, [r2, #60]
 1880              	.LVL164:
 810:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1881              		.loc 1 810 0 discriminator 2
 1882 003e C26F     		ldr	r2, [r0, #124]
 1883 0040 1249     		ldr	r1, .L139+4
 1884 0042 D164     		str	r1, [r2, #76]
 813:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1885              		.loc 1 813 0 discriminator 2
 1886 0044 C26F     		ldr	r2, [r0, #124]
 1887 0046 1565     		str	r5, [r2, #80]
 816:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1888              		.loc 1 816 0 discriminator 2
 1889 0048 0168     		ldr	r1, [r0]
 1890 004a 026F     		ldr	r2, [r0, #112]
 1891 004c 2431     		adds	r1, r1, #36
 1892 004e C06F     		ldr	r0, [r0, #124]
 1893              	.LVL165:
 1894 0050 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1895              	.LVL166:
 819:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1896              		.loc 1 819 0 discriminator 2
 1897 0054 84F88050 		strb	r5, [r4, #128]
 822:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1898              		.loc 1 822 0 discriminator 2
 1899 0058 2268     		ldr	r2, [r4]
 1900 005a 1368     		ldr	r3, [r2]
 1901 005c 43F48073 		orr	r3, r3, #256
 1902 0060 1360     		str	r3, [r2]
 825:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1903              		.loc 1 825 0 discriminator 2
 1904 0062 2268     		ldr	r2, [r4]
 1905 0064 9368     		ldr	r3, [r2, #8]
 1906 0066 43F00103 		orr	r3, r3, #1
 1907 006a 9360     		str	r3, [r2, #8]
 829:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1908              		.loc 1 829 0 discriminator 2
 1909 006c 2268     		ldr	r2, [r4]
 1910 006e 9368     		ldr	r3, [r2, #8]
 1911 0070 43F04003 		orr	r3, r3, #64
 1912 0074 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccq2I8Qf.s 			page 77


 831:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1913              		.loc 1 831 0 discriminator 2
 1914 0076 2846     		mov	r0, r5
 1915 0078 38BD     		pop	{r3, r4, r5, pc}
 1916              	.LVL167:
 1917              	.L135:
 835:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 1918              		.loc 1 835 0
 1919 007a 0220     		movs	r0, #2
 1920              	.LVL168:
 1921 007c 38BD     		pop	{r3, r4, r5, pc}
 1922              	.LVL169:
 1923              	.L136:
 794:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1924              		.loc 1 794 0
 1925 007e 0120     		movs	r0, #1
 1926              	.LVL170:
 1927 0080 38BD     		pop	{r3, r4, r5, pc}
 1928              	.LVL171:
 1929              	.L137:
 798:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1930              		.loc 1 798 0
 1931 0082 0220     		movs	r0, #2
 1932              	.LVL172:
 837:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1933              		.loc 1 837 0
 1934 0084 38BD     		pop	{r3, r4, r5, pc}
 1935              	.L140:
 1936 0086 00BF     		.align	2
 1937              	.L139:
 1938 0088 00000000 		.word	SMARTCARD_DMAReceiveCplt
 1939 008c 00000000 		.word	SMARTCARD_DMAError
 1940              		.cfi_endproc
 1941              	.LFE145:
 1943              		.section	.text.HAL_SMARTCARD_Abort,"ax",%progbits
 1944              		.align	2
 1945              		.global	HAL_SMARTCARD_Abort
 1946              		.thumb
 1947              		.thumb_func
 1949              	HAL_SMARTCARD_Abort:
 1950              	.LFB146:
 853:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RTOIE, EOBIE, TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) 
 1951              		.loc 1 853 0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955              	.LVL173:
 1956 0000 10B5     		push	{r4, lr}
 1957              	.LCFI26:
 1958              		.cfi_def_cfa_offset 8
 1959              		.cfi_offset 4, -8
 1960              		.cfi_offset 14, -4
 1961 0002 0446     		mov	r4, r0
 855:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 1962              		.loc 1 855 0
 1963 0004 0268     		ldr	r2, [r0]
 1964 0006 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccq2I8Qf.s 			page 78


 1965 0008 1C4B     		ldr	r3, .L145
 1966 000a 0B40     		ands	r3, r3, r1
 1967 000c 1360     		str	r3, [r2]
 856:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1968              		.loc 1 856 0
 1969 000e 0268     		ldr	r2, [r0]
 1970 0010 9368     		ldr	r3, [r2, #8]
 1971 0012 23F00103 		bic	r3, r3, #1
 1972 0016 9360     		str	r3, [r2, #8]
 859:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1973              		.loc 1 859 0
 1974 0018 0368     		ldr	r3, [r0]
 1975 001a 9A68     		ldr	r2, [r3, #8]
 1976 001c 12F0800F 		tst	r2, #128
 1977 0020 0AD0     		beq	.L142
 861:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1978              		.loc 1 861 0
 1979 0022 9A68     		ldr	r2, [r3, #8]
 1980 0024 22F08002 		bic	r2, r2, #128
 1981 0028 9A60     		str	r2, [r3, #8]
 864:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 1982              		.loc 1 864 0
 1983 002a 836F     		ldr	r3, [r0, #120]
 1984 002c 23B1     		cbz	r3, .L142
 868:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1985              		.loc 1 868 0
 1986 002e 0022     		movs	r2, #0
 1987 0030 1A65     		str	r2, [r3, #80]
 870:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 1988              		.loc 1 870 0
 1989 0032 806F     		ldr	r0, [r0, #120]
 1990              	.LVL174:
 1991 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1992              	.LVL175:
 1993              	.L142:
 875:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 1994              		.loc 1 875 0
 1995 0038 2368     		ldr	r3, [r4]
 1996 003a 9A68     		ldr	r2, [r3, #8]
 1997 003c 12F0400F 		tst	r2, #64
 1998 0040 0AD0     		beq	.L143
 877:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 1999              		.loc 1 877 0
 2000 0042 9A68     		ldr	r2, [r3, #8]
 2001 0044 22F04002 		bic	r2, r2, #64
 2002 0048 9A60     		str	r2, [r3, #8]
 880:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2003              		.loc 1 880 0
 2004 004a E36F     		ldr	r3, [r4, #124]
 2005 004c 23B1     		cbz	r3, .L143
 884:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2006              		.loc 1 884 0
 2007 004e 0022     		movs	r2, #0
 2008 0050 1A65     		str	r2, [r3, #80]
 886:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2009              		.loc 1 886 0
 2010 0052 E06F     		ldr	r0, [r4, #124]
ARM GAS  /tmp/ccq2I8Qf.s 			page 79


 2011 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2012              	.LVL176:
 2013              	.L143:
 891:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0; 
 2014              		.loc 1 891 0
 2015 0058 0020     		movs	r0, #0
 2016 005a A4F86E00 		strh	r0, [r4, #110]	@ movhi
 892:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2017              		.loc 1 892 0
 2018 005e A4F87600 		strh	r0, [r4, #118]	@ movhi
 895:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2019              		.loc 1 895 0
 2020 0062 2368     		ldr	r3, [r4]
 2021 0064 41F60F02 		movw	r2, #6159
 2022 0068 1A62     		str	r2, [r3, #32]
 898:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 2023              		.loc 1 898 0
 2024 006a 2023     		movs	r3, #32
 2025 006c 84F88130 		strb	r3, [r4, #129]
 899:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2026              		.loc 1 899 0
 2027 0070 84F88230 		strb	r3, [r4, #130]
 902:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2028              		.loc 1 902 0
 2029 0074 C4F88400 		str	r0, [r4, #132]
 905:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2030              		.loc 1 905 0
 2031 0078 10BD     		pop	{r4, pc}
 2032              	.LVL177:
 2033              	.L146:
 2034 007a 00BF     		.align	2
 2035              	.L145:
 2036 007c 1FFEFFF3 		.word	-201327073
 2037              		.cfi_endproc
 2038              	.LFE146:
 2040              		.section	.text.HAL_SMARTCARD_AbortTransmit,"ax",%progbits
 2041              		.align	2
 2042              		.global	HAL_SMARTCARD_AbortTransmit
 2043              		.thumb
 2044              		.thumb_func
 2046              	HAL_SMARTCARD_AbortTransmit:
 2047              	.LFB147:
 921:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable TXEIE and TCIE interrupts */
 2048              		.loc 1 921 0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 0
 2051              		@ frame_needed = 0, uses_anonymous_args = 0
 2052              	.LVL178:
 2053 0000 10B5     		push	{r4, lr}
 2054              	.LCFI27:
 2055              		.cfi_def_cfa_offset 8
 2056              		.cfi_offset 4, -8
 2057              		.cfi_offset 14, -4
 2058 0002 0446     		mov	r4, r0
 923:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2059              		.loc 1 923 0
 2060 0004 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccq2I8Qf.s 			page 80


 2061 0006 1368     		ldr	r3, [r2]
 2062 0008 23F0C003 		bic	r3, r3, #192
 2063 000c 1360     		str	r3, [r2]
 926:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2064              		.loc 1 926 0
 2065 000e 90F88230 		ldrb	r3, [r0, #130]	@ zero_extendqisi2
 2066 0012 DBB2     		uxtb	r3, r3
 2067 0014 202B     		cmp	r3, #32
 2068 0016 04D1     		bne	.L148
 929:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 2069              		.loc 1 929 0
 2070 0018 0268     		ldr	r2, [r0]
 2071 001a 9368     		ldr	r3, [r2, #8]
 2072 001c 23F00103 		bic	r3, r3, #1
 2073 0020 9360     		str	r3, [r2, #8]
 2074              	.L148:
 933:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2075              		.loc 1 933 0
 2076 0022 2368     		ldr	r3, [r4]
 2077 0024 9A68     		ldr	r2, [r3, #8]
 2078 0026 12F0800F 		tst	r2, #128
 2079 002a 0AD0     		beq	.L149
 935:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2080              		.loc 1 935 0
 2081 002c 9A68     		ldr	r2, [r3, #8]
 2082 002e 22F08002 		bic	r2, r2, #128
 2083 0032 9A60     		str	r2, [r3, #8]
 938:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2084              		.loc 1 938 0
 2085 0034 A36F     		ldr	r3, [r4, #120]
 2086 0036 23B1     		cbz	r3, .L149
 942:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2087              		.loc 1 942 0
 2088 0038 0022     		movs	r2, #0
 2089 003a 1A65     		str	r2, [r3, #80]
 944:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2090              		.loc 1 944 0
 2091 003c A06F     		ldr	r0, [r4, #120]
 2092              	.LVL179:
 2093 003e FFF7FEFF 		bl	HAL_DMA_Abort
 2094              	.LVL180:
 2095              	.L149:
 949:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2096              		.loc 1 949 0
 2097 0042 0020     		movs	r0, #0
 2098 0044 A4F86E00 		strh	r0, [r4, #110]	@ movhi
 952:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2099              		.loc 1 952 0
 2100 0048 2368     		ldr	r3, [r4]
 2101 004a 0222     		movs	r2, #2
 2102 004c 1A62     		str	r2, [r3, #32]
 955:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2103              		.loc 1 955 0
 2104 004e 2023     		movs	r3, #32
 2105 0050 84F88130 		strb	r3, [r4, #129]
 958:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2106              		.loc 1 958 0
ARM GAS  /tmp/ccq2I8Qf.s 			page 81


 2107 0054 10BD     		pop	{r4, pc}
 2108              		.cfi_endproc
 2109              	.LFE147:
 2111 0056 00BF     		.section	.text.HAL_SMARTCARD_AbortReceive,"ax",%progbits
 2112              		.align	2
 2113              		.global	HAL_SMARTCARD_AbortReceive
 2114              		.thumb
 2115              		.thumb_func
 2117              	HAL_SMARTCARD_AbortReceive:
 2118              	.LFB148:
 974:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RTOIE, EOBIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2119              		.loc 1 974 0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 0
 2122              		@ frame_needed = 0, uses_anonymous_args = 0
 2123              	.LVL181:
 2124 0000 10B5     		push	{r4, lr}
 2125              	.LCFI28:
 2126              		.cfi_def_cfa_offset 8
 2127              		.cfi_offset 4, -8
 2128              		.cfi_offset 14, -4
 2129 0002 0446     		mov	r4, r0
 976:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2130              		.loc 1 976 0
 2131 0004 0268     		ldr	r2, [r0]
 2132 0006 1168     		ldr	r1, [r2]
 2133 0008 134B     		ldr	r3, .L155
 2134 000a 0B40     		ands	r3, r3, r1
 2135 000c 1360     		str	r3, [r2]
 979:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2136              		.loc 1 979 0
 2137 000e 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 2138 0012 DBB2     		uxtb	r3, r3
 2139 0014 202B     		cmp	r3, #32
 2140 0016 04D1     		bne	.L152
 982:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 2141              		.loc 1 982 0
 2142 0018 0268     		ldr	r2, [r0]
 2143 001a 9368     		ldr	r3, [r2, #8]
 2144 001c 23F00103 		bic	r3, r3, #1
 2145 0020 9360     		str	r3, [r2, #8]
 2146              	.L152:
 986:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2147              		.loc 1 986 0
 2148 0022 2368     		ldr	r3, [r4]
 2149 0024 9A68     		ldr	r2, [r3, #8]
 2150 0026 12F0400F 		tst	r2, #64
 2151 002a 0AD0     		beq	.L153
 988:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2152              		.loc 1 988 0
 2153 002c 9A68     		ldr	r2, [r3, #8]
 2154 002e 22F04002 		bic	r2, r2, #64
 2155 0032 9A60     		str	r2, [r3, #8]
 991:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2156              		.loc 1 991 0
 2157 0034 E36F     		ldr	r3, [r4, #124]
 2158 0036 23B1     		cbz	r3, .L153
ARM GAS  /tmp/ccq2I8Qf.s 			page 82


 995:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2159              		.loc 1 995 0
 2160 0038 0022     		movs	r2, #0
 2161 003a 1A65     		str	r2, [r3, #80]
 997:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2162              		.loc 1 997 0
 2163 003c E06F     		ldr	r0, [r4, #124]
 2164              	.LVL182:
 2165 003e FFF7FEFF 		bl	HAL_DMA_Abort
 2166              	.LVL183:
 2167              	.L153:
1002:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2168              		.loc 1 1002 0
 2169 0042 0020     		movs	r0, #0
 2170 0044 A4F87600 		strh	r0, [r4, #118]	@ movhi
1005:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2171              		.loc 1 1005 0
 2172 0048 2368     		ldr	r3, [r4]
 2173 004a 41F60F02 		movw	r2, #6159
 2174 004e 1A62     		str	r2, [r3, #32]
1008:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2175              		.loc 1 1008 0
 2176 0050 2023     		movs	r3, #32
 2177 0052 84F88230 		strb	r3, [r4, #130]
1011:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2178              		.loc 1 1011 0
 2179 0056 10BD     		pop	{r4, pc}
 2180              	.LVL184:
 2181              	.L156:
 2182              		.align	2
 2183              	.L155:
 2184 0058 DFFEFFF3 		.word	-201326881
 2185              		.cfi_endproc
 2186              	.LFE148:
 2188              		.section	.text.HAL_SMARTCARD_TxCpltCallback,"ax",%progbits
 2189              		.align	2
 2190              		.weak	HAL_SMARTCARD_TxCpltCallback
 2191              		.thumb
 2192              		.thumb_func
 2194              	HAL_SMARTCARD_TxCpltCallback:
 2195              	.LFB153:
1507:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 2196              		.loc 1 1507 0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 0
 2199              		@ frame_needed = 0, uses_anonymous_args = 0
 2200              		@ link register save eliminated.
 2201              	.LVL185:
 2202 0000 7047     		bx	lr
 2203              		.cfi_endproc
 2204              	.LFE153:
 2206 0002 00BF     		.section	.text.SMARTCARD_EndTransmit_IT,"ax",%progbits
 2207              		.align	2
 2208              		.thumb
 2209              		.thumb_func
 2211              	SMARTCARD_EndTransmit_IT:
 2212              	.LFB176:
ARM GAS  /tmp/ccq2I8Qf.s 			page 83


2183:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2184:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
2185:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief  Wrap up transmission in non-blocking mode.
2186:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param  hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
2187:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                    the configuration information for the specified SMARTCARD module.
2188:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
2189:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
2190:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_EndTransmit_IT(SMARTCARD_HandleTypeDef *hsmartcard)
2191:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 2213              		.loc 1 2191 0
 2214              		.cfi_startproc
 2215              		@ args = 0, pretend = 0, frame = 0
 2216              		@ frame_needed = 0, uses_anonymous_args = 0
 2217              	.LVL186:
 2218              		.loc 1 2191 0
 2219 0000 10B5     		push	{r4, lr}
 2220              	.LCFI29:
 2221              		.cfi_def_cfa_offset 8
 2222              		.cfi_offset 4, -8
 2223              		.cfi_offset 14, -4
2192:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable the SMARTCARD Transmit Complete Interrupt */
2193:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   __HAL_SMARTCARD_DISABLE_IT(hsmartcard, hsmartcard->AdvancedInit.TxCompletionIndication);
 2224              		.loc 1 2193 0
 2225 0002 B0F86430 		ldrh	r3, [r0, #100]
 2226 0006 C3F34212 		ubfx	r2, r3, #5, #3
 2227 000a 012A     		cmp	r2, #1
 2228 000c 0AD1     		bne	.L159
 2229              		.loc 1 2193 0 is_stmt 0 discriminator 1
 2230 000e 0468     		ldr	r4, [r0]
 2231 0010 2268     		ldr	r2, [r4]
 2232 0012 03F01F03 		and	r3, r3, #31
 2233 0016 0121     		movs	r1, #1
 2234 0018 01FA03F3 		lsl	r3, r1, r3
 2235 001c 22EA0303 		bic	r3, r2, r3
 2236 0020 2360     		str	r3, [r4]
 2237 0022 16E0     		b	.L160
 2238              	.L159:
 2239              		.loc 1 2193 0 discriminator 2
 2240 0024 022A     		cmp	r2, #2
 2241 0026 0AD1     		bne	.L161
 2242              		.loc 1 2193 0 discriminator 3
 2243 0028 0468     		ldr	r4, [r0]
 2244 002a 6268     		ldr	r2, [r4, #4]
 2245 002c 03F01F03 		and	r3, r3, #31
 2246 0030 0121     		movs	r1, #1
 2247 0032 01FA03F3 		lsl	r3, r1, r3
 2248 0036 22EA0303 		bic	r3, r2, r3
 2249 003a 6360     		str	r3, [r4, #4]
 2250 003c 09E0     		b	.L160
 2251              	.L161:
 2252              		.loc 1 2193 0 discriminator 4
 2253 003e 0468     		ldr	r4, [r0]
 2254 0040 A268     		ldr	r2, [r4, #8]
 2255 0042 03F01F03 		and	r3, r3, #31
 2256 0046 0121     		movs	r1, #1
 2257 0048 01FA03F3 		lsl	r3, r1, r3
 2258 004c 22EA0303 		bic	r3, r2, r3
ARM GAS  /tmp/ccq2I8Qf.s 			page 84


 2259 0050 A360     		str	r3, [r4, #8]
 2260              	.L160:
2194:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2195:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check if a receive process is ongoing or not. If not disable ERR IT */
2196:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->RxState == HAL_SMARTCARD_STATE_READY)
 2261              		.loc 1 2196 0 is_stmt 1
 2262 0052 90F88230 		ldrb	r3, [r0, #130]	@ zero_extendqisi2
 2263 0056 DBB2     		uxtb	r3, r3
 2264 0058 202B     		cmp	r3, #32
 2265 005a 04D1     		bne	.L163
2197:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
2198:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the SMARTCARD Error Interrupt: (Frame error) */
2199:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 2266              		.loc 1 2199 0
 2267 005c 0268     		ldr	r2, [r0]
 2268 005e 9368     		ldr	r3, [r2, #8]
 2269 0060 23F00103 		bic	r3, r3, #1
 2270 0064 9360     		str	r3, [r2, #8]
 2271              	.L163:
2200:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
2201:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2202:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Re-enable Rx at end of transmission if initial mode is Rx/Tx */
2203:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(hsmartcard->Init.Mode == SMARTCARD_MODE_TX_RX)
 2272              		.loc 1 2203 0
 2273 0066 4369     		ldr	r3, [r0, #20]
 2274 0068 0C2B     		cmp	r3, #12
 2275 006a 0ED1     		bne	.L164
2204:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
2205:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Disable the Peripheral first to update modes */
2206:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 2276              		.loc 1 2206 0
 2277 006c 0268     		ldr	r2, [r0]
 2278 006e 1368     		ldr	r3, [r2]
 2279 0070 23F00103 		bic	r3, r3, #1
 2280 0074 1360     		str	r3, [r2]
2207:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_RE);
 2281              		.loc 1 2207 0
 2282 0076 0268     		ldr	r2, [r0]
 2283 0078 1368     		ldr	r3, [r2]
 2284 007a 43F00403 		orr	r3, r3, #4
 2285 007e 1360     		str	r3, [r2]
2208:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Enable the Peripheral */
2209:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SET_BIT(hsmartcard->Instance->CR1, USART_CR1_UE);
 2286              		.loc 1 2209 0
 2287 0080 0268     		ldr	r2, [r0]
 2288 0082 1368     		ldr	r3, [r2]
 2289 0084 43F00103 		orr	r3, r3, #1
 2290 0088 1360     		str	r3, [r2]
 2291              	.L164:
2210:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
2211:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
2212:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Tx process is ended, restore hsmartcard->gState to Ready */
2213:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->gState = HAL_SMARTCARD_STATE_READY;
 2292              		.loc 1 2213 0
 2293 008a 2023     		movs	r3, #32
 2294 008c 80F88130 		strb	r3, [r0, #129]
2214:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 85


2215:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_TxCpltCallback(hsmartcard);
 2295              		.loc 1 2215 0
 2296 0090 FFF7FEFF 		bl	HAL_SMARTCARD_TxCpltCallback
 2297              	.LVL187:
2216:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2217:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return HAL_OK;
2218:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 2298              		.loc 1 2218 0
 2299 0094 0020     		movs	r0, #0
 2300 0096 10BD     		pop	{r4, pc}
 2301              		.cfi_endproc
 2302              	.LFE176:
 2304              		.section	.text.HAL_SMARTCARD_RxCpltCallback,"ax",%progbits
 2305              		.align	2
 2306              		.weak	HAL_SMARTCARD_RxCpltCallback
 2307              		.thumb
 2308              		.thumb_func
 2310              	HAL_SMARTCARD_RxCpltCallback:
 2311              	.LFB154:
1523:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 2312              		.loc 1 1523 0
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 0
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316              		@ link register save eliminated.
 2317              	.LVL188:
 2318 0000 7047     		bx	lr
 2319              		.cfi_endproc
 2320              	.LFE154:
 2322 0002 00BF     		.section	.text.SMARTCARD_DMAReceiveCplt,"ax",%progbits
 2323              		.align	2
 2324              		.thumb
 2325              		.thumb_func
 2327              	SMARTCARD_DMAReceiveCplt:
 2328              	.LFB168:
1952:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
 2329              		.loc 1 1952 0
 2330              		.cfi_startproc
 2331              		@ args = 0, pretend = 0, frame = 0
 2332              		@ frame_needed = 0, uses_anonymous_args = 0
 2333              	.LVL189:
1952:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
 2334              		.loc 1 1952 0
 2335 0000 08B5     		push	{r3, lr}
 2336              	.LCFI30:
 2337              		.cfi_def_cfa_offset 8
 2338              		.cfi_offset 3, -8
 2339              		.cfi_offset 14, -4
1953:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
 2340              		.loc 1 1953 0
 2341 0002 806B     		ldr	r0, [r0, #56]
 2342              	.LVL190:
1954:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2343              		.loc 1 1954 0
 2344 0004 0023     		movs	r3, #0
 2345 0006 A0F87630 		strh	r3, [r0, #118]	@ movhi
1957:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccq2I8Qf.s 			page 86


 2346              		.loc 1 1957 0
 2347 000a 0268     		ldr	r2, [r0]
 2348 000c 1368     		ldr	r3, [r2]
 2349 000e 23F48073 		bic	r3, r3, #256
 2350 0012 1360     		str	r3, [r2]
1958:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2351              		.loc 1 1958 0
 2352 0014 0268     		ldr	r2, [r0]
 2353 0016 9368     		ldr	r3, [r2, #8]
 2354 0018 23F00103 		bic	r3, r3, #1
 2355 001c 9360     		str	r3, [r2, #8]
1962:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2356              		.loc 1 1962 0
 2357 001e 0268     		ldr	r2, [r0]
 2358 0020 9368     		ldr	r3, [r2, #8]
 2359 0022 23F04003 		bic	r3, r3, #64
 2360 0026 9360     		str	r3, [r2, #8]
1965:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2361              		.loc 1 1965 0
 2362 0028 2023     		movs	r3, #32
 2363 002a 80F88230 		strb	r3, [r0, #130]
1967:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 2364              		.loc 1 1967 0
 2365 002e FFF7FEFF 		bl	HAL_SMARTCARD_RxCpltCallback
 2366              	.LVL191:
 2367 0032 08BD     		pop	{r3, pc}
 2368              		.cfi_endproc
 2369              	.LFE168:
 2371              		.section	.text.SMARTCARD_Receive_IT,"ax",%progbits
 2372              		.align	2
 2373              		.thumb
 2374              		.thumb_func
 2376              	SMARTCARD_Receive_IT:
 2377              	.LFB177:
2219:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2220:HALLIB/Src/stm32f7xx_hal_smartcard.c **** /**
2221:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @brief Receive an amount of data in non-blocking mode.
2222:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @param hsmartcard Pointer to a SMARTCARD_HandleTypeDef structure that contains
2223:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *                the configuration information for the specified SMARTCARD module.
2224:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         Function called under interruption only, once
2225:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   *         interruptions have been enabled by HAL_SMARTCARD_Receive_IT().
2226:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   * @retval HAL status
2227:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   */
2228:HALLIB/Src/stm32f7xx_hal_smartcard.c **** static HAL_StatusTypeDef SMARTCARD_Receive_IT(SMARTCARD_HandleTypeDef *hsmartcard)
2229:HALLIB/Src/stm32f7xx_hal_smartcard.c **** {
 2378              		.loc 1 2229 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              	.LVL192:
 2383 0000 08B5     		push	{r3, lr}
 2384              	.LCFI31:
 2385              		.cfi_def_cfa_offset 8
 2386              		.cfi_offset 3, -8
 2387              		.cfi_offset 14, -4
2230:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Check that a Rx process is ongoing */
2231:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (hsmartcard->RxState == HAL_SMARTCARD_STATE_BUSY_RX)
ARM GAS  /tmp/ccq2I8Qf.s 			page 87


 2388              		.loc 1 2231 0
 2389 0002 90F88230 		ldrb	r3, [r0, #130]	@ zero_extendqisi2
 2390 0006 DBB2     		uxtb	r3, r3
 2391 0008 222B     		cmp	r3, #34
 2392 000a 28D1     		bne	.L170
2232:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
2233:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     *hsmartcard->pRxBuffPtr++ = (uint8_t)(hsmartcard->Instance->RDR & (uint8_t)0xFF);
 2393              		.loc 1 2233 0
 2394 000c 036F     		ldr	r3, [r0, #112]
 2395 000e 5A1C     		adds	r2, r3, #1
 2396 0010 0267     		str	r2, [r0, #112]
 2397 0012 0268     		ldr	r2, [r0]
 2398 0014 526A     		ldr	r2, [r2, #36]
 2399 0016 1A70     		strb	r2, [r3]
2234:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2235:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     if(--hsmartcard->RxXferCount == 0)
 2400              		.loc 1 2235 0
 2401 0018 B0F87630 		ldrh	r3, [r0, #118]
 2402 001c 9BB2     		uxth	r3, r3
 2403 001e 013B     		subs	r3, r3, #1
 2404 0020 9BB2     		uxth	r3, r3
 2405 0022 A0F87630 		strh	r3, [r0, #118]	@ movhi
 2406 0026 0BBB     		cbnz	r3, .L173
2236:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
2237:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_RXNEIE);
 2407              		.loc 1 2237 0
 2408 0028 0268     		ldr	r2, [r0]
 2409 002a 1368     		ldr	r3, [r2]
 2410 002c 23F02003 		bic	r3, r3, #32
 2411 0030 1360     		str	r3, [r2]
2238:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2239:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Check if a transmit process is ongoing or not. If not disable ERR IT */
2240:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       if(hsmartcard->gState == HAL_SMARTCARD_STATE_READY)
 2412              		.loc 1 2240 0
 2413 0032 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 2414 0036 DBB2     		uxtb	r3, r3
 2415 0038 202B     		cmp	r3, #32
 2416 003a 04D1     		bne	.L172
2241:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
2242:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         /* Disable the SMARTCARD Error Interrupt: (Frame error, noise error, overrun error) */
2243:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 2417              		.loc 1 2243 0
 2418 003c 0268     		ldr	r2, [r0]
 2419 003e 9368     		ldr	r3, [r2, #8]
 2420 0040 23F00103 		bic	r3, r3, #1
 2421 0044 9360     		str	r3, [r2, #8]
 2422              	.L172:
2244:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
2245:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2246:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Disable the SMARTCARD Parity Error Interrupt */
2247:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       CLEAR_BIT(hsmartcard->Instance->CR1, USART_CR1_PEIE);
 2423              		.loc 1 2247 0
 2424 0046 0268     		ldr	r2, [r0]
 2425 0048 1368     		ldr	r3, [r2]
 2426 004a 23F48073 		bic	r3, r3, #256
 2427 004e 1360     		str	r3, [r2]
2248:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 88


2249:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 2428              		.loc 1 2249 0
 2429 0050 2023     		movs	r3, #32
 2430 0052 80F88230 		strb	r3, [r0, #130]
2250:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2251:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       HAL_SMARTCARD_RxCpltCallback(hsmartcard);
 2431              		.loc 1 2251 0
 2432 0056 FFF7FEFF 		bl	HAL_SMARTCARD_RxCpltCallback
 2433              	.LVL193:
2252:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2253:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       return HAL_OK;
 2434              		.loc 1 2253 0
 2435 005a 0020     		movs	r0, #0
 2436 005c 08BD     		pop	{r3, pc}
 2437              	.LVL194:
 2438              	.L170:
2254:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
2255:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2256:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_OK;
2257:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
2258:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   else
2259:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
2260:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Clear RXNE interrupt flag */
2261:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_SMARTCARD_SEND_REQ(hsmartcard, SMARTCARD_RXDATA_FLUSH_REQUEST);
 2439              		.loc 1 2261 0
 2440 005e 0268     		ldr	r2, [r0]
 2441 0060 9369     		ldr	r3, [r2, #24]
 2442 0062 43F00803 		orr	r3, r3, #8
 2443 0066 9361     		str	r3, [r2, #24]
2262:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
2263:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return HAL_BUSY;
 2444              		.loc 1 2263 0
 2445 0068 0220     		movs	r0, #2
 2446              	.LVL195:
 2447 006a 08BD     		pop	{r3, pc}
 2448              	.LVL196:
 2449              	.L173:
2256:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 2450              		.loc 1 2256 0
 2451 006c 0020     		movs	r0, #0
 2452              	.LVL197:
2264:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
2265:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 2453              		.loc 1 2265 0
 2454 006e 08BD     		pop	{r3, pc}
 2455              		.cfi_endproc
 2456              	.LFE177:
 2458              		.section	.text.HAL_SMARTCARD_ErrorCallback,"ax",%progbits
 2459              		.align	2
 2460              		.weak	HAL_SMARTCARD_ErrorCallback
 2461              		.thumb
 2462              		.thumb_func
 2464              	HAL_SMARTCARD_ErrorCallback:
 2465              	.LFB155:
1539:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 2466              		.loc 1 1539 0
 2467              		.cfi_startproc
ARM GAS  /tmp/ccq2I8Qf.s 			page 89


 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
 2470              		@ link register save eliminated.
 2471              	.LVL198:
 2472 0000 7047     		bx	lr
 2473              		.cfi_endproc
 2474              	.LFE155:
 2476 0002 00BF     		.section	.text.SMARTCARD_DMAError,"ax",%progbits
 2477              		.align	2
 2478              		.thumb
 2479              		.thumb_func
 2481              	SMARTCARD_DMAError:
 2482              	.LFB169:
1977:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
 2483              		.loc 1 1977 0
 2484              		.cfi_startproc
 2485              		@ args = 0, pretend = 0, frame = 0
 2486              		@ frame_needed = 0, uses_anonymous_args = 0
 2487              	.LVL199:
1977:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
 2488              		.loc 1 1977 0
 2489 0000 10B5     		push	{r4, lr}
 2490              	.LCFI32:
 2491              		.cfi_def_cfa_offset 8
 2492              		.cfi_offset 4, -8
 2493              		.cfi_offset 14, -4
1978:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2494              		.loc 1 1978 0
 2495 0002 846B     		ldr	r4, [r0, #56]
 2496              	.LVL200:
1981:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       &&(HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAT)) )
 2497              		.loc 1 1981 0
 2498 0004 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 2499 0008 DBB2     		uxtb	r3, r3
 2500 000a 212B     		cmp	r3, #33
 2501 000c 0AD1     		bne	.L177
1982:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2502              		.loc 1 1982 0
 2503 000e 2368     		ldr	r3, [r4]
 2504 0010 9B68     		ldr	r3, [r3, #8]
 2505 0012 13F0800F 		tst	r3, #128
 2506 0016 05D0     		beq	.L177
1984:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SMARTCARD_EndTxTransfer(hsmartcard);
 2507              		.loc 1 1984 0
 2508 0018 0023     		movs	r3, #0
 2509 001a A4F86E30 		strh	r3, [r4, #110]	@ movhi
1985:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 2510              		.loc 1 1985 0
 2511 001e 2046     		mov	r0, r4
 2512              	.LVL201:
 2513 0020 FFF7FEFF 		bl	SMARTCARD_EndTxTransfer
 2514              	.LVL202:
 2515              	.L177:
1989:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       &&(HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR)) )
 2516              		.loc 1 1989 0
 2517 0024 94F88230 		ldrb	r3, [r4, #130]	@ zero_extendqisi2
 2518 0028 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccq2I8Qf.s 			page 90


 2519 002a 222B     		cmp	r3, #34
 2520 002c 0AD1     		bne	.L178
1990:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2521              		.loc 1 1990 0
 2522 002e 2368     		ldr	r3, [r4]
 2523 0030 9B68     		ldr	r3, [r3, #8]
 2524 0032 13F0400F 		tst	r3, #64
 2525 0036 05D0     		beq	.L178
1992:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     SMARTCARD_EndRxTransfer(hsmartcard);
 2526              		.loc 1 1992 0
 2527 0038 0023     		movs	r3, #0
 2528 003a A4F87630 		strh	r3, [r4, #118]	@ movhi
1993:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 2529              		.loc 1 1993 0
 2530 003e 2046     		mov	r0, r4
 2531 0040 FFF7FEFF 		bl	SMARTCARD_EndRxTransfer
 2532              	.LVL203:
 2533              	.L178:
1996:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   HAL_SMARTCARD_ErrorCallback(hsmartcard);
 2534              		.loc 1 1996 0
 2535 0044 D4F88430 		ldr	r3, [r4, #132]
 2536 0048 43F01003 		orr	r3, r3, #16
 2537 004c C4F88430 		str	r3, [r4, #132]
1997:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 2538              		.loc 1 1997 0
 2539 0050 2046     		mov	r0, r4
 2540 0052 FFF7FEFF 		bl	HAL_SMARTCARD_ErrorCallback
 2541              	.LVL204:
 2542 0056 10BD     		pop	{r4, pc}
 2543              		.cfi_endproc
 2544              	.LFE169:
 2546              		.section	.text.HAL_SMARTCARD_IRQHandler,"ax",%progbits
 2547              		.align	2
 2548              		.global	HAL_SMARTCARD_IRQHandler
 2549              		.thumb
 2550              		.thumb_func
 2552              	HAL_SMARTCARD_IRQHandler:
 2553              	.LFB152:
1301:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t isrflags   = READ_REG(hsmartcard->Instance->ISR);
 2554              		.loc 1 1301 0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 0
 2557              		@ frame_needed = 0, uses_anonymous_args = 0
 2558              	.LVL205:
 2559 0000 38B5     		push	{r3, r4, r5, lr}
 2560              	.LCFI33:
 2561              		.cfi_def_cfa_offset 16
 2562              		.cfi_offset 3, -16
 2563              		.cfi_offset 4, -12
 2564              		.cfi_offset 5, -8
 2565              		.cfi_offset 14, -4
 2566 0002 0446     		mov	r4, r0
1302:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t cr1its     = READ_REG(hsmartcard->Instance->CR1);
 2567              		.loc 1 1302 0
 2568 0004 0168     		ldr	r1, [r0]
 2569 0006 CB69     		ldr	r3, [r1, #28]
 2570              	.LVL206:
ARM GAS  /tmp/ccq2I8Qf.s 			page 91


1303:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t cr3its;
 2571              		.loc 1 1303 0
 2572 0008 0D68     		ldr	r5, [r1]
 2573              	.LVL207:
1308:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if (errorflags == RESET)
 2574              		.loc 1 1308 0
 2575 000a 40F60F02 		movw	r2, #2063
 2576              	.LVL208:
1309:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2577              		.loc 1 1309 0
 2578 000e 1A40     		ands	r2, r3, r2
 2579              	.LVL209:
 2580 0010 08D1     		bne	.L181
1312:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2581              		.loc 1 1312 0
 2582 0012 13F0200F 		tst	r3, #32
 2583 0016 05D0     		beq	.L181
1312:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2584              		.loc 1 1312 0 is_stmt 0 discriminator 1
 2585 0018 15F0200F 		tst	r5, #32
 2586 001c 02D0     		beq	.L181
1314:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       /* Clear RXNE interrupt flag done by reading RDR in SMARTCARD_Receive_IT() */
 2587              		.loc 1 1314 0 is_stmt 1
 2588 001e FFF7FEFF 		bl	SMARTCARD_Receive_IT
 2589              	.LVL210:
1316:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2590              		.loc 1 1316 0
 2591 0022 38BD     		pop	{r3, r4, r5, pc}
 2592              	.LVL211:
 2593              	.L181:
1321:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   if(   (errorflags != RESET) 
 2594              		.loc 1 1321 0
 2595 0024 8868     		ldr	r0, [r1, #8]
 2596              	.LVL212:
1322:HALLIB/Src/stm32f7xx_hal_smartcard.c ****      && (    ((cr3its & USART_CR3_EIE) != RESET)
 2597              		.loc 1 1322 0
 2598 0026 002A     		cmp	r2, #0
 2599 0028 00F0B980 		beq	.L183
1323:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != RESET)) )
 2600              		.loc 1 1323 0
 2601 002c 10F00100 		ands	r0, r0, #1
 2602              	.LVL213:
 2603 0030 03D1     		bne	.L184
1324:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2604              		.loc 1 1324 0
 2605 0032 794A     		ldr	r2, .L205
 2606              	.LVL214:
 2607 0034 1542     		tst	r5, r2
 2608 0036 00F0B280 		beq	.L183
 2609              	.L184:
1327:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2610              		.loc 1 1327 0
 2611 003a 13F0010F 		tst	r3, #1
 2612 003e 0AD0     		beq	.L185
1327:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2613              		.loc 1 1327 0 is_stmt 0 discriminator 1
 2614 0040 15F4807F 		tst	r5, #256
ARM GAS  /tmp/ccq2I8Qf.s 			page 92


 2615 0044 07D0     		beq	.L185
1329:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2616              		.loc 1 1329 0 is_stmt 1
 2617 0046 0122     		movs	r2, #1
 2618 0048 0A62     		str	r2, [r1, #32]
1331:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2619              		.loc 1 1331 0
 2620 004a D4F88420 		ldr	r2, [r4, #132]
 2621 004e 42F00102 		orr	r2, r2, #1
 2622 0052 C4F88420 		str	r2, [r4, #132]
 2623              	.L185:
1335:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2624              		.loc 1 1335 0
 2625 0056 13F0020F 		tst	r3, #2
 2626 005a 09D0     		beq	.L186
1335:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2627              		.loc 1 1335 0 is_stmt 0 discriminator 1
 2628 005c 40B1     		cbz	r0, .L186
1337:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2629              		.loc 1 1337 0 is_stmt 1
 2630 005e 2268     		ldr	r2, [r4]
 2631 0060 0221     		movs	r1, #2
 2632 0062 1162     		str	r1, [r2, #32]
1339:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2633              		.loc 1 1339 0
 2634 0064 D4F88420 		ldr	r2, [r4, #132]
 2635 0068 42F00402 		orr	r2, r2, #4
 2636 006c C4F88420 		str	r2, [r4, #132]
 2637              	.L186:
1343:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2638              		.loc 1 1343 0
 2639 0070 13F0040F 		tst	r3, #4
 2640 0074 09D0     		beq	.L187
1343:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2641              		.loc 1 1343 0 is_stmt 0 discriminator 1
 2642 0076 40B1     		cbz	r0, .L187
1345:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2643              		.loc 1 1345 0 is_stmt 1
 2644 0078 2268     		ldr	r2, [r4]
 2645 007a 0421     		movs	r1, #4
 2646 007c 1162     		str	r1, [r2, #32]
1347:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2647              		.loc 1 1347 0
 2648 007e D4F88420 		ldr	r2, [r4, #132]
 2649 0082 42F00202 		orr	r2, r2, #2
 2650 0086 C4F88420 		str	r2, [r4, #132]
 2651              	.L187:
1351:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2652              		.loc 1 1351 0
 2653 008a 13F0080F 		tst	r3, #8
 2654 008e 0BD0     		beq	.L188
1351:HALLIB/Src/stm32f7xx_hal_smartcard.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 2655              		.loc 1 1351 0 is_stmt 0 discriminator 1
 2656 0090 15F0200F 		tst	r5, #32
 2657 0094 00D1     		bne	.L189
1352:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2658              		.loc 1 1352 0 is_stmt 1
ARM GAS  /tmp/ccq2I8Qf.s 			page 93


 2659 0096 38B1     		cbz	r0, .L188
 2660              	.L189:
1354:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2661              		.loc 1 1354 0
 2662 0098 2268     		ldr	r2, [r4]
 2663 009a 0821     		movs	r1, #8
 2664 009c 1162     		str	r1, [r2, #32]
1356:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2665              		.loc 1 1356 0
 2666 009e D4F88420 		ldr	r2, [r4, #132]
 2667 00a2 0A43     		orrs	r2, r2, r1
 2668 00a4 C4F88420 		str	r2, [r4, #132]
 2669              	.L188:
1360:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2670              		.loc 1 1360 0
 2671 00a8 13F4006F 		tst	r3, #2048
 2672 00ac 0CD0     		beq	.L190
1360:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2673              		.loc 1 1360 0 is_stmt 0 discriminator 1
 2674 00ae 15F0806F 		tst	r5, #67108864
 2675 00b2 09D0     		beq	.L190
1362:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2676              		.loc 1 1362 0 is_stmt 1
 2677 00b4 2268     		ldr	r2, [r4]
 2678 00b6 4FF40061 		mov	r1, #2048
 2679 00ba 1162     		str	r1, [r2, #32]
1364:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 2680              		.loc 1 1364 0
 2681 00bc D4F88420 		ldr	r2, [r4, #132]
 2682 00c0 42F02002 		orr	r2, r2, #32
 2683 00c4 C4F88420 		str	r2, [r4, #132]
 2684              	.L190:
1368:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2685              		.loc 1 1368 0
 2686 00c8 D4F88420 		ldr	r2, [r4, #132]
 2687 00cc 002A     		cmp	r2, #0
 2688 00ce 00F0A180 		beq	.L180
1371:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 2689              		.loc 1 1371 0
 2690 00d2 13F0200F 		tst	r3, #32
 2691 00d6 05D0     		beq	.L191
1371:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 2692              		.loc 1 1371 0 is_stmt 0 discriminator 1
 2693 00d8 15F0200F 		tst	r5, #32
 2694 00dc 02D0     		beq	.L191
1373:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 2695              		.loc 1 1373 0 is_stmt 1
 2696 00de 2046     		mov	r0, r4
 2697 00e0 FFF7FEFF 		bl	SMARTCARD_Receive_IT
 2698              	.LVL215:
 2699              	.L191:
1381:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           || (HAL_IS_BIT_SET(hsmartcard->Instance->CR3, USART_CR3_DMAR)))
 2700              		.loc 1 1381 0
 2701 00e4 D4F88430 		ldr	r3, [r4, #132]
 2702 00e8 13F0280F 		tst	r3, #40
 2703 00ec 04D1     		bne	.L192
1382:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {  
ARM GAS  /tmp/ccq2I8Qf.s 			page 94


 2704              		.loc 1 1382 0
 2705 00ee 2368     		ldr	r3, [r4]
 2706 00f0 9B68     		ldr	r3, [r3, #8]
 2707 00f2 13F0400F 		tst	r3, #64
 2708 00f6 20D0     		beq	.L193
 2709              	.L192:
1387:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2710              		.loc 1 1387 0
 2711 00f8 2046     		mov	r0, r4
 2712 00fa FFF7FEFF 		bl	SMARTCARD_EndRxTransfer
 2713              	.LVL216:
1390:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         {
 2714              		.loc 1 1390 0
 2715 00fe 2368     		ldr	r3, [r4]
 2716 0100 9A68     		ldr	r2, [r3, #8]
 2717 0102 12F0400F 		tst	r2, #64
 2718 0106 14D0     		beq	.L194
1392:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2719              		.loc 1 1392 0
 2720 0108 9A68     		ldr	r2, [r3, #8]
 2721 010a 22F04002 		bic	r2, r2, #64
 2722 010e 9A60     		str	r2, [r3, #8]
1395:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           {
 2723              		.loc 1 1395 0
 2724 0110 E36F     		ldr	r3, [r4, #124]
 2725 0112 53B1     		cbz	r3, .L195
1399:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2726              		.loc 1 1399 0
 2727 0114 414A     		ldr	r2, .L205+4
 2728 0116 1A65     		str	r2, [r3, #80]
1402:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             {
 2729              		.loc 1 1402 0
 2730 0118 E06F     		ldr	r0, [r4, #124]
 2731 011a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2732              	.LVL217:
 2733 011e 0028     		cmp	r0, #0
 2734 0120 78D0     		beq	.L180
1405:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             }
 2735              		.loc 1 1405 0
 2736 0122 E06F     		ldr	r0, [r4, #124]
 2737 0124 036D     		ldr	r3, [r0, #80]
 2738 0126 9847     		blx	r3
 2739              	.LVL218:
 2740 0128 38BD     		pop	{r3, r4, r5, pc}
 2741              	.LVL219:
 2742              	.L195:
1411:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           }
 2743              		.loc 1 1411 0
 2744 012a 2046     		mov	r0, r4
 2745 012c FFF7FEFF 		bl	HAL_SMARTCARD_ErrorCallback
 2746              	.LVL220:
 2747 0130 38BD     		pop	{r3, r4, r5, pc}
 2748              	.LVL221:
 2749              	.L194:
1417:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         }
 2750              		.loc 1 1417 0
 2751 0132 2046     		mov	r0, r4
ARM GAS  /tmp/ccq2I8Qf.s 			page 95


 2752 0134 FFF7FEFF 		bl	HAL_SMARTCARD_ErrorCallback
 2753              	.LVL222:
 2754 0138 38BD     		pop	{r3, r4, r5, pc}
 2755              	.LVL223:
 2756              	.L193:
1423:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 2757              		.loc 1 1423 0
 2758 013a 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 2759 013e DBB2     		uxtb	r3, r3
 2760 0140 212B     		cmp	r3, #33
 2761 0142 25D1     		bne	.L196
1423:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 2762              		.loc 1 1423 0 is_stmt 0 discriminator 1
 2763 0144 D4F88430 		ldr	r3, [r4, #132]
 2764 0148 13F0040F 		tst	r3, #4
 2765 014c 20D0     		beq	.L196
1428:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2766              		.loc 1 1428 0 is_stmt 1
 2767 014e 2046     		mov	r0, r4
 2768 0150 FFF7FEFF 		bl	SMARTCARD_EndTxTransfer
 2769              	.LVL224:
1431:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         {
 2770              		.loc 1 1431 0
 2771 0154 2368     		ldr	r3, [r4]
 2772 0156 9A68     		ldr	r2, [r3, #8]
 2773 0158 12F0800F 		tst	r2, #128
 2774 015c 14D0     		beq	.L197
1433:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2775              		.loc 1 1433 0
 2776 015e 9A68     		ldr	r2, [r3, #8]
 2777 0160 22F08002 		bic	r2, r2, #128
 2778 0164 9A60     		str	r2, [r3, #8]
1436:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           {
 2779              		.loc 1 1436 0
 2780 0166 A36F     		ldr	r3, [r4, #120]
 2781 0168 53B1     		cbz	r3, .L198
1440:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2782              		.loc 1 1440 0
 2783 016a 2C4A     		ldr	r2, .L205+4
 2784 016c 1A65     		str	r2, [r3, #80]
1443:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             {
 2785              		.loc 1 1443 0
 2786 016e A06F     		ldr	r0, [r4, #120]
 2787 0170 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2788              	.LVL225:
 2789 0174 0028     		cmp	r0, #0
 2790 0176 4DD0     		beq	.L180
1446:HALLIB/Src/stm32f7xx_hal_smartcard.c ****             }
 2791              		.loc 1 1446 0
 2792 0178 A06F     		ldr	r0, [r4, #120]
 2793 017a 036D     		ldr	r3, [r0, #80]
 2794 017c 9847     		blx	r3
 2795              	.LVL226:
 2796 017e 38BD     		pop	{r3, r4, r5, pc}
 2797              	.LVL227:
 2798              	.L198:
1452:HALLIB/Src/stm32f7xx_hal_smartcard.c ****           }
ARM GAS  /tmp/ccq2I8Qf.s 			page 96


 2799              		.loc 1 1452 0
 2800 0180 2046     		mov	r0, r4
 2801 0182 FFF7FEFF 		bl	HAL_SMARTCARD_ErrorCallback
 2802              	.LVL228:
 2803 0186 38BD     		pop	{r3, r4, r5, pc}
 2804              	.LVL229:
 2805              	.L197:
1458:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         }
 2806              		.loc 1 1458 0
 2807 0188 2046     		mov	r0, r4
 2808 018a FFF7FEFF 		bl	HAL_SMARTCARD_ErrorCallback
 2809              	.LVL230:
 2810 018e 38BD     		pop	{r3, r4, r5, pc}
 2811              	.LVL231:
 2812              	.L196:
1465:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         hsmartcard->ErrorCode = HAL_SMARTCARD_ERROR_NONE;
 2813              		.loc 1 1465 0
 2814 0190 2046     		mov	r0, r4
 2815 0192 FFF7FEFF 		bl	HAL_SMARTCARD_ErrorCallback
 2816              	.LVL232:
1466:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 2817              		.loc 1 1466 0
 2818 0196 0023     		movs	r3, #0
 2819 0198 C4F88430 		str	r3, [r4, #132]
 2820 019c 38BD     		pop	{r3, r4, r5, pc}
 2821              	.LVL233:
 2822              	.L183:
1474:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2823              		.loc 1 1474 0
 2824 019e 13F4805F 		tst	r3, #4096
 2825 01a2 10D0     		beq	.L199
1474:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2826              		.loc 1 1474 0 is_stmt 0 discriminator 1
 2827 01a4 15F0006F 		tst	r5, #134217728
 2828 01a8 0DD0     		beq	.L199
1476:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     __HAL_UNLOCK(hsmartcard);
 2829              		.loc 1 1476 0 is_stmt 1
 2830 01aa 2023     		movs	r3, #32
 2831              	.LVL234:
 2832 01ac 84F88230 		strb	r3, [r4, #130]
1477:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     HAL_SMARTCARD_RxCpltCallback(hsmartcard);
 2833              		.loc 1 1477 0
 2834 01b0 0023     		movs	r3, #0
 2835 01b2 84F88030 		strb	r3, [r4, #128]
1478:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     /* Clear EOBF interrupt after HAL_SMARTCARD_RxCpltCallback() call for the End of Block informat
 2836              		.loc 1 1478 0
 2837 01b6 2046     		mov	r0, r4
 2838 01b8 FFF7FEFF 		bl	HAL_SMARTCARD_RxCpltCallback
 2839              	.LVL235:
1481:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return;
 2840              		.loc 1 1481 0
 2841 01bc 2368     		ldr	r3, [r4]
 2842 01be 4FF48052 		mov	r2, #4096
 2843 01c2 1A62     		str	r2, [r3, #32]
1482:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 2844              		.loc 1 1482 0
 2845 01c4 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccq2I8Qf.s 			page 97


 2846              	.LVL236:
 2847              	.L199:
1486:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2848              		.loc 1 1486 0
 2849 01c6 13F0800F 		tst	r3, #128
 2850 01ca 06D0     		beq	.L200
1486:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2851              		.loc 1 1486 0 is_stmt 0 discriminator 1
 2852 01cc 15F0800F 		tst	r5, #128
 2853 01d0 03D0     		beq	.L200
1488:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return;
 2854              		.loc 1 1488 0 is_stmt 1
 2855 01d2 2046     		mov	r0, r4
 2856 01d4 FFF7FEFF 		bl	SMARTCARD_Transmit_IT
 2857              	.LVL237:
1489:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 2858              		.loc 1 1489 0
 2859 01d8 38BD     		pop	{r3, r4, r5, pc}
 2860              	.LVL238:
 2861              	.L200:
1493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2862              		.loc 1 1493 0
 2863 01da CA69     		ldr	r2, [r1, #28]
 2864 01dc B4F86430 		ldrh	r3, [r4, #100]
 2865              	.LVL239:
 2866 01e0 180A     		lsrs	r0, r3, #8
 2867 01e2 C240     		lsrs	r2, r2, r0
 2868 01e4 12F0010F 		tst	r2, #1
 2869 01e8 14D0     		beq	.L180
1493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2870              		.loc 1 1493 0 is_stmt 0 discriminator 1
 2871 01ea C3F34212 		ubfx	r2, r3, #5, #3
 2872 01ee 012A     		cmp	r2, #1
 2873 01f0 01D1     		bne	.L201
1493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2874              		.loc 1 1493 0 discriminator 2
 2875 01f2 0A68     		ldr	r2, [r1]
 2876 01f4 04E0     		b	.L202
 2877              	.L201:
1493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2878              		.loc 1 1493 0 discriminator 3
 2879 01f6 022A     		cmp	r2, #2
 2880 01f8 01D1     		bne	.L203
1493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2881              		.loc 1 1493 0 discriminator 5
 2882 01fa 4A68     		ldr	r2, [r1, #4]
 2883 01fc 00E0     		b	.L202
 2884              	.L203:
1493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2885              		.loc 1 1493 0 discriminator 6
 2886 01fe 8A68     		ldr	r2, [r1, #8]
 2887              	.L202:
1493:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2888              		.loc 1 1493 0 discriminator 9
 2889 0200 03F01F03 		and	r3, r3, #31
 2890 0204 22FA03F3 		lsr	r3, r2, r3
 2891 0208 13F0010F 		tst	r3, #1
ARM GAS  /tmp/ccq2I8Qf.s 			page 98


 2892 020c 02D0     		beq	.L180
1495:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     return;
 2893              		.loc 1 1495 0 is_stmt 1
 2894 020e 2046     		mov	r0, r4
 2895 0210 FFF7FEFF 		bl	SMARTCARD_EndTransmit_IT
 2896              	.LVL240:
 2897              	.L180:
 2898 0214 38BD     		pop	{r3, r4, r5, pc}
 2899              	.LVL241:
 2900              	.L206:
 2901 0216 00BF     		.align	2
 2902              	.L205:
 2903 0218 20010004 		.word	67109152
 2904 021c 00000000 		.word	SMARTCARD_DMAAbortOnError
 2905              		.cfi_endproc
 2906              	.LFE152:
 2908              		.section	.text.SMARTCARD_DMAAbortOnError,"ax",%progbits
 2909              		.align	2
 2910              		.thumb
 2911              		.thumb_func
 2913              	SMARTCARD_DMAAbortOnError:
 2914              	.LFB170:
2007:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
 2915              		.loc 1 2007 0
 2916              		.cfi_startproc
 2917              		@ args = 0, pretend = 0, frame = 0
 2918              		@ frame_needed = 0, uses_anonymous_args = 0
 2919              	.LVL242:
 2920 0000 08B5     		push	{r3, lr}
 2921              	.LCFI34:
 2922              		.cfi_def_cfa_offset 8
 2923              		.cfi_offset 3, -8
 2924              		.cfi_offset 14, -4
2008:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
 2925              		.loc 1 2008 0
 2926 0002 806B     		ldr	r0, [r0, #56]
 2927              	.LVL243:
2009:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->TxXferCount = 0;
 2928              		.loc 1 2009 0
 2929 0004 0023     		movs	r3, #0
 2930 0006 A0F87630 		strh	r3, [r0, #118]	@ movhi
2010:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2931              		.loc 1 2010 0
 2932 000a A0F86E30 		strh	r3, [r0, #110]	@ movhi
2012:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 2933              		.loc 1 2012 0
 2934 000e FFF7FEFF 		bl	HAL_SMARTCARD_ErrorCallback
 2935              	.LVL244:
 2936 0012 08BD     		pop	{r3, pc}
 2937              		.cfi_endproc
 2938              	.LFE170:
 2940              		.section	.text.HAL_SMARTCARD_AbortCpltCallback,"ax",%progbits
 2941              		.align	2
 2942              		.weak	HAL_SMARTCARD_AbortCpltCallback
 2943              		.thumb
 2944              		.thumb_func
 2946              	HAL_SMARTCARD_AbortCpltCallback:
ARM GAS  /tmp/ccq2I8Qf.s 			page 99


 2947              	.LFB156:
1555:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 2948              		.loc 1 1555 0
 2949              		.cfi_startproc
 2950              		@ args = 0, pretend = 0, frame = 0
 2951              		@ frame_needed = 0, uses_anonymous_args = 0
 2952              		@ link register save eliminated.
 2953              	.LVL245:
 2954 0000 7047     		bx	lr
 2955              		.cfi_endproc
 2956              	.LFE156:
 2958 0002 00BF     		.section	.text.HAL_SMARTCARD_Abort_IT,"ax",%progbits
 2959              		.align	2
 2960              		.global	HAL_SMARTCARD_Abort_IT
 2961              		.thumb
 2962              		.thumb_func
 2964              	HAL_SMARTCARD_Abort_IT:
 2965              	.LFB149:
1029:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t abortcplt = 1;
 2966              		.loc 1 1029 0
 2967              		.cfi_startproc
 2968              		@ args = 0, pretend = 0, frame = 0
 2969              		@ frame_needed = 0, uses_anonymous_args = 0
 2970              	.LVL246:
1029:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   uint32_t abortcplt = 1;
 2971              		.loc 1 1029 0
 2972 0000 10B5     		push	{r4, lr}
 2973              	.LCFI35:
 2974              		.cfi_def_cfa_offset 8
 2975              		.cfi_offset 4, -8
 2976              		.cfi_offset 14, -4
 2977 0002 0446     		mov	r4, r0
 2978              	.LVL247:
1033:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   CLEAR_BIT(hsmartcard->Instance->CR3, USART_CR3_EIE);
 2979              		.loc 1 1033 0
 2980 0004 0268     		ldr	r2, [r0]
 2981 0006 1168     		ldr	r1, [r2]
 2982 0008 304B     		ldr	r3, .L223
 2983 000a 0B40     		ands	r3, r3, r1
 2984 000c 1360     		str	r3, [r2]
1034:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 2985              		.loc 1 1034 0
 2986 000e 0268     		ldr	r2, [r0]
 2987 0010 9368     		ldr	r3, [r2, #8]
 2988 0012 23F00103 		bic	r3, r3, #1
 2989 0016 9360     		str	r3, [r2, #8]
1039:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 2990              		.loc 1 1039 0
 2991 0018 836F     		ldr	r3, [r0, #120]
 2992 001a 4BB1     		cbz	r3, .L211
1043:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 2993              		.loc 1 1043 0
 2994 001c 0268     		ldr	r2, [r0]
 2995 001e 9268     		ldr	r2, [r2, #8]
 2996 0020 12F0800F 		tst	r2, #128
 2997 0024 02D0     		beq	.L212
1045:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
ARM GAS  /tmp/ccq2I8Qf.s 			page 100


 2998              		.loc 1 1045 0
 2999 0026 2A4A     		ldr	r2, .L223+4
 3000 0028 1A65     		str	r2, [r3, #80]
 3001 002a 01E0     		b	.L211
 3002              	.L212:
1049:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 3003              		.loc 1 1049 0
 3004 002c 0022     		movs	r2, #0
 3005 002e 1A65     		str	r2, [r3, #80]
 3006              	.L211:
1053:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3007              		.loc 1 1053 0
 3008 0030 E36F     		ldr	r3, [r4, #124]
 3009 0032 4BB1     		cbz	r3, .L213
1057:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 3010              		.loc 1 1057 0
 3011 0034 2268     		ldr	r2, [r4]
 3012 0036 9268     		ldr	r2, [r2, #8]
 3013 0038 12F0400F 		tst	r2, #64
 3014 003c 02D0     		beq	.L214
1059:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 3015              		.loc 1 1059 0
 3016 003e 254A     		ldr	r2, .L223+8
 3017 0040 1A65     		str	r2, [r3, #80]
 3018 0042 01E0     		b	.L213
 3019              	.L214:
1063:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 3020              		.loc 1 1063 0
 3021 0044 0022     		movs	r2, #0
 3022 0046 1A65     		str	r2, [r3, #80]
 3023              	.L213:
1068:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3024              		.loc 1 1068 0
 3025 0048 2368     		ldr	r3, [r4]
 3026 004a 9A68     		ldr	r2, [r3, #8]
 3027 004c 12F0800F 		tst	r2, #128
 3028 0050 0DD0     		beq	.L218
1071:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3029              		.loc 1 1071 0
 3030 0052 9A68     		ldr	r2, [r3, #8]
 3031 0054 22F08002 		bic	r2, r2, #128
 3032 0058 9A60     		str	r2, [r3, #8]
1074:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 3033              		.loc 1 1074 0
 3034 005a A06F     		ldr	r0, [r4, #120]
 3035              	.LVL248:
 3036 005c 48B1     		cbz	r0, .L219
1080:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 3037              		.loc 1 1080 0
 3038 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3039              	.LVL249:
 3040 0062 40B1     		cbz	r0, .L220
1082:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 3041              		.loc 1 1082 0
 3042 0064 A36F     		ldr	r3, [r4, #120]
 3043 0066 0022     		movs	r2, #0
 3044 0068 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccq2I8Qf.s 			page 101


1030:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
 3045              		.loc 1 1030 0
 3046 006a 0122     		movs	r2, #1
 3047 006c 04E0     		b	.L215
 3048              	.LVL250:
 3049              	.L218:
 3050 006e 0122     		movs	r2, #1
 3051 0070 02E0     		b	.L215
 3052              	.LVL251:
 3053              	.L219:
 3054 0072 0122     		movs	r2, #1
 3055 0074 00E0     		b	.L215
 3056              	.L220:
1086:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 3057              		.loc 1 1086 0
 3058 0076 0022     		movs	r2, #0
 3059              	.L215:
 3060              	.LVL252:
1092:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3061              		.loc 1 1092 0
 3062 0078 2368     		ldr	r3, [r4]
 3063 007a 9968     		ldr	r1, [r3, #8]
 3064 007c 11F0400F 		tst	r1, #64
 3065 0080 0ED0     		beq	.L216
1094:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3066              		.loc 1 1094 0
 3067 0082 9968     		ldr	r1, [r3, #8]
 3068 0084 21F04001 		bic	r1, r1, #64
 3069 0088 9960     		str	r1, [r3, #8]
1097:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 3070              		.loc 1 1097 0
 3071 008a E06F     		ldr	r0, [r4, #124]
 3072 008c 40B1     		cbz	r0, .L216
1103:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 3073              		.loc 1 1103 0
 3074 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3075              	.LVL253:
 3076 0092 20B1     		cbz	r0, .L221
1105:HALLIB/Src/stm32f7xx_hal_smartcard.c ****         abortcplt = 1;
 3077              		.loc 1 1105 0
 3078 0094 E36F     		ldr	r3, [r4, #124]
 3079 0096 0022     		movs	r2, #0
 3080 0098 1A65     		str	r2, [r3, #80]
 3081              	.LVL254:
1106:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 3082              		.loc 1 1106 0
 3083 009a 0122     		movs	r2, #1
 3084 009c 00E0     		b	.L216
 3085              	.LVL255:
 3086              	.L221:
1110:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 3087              		.loc 1 1110 0
 3088 009e 0022     		movs	r2, #0
 3089              	.L216:
 3090              	.LVL256:
1116:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3091              		.loc 1 1116 0
ARM GAS  /tmp/ccq2I8Qf.s 			page 102


 3092 00a0 92B1     		cbz	r2, .L217
1119:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxXferCount = 0;
 3093              		.loc 1 1119 0
 3094 00a2 0023     		movs	r3, #0
 3095 00a4 A4F86E30 		strh	r3, [r4, #110]	@ movhi
1120:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3096              		.loc 1 1120 0
 3097 00a8 A4F87630 		strh	r3, [r4, #118]	@ movhi
1123:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3098              		.loc 1 1123 0
 3099 00ac C4F88430 		str	r3, [r4, #132]
1126:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3100              		.loc 1 1126 0
 3101 00b0 2368     		ldr	r3, [r4]
 3102 00b2 41F60F02 		movw	r2, #6159
 3103              	.LVL257:
 3104 00b6 1A62     		str	r2, [r3, #32]
1129:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 3105              		.loc 1 1129 0
 3106 00b8 2023     		movs	r3, #32
 3107 00ba 84F88130 		strb	r3, [r4, #129]
1130:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3108              		.loc 1 1130 0
 3109 00be 84F88230 		strb	r3, [r4, #130]
1133:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 3110              		.loc 1 1133 0
 3111 00c2 2046     		mov	r0, r4
 3112 00c4 FFF7FEFF 		bl	HAL_SMARTCARD_AbortCpltCallback
 3113              	.LVL258:
 3114              	.L217:
1137:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3115              		.loc 1 1137 0
 3116 00c8 0020     		movs	r0, #0
 3117 00ca 10BD     		pop	{r4, pc}
 3118              	.LVL259:
 3119              	.L224:
 3120              		.align	2
 3121              	.L223:
 3122 00cc 1FFEFFF3 		.word	-201327073
 3123 00d0 00000000 		.word	SMARTCARD_DMATxAbortCallback
 3124 00d4 00000000 		.word	SMARTCARD_DMARxAbortCallback
 3125              		.cfi_endproc
 3126              	.LFE149:
 3128              		.section	.text.SMARTCARD_DMARxAbortCallback,"ax",%progbits
 3129              		.align	2
 3130              		.thumb
 3131              		.thumb_func
 3133              	SMARTCARD_DMARxAbortCallback:
 3134              	.LFB172:
2066:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef* )(hdma->Parent);
 3135              		.loc 1 2066 0
 3136              		.cfi_startproc
 3137              		@ args = 0, pretend = 0, frame = 0
 3138              		@ frame_needed = 0, uses_anonymous_args = 0
 3139              	.LVL260:
 3140 0000 08B5     		push	{r3, lr}
 3141              	.LCFI36:
ARM GAS  /tmp/ccq2I8Qf.s 			page 103


 3142              		.cfi_def_cfa_offset 8
 3143              		.cfi_offset 3, -8
 3144              		.cfi_offset 14, -4
2067:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
 3145              		.loc 1 2067 0
 3146 0002 806B     		ldr	r0, [r0, #56]
 3147              	.LVL261:
2069:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3148              		.loc 1 2069 0
 3149 0004 C36F     		ldr	r3, [r0, #124]
 3150 0006 0022     		movs	r2, #0
 3151 0008 1A65     		str	r2, [r3, #80]
2072:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3152              		.loc 1 2072 0
 3153 000a 836F     		ldr	r3, [r0, #120]
 3154 000c 0BB1     		cbz	r3, .L226
2074:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 3155              		.loc 1 2074 0
 3156 000e 1B6D     		ldr	r3, [r3, #80]
 3157 0010 8BB9     		cbnz	r3, .L225
 3158              	.L226:
2081:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
 3159              		.loc 1 2081 0
 3160 0012 0023     		movs	r3, #0
 3161 0014 A0F86E30 		strh	r3, [r0, #110]	@ movhi
2082:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3162              		.loc 1 2082 0
 3163 0018 A0F87630 		strh	r3, [r0, #118]	@ movhi
2085:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3164              		.loc 1 2085 0
 3165 001c C0F88430 		str	r3, [r0, #132]
2088:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3166              		.loc 1 2088 0
 3167 0020 0368     		ldr	r3, [r0]
 3168 0022 41F60F02 		movw	r2, #6159
 3169 0026 1A62     		str	r2, [r3, #32]
2091:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 3170              		.loc 1 2091 0
 3171 0028 2023     		movs	r3, #32
 3172 002a 80F88130 		strb	r3, [r0, #129]
2092:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3173              		.loc 1 2092 0
 3174 002e 80F88230 		strb	r3, [r0, #130]
2095:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 3175              		.loc 1 2095 0
 3176 0032 FFF7FEFF 		bl	HAL_SMARTCARD_AbortCpltCallback
 3177              	.LVL262:
 3178              	.L225:
 3179 0036 08BD     		pop	{r3, pc}
 3180              		.cfi_endproc
 3181              	.LFE172:
 3183              		.section	.text.SMARTCARD_DMATxAbortCallback,"ax",%progbits
 3184              		.align	2
 3185              		.thumb
 3186              		.thumb_func
 3188              	SMARTCARD_DMATxAbortCallback:
 3189              	.LFB171:
ARM GAS  /tmp/ccq2I8Qf.s 			page 104


2024:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef* )(hdma->Parent);
 3190              		.loc 1 2024 0
 3191              		.cfi_startproc
 3192              		@ args = 0, pretend = 0, frame = 0
 3193              		@ frame_needed = 0, uses_anonymous_args = 0
 3194              	.LVL263:
 3195 0000 08B5     		push	{r3, lr}
 3196              	.LCFI37:
 3197              		.cfi_def_cfa_offset 8
 3198              		.cfi_offset 3, -8
 3199              		.cfi_offset 14, -4
2025:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   
 3200              		.loc 1 2025 0
 3201 0002 806B     		ldr	r0, [r0, #56]
 3202              	.LVL264:
2027:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3203              		.loc 1 2027 0
 3204 0004 836F     		ldr	r3, [r0, #120]
 3205 0006 0022     		movs	r2, #0
 3206 0008 1A65     		str	r2, [r3, #80]
2030:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3207              		.loc 1 2030 0
 3208 000a C36F     		ldr	r3, [r0, #124]
 3209 000c 0BB1     		cbz	r3, .L230
2032:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 3210              		.loc 1 2032 0
 3211 000e 1B6D     		ldr	r3, [r3, #80]
 3212 0010 8BB9     		cbnz	r3, .L229
 3213              	.L230:
2039:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxXferCount = 0;
 3214              		.loc 1 2039 0
 3215 0012 0023     		movs	r3, #0
 3216 0014 A0F86E30 		strh	r3, [r0, #110]	@ movhi
2040:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3217              		.loc 1 2040 0
 3218 0018 A0F87630 		strh	r3, [r0, #118]	@ movhi
2043:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3219              		.loc 1 2043 0
 3220 001c C0F88430 		str	r3, [r0, #132]
2046:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3221              		.loc 1 2046 0
 3222 0020 0368     		ldr	r3, [r0]
 3223 0022 41F60F02 		movw	r2, #6159
 3224 0026 1A62     		str	r2, [r3, #32]
2049:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   hsmartcard->RxState = HAL_SMARTCARD_STATE_READY;
 3225              		.loc 1 2049 0
 3226 0028 2023     		movs	r3, #32
 3227 002a 80F88130 		strb	r3, [r0, #129]
2050:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3228              		.loc 1 2050 0
 3229 002e 80F88230 		strb	r3, [r0, #130]
2053:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 3230              		.loc 1 2053 0
 3231 0032 FFF7FEFF 		bl	HAL_SMARTCARD_AbortCpltCallback
 3232              	.LVL265:
 3233              	.L229:
 3234 0036 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccq2I8Qf.s 			page 105


 3235              		.cfi_endproc
 3236              	.LFE171:
 3238              		.section	.text.HAL_SMARTCARD_AbortTransmitCpltCallback,"ax",%progbits
 3239              		.align	2
 3240              		.weak	HAL_SMARTCARD_AbortTransmitCpltCallback
 3241              		.thumb
 3242              		.thumb_func
 3244              	HAL_SMARTCARD_AbortTransmitCpltCallback:
 3245              	.LFB157:
1571:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 3246              		.loc 1 1571 0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 0
 3249              		@ frame_needed = 0, uses_anonymous_args = 0
 3250              		@ link register save eliminated.
 3251              	.LVL266:
 3252 0000 7047     		bx	lr
 3253              		.cfi_endproc
 3254              	.LFE157:
 3256 0002 00BF     		.section	.text.HAL_SMARTCARD_AbortTransmit_IT,"ax",%progbits
 3257              		.align	2
 3258              		.global	HAL_SMARTCARD_AbortTransmit_IT
 3259              		.thumb
 3260              		.thumb_func
 3262              	HAL_SMARTCARD_AbortTransmit_IT:
 3263              	.LFB150:
1155:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable TXEIE and TCIE interrupts */
 3264              		.loc 1 1155 0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 0
 3267              		@ frame_needed = 0, uses_anonymous_args = 0
 3268              	.LVL267:
1155:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable TXEIE and TCIE interrupts */
 3269              		.loc 1 1155 0
 3270 0000 10B5     		push	{r4, lr}
 3271              	.LCFI38:
 3272              		.cfi_def_cfa_offset 8
 3273              		.cfi_offset 4, -8
 3274              		.cfi_offset 14, -4
 3275 0002 0446     		mov	r4, r0
1157:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3276              		.loc 1 1157 0
 3277 0004 0268     		ldr	r2, [r0]
 3278 0006 1368     		ldr	r3, [r2]
 3279 0008 23F0C003 		bic	r3, r3, #192
 3280 000c 1360     		str	r3, [r2]
1160:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3281              		.loc 1 1160 0
 3282 000e 90F88230 		ldrb	r3, [r0, #130]	@ zero_extendqisi2
 3283 0012 DBB2     		uxtb	r3, r3
 3284 0014 202B     		cmp	r3, #32
 3285 0016 04D1     		bne	.L235
1163:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 3286              		.loc 1 1163 0
 3287 0018 0268     		ldr	r2, [r0]
 3288 001a 9368     		ldr	r3, [r2, #8]
 3289 001c 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccq2I8Qf.s 			page 106


 3290 0020 9360     		str	r3, [r2, #8]
 3291              	.L235:
1167:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3292              		.loc 1 1167 0
 3293 0022 2368     		ldr	r3, [r4]
 3294 0024 9A68     		ldr	r2, [r3, #8]
 3295 0026 12F0800F 		tst	r2, #128
 3296 002a 19D0     		beq	.L236
1169:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3297              		.loc 1 1169 0
 3298 002c 9A68     		ldr	r2, [r3, #8]
 3299 002e 22F08002 		bic	r2, r2, #128
 3300 0032 9A60     		str	r2, [r3, #8]
1172:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 3301              		.loc 1 1172 0
 3302 0034 A36F     		ldr	r3, [r4, #120]
 3303 0036 4BB1     		cbz	r3, .L237
1176:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3304              		.loc 1 1176 0
 3305 0038 104A     		ldr	r2, .L240
 3306 003a 1A65     		str	r2, [r3, #80]
1179:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 3307              		.loc 1 1179 0
 3308 003c A06F     		ldr	r0, [r4, #120]
 3309              	.LVL268:
 3310 003e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3311              	.LVL269:
 3312 0042 C0B1     		cbz	r0, .L238
1182:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 3313              		.loc 1 1182 0
 3314 0044 A06F     		ldr	r0, [r4, #120]
 3315 0046 036D     		ldr	r3, [r0, #80]
 3316 0048 9847     		blx	r3
 3317              	.LVL270:
 3318 004a 14E0     		b	.L238
 3319              	.LVL271:
 3320              	.L237:
1188:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3321              		.loc 1 1188 0
 3322 004c 0023     		movs	r3, #0
 3323 004e A4F86E30 		strh	r3, [r4, #110]	@ movhi
1191:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3324              		.loc 1 1191 0
 3325 0052 2023     		movs	r3, #32
 3326 0054 84F88130 		strb	r3, [r4, #129]
1194:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 3327              		.loc 1 1194 0
 3328 0058 2046     		mov	r0, r4
 3329              	.LVL272:
 3330 005a FFF7FEFF 		bl	HAL_SMARTCARD_AbortTransmitCpltCallback
 3331              	.LVL273:
 3332 005e 0AE0     		b	.L238
 3333              	.LVL274:
 3334              	.L236:
1200:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3335              		.loc 1 1200 0
 3336 0060 0022     		movs	r2, #0
ARM GAS  /tmp/ccq2I8Qf.s 			page 107


 3337 0062 A4F86E20 		strh	r2, [r4, #110]	@ movhi
1203:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3338              		.loc 1 1203 0
 3339 0066 0222     		movs	r2, #2
 3340 0068 1A62     		str	r2, [r3, #32]
1206:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3341              		.loc 1 1206 0
 3342 006a 2023     		movs	r3, #32
 3343 006c 84F88130 		strb	r3, [r4, #129]
1209:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 3344              		.loc 1 1209 0
 3345 0070 2046     		mov	r0, r4
 3346              	.LVL275:
 3347 0072 FFF7FEFF 		bl	HAL_SMARTCARD_AbortTransmitCpltCallback
 3348              	.LVL276:
 3349              	.L238:
1213:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3350              		.loc 1 1213 0
 3351 0076 0020     		movs	r0, #0
 3352 0078 10BD     		pop	{r4, pc}
 3353              	.LVL277:
 3354              	.L241:
 3355 007a 00BF     		.align	2
 3356              	.L240:
 3357 007c 00000000 		.word	SMARTCARD_DMATxOnlyAbortCallback
 3358              		.cfi_endproc
 3359              	.LFE150:
 3361              		.section	.text.SMARTCARD_DMATxOnlyAbortCallback,"ax",%progbits
 3362              		.align	2
 3363              		.thumb
 3364              		.thumb_func
 3366              	SMARTCARD_DMATxOnlyAbortCallback:
 3367              	.LFB173:
2108:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = (SMARTCARD_HandleTypeDef*)(hdma->Parent);
 3368              		.loc 1 2108 0
 3369              		.cfi_startproc
 3370              		@ args = 0, pretend = 0, frame = 0
 3371              		@ frame_needed = 0, uses_anonymous_args = 0
 3372              	.LVL278:
 3373 0000 08B5     		push	{r3, lr}
 3374              	.LCFI39:
 3375              		.cfi_def_cfa_offset 8
 3376              		.cfi_offset 3, -8
 3377              		.cfi_offset 14, -4
2109:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3378              		.loc 1 2109 0
 3379 0002 806B     		ldr	r0, [r0, #56]
 3380              	.LVL279:
2111:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3381              		.loc 1 2111 0
 3382 0004 0023     		movs	r3, #0
 3383 0006 A0F86E30 		strh	r3, [r0, #110]	@ movhi
2114:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3384              		.loc 1 2114 0
 3385 000a 0368     		ldr	r3, [r0]
 3386 000c 0222     		movs	r2, #2
 3387 000e 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccq2I8Qf.s 			page 108


2117:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3388              		.loc 1 2117 0
 3389 0010 2023     		movs	r3, #32
 3390 0012 80F88130 		strb	r3, [r0, #129]
2120:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 3391              		.loc 1 2120 0
 3392 0016 FFF7FEFF 		bl	HAL_SMARTCARD_AbortTransmitCpltCallback
 3393              	.LVL280:
 3394 001a 08BD     		pop	{r3, pc}
 3395              		.cfi_endproc
 3396              	.LFE173:
 3398              		.section	.text.HAL_SMARTCARD_AbortReceiveCpltCallback,"ax",%progbits
 3399              		.align	2
 3400              		.weak	HAL_SMARTCARD_AbortReceiveCpltCallback
 3401              		.thumb
 3402              		.thumb_func
 3404              	HAL_SMARTCARD_AbortReceiveCpltCallback:
 3405              	.LFB158:
1587:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Prevent unused argument(s) compilation warning */
 3406              		.loc 1 1587 0
 3407              		.cfi_startproc
 3408              		@ args = 0, pretend = 0, frame = 0
 3409              		@ frame_needed = 0, uses_anonymous_args = 0
 3410              		@ link register save eliminated.
 3411              	.LVL281:
 3412 0000 7047     		bx	lr
 3413              		.cfi_endproc
 3414              	.LFE158:
 3416 0002 00BF     		.section	.text.HAL_SMARTCARD_AbortReceive_IT,"ax",%progbits
 3417              		.align	2
 3418              		.global	HAL_SMARTCARD_AbortReceive_IT
 3419              		.thumb
 3420              		.thumb_func
 3422              	HAL_SMARTCARD_AbortReceive_IT:
 3423              	.LFB151:
1231:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RTOIE, EOBIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3424              		.loc 1 1231 0
 3425              		.cfi_startproc
 3426              		@ args = 0, pretend = 0, frame = 0
 3427              		@ frame_needed = 0, uses_anonymous_args = 0
 3428              	.LVL282:
1231:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Disable RTOIE, EOBIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3429              		.loc 1 1231 0
 3430 0000 10B5     		push	{r4, lr}
 3431              	.LCFI40:
 3432              		.cfi_def_cfa_offset 8
 3433              		.cfi_offset 4, -8
 3434              		.cfi_offset 14, -4
 3435 0002 0446     		mov	r4, r0
1233:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3436              		.loc 1 1233 0
 3437 0004 0268     		ldr	r2, [r0]
 3438 0006 1168     		ldr	r1, [r2]
 3439 0008 1E4B     		ldr	r3, .L251
 3440 000a 0B40     		ands	r3, r3, r1
 3441 000c 1360     		str	r3, [r2]
1236:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
ARM GAS  /tmp/ccq2I8Qf.s 			page 109


 3442              		.loc 1 1236 0
 3443 000e 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 3444 0012 DBB2     		uxtb	r3, r3
 3445 0014 202B     		cmp	r3, #32
 3446 0016 04D1     		bne	.L246
1239:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 3447              		.loc 1 1239 0
 3448 0018 0268     		ldr	r2, [r0]
 3449 001a 9368     		ldr	r3, [r2, #8]
 3450 001c 23F00103 		bic	r3, r3, #1
 3451 0020 9360     		str	r3, [r2, #8]
 3452              	.L246:
1243:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   {
 3453              		.loc 1 1243 0
 3454 0022 2368     		ldr	r3, [r4]
 3455 0024 9A68     		ldr	r2, [r3, #8]
 3456 0026 12F0400F 		tst	r2, #64
 3457 002a 1DD0     		beq	.L247
1245:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3458              		.loc 1 1245 0
 3459 002c 9A68     		ldr	r2, [r3, #8]
 3460 002e 22F04002 		bic	r2, r2, #64
 3461 0032 9A60     		str	r2, [r3, #8]
1248:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     {
 3462              		.loc 1 1248 0
 3463 0034 E36F     		ldr	r3, [r4, #124]
 3464 0036 4BB1     		cbz	r3, .L248
1252:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3465              		.loc 1 1252 0
 3466 0038 134A     		ldr	r2, .L251+4
 3467 003a 1A65     		str	r2, [r3, #80]
1255:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       {
 3468              		.loc 1 1255 0
 3469 003c E06F     		ldr	r0, [r4, #124]
 3470              	.LVL283:
 3471 003e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3472              	.LVL284:
 3473 0042 E8B1     		cbz	r0, .L249
1258:HALLIB/Src/stm32f7xx_hal_smartcard.c ****       }
 3474              		.loc 1 1258 0
 3475 0044 E06F     		ldr	r0, [r4, #124]
 3476 0046 036D     		ldr	r3, [r0, #80]
 3477 0048 9847     		blx	r3
 3478              	.LVL285:
 3479 004a 19E0     		b	.L249
 3480              	.LVL286:
 3481              	.L248:
1264:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3482              		.loc 1 1264 0
 3483 004c 0023     		movs	r3, #0
 3484 004e A4F87630 		strh	r3, [r4, #118]	@ movhi
1267:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3485              		.loc 1 1267 0
 3486 0052 2368     		ldr	r3, [r4]
 3487 0054 41F60F02 		movw	r2, #6159
 3488 0058 1A62     		str	r2, [r3, #32]
1270:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
ARM GAS  /tmp/ccq2I8Qf.s 			page 110


 3489              		.loc 1 1270 0
 3490 005a 2023     		movs	r3, #32
 3491 005c 84F88230 		strb	r3, [r4, #130]
1273:HALLIB/Src/stm32f7xx_hal_smartcard.c ****     }
 3492              		.loc 1 1273 0
 3493 0060 2046     		mov	r0, r4
 3494              	.LVL287:
 3495 0062 FFF7FEFF 		bl	HAL_SMARTCARD_AbortReceiveCpltCallback
 3496              	.LVL288:
 3497 0066 0BE0     		b	.L249
 3498              	.LVL289:
 3499              	.L247:
1279:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3500              		.loc 1 1279 0
 3501 0068 0022     		movs	r2, #0
 3502 006a A4F87620 		strh	r2, [r4, #118]	@ movhi
1282:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3503              		.loc 1 1282 0
 3504 006e 41F60F02 		movw	r2, #6159
 3505 0072 1A62     		str	r2, [r3, #32]
1285:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3506              		.loc 1 1285 0
 3507 0074 2023     		movs	r3, #32
 3508 0076 84F88230 		strb	r3, [r4, #130]
1288:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   }
 3509              		.loc 1 1288 0
 3510 007a 2046     		mov	r0, r4
 3511              	.LVL290:
 3512 007c FFF7FEFF 		bl	HAL_SMARTCARD_AbortReceiveCpltCallback
 3513              	.LVL291:
 3514              	.L249:
1292:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3515              		.loc 1 1292 0
 3516 0080 0020     		movs	r0, #0
 3517 0082 10BD     		pop	{r4, pc}
 3518              	.LVL292:
 3519              	.L252:
 3520              		.align	2
 3521              	.L251:
 3522 0084 DFFEFFF3 		.word	-201326881
 3523 0088 00000000 		.word	SMARTCARD_DMARxOnlyAbortCallback
 3524              		.cfi_endproc
 3525              	.LFE151:
 3527              		.section	.text.SMARTCARD_DMARxOnlyAbortCallback,"ax",%progbits
 3528              		.align	2
 3529              		.thumb
 3530              		.thumb_func
 3532              	SMARTCARD_DMARxOnlyAbortCallback:
 3533              	.LFB174:
2132:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   SMARTCARD_HandleTypeDef* hsmartcard = ( SMARTCARD_HandleTypeDef* )(hdma->Parent);
 3534              		.loc 1 2132 0
 3535              		.cfi_startproc
 3536              		@ args = 0, pretend = 0, frame = 0
 3537              		@ frame_needed = 0, uses_anonymous_args = 0
 3538              	.LVL293:
 3539 0000 08B5     		push	{r3, lr}
 3540              	.LCFI41:
ARM GAS  /tmp/ccq2I8Qf.s 			page 111


 3541              		.cfi_def_cfa_offset 8
 3542              		.cfi_offset 3, -8
 3543              		.cfi_offset 14, -4
2133:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3544              		.loc 1 2133 0
 3545 0002 806B     		ldr	r0, [r0, #56]
 3546              	.LVL294:
2135:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3547              		.loc 1 2135 0
 3548 0004 0023     		movs	r3, #0
 3549 0006 A0F87630 		strh	r3, [r0, #118]	@ movhi
2138:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3550              		.loc 1 2138 0
 3551 000a 0368     		ldr	r3, [r0]
 3552 000c 41F60F02 		movw	r2, #6159
 3553 0010 1A62     		str	r2, [r3, #32]
2141:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3554              		.loc 1 2141 0
 3555 0012 2023     		movs	r3, #32
 3556 0014 80F88230 		strb	r3, [r0, #130]
2144:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 3557              		.loc 1 2144 0
 3558 0018 FFF7FEFF 		bl	HAL_SMARTCARD_AbortReceiveCpltCallback
 3559              	.LVL295:
 3560 001c 08BD     		pop	{r3, pc}
 3561              		.cfi_endproc
 3562              	.LFE174:
 3564 001e 00BF     		.section	.text.HAL_SMARTCARD_GetState,"ax",%progbits
 3565              		.align	2
 3566              		.global	HAL_SMARTCARD_GetState
 3567              		.thumb
 3568              		.thumb_func
 3570              	HAL_SMARTCARD_GetState:
 3571              	.LFB159:
1626:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   /* Return SMARTCARD handle state */
 3572              		.loc 1 1626 0
 3573              		.cfi_startproc
 3574              		@ args = 0, pretend = 0, frame = 0
 3575              		@ frame_needed = 0, uses_anonymous_args = 0
 3576              		@ link register save eliminated.
 3577              	.LVL296:
1629:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   temp2 = hsmartcard->RxState;
 3578              		.loc 1 1629 0
 3579 0000 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 3580              	.LVL297:
1630:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3581              		.loc 1 1630 0
 3582 0004 90F88200 		ldrb	r0, [r0, #130]	@ zero_extendqisi2
 3583              	.LVL298:
1633:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3584              		.loc 1 1633 0
 3585 0008 1843     		orrs	r0, r0, r3
 3586              	.LVL299:
 3587 000a 7047     		bx	lr
 3588              		.cfi_endproc
 3589              	.LFE159:
 3591              		.section	.text.HAL_SMARTCARD_GetError,"ax",%progbits
ARM GAS  /tmp/ccq2I8Qf.s 			page 112


 3592              		.align	2
 3593              		.global	HAL_SMARTCARD_GetError
 3594              		.thumb
 3595              		.thumb_func
 3597              	HAL_SMARTCARD_GetError:
 3598              	.LFB160:
1642:HALLIB/Src/stm32f7xx_hal_smartcard.c ****   return hsmartcard->ErrorCode;
 3599              		.loc 1 1642 0
 3600              		.cfi_startproc
 3601              		@ args = 0, pretend = 0, frame = 0
 3602              		@ frame_needed = 0, uses_anonymous_args = 0
 3603              		@ link register save eliminated.
 3604              	.LVL300:
1643:HALLIB/Src/stm32f7xx_hal_smartcard.c **** }
 3605              		.loc 1 1643 0
 3606 0000 D0F88400 		ldr	r0, [r0, #132]
 3607              	.LVL301:
1644:HALLIB/Src/stm32f7xx_hal_smartcard.c **** 
 3608              		.loc 1 1644 0
 3609 0004 7047     		bx	lr
 3610              		.cfi_endproc
 3611              	.LFE160:
 3613 0006 00BF     		.text
 3614              	.Letext0:
 3615              		.file 2 "/opt/5.4.2016q3/arm-none-eabi/include/machine/_default_types.h"
 3616              		.file 3 "/opt/5.4.2016q3/arm-none-eabi/include/sys/_stdint.h"
 3617              		.file 4 "Inc/stm32f767xx.h"
 3618              		.file 5 "Inc/stm32f7xx.h"
 3619              		.file 6 "HALLIB/Inc/stm32f7xx_hal_def.h"
 3620              		.file 7 "HALLIB/Inc/stm32f7xx_hal_dma.h"
 3621              		.file 8 "HALLIB/Inc/stm32f7xx_hal_smartcard.h"
 3622              		.file 9 "HALLIB/Inc/stm32f7xx_hal_rcc.h"
 3623              		.file 10 "HALLIB/Inc/stm32f7xx_hal.h"
 3624              		.file 11 "CORE/core_cm7.h"
ARM GAS  /tmp/ccq2I8Qf.s 			page 113


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_smartcard.c
     /tmp/ccq2I8Qf.s:21     .text.SMARTCARD_AdvFeatureConfig:00000000 $t
     /tmp/ccq2I8Qf.s:25     .text.SMARTCARD_AdvFeatureConfig:00000000 SMARTCARD_AdvFeatureConfig
     /tmp/ccq2I8Qf.s:123    .text.SMARTCARD_EndTxTransfer:00000000 $t
     /tmp/ccq2I8Qf.s:127    .text.SMARTCARD_EndTxTransfer:00000000 SMARTCARD_EndTxTransfer
     /tmp/ccq2I8Qf.s:153    .text.SMARTCARD_EndRxTransfer:00000000 $t
     /tmp/ccq2I8Qf.s:157    .text.SMARTCARD_EndRxTransfer:00000000 SMARTCARD_EndRxTransfer
     /tmp/ccq2I8Qf.s:183    .text.SMARTCARD_DMATransmitCplt:00000000 $t
     /tmp/ccq2I8Qf.s:187    .text.SMARTCARD_DMATransmitCplt:00000000 SMARTCARD_DMATransmitCplt
     /tmp/ccq2I8Qf.s:255    .text.SMARTCARD_Transmit_IT:00000000 $t
     /tmp/ccq2I8Qf.s:259    .text.SMARTCARD_Transmit_IT:00000000 SMARTCARD_Transmit_IT
     /tmp/ccq2I8Qf.s:357    .text.SMARTCARD_SetConfig:00000000 $t
     /tmp/ccq2I8Qf.s:361    .text.SMARTCARD_SetConfig:00000000 SMARTCARD_SetConfig
     /tmp/ccq2I8Qf.s:481    .text.SMARTCARD_SetConfig:0000009a $d
     /tmp/ccq2I8Qf.s:485    .text.SMARTCARD_SetConfig:0000009e $t
     /tmp/ccq2I8Qf.s:520    .text.SMARTCARD_SetConfig:000000c8 $d
     /tmp/ccq2I8Qf.s:657    .text.SMARTCARD_SetConfig:0000016e $d
     /tmp/ccq2I8Qf.s:747    .text.SMARTCARD_SetConfig:000001e8 $d
     /tmp/ccq2I8Qf.s:760    .text.SMARTCARD_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccq2I8Qf.s:764    .text.SMARTCARD_WaitOnFlagUntilTimeout:00000000 SMARTCARD_WaitOnFlagUntilTimeout
     /tmp/ccq2I8Qf.s:841    .text.SMARTCARD_CheckIdleState:00000000 $t
     /tmp/ccq2I8Qf.s:845    .text.SMARTCARD_CheckIdleState:00000000 SMARTCARD_CheckIdleState
     /tmp/ccq2I8Qf.s:909    .text.HAL_SMARTCARD_MspInit:00000000 $t
     /tmp/ccq2I8Qf.s:914    .text.HAL_SMARTCARD_MspInit:00000000 HAL_SMARTCARD_MspInit
     /tmp/ccq2I8Qf.s:927    .text.HAL_SMARTCARD_Init:00000000 $t
     /tmp/ccq2I8Qf.s:932    .text.HAL_SMARTCARD_Init:00000000 HAL_SMARTCARD_Init
     /tmp/ccq2I8Qf.s:1032   .text.HAL_SMARTCARD_MspDeInit:00000000 $t
     /tmp/ccq2I8Qf.s:1037   .text.HAL_SMARTCARD_MspDeInit:00000000 HAL_SMARTCARD_MspDeInit
     /tmp/ccq2I8Qf.s:1050   .text.HAL_SMARTCARD_DeInit:00000000 $t
     /tmp/ccq2I8Qf.s:1055   .text.HAL_SMARTCARD_DeInit:00000000 HAL_SMARTCARD_DeInit
     /tmp/ccq2I8Qf.s:1127   .text.HAL_SMARTCARD_Transmit:00000000 $t
     /tmp/ccq2I8Qf.s:1132   .text.HAL_SMARTCARD_Transmit:00000000 HAL_SMARTCARD_Transmit
     /tmp/ccq2I8Qf.s:1319   .text.HAL_SMARTCARD_Receive:00000000 $t
     /tmp/ccq2I8Qf.s:1324   .text.HAL_SMARTCARD_Receive:00000000 HAL_SMARTCARD_Receive
     /tmp/ccq2I8Qf.s:1455   .text.HAL_SMARTCARD_Transmit_IT:00000000 $t
     /tmp/ccq2I8Qf.s:1460   .text.HAL_SMARTCARD_Transmit_IT:00000000 HAL_SMARTCARD_Transmit_IT
     /tmp/ccq2I8Qf.s:1582   .text.HAL_SMARTCARD_Receive_IT:00000000 $t
     /tmp/ccq2I8Qf.s:1587   .text.HAL_SMARTCARD_Receive_IT:00000000 HAL_SMARTCARD_Receive_IT
     /tmp/ccq2I8Qf.s:1681   .text.HAL_SMARTCARD_Transmit_DMA:00000000 $t
     /tmp/ccq2I8Qf.s:1686   .text.HAL_SMARTCARD_Transmit_DMA:00000000 HAL_SMARTCARD_Transmit_DMA
     /tmp/ccq2I8Qf.s:1820   .text.HAL_SMARTCARD_Transmit_DMA:000000bc $d
     /tmp/ccq2I8Qf.s:2481   .text.SMARTCARD_DMAError:00000000 SMARTCARD_DMAError
     /tmp/ccq2I8Qf.s:1826   .text.HAL_SMARTCARD_Receive_DMA:00000000 $t
     /tmp/ccq2I8Qf.s:1831   .text.HAL_SMARTCARD_Receive_DMA:00000000 HAL_SMARTCARD_Receive_DMA
     /tmp/ccq2I8Qf.s:1938   .text.HAL_SMARTCARD_Receive_DMA:00000088 $d
     /tmp/ccq2I8Qf.s:2327   .text.SMARTCARD_DMAReceiveCplt:00000000 SMARTCARD_DMAReceiveCplt
     /tmp/ccq2I8Qf.s:1944   .text.HAL_SMARTCARD_Abort:00000000 $t
     /tmp/ccq2I8Qf.s:1949   .text.HAL_SMARTCARD_Abort:00000000 HAL_SMARTCARD_Abort
     /tmp/ccq2I8Qf.s:2036   .text.HAL_SMARTCARD_Abort:0000007c $d
     /tmp/ccq2I8Qf.s:2041   .text.HAL_SMARTCARD_AbortTransmit:00000000 $t
     /tmp/ccq2I8Qf.s:2046   .text.HAL_SMARTCARD_AbortTransmit:00000000 HAL_SMARTCARD_AbortTransmit
     /tmp/ccq2I8Qf.s:2112   .text.HAL_SMARTCARD_AbortReceive:00000000 $t
     /tmp/ccq2I8Qf.s:2117   .text.HAL_SMARTCARD_AbortReceive:00000000 HAL_SMARTCARD_AbortReceive
     /tmp/ccq2I8Qf.s:2184   .text.HAL_SMARTCARD_AbortReceive:00000058 $d
     /tmp/ccq2I8Qf.s:2189   .text.HAL_SMARTCARD_TxCpltCallback:00000000 $t
     /tmp/ccq2I8Qf.s:2194   .text.HAL_SMARTCARD_TxCpltCallback:00000000 HAL_SMARTCARD_TxCpltCallback
ARM GAS  /tmp/ccq2I8Qf.s 			page 114


     /tmp/ccq2I8Qf.s:2207   .text.SMARTCARD_EndTransmit_IT:00000000 $t
     /tmp/ccq2I8Qf.s:2211   .text.SMARTCARD_EndTransmit_IT:00000000 SMARTCARD_EndTransmit_IT
     /tmp/ccq2I8Qf.s:2305   .text.HAL_SMARTCARD_RxCpltCallback:00000000 $t
     /tmp/ccq2I8Qf.s:2310   .text.HAL_SMARTCARD_RxCpltCallback:00000000 HAL_SMARTCARD_RxCpltCallback
     /tmp/ccq2I8Qf.s:2323   .text.SMARTCARD_DMAReceiveCplt:00000000 $t
     /tmp/ccq2I8Qf.s:2372   .text.SMARTCARD_Receive_IT:00000000 $t
     /tmp/ccq2I8Qf.s:2376   .text.SMARTCARD_Receive_IT:00000000 SMARTCARD_Receive_IT
     /tmp/ccq2I8Qf.s:2459   .text.HAL_SMARTCARD_ErrorCallback:00000000 $t
     /tmp/ccq2I8Qf.s:2464   .text.HAL_SMARTCARD_ErrorCallback:00000000 HAL_SMARTCARD_ErrorCallback
     /tmp/ccq2I8Qf.s:2477   .text.SMARTCARD_DMAError:00000000 $t
     /tmp/ccq2I8Qf.s:2547   .text.HAL_SMARTCARD_IRQHandler:00000000 $t
     /tmp/ccq2I8Qf.s:2552   .text.HAL_SMARTCARD_IRQHandler:00000000 HAL_SMARTCARD_IRQHandler
     /tmp/ccq2I8Qf.s:2903   .text.HAL_SMARTCARD_IRQHandler:00000218 $d
     /tmp/ccq2I8Qf.s:2913   .text.SMARTCARD_DMAAbortOnError:00000000 SMARTCARD_DMAAbortOnError
     /tmp/ccq2I8Qf.s:2909   .text.SMARTCARD_DMAAbortOnError:00000000 $t
     /tmp/ccq2I8Qf.s:2941   .text.HAL_SMARTCARD_AbortCpltCallback:00000000 $t
     /tmp/ccq2I8Qf.s:2946   .text.HAL_SMARTCARD_AbortCpltCallback:00000000 HAL_SMARTCARD_AbortCpltCallback
     /tmp/ccq2I8Qf.s:2959   .text.HAL_SMARTCARD_Abort_IT:00000000 $t
     /tmp/ccq2I8Qf.s:2964   .text.HAL_SMARTCARD_Abort_IT:00000000 HAL_SMARTCARD_Abort_IT
     /tmp/ccq2I8Qf.s:3122   .text.HAL_SMARTCARD_Abort_IT:000000cc $d
     /tmp/ccq2I8Qf.s:3188   .text.SMARTCARD_DMATxAbortCallback:00000000 SMARTCARD_DMATxAbortCallback
     /tmp/ccq2I8Qf.s:3133   .text.SMARTCARD_DMARxAbortCallback:00000000 SMARTCARD_DMARxAbortCallback
     /tmp/ccq2I8Qf.s:3129   .text.SMARTCARD_DMARxAbortCallback:00000000 $t
     /tmp/ccq2I8Qf.s:3184   .text.SMARTCARD_DMATxAbortCallback:00000000 $t
     /tmp/ccq2I8Qf.s:3239   .text.HAL_SMARTCARD_AbortTransmitCpltCallback:00000000 $t
     /tmp/ccq2I8Qf.s:3244   .text.HAL_SMARTCARD_AbortTransmitCpltCallback:00000000 HAL_SMARTCARD_AbortTransmitCpltCallback
     /tmp/ccq2I8Qf.s:3257   .text.HAL_SMARTCARD_AbortTransmit_IT:00000000 $t
     /tmp/ccq2I8Qf.s:3262   .text.HAL_SMARTCARD_AbortTransmit_IT:00000000 HAL_SMARTCARD_AbortTransmit_IT
     /tmp/ccq2I8Qf.s:3357   .text.HAL_SMARTCARD_AbortTransmit_IT:0000007c $d
     /tmp/ccq2I8Qf.s:3366   .text.SMARTCARD_DMATxOnlyAbortCallback:00000000 SMARTCARD_DMATxOnlyAbortCallback
     /tmp/ccq2I8Qf.s:3362   .text.SMARTCARD_DMATxOnlyAbortCallback:00000000 $t
     /tmp/ccq2I8Qf.s:3399   .text.HAL_SMARTCARD_AbortReceiveCpltCallback:00000000 $t
     /tmp/ccq2I8Qf.s:3404   .text.HAL_SMARTCARD_AbortReceiveCpltCallback:00000000 HAL_SMARTCARD_AbortReceiveCpltCallback
     /tmp/ccq2I8Qf.s:3417   .text.HAL_SMARTCARD_AbortReceive_IT:00000000 $t
     /tmp/ccq2I8Qf.s:3422   .text.HAL_SMARTCARD_AbortReceive_IT:00000000 HAL_SMARTCARD_AbortReceive_IT
     /tmp/ccq2I8Qf.s:3522   .text.HAL_SMARTCARD_AbortReceive_IT:00000084 $d
     /tmp/ccq2I8Qf.s:3532   .text.SMARTCARD_DMARxOnlyAbortCallback:00000000 SMARTCARD_DMARxOnlyAbortCallback
     /tmp/ccq2I8Qf.s:3528   .text.SMARTCARD_DMARxOnlyAbortCallback:00000000 $t
     /tmp/ccq2I8Qf.s:3565   .text.HAL_SMARTCARD_GetState:00000000 $t
     /tmp/ccq2I8Qf.s:3570   .text.HAL_SMARTCARD_GetState:00000000 HAL_SMARTCARD_GetState
     /tmp/ccq2I8Qf.s:3592   .text.HAL_SMARTCARD_GetError:00000000 $t
     /tmp/ccq2I8Qf.s:3597   .text.HAL_SMARTCARD_GetError:00000000 HAL_SMARTCARD_GetError
                     .debug_frame:00000010 $d
     /tmp/ccq2I8Qf.s:533    .text.SMARTCARD_SetConfig:000000d5 $d
     /tmp/ccq2I8Qf.s:533    .text.SMARTCARD_SetConfig:000000d6 $t
     /tmp/ccq2I8Qf.s:666    .text.SMARTCARD_SetConfig:00000177 $d
     /tmp/ccq2I8Qf.s:666    .text.SMARTCARD_SetConfig:00000178 $t

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
