ARM GAS  /tmp/ccQYuIjq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f7xx_ll_utils.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.UTILS_SetFlashLatency,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	UTILS_SetFlashLatency:
  26              	.LFB405:
  27              		.file 1 "HALLIB/Src/stm32f7xx_ll_utils.c"
   1:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
   2:HALLIB/Src/stm32f7xx_ll_utils.c ****   ******************************************************************************
   3:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @file    stm32f7xx_ll_utils.c
   4:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @author  MCD Application Team
   5:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief   UTILS LL module driver.
   6:HALLIB/Src/stm32f7xx_ll_utils.c ****   ******************************************************************************
   7:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @attention
   8:HALLIB/Src/stm32f7xx_ll_utils.c ****   *
   9:HALLIB/Src/stm32f7xx_ll_utils.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  10:HALLIB/Src/stm32f7xx_ll_utils.c ****   *
  11:HALLIB/Src/stm32f7xx_ll_utils.c ****   * Redistribution and use in source and binary forms, with or without modification,
  12:HALLIB/Src/stm32f7xx_ll_utils.c ****   * are permitted provided that the following conditions are met:
  13:HALLIB/Src/stm32f7xx_ll_utils.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:HALLIB/Src/stm32f7xx_ll_utils.c ****   *      this list of conditions and the following disclaimer.
  15:HALLIB/Src/stm32f7xx_ll_utils.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:HALLIB/Src/stm32f7xx_ll_utils.c ****   *      this list of conditions and the following disclaimer in the documentation
  17:HALLIB/Src/stm32f7xx_ll_utils.c ****   *      and/or other materials provided with the distribution.
  18:HALLIB/Src/stm32f7xx_ll_utils.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:HALLIB/Src/stm32f7xx_ll_utils.c ****   *      may be used to endorse or promote products derived from this software
  20:HALLIB/Src/stm32f7xx_ll_utils.c ****   *      without specific prior written permission.
  21:HALLIB/Src/stm32f7xx_ll_utils.c ****   *
  22:HALLIB/Src/stm32f7xx_ll_utils.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:HALLIB/Src/stm32f7xx_ll_utils.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:HALLIB/Src/stm32f7xx_ll_utils.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:HALLIB/Src/stm32f7xx_ll_utils.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:HALLIB/Src/stm32f7xx_ll_utils.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:HALLIB/Src/stm32f7xx_ll_utils.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:HALLIB/Src/stm32f7xx_ll_utils.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:HALLIB/Src/stm32f7xx_ll_utils.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:HALLIB/Src/stm32f7xx_ll_utils.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:HALLIB/Src/stm32f7xx_ll_utils.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/ccQYuIjq.s 			page 2


  32:HALLIB/Src/stm32f7xx_ll_utils.c ****   *
  33:HALLIB/Src/stm32f7xx_ll_utils.c ****   ******************************************************************************
  34:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
  35:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Includes ------------------------------------------------------------------*/
  36:HALLIB/Src/stm32f7xx_ll_utils.c **** #include "stm32f7xx_ll_utils.h"
  37:HALLIB/Src/stm32f7xx_ll_utils.c **** #include "stm32f7xx_ll_rcc.h"
  38:HALLIB/Src/stm32f7xx_ll_utils.c **** #include "stm32f7xx_ll_system.h"
  39:HALLIB/Src/stm32f7xx_ll_utils.c **** #include "stm32f7xx_ll_pwr.h"
  40:HALLIB/Src/stm32f7xx_ll_utils.c **** #ifdef  USE_FULL_ASSERT
  41:HALLIB/Src/stm32f7xx_ll_utils.c **** #include "stm32_assert.h"
  42:HALLIB/Src/stm32f7xx_ll_utils.c **** #else
  43:HALLIB/Src/stm32f7xx_ll_utils.c **** #define assert_param(expr) ((void)0U)
  44:HALLIB/Src/stm32f7xx_ll_utils.c **** #endif /* USE_FULL_ASSERT */
  45:HALLIB/Src/stm32f7xx_ll_utils.c **** 
  46:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @addtogroup STM32F7xx_LL_Driver
  47:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
  48:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
  49:HALLIB/Src/stm32f7xx_ll_utils.c **** 
  50:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @addtogroup UTILS_LL
  51:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
  52:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
  53:HALLIB/Src/stm32f7xx_ll_utils.c **** 
  54:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Private types -------------------------------------------------------------*/
  55:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Private variables ---------------------------------------------------------*/
  56:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Private constants ---------------------------------------------------------*/
  57:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @addtogroup UTILS_LL_Private_Constants
  58:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
  59:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
  60:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_MAX_FREQUENCY_SCALE1  216000000U /*!< Maximum frequency for system clock at power sca
  61:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_MAX_FREQUENCY_SCALE2  180000000U       /*!< Maximum frequency for system clock at pow
  62:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_MAX_FREQUENCY_SCALE3  144000000U       /*!< Maximum frequency for system clock at pow
  63:HALLIB/Src/stm32f7xx_ll_utils.c **** 
  64:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Defines used for PLL range */
  65:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_PLLVCO_INPUT_MIN         950000U       /*!< Frequency min for PLLVCO input, in Hz   *
  66:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_PLLVCO_INPUT_MAX        2100000U       /*!< Frequency max for PLLVCO input, in Hz   *
  67:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_PLLVCO_OUTPUT_MIN     100000000U       /*!< Frequency min for PLLVCO output, in Hz  *
  68:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_PLLVCO_OUTPUT_MAX     432000000U       /*!< Frequency max for PLLVCO output, in Hz  *
  69:HALLIB/Src/stm32f7xx_ll_utils.c **** 
  70:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Defines used for HSE range */
  71:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_HSE_FREQUENCY_MIN      4000000U        /*!< Frequency min for HSE frequency, in Hz   
  72:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_HSE_FREQUENCY_MAX     26000000U        /*!< Frequency max for HSE frequency, in Hz   
  73:HALLIB/Src/stm32f7xx_ll_utils.c **** 
  74:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Defines used for FLASH latency according to HCLK Frequency */
  75:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE1_LATENCY1_FREQ   30000000U      /*!< HCLK frequency to set FLASH latency 1 in p
  76:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE1_LATENCY2_FREQ   60000000U      /*!< HCLK frequency to set FLASH latency 2 in p
  77:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE1_LATENCY3_FREQ   90000000U      /*!< HCLK frequency to set FLASH latency 3 in p
  78:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE1_LATENCY4_FREQ  120000000U      /*!< HCLK frequency to set FLASH latency 4 in p
  79:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE1_LATENCY5_FREQ  150000000U      /*!< HCLK frequency to set FLASH latency 5 in p
  80:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE1_LATENCY6_FREQ  180000000U      /*!< HCLK frequency to set FLASH latency 6 in p
  81:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE1_LATENCY7_FREQ  210000000U      /*!< HCLK frequency to set FLASH latency 7 in p
  82:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE2_LATENCY1_FREQ   30000000U      /*!< HCLK frequency to set FLASH latency 1 in p
  83:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE2_LATENCY2_FREQ   60000000U      /*!< HCLK frequency to set FLASH latency 2 in p
  84:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE2_LATENCY3_FREQ   90000000U      /*!< HCLK frequency to set FLASH latency 3 in p
  85:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE2_LATENCY4_FREQ  120000000U      /*!< HCLK frequency to set FLASH latency 4 in p
  86:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE2_LATENCY5_FREQ  150000000U      /*!< HCLK frequency to set FLASH latency 5 in p
  87:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE3_LATENCY1_FREQ   30000000U      /*!< HCLK frequency to set FLASH latency 1 in p
  88:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE3_LATENCY2_FREQ   60000000U      /*!< HCLK frequency to set FLASH latency 2 in p
ARM GAS  /tmp/ccQYuIjq.s 			page 3


  89:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE3_LATENCY3_FREQ   90000000U      /*!< HCLK frequency to set FLASH latency 3 in p
  90:HALLIB/Src/stm32f7xx_ll_utils.c **** #define UTILS_SCALE3_LATENCY4_FREQ  120000000U      /*!< HCLK frequency to set FLASH latency 4 in p
  91:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
  92:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @}
  93:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
  94:HALLIB/Src/stm32f7xx_ll_utils.c **** 
  95:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Private macros ------------------------------------------------------------*/
  96:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @addtogroup UTILS_LL_Private_Macros
  97:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
  98:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
  99:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_SYSCLK_DIV(__VALUE__) (((__VALUE__) == LL_RCC_SYSCLK_DIV_1)   \
 100:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_2)   \
 101:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_4)   \
 102:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_8)   \
 103:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_16)  \
 104:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_64)  \
 105:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_128) \
 106:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_256) \
 107:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_SYSCLK_DIV_512))
 108:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 109:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_APB1_DIV(__VALUE__) (((__VALUE__) == LL_RCC_APB1_DIV_1) \
 110:HALLIB/Src/stm32f7xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB1_DIV_2) \
 111:HALLIB/Src/stm32f7xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB1_DIV_4) \
 112:HALLIB/Src/stm32f7xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB1_DIV_8) \
 113:HALLIB/Src/stm32f7xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB1_DIV_16))
 114:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 115:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_APB2_DIV(__VALUE__) (((__VALUE__) == LL_RCC_APB2_DIV_1) \
 116:HALLIB/Src/stm32f7xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB2_DIV_2) \
 117:HALLIB/Src/stm32f7xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB2_DIV_4) \
 118:HALLIB/Src/stm32f7xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB2_DIV_8) \
 119:HALLIB/Src/stm32f7xx_ll_utils.c ****                                       || ((__VALUE__) == LL_RCC_APB2_DIV_16))
 120:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 121:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_PLLM_VALUE(__VALUE__) (((__VALUE__) == LL_RCC_PLLM_DIV_2)  \
 122:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_3)  \
 123:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_4)  \
 124:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_5)  \
 125:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_6)  \
 126:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_7)  \
 127:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_8)  \
 128:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_9)  \
 129:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_10) \
 130:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_11) \
 131:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_12) \
 132:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_13) \
 133:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_14) \
 134:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_15) \
 135:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_16) \
 136:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_17) \
 137:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_18) \
 138:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_19) \
 139:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_20) \
 140:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_21) \
 141:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_22) \
 142:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_23) \
 143:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_24) \
 144:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_25) \
 145:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_26) \
ARM GAS  /tmp/ccQYuIjq.s 			page 4


 146:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_27) \
 147:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_28) \
 148:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_29) \
 149:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_30) \
 150:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_31) \
 151:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_32) \
 152:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_33) \
 153:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_34) \
 154:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_35) \
 155:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_36) \
 156:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_37) \
 157:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_38) \
 158:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_39) \
 159:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_40) \
 160:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_41) \
 161:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_42) \
 162:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_43) \
 163:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_44) \
 164:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_45) \
 165:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_46) \
 166:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_47) \
 167:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_48) \
 168:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_49) \
 169:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_50) \
 170:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_51) \
 171:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_52) \
 172:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_53) \
 173:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_54) \
 174:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_55) \
 175:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_56) \
 176:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_57) \
 177:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_58) \
 178:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_59) \
 179:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_60) \
 180:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_61) \
 181:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_62) \
 182:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLM_DIV_63))
 183:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 184:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_PLLN_VALUE(__VALUE__) ((50 <= (__VALUE__)) && ((__VALUE__) <= 432))
 185:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 186:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_PLLP_VALUE(__VALUE__) (((__VALUE__) == LL_RCC_PLLP_DIV_2) \
 187:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLP_DIV_4) \
 188:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLP_DIV_6) \
 189:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__VALUE__) == LL_RCC_PLLP_DIV_8))
 190:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 191:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_PLLVCO_INPUT(__VALUE__)  ((UTILS_PLLVCO_INPUT_MIN <= (__VALUE__)) && ((__VALUE_
 192:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 193:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_PLLVCO_OUTPUT(__VALUE__) ((UTILS_PLLVCO_OUTPUT_MIN <= (__VALUE__)) && ((__VALUE
 194:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 195:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_PLL_FREQUENCY(__VALUE__) ((LL_PWR_GetRegulVoltageScaling() == LL_PWR_REGU_VOLTA
 196:HALLIB/Src/stm32f7xx_ll_utils.c ****                                               (LL_PWR_GetRegulVoltageScaling() == LL_PWR_REGU_VOLTA
 197:HALLIB/Src/stm32f7xx_ll_utils.c ****                                               ((__VALUE__) <= UTILS_MAX_FREQUENCY_SCALE3))
 198:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 199:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_HSE_BYPASS(__STATE__) (((__STATE__) == LL_UTILS_HSEBYPASS_ON) \
 200:HALLIB/Src/stm32f7xx_ll_utils.c ****                                         || ((__STATE__) == LL_UTILS_HSEBYPASS_OFF))
 201:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 202:HALLIB/Src/stm32f7xx_ll_utils.c **** #define IS_LL_UTILS_HSE_FREQUENCY(__FREQUENCY__) (((__FREQUENCY__) >= UTILS_HSE_FREQUENCY_MIN) && (
ARM GAS  /tmp/ccQYuIjq.s 			page 5


 203:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 204:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @}
 205:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 206:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Private function prototypes -----------------------------------------------*/
 207:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @defgroup UTILS_LL_Private_Functions UTILS Private functions
 208:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
 209:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 210:HALLIB/Src/stm32f7xx_ll_utils.c **** static uint32_t    UTILS_GetPLLOutputFrequency(uint32_t PLL_InputFrequency,
 211:HALLIB/Src/stm32f7xx_ll_utils.c ****                                                LL_UTILS_PLLInitTypeDef *UTILS_PLLInitStruct);
 212:HALLIB/Src/stm32f7xx_ll_utils.c **** static ErrorStatus UTILS_SetFlashLatency(uint32_t HCLK_Frequency);
 213:HALLIB/Src/stm32f7xx_ll_utils.c **** static ErrorStatus UTILS_EnablePLLAndSwitchSystem(uint32_t SYSCLK_Frequency, LL_UTILS_ClkInitTypeDe
 214:HALLIB/Src/stm32f7xx_ll_utils.c **** static ErrorStatus UTILS_PLL_IsBusy(void);
 215:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 216:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @}
 217:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 218:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 219:HALLIB/Src/stm32f7xx_ll_utils.c **** /* Exported functions --------------------------------------------------------*/
 220:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @addtogroup UTILS_LL_Exported_Functions
 221:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
 222:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 223:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 224:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @addtogroup UTILS_LL_EF_DELAY
 225:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
 226:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 227:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 228:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 229:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  This function configures the Cortex-M SysTick source to have 1ms time base.
 230:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   When a RTOS is used, it is recommended to avoid changing the Systick
 231:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         configuration by calling this function, for a delay use rather osDelay RTOS service.
 232:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  HCLKFrequency HCLK frequency in Hz
 233:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   HCLK frequency can be calculated thanks to RCC helper macro or function @ref LL_RCC_Get
 234:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval None
 235:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 236:HALLIB/Src/stm32f7xx_ll_utils.c **** void LL_Init1msTick(uint32_t HCLKFrequency)
 237:HALLIB/Src/stm32f7xx_ll_utils.c **** {
 238:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Use frequency provided in argument */
 239:HALLIB/Src/stm32f7xx_ll_utils.c ****   LL_InitTick(HCLKFrequency, 1000U);
 240:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 241:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 242:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 243:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  This function provides accurate delay (in milliseconds) based
 244:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         on SysTick counter flag
 245:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   When a RTOS is used, it is recommended to avoid using blocking delay
 246:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         and use rather osDelay service.
 247:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   To respect 1ms timebase, user should call @ref LL_Init1msTick function which
 248:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         will configure Systick to 1ms
 249:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  Delay specifies the delay time length, in milliseconds.
 250:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval None
 251:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 252:HALLIB/Src/stm32f7xx_ll_utils.c **** void LL_mDelay(uint32_t Delay)
 253:HALLIB/Src/stm32f7xx_ll_utils.c **** {
 254:HALLIB/Src/stm32f7xx_ll_utils.c ****   __IO uint32_t  tmp = SysTick->CTRL;  /* Clear the COUNTFLAG first */
 255:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Add this code to indicate that local variable is not used */
 256:HALLIB/Src/stm32f7xx_ll_utils.c ****   ((void)tmp);
 257:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 258:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Add a period to guaranty minimum wait */
 259:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(Delay < LL_MAX_DELAY)
ARM GAS  /tmp/ccQYuIjq.s 			page 6


 260:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 261:HALLIB/Src/stm32f7xx_ll_utils.c ****     Delay++;
 262:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 263:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 264:HALLIB/Src/stm32f7xx_ll_utils.c ****   while (Delay)
 265:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 266:HALLIB/Src/stm32f7xx_ll_utils.c ****     if((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) != 0U)
 267:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 268:HALLIB/Src/stm32f7xx_ll_utils.c ****       Delay--;
 269:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 270:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 271:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 272:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 273:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 274:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @}
 275:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 276:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 277:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @addtogroup UTILS_EF_SYSTEM
 278:HALLIB/Src/stm32f7xx_ll_utils.c ****   *  @brief    System Configuration functions
 279:HALLIB/Src/stm32f7xx_ll_utils.c ****   *
 280:HALLIB/Src/stm32f7xx_ll_utils.c ****   @verbatim
 281:HALLIB/Src/stm32f7xx_ll_utils.c ****  ===============================================================================
 282:HALLIB/Src/stm32f7xx_ll_utils.c ****            ##### System Configuration functions #####
 283:HALLIB/Src/stm32f7xx_ll_utils.c ****  ===============================================================================
 284:HALLIB/Src/stm32f7xx_ll_utils.c ****     [..]
 285:HALLIB/Src/stm32f7xx_ll_utils.c ****          System, AHB and APB buses clocks configuration
 286:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 287:HALLIB/Src/stm32f7xx_ll_utils.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 216000000 Hz.
 288:HALLIB/Src/stm32f7xx_ll_utils.c ****   @endverbatim
 289:HALLIB/Src/stm32f7xx_ll_utils.c ****   @internal
 290:HALLIB/Src/stm32f7xx_ll_utils.c ****              Depending on the device voltage range, the maximum frequency should be
 291:HALLIB/Src/stm32f7xx_ll_utils.c ****              adapted accordingly:
 292:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) +--------------------------------------------------------------------------------
 293:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |  Wait states   |                           HCLK clock frequency (MHz)          
 294:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |                |---------------------------------------------------------------
 295:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |  (Latency)     |   voltage range   |   voltage range   |   voltage range   |   
 296:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |                |    2.7V - 3.6V    |    2.4V - 2.7V    |    2.1V - 2.7V    |   
 297:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 298:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |0WS(1CPU cycle) |   0 < HCLK <= 30  |   0 < HCLK <= 24  |   0 < HCLK <= 22  |   
 299:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 300:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |1WS(2CPU cycle) |  30 < HCLK <= 60  |  24 < HCLK <= 48  |  22 < HCLK <= 44  |  2
 301:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 302:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |2WS(3CPU cycle) |  60 < HCLK <= 90  |  48 < HCLK <= 72  |  44 < HCLK <= 66  |  4
 303:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 304:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |3WS(4CPU cycle) |  90 < HCLK <= 120 |  72 < HCLK <= 96  |  66 < HCLK <= 88  |  6
 305:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 306:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |4WS(5CPU cycle) | 120 < HCLK <= 150 |  96 < HCLK <= 120 |  88 < HCLK <= 110 |  8
 307:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 308:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |5WS(6CPU cycle) | 150 < HCLK <= 180 | 120 < HCLK <= 144 | 110 < HCLK <= 132 | 10
 309:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 310:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |6WS(7CPU cycle) | 180 < HCLK <= 210 | 144 < HCLK <= 168 | 132 < HCLK <= 154 | 12
 311:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 312:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |7WS(8CPU cycle) | 210 < HCLK <= 216 | 168 < HCLK <= 192 | 154 < HCLK <= 176 | 14
 313:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 314:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |8WS(9CPU cycle) |        --         | 192 < HCLK <= 216 | 176 < HCLK <= 198 | 16
 315:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |----------------|-------------------|-------------------|-------------------|---
 316:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) |9WS(10CPU cycle)|        --         |         --        | 198 < HCLK <= 216 |   
ARM GAS  /tmp/ccQYuIjq.s 			page 7


 317:HALLIB/Src/stm32f7xx_ll_utils.c ****              (++) +--------------------------------------------------------------------------------
 318:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 319:HALLIB/Src/stm32f7xx_ll_utils.c ****   @endinternal
 320:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
 321:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 322:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 323:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 324:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  This function sets directly SystemCoreClock CMSIS variable.
 325:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   Variable can be calculated also through SystemCoreClockUpdate function.
 326:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  HCLKFrequency HCLK frequency in Hz (can be calculated thanks to RCC helper macro)
 327:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval None
 328:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 329:HALLIB/Src/stm32f7xx_ll_utils.c **** void LL_SetSystemCoreClock(uint32_t HCLKFrequency)
 330:HALLIB/Src/stm32f7xx_ll_utils.c **** {
 331:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* HCLK clock frequency */
 332:HALLIB/Src/stm32f7xx_ll_utils.c ****   SystemCoreClock = HCLKFrequency;
 333:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 334:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 335:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 336:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  This function configures system clock at maximum frequency with HSI as clock source of 
 337:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   The application need to ensure that PLL is disabled.
 338:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   Function is based on the following formula:
 339:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         - PLL output frequency = (((HSI frequency / PLLM) * PLLN) / PLLP)
 340:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         - PLLM: ensure that the VCO input frequency ranges from 0.95 to 2.1 MHz (PLLVCO_input =
 341:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         - PLLN: ensure that the VCO output frequency is between 100 and 432 MHz (PLLVCO_output 
 342:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         - PLLP: ensure that max frequency at 216000000 Hz is reach (PLLVCO_output / PLLP)
 343:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  UTILS_PLLInitStruct pointer to a @ref LL_UTILS_PLLInitTypeDef structure that contains
 344:HALLIB/Src/stm32f7xx_ll_utils.c ****   *                             the configuration information for the PLL.
 345:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  UTILS_ClkInitStruct pointer to a @ref LL_UTILS_ClkInitTypeDef structure that contains
 346:HALLIB/Src/stm32f7xx_ll_utils.c ****   *                             the configuration information for the BUS prescalers.
 347:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 348:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - SUCCESS: Max frequency configuration done
 349:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - ERROR: Max frequency configuration not done
 350:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 351:HALLIB/Src/stm32f7xx_ll_utils.c **** ErrorStatus LL_PLL_ConfigSystemClock_HSI(LL_UTILS_PLLInitTypeDef *UTILS_PLLInitStruct,
 352:HALLIB/Src/stm32f7xx_ll_utils.c ****                                          LL_UTILS_ClkInitTypeDef *UTILS_ClkInitStruct)
 353:HALLIB/Src/stm32f7xx_ll_utils.c **** {
 354:HALLIB/Src/stm32f7xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 355:HALLIB/Src/stm32f7xx_ll_utils.c ****   uint32_t pllfreq = 0U;
 356:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 357:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Check if one of the PLL is enabled */
 358:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(UTILS_PLL_IsBusy() == SUCCESS)
 359:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 360:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Calculate the new PLL output frequency */
 361:HALLIB/Src/stm32f7xx_ll_utils.c ****     pllfreq = UTILS_GetPLLOutputFrequency(HSI_VALUE, UTILS_PLLInitStruct);
 362:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 363:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Enable HSI if not enabled */
 364:HALLIB/Src/stm32f7xx_ll_utils.c ****     if(LL_RCC_HSI_IsReady() != 1U)
 365:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 366:HALLIB/Src/stm32f7xx_ll_utils.c ****       LL_RCC_HSI_Enable();
 367:HALLIB/Src/stm32f7xx_ll_utils.c ****       while (LL_RCC_HSI_IsReady() != 1U)
 368:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 369:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* Wait for HSI ready */
 370:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 371:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 372:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 373:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Configure PLL */
ARM GAS  /tmp/ccQYuIjq.s 			page 8


 374:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI, UTILS_PLLInitStruct->PLLM, UTILS_PLLInitStruc
 375:HALLIB/Src/stm32f7xx_ll_utils.c ****                                 UTILS_PLLInitStruct->PLLP);
 376:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 377:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Enable PLL and switch system clock to PLL */
 378:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = UTILS_EnablePLLAndSwitchSystem(pllfreq, UTILS_ClkInitStruct);
 379:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 380:HALLIB/Src/stm32f7xx_ll_utils.c ****   else
 381:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 382:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Current PLL configuration cannot be modified */
 383:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = ERROR;
 384:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 385:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 386:HALLIB/Src/stm32f7xx_ll_utils.c ****   return status;
 387:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 388:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 389:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 390:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  This function configures system clock with HSE as clock source of the PLL
 391:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   The application need to ensure that PLL is disabled.
 392:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   Function is based on the following formula:
 393:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         - PLL output frequency = (((HSE frequency / PLLM) * PLLN) / PLLP)
 394:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         - PLLM: ensure that the VCO input frequency ranges from 0.95 to 2.10 MHz (PLLVCO_input 
 395:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         - PLLN: ensure that the VCO output frequency is between 100 and 432 MHz (PLLVCO_output 
 396:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         - PLLP: ensure that max frequency at 216000000 Hz is reached (PLLVCO_output / PLLP)
 397:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  HSEFrequency Value between Min_Data = 4000000 and Max_Data = 26000000
 398:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  HSEBypass This parameter can be one of the following values:
 399:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         @arg @ref LL_UTILS_HSEBYPASS_ON
 400:HALLIB/Src/stm32f7xx_ll_utils.c ****   *         @arg @ref LL_UTILS_HSEBYPASS_OFF
 401:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  UTILS_PLLInitStruct pointer to a @ref LL_UTILS_PLLInitTypeDef structure that contains
 402:HALLIB/Src/stm32f7xx_ll_utils.c ****   *                             the configuration information for the PLL.
 403:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  UTILS_ClkInitStruct pointer to a @ref LL_UTILS_ClkInitTypeDef structure that contains
 404:HALLIB/Src/stm32f7xx_ll_utils.c ****   *                             the configuration information for the BUS prescalers.
 405:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 406:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - SUCCESS: Max frequency configuration done
 407:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - ERROR: Max frequency configuration not done
 408:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 409:HALLIB/Src/stm32f7xx_ll_utils.c **** ErrorStatus LL_PLL_ConfigSystemClock_HSE(uint32_t HSEFrequency, uint32_t HSEBypass,
 410:HALLIB/Src/stm32f7xx_ll_utils.c ****                                          LL_UTILS_PLLInitTypeDef *UTILS_PLLInitStruct, LL_UTILS_Clk
 411:HALLIB/Src/stm32f7xx_ll_utils.c **** {
 412:HALLIB/Src/stm32f7xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 413:HALLIB/Src/stm32f7xx_ll_utils.c ****   uint32_t pllfreq = 0U;
 414:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 415:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Check the parameters */
 416:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_HSE_FREQUENCY(HSEFrequency));
 417:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_HSE_BYPASS(HSEBypass));
 418:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 419:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Check if one of the PLL is enabled */
 420:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(UTILS_PLL_IsBusy() == SUCCESS)
 421:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 422:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Calculate the new PLL output frequency */
 423:HALLIB/Src/stm32f7xx_ll_utils.c ****     pllfreq = UTILS_GetPLLOutputFrequency(HSEFrequency, UTILS_PLLInitStruct);
 424:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 425:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Enable HSE if not enabled */
 426:HALLIB/Src/stm32f7xx_ll_utils.c ****     if(LL_RCC_HSE_IsReady() != 1U)
 427:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 428:HALLIB/Src/stm32f7xx_ll_utils.c ****       /* Check if need to enable HSE bypass feature or not */
 429:HALLIB/Src/stm32f7xx_ll_utils.c ****       if(HSEBypass == LL_UTILS_HSEBYPASS_ON)
 430:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
ARM GAS  /tmp/ccQYuIjq.s 			page 9


 431:HALLIB/Src/stm32f7xx_ll_utils.c ****         LL_RCC_HSE_EnableBypass();
 432:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 433:HALLIB/Src/stm32f7xx_ll_utils.c ****       else
 434:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 435:HALLIB/Src/stm32f7xx_ll_utils.c ****         LL_RCC_HSE_DisableBypass();
 436:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 437:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 438:HALLIB/Src/stm32f7xx_ll_utils.c ****       /* Enable HSE */
 439:HALLIB/Src/stm32f7xx_ll_utils.c ****       LL_RCC_HSE_Enable();
 440:HALLIB/Src/stm32f7xx_ll_utils.c ****       while (LL_RCC_HSE_IsReady() != 1U)
 441:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 442:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* Wait for HSE ready */
 443:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 444:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 445:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 446:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Configure PLL */
 447:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSE, UTILS_PLLInitStruct->PLLM, UTILS_PLLInitStruc
 448:HALLIB/Src/stm32f7xx_ll_utils.c ****                                 UTILS_PLLInitStruct->PLLP);
 449:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 450:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Enable PLL and switch system clock to PLL */
 451:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = UTILS_EnablePLLAndSwitchSystem(pllfreq, UTILS_ClkInitStruct);
 452:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 453:HALLIB/Src/stm32f7xx_ll_utils.c ****   else
 454:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 455:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Current PLL configuration cannot be modified */
 456:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = ERROR;
 457:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 458:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 459:HALLIB/Src/stm32f7xx_ll_utils.c ****   return status;
 460:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 461:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 462:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 463:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @}
 464:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 465:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 466:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 467:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @}
 468:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 469:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 470:HALLIB/Src/stm32f7xx_ll_utils.c **** /** @addtogroup UTILS_LL_Private_Functions
 471:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @{
 472:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 473:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 474:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  Update number of Flash wait states in line with new frequency and current
 475:HALLIB/Src/stm32f7xx_ll_utils.c ****             voltage range.
 476:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @note   This Function support ONLY devices with supply voltage (voltage range) between 2.7V and
 477:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  HCLK_Frequency  HCLK frequency
 478:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 479:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - SUCCESS: Latency has been modified
 480:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - ERROR: Latency cannot be modified
 481:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 482:HALLIB/Src/stm32f7xx_ll_utils.c **** static ErrorStatus UTILS_SetFlashLatency(uint32_t HCLK_Frequency)
 483:HALLIB/Src/stm32f7xx_ll_utils.c **** {
  28              		.loc 1 483 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccQYuIjq.s 			page 10


  32              		@ link register save eliminated.
  33              	.LVL0:
 484:HALLIB/Src/stm32f7xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 485:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 486:HALLIB/Src/stm32f7xx_ll_utils.c ****   uint32_t latency = LL_FLASH_LATENCY_0;  /* default value 0WS */
 487:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 488:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Frequency cannot be equal to 0 */
 489:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(HCLK_Frequency == 0U)
  34              		.loc 1 489 0
  35 0000 0246     		mov	r2, r0
  36 0002 0028     		cmp	r0, #0
  37 0004 00F09080 		beq	.L7
  38              	.LBB54:
  39              	.LBB55:
  40              		.file 2 "HALLIB/Inc/stm32f7xx_ll_pwr.h"
   1:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
   2:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   ******************************************************************************
   3:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @file    stm32f7xx_ll_pwr.h
   4:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @author  MCD Application Team
   5:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief   Header file of PWR LL module.
   6:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   ******************************************************************************
   7:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @attention
   8:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *
   9:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  10:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *
  11:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * are permitted provided that the following conditions are met:
  13:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *      this list of conditions and the following disclaimer.
  15:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *      and/or other materials provided with the distribution.
  18:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *      may be used to endorse or promote products derived from this software
  20:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *      without specific prior written permission.
  21:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *
  22:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *
  33:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   ******************************************************************************
  34:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
  35:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  36:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #ifndef __STM32F7xx_LL_PWR_H
  38:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define __STM32F7xx_LL_PWR_H
  39:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  40:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #ifdef __cplusplus
  41:HALLIB/Inc/stm32f7xx_ll_pwr.h **** extern "C" {
  42:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #endif
ARM GAS  /tmp/ccQYuIjq.s 			page 11


  43:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  44:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Includes ------------------------------------------------------------------*/
  45:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #include "stm32f7xx.h"
  46:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  47:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @addtogroup STM32F7xx_LL_Driver
  48:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
  49:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
  50:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  51:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #if defined(PWR)
  52:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  53:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL PWR
  54:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
  55:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
  56:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  57:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Private types -------------------------------------------------------------*/
  58:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Private variables ---------------------------------------------------------*/
  59:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Private constants ---------------------------------------------------------*/
  60:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Private macros ------------------------------------------------------------*/
  61:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Exported types ------------------------------------------------------------*/
  62:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Exported constants --------------------------------------------------------*/
  63:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Constants PWR Exported Constants
  64:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
  65:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
  66:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  67:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_CLEAR_FLAG Clear Flags Defines
  68:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_WriteReg function
  69:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
  70:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
  71:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CR1_CSBF                    PWR_CR1_CSBF            /*!< Clear standby flag */
  72:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  73:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CR2_CWUF6                   PWR_CR2_CWUF6           /*!< Clear WKUP pin 6 */
  74:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CR2_CWUF5                   PWR_CR2_CWUF5           /*!< Clear WKUP pin 5 */
  75:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CR2_CWUF4                   PWR_CR2_CWUF4           /*!< Clear WKUP pin 4 */
  76:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CR2_CWUF3                   PWR_CR2_CWUF3           /*!< Clear WKUP pin 3 */
  77:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CR2_CWUF2                   PWR_CR2_CWUF2           /*!< Clear WKUP pin 2 */
  78:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CR2_CWUF1                   PWR_CR2_CWUF1           /*!< Clear WKUP pin 1 */
  79:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
  80:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
  81:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
  82:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  83:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GET_FLAG Get Flags Defines
  84:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_ReadReg function
  85:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
  86:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
  87:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR1_WUIF                   PWR_CSR1_WUIF           /*!< Wakeup flag */
  88:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR1_SBF                    PWR_CSR1_SBF            /*!< Standby flag */
  89:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR1_PVDO                   PWR_CSR1_PVDO           /*!< Power voltage detector outp
  90:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR1_BRR                    PWR_CSR1_BRR            /*!< Backup Regulator ready flag
  91:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR1_VOSRDY                 PWR_CSR1_VOSRDY         /*!< Voltage scaling select flag
  92:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR1_ODRDY                  PWR_CSR1_ODRDY          /*!< Over-drive mode ready */
  93:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR1_ODSWRDY                PWR_CSR1_ODSWRDY        /*!< Over-drive mode switching r
  94:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR1_UDRDY                  PWR_CSR1_UDRDY          /*!< Under-drive ready flag */
  95:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
  96:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR2_EWUP1                  PWR_CSR2_EWUP1          /*!< Enable WKUP pin 1 */
  97:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR2_EWUP2                  PWR_CSR2_EWUP2          /*!< Enable WKUP pin 2 */
  98:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR2_EWUP3                  PWR_CSR2_EWUP3          /*!< Enable WKUP pin 3 */
  99:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR2_EWUP4                  PWR_CSR2_EWUP4          /*!< Enable WKUP pin 4 */
ARM GAS  /tmp/ccQYuIjq.s 			page 12


 100:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR2_EWUP5                  PWR_CSR2_EWUP5          /*!< Enable WKUP pin 5 */
 101:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_CSR2_EWUP6                  PWR_CSR2_EWUP6          /*!< Enable WKUP pin 6 */
 102:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 103:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 104:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 105:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   
 106:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_MODE_PWR Mode Power
 107:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 108:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 109:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_MODE_STOP_MAINREGU                     0x00000000U                                  
 110:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_MODE_STOP_MAINREGU_UNDERDRIVE          (PWR_CR1_MRUDS | PWR_CR1_FPDS)               
 111:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_MODE_STOP_LPREGU                       PWR_CR1_LPDS                                 
 112:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_MODE_STOP_LPREGU_UNDERDRIVE            (PWR_CR1_LPDS | PWR_CR1_LPUDS | PWR_CR1_FPDS)
 113:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_MODE_STANDBY                           PWR_CR1_PDDS                                 
 114:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 115:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 116:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 117:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 118:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_VOLTAGE Regulator Voltage
 119:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 120:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 121:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE3         PWR_CR1_VOS_0
 122:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE2         PWR_CR1_VOS_1
 123:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE1         (PWR_CR1_VOS_0 | PWR_CR1_VOS_1)
 124:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 125:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 126:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 127:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 128:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_MODE_DS_MODE  Regulator Mode In Deep Sleep Mode
 129:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 130:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 131:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_REGU_DSMODE_MAIN        0x00000000U                    /*!< Voltage Regulator in mai
 132:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_REGU_DSMODE_LOW_POWER   PWR_CR1_LPDS                   /*!< Voltage Regulator in low
 133:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 134:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 135:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 136:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 137:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVDLEVEL Power Voltage Detector Level
 138:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 139:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 140:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_0                  PWR_CR1_PLS_LEV0      /*!< Voltage threshold detected by
 141:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_1                  PWR_CR1_PLS_LEV1      /*!< Voltage threshold detected by
 142:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_2                  PWR_CR1_PLS_LEV2      /*!< Voltage threshold detected by
 143:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_3                  PWR_CR1_PLS_LEV3      /*!< Voltage threshold detected by
 144:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_4                  PWR_CR1_PLS_LEV4      /*!< Voltage threshold detected by
 145:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_5                  PWR_CR1_PLS_LEV5      /*!< Voltage threshold detected by
 146:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_6                  PWR_CR1_PLS_LEV6      /*!< Voltage threshold detected by
 147:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_7                  PWR_CR1_PLS_LEV7      /*!< Voltage threshold detected by
 148:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 149:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 150:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 151:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 152:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_WAKEUP_PIN  Wakeup Pins
 153:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 154:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 155:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN1                 PWR_CSR2_EWUP1        /*!< WKUP pin 1 : PA0  */
 156:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN2                 PWR_CSR2_EWUP2        /*!< WKUP pin 2 : PA2  */
ARM GAS  /tmp/ccQYuIjq.s 			page 13


 157:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN3                 PWR_CSR2_EWUP3        /*!< WKUP pin 3 : PC1  */
 158:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN4                 PWR_CSR2_EWUP4        /*!< WKUP pin 4 : PC13 */
 159:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN5                 PWR_CSR2_EWUP5        /*!< WKUP pin 5 : PI8  */
 160:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN6                 PWR_CSR2_EWUP6        /*!< WKUP pin 6 : PI11 */
 161:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 162:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 163:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 164:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   
 165:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 166:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 167:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 168:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Exported macro ------------------------------------------------------------*/
 169:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Macros PWR Exported Macros
 170:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 171:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 172:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 173:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EM_WRITE_READ Common write and read registers Macros
 174:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 175:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 176:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 177:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 178:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Write a value in PWR register
 179:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @param  __REG__ Register to be written
 180:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @param  __VALUE__ Value to be written in the register
 181:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval None
 182:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 183:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_WriteReg(__REG__, __VALUE__) WRITE_REG(PWR->__REG__, (__VALUE__))
 184:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 185:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 186:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Read a value in PWR register
 187:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @param  __REG__ Register to be read
 188:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval Register value
 189:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 190:HALLIB/Inc/stm32f7xx_ll_pwr.h **** #define LL_PWR_ReadReg(__REG__) READ_REG(PWR->__REG__)
 191:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 192:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 193:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 194:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 195:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 196:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @}
 197:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 198:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /* Exported functions --------------------------------------------------------*/
 199:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Functions PWR Exported Functions
 200:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 201:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 202:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 203:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration Configuration
 204:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @{
 205:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 206:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 207:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 208:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Enable Under Drive Mode
 209:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    UDEN       LL_PWR_EnableUnderDriveMode
 210:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @note  This mode is enabled only with STOP low power mode.
 211:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *        In this mode, the 1.2V domain is preserved in reduced leakage mode. This 
 212:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *        mode is only available when the main Regulator or the low power Regulator 
 213:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *        is in low voltage mode.      
ARM GAS  /tmp/ccQYuIjq.s 			page 14


 214:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @note  If the Under-drive mode was enabled, it is automatically disabled after 
 215:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *        exiting Stop mode. 
 216:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *        When the voltage Regulator operates in Under-drive mode, an additional  
 217:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *        startup delay is induced when waking up from Stop mode.
 218:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval None
 219:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 220:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableUnderDriveMode(void)
 221:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 222:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   SET_BIT(PWR->CR1, PWR_CR1_UDEN);
 223:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 224:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 225:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 226:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Disable Under Drive Mode
 227:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    UDEN       LL_PWR_DisableUnderDriveMode
 228:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval None
 229:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 230:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableUnderDriveMode(void)
 231:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 232:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR1, PWR_CR1_UDEN);
 233:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 234:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 235:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 236:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Check if Under Drive Mode is enabled
 237:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    UDEN       LL_PWR_IsEnabledUnderDriveMode
 238:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 239:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 240:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledUnderDriveMode(void)
 241:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 242:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   return (READ_BIT(PWR->CR1, PWR_CR1_UDEN) == (PWR_CR1_UDEN));
 243:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 244:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 245:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 246:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Enable Over drive switching
 247:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    ODSWEN       LL_PWR_EnableOverDriveSwitching
 248:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval None
 249:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 250:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableOverDriveSwitching(void)
 251:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 252:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   SET_BIT(PWR->CR1, PWR_CR1_ODSWEN);
 253:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 254:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 255:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 256:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Disable Over drive switching
 257:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    ODSWEN       LL_PWR_DisableOverDriveSwitching
 258:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval None
 259:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 260:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableOverDriveSwitching(void)
 261:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 262:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR1, PWR_CR1_ODSWEN);
 263:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 264:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 265:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 266:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Check if Over drive switching is enabled
 267:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    ODSWEN       LL_PWR_IsEnabledOverDriveSwitching
 268:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 269:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 270:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledOverDriveSwitching(void)
ARM GAS  /tmp/ccQYuIjq.s 			page 15


 271:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 272:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   return (READ_BIT(PWR->CR1, PWR_CR1_ODSWEN) == (PWR_CR1_ODSWEN));
 273:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 274:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 275:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 276:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Enable Over drive Mode
 277:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    ODEN       LL_PWR_EnableOverDriveMode
 278:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval None
 279:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 280:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableOverDriveMode(void)
 281:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 282:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   SET_BIT(PWR->CR1, PWR_CR1_ODEN);
 283:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 284:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 285:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 286:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Disable Over drive Mode
 287:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    ODEN       LL_PWR_DisableOverDriveMode
 288:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval None
 289:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 290:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableOverDriveMode(void)
 291:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 292:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR1, PWR_CR1_ODEN);
 293:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 294:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 295:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 296:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Check if Over drive switching is enabled
 297:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    ODEN       LL_PWR_IsEnabledOverDriveMode
 298:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 299:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 300:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledOverDriveMode(void)
 301:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 302:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   return (READ_BIT(PWR->CR1, PWR_CR1_ODEN) == (PWR_CR1_ODEN));
 303:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 304:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 305:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 306:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Set the main internal Regulator output voltage
 307:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    VOS       LL_PWR_SetRegulVoltageScaling
 308:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @param  VoltageScaling This parameter can be one of the following values:
 309:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 310:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 311:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE3
 312:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval None
 313:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 314:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRegulVoltageScaling(uint32_t VoltageScaling)
 315:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 316:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 317:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
 318:HALLIB/Inc/stm32f7xx_ll_pwr.h **** 
 319:HALLIB/Inc/stm32f7xx_ll_pwr.h **** /**
 320:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @brief  Get the main internal Regulator output voltage
 321:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @rmtoll CR1    VOS       LL_PWR_GetRegulVoltageScaling
 322:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 323:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 324:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 325:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE3
 326:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   */
 327:HALLIB/Inc/stm32f7xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRegulVoltageScaling(void)
ARM GAS  /tmp/ccQYuIjq.s 			page 16


 328:HALLIB/Inc/stm32f7xx_ll_pwr.h **** {
 329:HALLIB/Inc/stm32f7xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_VOS));
  41              		.loc 2 329 0
  42 0008 494B     		ldr	r3, .L25
  43 000a 1B68     		ldr	r3, [r3]
  44 000c 03F44043 		and	r3, r3, #49152
  45              	.LBE55:
  46              	.LBE54:
 490:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 491:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = ERROR;
 492:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 493:HALLIB/Src/stm32f7xx_ll_utils.c ****   else
 494:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 495:HALLIB/Src/stm32f7xx_ll_utils.c ****     if(LL_PWR_GetRegulVoltageScaling() == LL_PWR_REGU_VOLTAGE_SCALE1)
  47              		.loc 1 495 0
  48 0010 B3F5404F 		cmp	r3, #49152
  49 0014 37D1     		bne	.L3
  50              	.LBB56:
  51              	.LBB57:
 302:HALLIB/Inc/stm32f7xx_ll_pwr.h **** }
  52              		.loc 2 302 0
  53 0016 464B     		ldr	r3, .L25
  54 0018 1B68     		ldr	r3, [r3]
  55              	.LBE57:
  56              	.LBE56:
 496:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 497:HALLIB/Src/stm32f7xx_ll_utils.c ****       if(LL_PWR_IsEnabledOverDriveMode() != 0U)
  57              		.loc 1 497 0
  58 001a 13F4803F 		tst	r3, #65536
  59 001e 04D0     		beq	.L8
 498:HALLIB/Src/stm32f7xx_ll_utils.c ****         {
 499:HALLIB/Src/stm32f7xx_ll_utils.c ****           if(HCLK_Frequency > UTILS_SCALE1_LATENCY7_FREQ)
  60              		.loc 1 499 0
  61 0020 444B     		ldr	r3, .L25+4
  62 0022 9842     		cmp	r0, r3
  63 0024 03D9     		bls	.L9
 500:HALLIB/Src/stm32f7xx_ll_utils.c ****           {
 501:HALLIB/Src/stm32f7xx_ll_utils.c ****             /* 210 < HCLK <= 216 => 7WS (8 CPU cycles) */
 502:HALLIB/Src/stm32f7xx_ll_utils.c ****             latency = LL_FLASH_LATENCY_7;
  64              		.loc 1 502 0
  65 0026 0721     		movs	r1, #7
  66 0028 02E0     		b	.L4
  67              	.L8:
 486:HALLIB/Src/stm32f7xx_ll_utils.c **** 
  68              		.loc 1 486 0
  69 002a 0021     		movs	r1, #0
  70 002c 00E0     		b	.L4
  71              	.L9:
 503:HALLIB/Src/stm32f7xx_ll_utils.c ****           }
 504:HALLIB/Src/stm32f7xx_ll_utils.c ****           else /* (HCLK_Frequency > UTILS_SCALE1_LATENCY6_FREQ) */
 505:HALLIB/Src/stm32f7xx_ll_utils.c ****           {
 506:HALLIB/Src/stm32f7xx_ll_utils.c ****             /* 180 < HCLK <= 210 => 6WS (7 CPU cycles) */
 507:HALLIB/Src/stm32f7xx_ll_utils.c ****             latency = LL_FLASH_LATENCY_6;
  72              		.loc 1 507 0
  73 002e 0621     		movs	r1, #6
  74              	.L4:
  75              	.LVL1:
ARM GAS  /tmp/ccQYuIjq.s 			page 17


 508:HALLIB/Src/stm32f7xx_ll_utils.c ****           }
 509:HALLIB/Src/stm32f7xx_ll_utils.c ****         }
 510:HALLIB/Src/stm32f7xx_ll_utils.c ****       if((HCLK_Frequency > UTILS_SCALE1_LATENCY5_FREQ) && (latency == LL_FLASH_LATENCY_0))
  76              		.loc 1 510 0
  77 0030 B1FA81F3 		clz	r3, r1
  78 0034 5B09     		lsrs	r3, r3, #5
  79 0036 4048     		ldr	r0, .L25+8
  80              	.LVL2:
  81 0038 8242     		cmp	r2, r0
  82 003a 94BF     		ite	ls
  83 003c 0020     		movls	r0, #0
  84 003e 03F00100 		andhi	r0, r3, #1
  85 0042 0028     		cmp	r0, #0
  86 0044 48D1     		bne	.L10
 511:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 512:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 150 < HCLK <= 180 => 5WS (6 CPU cycles) */
 513:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_5;
 514:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 515:HALLIB/Src/stm32f7xx_ll_utils.c ****       else if((HCLK_Frequency > UTILS_SCALE1_LATENCY4_FREQ) && (latency == LL_FLASH_LATENCY_0))
  87              		.loc 1 515 0
  88 0046 3D48     		ldr	r0, .L25+12
  89 0048 8242     		cmp	r2, r0
  90 004a 94BF     		ite	ls
  91 004c 0020     		movls	r0, #0
  92 004e 03F00100 		andhi	r0, r3, #1
  93 0052 0028     		cmp	r0, #0
  94 0054 42D1     		bne	.L11
 516:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 517:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 120 < HCLK <= 150 => 4WS (5 CPU cycles) */
 518:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_4;
 519:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 520:HALLIB/Src/stm32f7xx_ll_utils.c ****       else if((HCLK_Frequency > UTILS_SCALE1_LATENCY3_FREQ) && (latency == LL_FLASH_LATENCY_0))
  95              		.loc 1 520 0
  96 0056 3A48     		ldr	r0, .L25+16
  97 0058 8242     		cmp	r2, r0
  98 005a 94BF     		ite	ls
  99 005c 0020     		movls	r0, #0
 100 005e 03F00100 		andhi	r0, r3, #1
 101 0062 0028     		cmp	r0, #0
 102 0064 3CD1     		bne	.L12
 521:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 522:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 90 < HCLK <= 120 => 3WS (4 CPU cycles) */
 523:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_3;
 524:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 525:HALLIB/Src/stm32f7xx_ll_utils.c ****       else if((HCLK_Frequency > UTILS_SCALE1_LATENCY2_FREQ) && (latency == LL_FLASH_LATENCY_0))
 103              		.loc 1 525 0
 104 0066 3748     		ldr	r0, .L25+20
 105 0068 8242     		cmp	r2, r0
 106 006a 94BF     		ite	ls
 107 006c 0020     		movls	r0, #0
 108 006e 03F00100 		andhi	r0, r3, #1
 109 0072 0028     		cmp	r0, #0
 110 0074 36D1     		bne	.L13
 526:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 527:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 60 < HCLK <= 90 => 2WS (3 CPU cycles) */
 528:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_2;
 529:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
ARM GAS  /tmp/ccQYuIjq.s 			page 18


 530:HALLIB/Src/stm32f7xx_ll_utils.c ****       else
 531:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 532:HALLIB/Src/stm32f7xx_ll_utils.c ****         if((HCLK_Frequency > UTILS_SCALE1_LATENCY1_FREQ) && (latency == LL_FLASH_LATENCY_0))
 111              		.loc 1 532 0
 112 0076 3448     		ldr	r0, .L25+24
 113 0078 8242     		cmp	r2, r0
 114 007a 94BF     		ite	ls
 115 007c 0023     		movls	r3, #0
 116 007e 03F00103 		andhi	r3, r3, #1
 117 0082 8BBB     		cbnz	r3, .L14
 118 0084 43E0     		b	.L5
 119              	.LVL3:
 120              	.L3:
 121              	.LBB58:
 122              	.LBB59:
 123              		.loc 2 329 0
 124 0086 2A4B     		ldr	r3, .L25
 125 0088 1B68     		ldr	r3, [r3]
 126 008a 03F44043 		and	r3, r3, #49152
 127              	.LBE59:
 128              	.LBE58:
 533:HALLIB/Src/stm32f7xx_ll_utils.c ****         {
 534:HALLIB/Src/stm32f7xx_ll_utils.c ****           /* 30 < HCLK <= 60 => 1WS (2 CPU cycles) */
 535:HALLIB/Src/stm32f7xx_ll_utils.c ****           latency = LL_FLASH_LATENCY_1;
 536:HALLIB/Src/stm32f7xx_ll_utils.c ****         }
 537:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* else HCLK_Frequency < 30MHz default LL_FLASH_LATENCY_0 0WS */
 538:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 539:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 540:HALLIB/Src/stm32f7xx_ll_utils.c ****     else if(LL_PWR_GetRegulVoltageScaling() == LL_PWR_REGU_VOLTAGE_SCALE2)
 129              		.loc 1 540 0
 130 008e B3F5004F 		cmp	r3, #32768
 131 0092 13D1     		bne	.L6
 541:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 542:HALLIB/Src/stm32f7xx_ll_utils.c ****       if(HCLK_Frequency > UTILS_SCALE2_LATENCY5_FREQ)
 132              		.loc 1 542 0
 133 0094 03F10F63 		add	r3, r3, #149946368
 134 0098 03F5A343 		add	r3, r3, #20864
 135 009c 9842     		cmp	r0, r3
 136 009e 25D8     		bhi	.L15
 543:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 544:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 150 < HCLK <= 168 OR 150 < HCLK <= 180 (when OverDrive mode is enable) => 5WS (6 CPU cyc
 545:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_5;
 546:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 547:HALLIB/Src/stm32f7xx_ll_utils.c ****       else if(HCLK_Frequency > UTILS_SCALE2_LATENCY4_FREQ)
 137              		.loc 1 547 0
 138 00a0 264B     		ldr	r3, .L25+12
 139 00a2 9842     		cmp	r0, r3
 140 00a4 24D8     		bhi	.L16
 548:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 549:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 120 < HCLK <= 150 => 4WS (5 CPU cycles) */
 550:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_4;
 551:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 552:HALLIB/Src/stm32f7xx_ll_utils.c ****       else if(HCLK_Frequency > UTILS_SCALE2_LATENCY3_FREQ)
 141              		.loc 1 552 0
 142 00a6 264B     		ldr	r3, .L25+16
 143 00a8 9842     		cmp	r0, r3
 144 00aa 23D8     		bhi	.L17
ARM GAS  /tmp/ccQYuIjq.s 			page 19


 553:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 554:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 90 < HCLK <= 120 => 3WS (4 CPU cycles) */
 555:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_3;
 556:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 557:HALLIB/Src/stm32f7xx_ll_utils.c ****       else if(HCLK_Frequency > UTILS_SCALE2_LATENCY2_FREQ)
 145              		.loc 1 557 0
 146 00ac 254B     		ldr	r3, .L25+20
 147 00ae 9842     		cmp	r0, r3
 148 00b0 22D8     		bhi	.L18
 558:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 559:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 60 < HCLK <= 90 => 2WS (3 CPU cycles) */
 560:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_2;
 561:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 562:HALLIB/Src/stm32f7xx_ll_utils.c ****       else
 563:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 564:HALLIB/Src/stm32f7xx_ll_utils.c ****         if(HCLK_Frequency > UTILS_SCALE2_LATENCY1_FREQ)
 149              		.loc 1 564 0
 150 00b2 254B     		ldr	r3, .L25+24
 151 00b4 9842     		cmp	r0, r3
 152 00b6 21D8     		bhi	.L19
 486:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 153              		.loc 1 486 0
 154 00b8 0021     		movs	r1, #0
 155 00ba 28E0     		b	.L5
 156              	.L6:
 565:HALLIB/Src/stm32f7xx_ll_utils.c ****         {
 566:HALLIB/Src/stm32f7xx_ll_utils.c ****           /* 30 < HCLK <= 60 => 1WS (2 CPU cycles) */
 567:HALLIB/Src/stm32f7xx_ll_utils.c ****           latency = LL_FLASH_LATENCY_1;
 568:HALLIB/Src/stm32f7xx_ll_utils.c ****         }
 569:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* else HCLK_Frequency < 24MHz default LL_FLASH_LATENCY_0 0WS */
 570:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 571:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 572:HALLIB/Src/stm32f7xx_ll_utils.c ****     else /* Scale 3 */
 573:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 574:HALLIB/Src/stm32f7xx_ll_utils.c ****       if(HCLK_Frequency > UTILS_SCALE3_LATENCY4_FREQ)
 157              		.loc 1 574 0
 158 00bc 1F4B     		ldr	r3, .L25+12
 159 00be 9842     		cmp	r0, r3
 160 00c0 1ED8     		bhi	.L20
 575:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 576:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 120 < HCLK <= 144 => 4WS (5 CPU cycles) */
 577:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_4;
 578:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 579:HALLIB/Src/stm32f7xx_ll_utils.c ****       else if(HCLK_Frequency > UTILS_SCALE3_LATENCY3_FREQ)
 161              		.loc 1 579 0
 162 00c2 1F4B     		ldr	r3, .L25+16
 163 00c4 9842     		cmp	r0, r3
 164 00c6 1DD8     		bhi	.L21
 580:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 581:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 90 < HCLK <= 120 => 3WS (4 CPU cycles) */
 582:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_3;
 583:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 584:HALLIB/Src/stm32f7xx_ll_utils.c ****       else if(HCLK_Frequency > UTILS_SCALE3_LATENCY2_FREQ)
 165              		.loc 1 584 0
 166 00c8 1E4B     		ldr	r3, .L25+20
 167 00ca 9842     		cmp	r0, r3
 168 00cc 1CD8     		bhi	.L22
ARM GAS  /tmp/ccQYuIjq.s 			page 20


 585:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 586:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* 60 < HCLK <= 90 => 2WS (3 CPU cycles) */
 587:HALLIB/Src/stm32f7xx_ll_utils.c ****         latency = LL_FLASH_LATENCY_2;
 588:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 589:HALLIB/Src/stm32f7xx_ll_utils.c ****       else
 590:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 591:HALLIB/Src/stm32f7xx_ll_utils.c ****         if(HCLK_Frequency > UTILS_SCALE3_LATENCY1_FREQ)
 169              		.loc 1 591 0
 170 00ce 1E4B     		ldr	r3, .L25+24
 171 00d0 9842     		cmp	r0, r3
 172 00d2 1BD8     		bhi	.L23
 486:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 173              		.loc 1 486 0
 174 00d4 0021     		movs	r1, #0
 175 00d6 1AE0     		b	.L5
 176              	.LVL4:
 177              	.L10:
 513:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 178              		.loc 1 513 0
 179 00d8 0521     		movs	r1, #5
 180              	.LVL5:
 181 00da 18E0     		b	.L5
 182              	.LVL6:
 183              	.L11:
 518:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 184              		.loc 1 518 0
 185 00dc 0421     		movs	r1, #4
 186              	.LVL7:
 187 00de 16E0     		b	.L5
 188              	.LVL8:
 189              	.L12:
 523:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 190              		.loc 1 523 0
 191 00e0 0321     		movs	r1, #3
 192              	.LVL9:
 193 00e2 14E0     		b	.L5
 194              	.LVL10:
 195              	.L13:
 528:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 196              		.loc 1 528 0
 197 00e4 0221     		movs	r1, #2
 198              	.LVL11:
 199 00e6 12E0     		b	.L5
 200              	.LVL12:
 201              	.L14:
 535:HALLIB/Src/stm32f7xx_ll_utils.c ****         }
 202              		.loc 1 535 0
 203 00e8 0121     		movs	r1, #1
 204              	.LVL13:
 205 00ea 10E0     		b	.L5
 206              	.LVL14:
 207              	.L15:
 545:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 208              		.loc 1 545 0
 209 00ec 0521     		movs	r1, #5
 210 00ee 0EE0     		b	.L5
 211              	.L16:
ARM GAS  /tmp/ccQYuIjq.s 			page 21


 550:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 212              		.loc 1 550 0
 213 00f0 0421     		movs	r1, #4
 214 00f2 0CE0     		b	.L5
 215              	.L17:
 555:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 216              		.loc 1 555 0
 217 00f4 0321     		movs	r1, #3
 218 00f6 0AE0     		b	.L5
 219              	.L18:
 560:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 220              		.loc 1 560 0
 221 00f8 0221     		movs	r1, #2
 222 00fa 08E0     		b	.L5
 223              	.L19:
 567:HALLIB/Src/stm32f7xx_ll_utils.c ****         }
 224              		.loc 1 567 0
 225 00fc 0121     		movs	r1, #1
 226 00fe 06E0     		b	.L5
 227              	.L20:
 577:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 228              		.loc 1 577 0
 229 0100 0421     		movs	r1, #4
 230 0102 04E0     		b	.L5
 231              	.L21:
 582:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 232              		.loc 1 582 0
 233 0104 0321     		movs	r1, #3
 234 0106 02E0     		b	.L5
 235              	.L22:
 587:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 236              		.loc 1 587 0
 237 0108 0221     		movs	r1, #2
 238 010a 00E0     		b	.L5
 239              	.L23:
 592:HALLIB/Src/stm32f7xx_ll_utils.c ****         {
 593:HALLIB/Src/stm32f7xx_ll_utils.c ****           /* 30 < HCLK <= 60 => 1WS (2 CPU cycles) */
 594:HALLIB/Src/stm32f7xx_ll_utils.c ****           latency = LL_FLASH_LATENCY_1;
 240              		.loc 1 594 0
 241 010c 0121     		movs	r1, #1
 242              	.LVL15:
 243              	.L5:
 244              	.LBB60:
 245              	.LBB61:
 246              		.file 3 "HALLIB/Inc/stm32f7xx_ll_system.h"
   1:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
   2:HALLIB/Inc/stm32f7xx_ll_system.h ****   ******************************************************************************
   3:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @file    stm32f7xx_ll_system.h
   4:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @author  MCD Application Team
   5:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:HALLIB/Inc/stm32f7xx_ll_system.h ****   @verbatim
   7:HALLIB/Inc/stm32f7xx_ll_system.h ****   ==============================================================================
   8:HALLIB/Inc/stm32f7xx_ll_system.h ****                      ##### How to use this driver #####
   9:HALLIB/Inc/stm32f7xx_ll_system.h ****   ==============================================================================
  10:HALLIB/Inc/stm32f7xx_ll_system.h ****     [..]
  11:HALLIB/Inc/stm32f7xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  12:HALLIB/Inc/stm32f7xx_ll_system.h ****     used by user:
ARM GAS  /tmp/ccQYuIjq.s 			page 22


  13:HALLIB/Inc/stm32f7xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  14:HALLIB/Inc/stm32f7xx_ll_system.h ****       (+) Access to DBGCMU registers
  15:HALLIB/Inc/stm32f7xx_ll_system.h ****       (+) Access to SYSCFG registers
  16:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  17:HALLIB/Inc/stm32f7xx_ll_system.h ****   @endverbatim
  18:HALLIB/Inc/stm32f7xx_ll_system.h ****   ******************************************************************************
  19:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @attention
  20:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
  21:HALLIB/Inc/stm32f7xx_ll_system.h ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  22:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
  23:HALLIB/Inc/stm32f7xx_ll_system.h ****   * Redistribution and use in source and binary forms, with or without modification,
  24:HALLIB/Inc/stm32f7xx_ll_system.h ****   * are permitted provided that the following conditions are met:
  25:HALLIB/Inc/stm32f7xx_ll_system.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  26:HALLIB/Inc/stm32f7xx_ll_system.h ****   *      this list of conditions and the following disclaimer.
  27:HALLIB/Inc/stm32f7xx_ll_system.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  28:HALLIB/Inc/stm32f7xx_ll_system.h ****   *      this list of conditions and the following disclaimer in the documentation
  29:HALLIB/Inc/stm32f7xx_ll_system.h ****   *      and/or other materials provided with the distribution.
  30:HALLIB/Inc/stm32f7xx_ll_system.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  31:HALLIB/Inc/stm32f7xx_ll_system.h ****   *      may be used to endorse or promote products derived from this software
  32:HALLIB/Inc/stm32f7xx_ll_system.h ****   *      without specific prior written permission.
  33:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
  34:HALLIB/Inc/stm32f7xx_ll_system.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35:HALLIB/Inc/stm32f7xx_ll_system.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36:HALLIB/Inc/stm32f7xx_ll_system.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  37:HALLIB/Inc/stm32f7xx_ll_system.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  38:HALLIB/Inc/stm32f7xx_ll_system.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  39:HALLIB/Inc/stm32f7xx_ll_system.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  40:HALLIB/Inc/stm32f7xx_ll_system.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  41:HALLIB/Inc/stm32f7xx_ll_system.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  42:HALLIB/Inc/stm32f7xx_ll_system.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  43:HALLIB/Inc/stm32f7xx_ll_system.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
  45:HALLIB/Inc/stm32f7xx_ll_system.h ****   ******************************************************************************
  46:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
  47:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  48:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  49:HALLIB/Inc/stm32f7xx_ll_system.h **** #ifndef __STM32F7xx_LL_SYSTEM_H
  50:HALLIB/Inc/stm32f7xx_ll_system.h **** #define __STM32F7xx_LL_SYSTEM_H
  51:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  52:HALLIB/Inc/stm32f7xx_ll_system.h **** #ifdef __cplusplus
  53:HALLIB/Inc/stm32f7xx_ll_system.h **** extern "C" {
  54:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif
  55:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  56:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  57:HALLIB/Inc/stm32f7xx_ll_system.h **** #include "stm32f7xx.h"
  58:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  59:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @addtogroup STM32F7xx_LL_Driver
  60:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
  61:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
  62:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  63:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined (FLASH) || defined (SYSCFG) || defined (DBGMCU)
  64:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  65:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  66:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
  67:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
  68:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  69:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
ARM GAS  /tmp/ccQYuIjq.s 			page 23


  70:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  71:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  72:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  73:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  74:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
  75:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
  76:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  77:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
  78:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
  79:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
  80:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  81:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  82:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  83:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  84:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  85:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  86:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
  87:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
  88:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  89:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_REMAP SYSCFG REMAP
  90:HALLIB/Inc/stm32f7xx_ll_system.h **** * @{
  91:HALLIB/Inc/stm32f7xx_ll_system.h **** */
  92:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_REMAP_BOOT0               0x00000000U                                         /*!
  93:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_REMAP_BOOT1               SYSCFG_MEMRMP_MEM_BOOT                              /*!
  94:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
  95:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
  96:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
  97:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  98:HALLIB/Inc/stm32f7xx_ll_system.h **** 
  99:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_MEMRMP_SWP_FB)
 100:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_BANKMODE SYSCFG BANK MODE
 101:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 102:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 103:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK1          0x00000000U              /*!< Flash Bank 1 base address m
 104:HALLIB/Inc/stm32f7xx_ll_system.h ****                                                                       and Flash Bank 2 base address
 105:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 106:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK2          SYSCFG_MEMRMP_SWP_FB     /*!< Flash Bank 2 base address m
 107:HALLIB/Inc/stm32f7xx_ll_system.h ****                                                                       and Flash Bank 1 base address
 108:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 109:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 110:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 111:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_MEMRMP_SWP_FB */
 112:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 113:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_PMC_MII_RMII_SEL)
 114:HALLIB/Inc/stm32f7xx_ll_system.h ****  /** @defgroup SYSTEM_LL_EC_PMC SYSCFG PMC
 115:HALLIB/Inc/stm32f7xx_ll_system.h **** * @{
 116:HALLIB/Inc/stm32f7xx_ll_system.h **** */
 117:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_PMC_ETHMII               0x00000000U                                         /*!<
 118:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_PMC_ETHRMII              (uint32_t)SYSCFG_PMC_MII_RMII_SEL                   /*!<
 119:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 120:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 121:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 122:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 123:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_PMC_MII_RMII_SEL */
 124:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 125:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C_FASTMODEPLUS SYSCFG I2C FASTMODEPLUS
 126:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
ARM GAS  /tmp/ccQYuIjq.s 			page 24


 127:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 128:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_PMC_I2C1_FMP)
 129:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C1        SYSCFG_PMC_I2C1_FMP       /*!< Enable Fast Mode Plus
 130:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C2        SYSCFG_PMC_I2C2_FMP       /*!< Enable Fast Mode Plus
 131:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C3        SYSCFG_PMC_I2C3_FMP       /*!< Enable Fast Mode Plus
 132:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_PMC_I2C1_FMP */
 133:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_PMC_I2C4_FMP)
 134:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C4        SYSCFG_PMC_I2C4_FMP       /*!< Enable Fast Mode Plus
 135:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_PMC_I2C4_FMP */
 136:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_PMC_I2C_PB6_FMP)
 137:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB6         SYSCFG_PMC_I2C_PB6_FMP    /*!< Enable Fast Mode Plus
 138:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB7         SYSCFG_PMC_I2C_PB7_FMP    /*!< Enable Fast Mode Plus
 139:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB8         SYSCFG_PMC_I2C_PB8_FMP    /*!< Enable Fast Mode Plus
 140:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB9         SYSCFG_PMC_I2C_PB9_FMP    /*!< Enable Fast Mode Plus
 141:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_PMC_I2C_PB6_FMP */
 142:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 143:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 144:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 145:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 146:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_PORT SYSCFG EXTI PORT
 147:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 148:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 149:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTA               0U               /*!< EXTI PORT A                       
 150:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTB               1U               /*!< EXTI PORT B                       
 151:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTC               2U               /*!< EXTI PORT C                       
 152:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTD               3U               /*!< EXTI PORT D                       
 153:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTE               4U               /*!< EXTI PORT E                       
 154:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(GPIOF)
 155:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTF               5U               /*!< EXTI PORT F                       
 156:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* GPIOF */
 157:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(GPIOG)
 158:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTG               6U               /*!< EXTI PORT G                       
 159:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* GPIOG */
 160:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTH               7U               /*!< EXTI PORT H                       
 161:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(GPIOI)
 162:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTI               8U               /*!< EXTI PORT I                       
 163:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* GPIOI */
 164:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(GPIOJ)
 165:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTJ               9U               /*!< EXTI PORT J                       
 166:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* GPIOJ */
 167:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(GPIOK)
 168:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTK               10U              /*!< EXTI PORT k                       
 169:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* GPIOK */
 170:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 171:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 172:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 173:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 174:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_LINE SYSCFG EXTI LINE
 175:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 176:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 177:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE0               (0x000FU << 16U | 0U)  /*!< EXTI_POSITION_0  | EXTICR[0]
 178:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE1               (0x00F0U << 16U | 0U)  /*!< EXTI_POSITION_4  | EXTICR[0]
 179:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE2               (0x0F00U << 16U | 0U)  /*!< EXTI_POSITION_8  | EXTICR[0]
 180:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE3               (0xF000U << 16U | 0U)  /*!< EXTI_POSITION_12 | EXTICR[0]
 181:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE4               (0x000FU << 16U | 1U)  /*!< EXTI_POSITION_0  | EXTICR[1]
 182:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE5               (0x00F0U << 16U | 1U)  /*!< EXTI_POSITION_4  | EXTICR[1]
 183:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE6               (0x0F00U << 16U | 1U)  /*!< EXTI_POSITION_8  | EXTICR[1]
ARM GAS  /tmp/ccQYuIjq.s 			page 25


 184:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE7               (0xF000U << 16U | 1U)  /*!< EXTI_POSITION_12 | EXTICR[1]
 185:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE8               (0x000FU << 16U | 2U)  /*!< EXTI_POSITION_0  | EXTICR[2]
 186:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE9               (0x00F0U << 16U | 2U)  /*!< EXTI_POSITION_4  | EXTICR[2]
 187:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE10              (0x0F00U << 16U | 2U)  /*!< EXTI_POSITION_8  | EXTICR[2]
 188:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE11              (0xF000U << 16U | 2U)  /*!< EXTI_POSITION_12 | EXTICR[2]
 189:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE12              (0x000FU << 16U | 3U)  /*!< EXTI_POSITION_0  | EXTICR[3]
 190:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE13              (0x00F0U << 16U | 3U)  /*!< EXTI_POSITION_4  | EXTICR[3]
 191:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE14              (0x0F00U << 16U | 3U)  /*!< EXTI_POSITION_8  | EXTICR[3]
 192:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE15              (0xF000U << 16U | 3U)  /*!< EXTI_POSITION_12 | EXTICR[3]
 193:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 194:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 195:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 196:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 197:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TIMBREAK SYSCFG TIMER BREAK
 198:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 199:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 200:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_CBR_CLL)
 201:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_LOCKUP          SYSCFG_CBR_CLL     /*!< Enables and locks the Lockup out
 202:HALLIB/Inc/stm32f7xx_ll_system.h ****                                                                    lockup state) of Cortex-M7 with 
 203:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_PVD             SYSCFG_CBR_PVDL    /*!< Enables and locks the PVD connec
 204:HALLIB/Inc/stm32f7xx_ll_system.h ****                                                                    It also locks (write protect) th
 205:HALLIB/Inc/stm32f7xx_ll_system.h ****                                                                    of the power controller */
 206:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_CBR_CLL */
 207:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 208:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 209:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 210:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_CMP_PD SYSCFG CMP PD
 211:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 212:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 213:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_DISABLE_CMP_PD          0x00000000U             /*!< I/O compensation cell power-
 214:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_SYSCFG_ENABLE_CMP_PD           SYSCFG_CMPCR_CMP_PD     /*!< I/O compensation cell enable
 215:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 216:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 217:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 218:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 219:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TRACE DBGMCU TRACE Pin Assignment
 220:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 221:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 222:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_TRACE_NONE               0x00000000U                                     /*!< TRA
 223:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_TRACE_ASYNCH             DBGMCU_CR_TRACE_IOEN                            /*!< TRA
 224:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE1        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_0) /*!< TRA
 225:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE2        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_1) /*!< TRA
 226:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE4        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE)   /*!< TRA
 227:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 228:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 229:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 230:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 231:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP DBGMCU APB1 GRP1 STOP IP
 232:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 233:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 234:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_APB1_FZ_DBG_TIM2_STOP          /*!< TIM2 counter 
 235:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_APB1_FZ_DBG_TIM3_STOP          /*!< TIM3 counter 
 236:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM4_STOP      DBGMCU_APB1_FZ_DBG_TIM4_STOP          /*!< TIM4 counter 
 237:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM5_STOP      DBGMCU_APB1_FZ_DBG_TIM5_STOP          /*!< TIM5 counter 
 238:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_APB1_FZ_DBG_TIM6_STOP          /*!< TIM6 counter 
 239:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_APB1_FZ_DBG_TIM7_STOP          /*!< TIM7 counter 
 240:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM12_STOP     DBGMCU_APB1_FZ_DBG_TIM12_STOP         /*!< TIM12 counter
ARM GAS  /tmp/ccQYuIjq.s 			page 26


 241:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM13_STOP     DBGMCU_APB1_FZ_DBG_TIM13_STOP         /*!< TIM13 counter
 242:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM14_STOP     DBGMCU_APB1_FZ_DBG_TIM14_STOP         /*!< TIM14 counter
 243:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_LPTIM1_STOP    DBGMCU_APB1_FZ_DBG_LPTIM1_STOP        /*!< LPTIIM1 count
 244:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_RTC_STOP       DBGMCU_APB1_FZ_DBG_RTC_STOP           /*!< RTC counter s
 245:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_APB1_FZ_DBG_WWDG_STOP          /*!< Debug Window 
 246:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_APB1_FZ_DBG_IWDG_STOP          /*!< Debug Indepen
 247:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT /*!< I2C1 SMBUS ti
 248:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C2_STOP      DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT /*!< I2C2 SMBUS ti
 249:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C3_STOP      DBGMCU_APB1_FZ_DBG_I2C3_SMBUS_TIMEOUT /*!< I2C3 SMBUS ti
 250:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_I2C4_SMBUS_TIMEOUT)
 251:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C4_STOP      DBGMCU_APB1_FZ_DBG_I2C4_SMBUS_TIMEOUT /*!< I2C4 SMBUS ti
 252:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* DBGMCU_APB1_FZ_DBG_I2C4_SMBUS_TIMEOUT */
 253:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN1_STOP       DBGMCU_APB1_FZ_DBG_CAN1_STOP         /*!< CAN1 debug st
 254:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_CAN2_STOP)
 255:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN2_STOP       DBGMCU_APB1_FZ_DBG_CAN2_STOP         /*!< CAN2 debug st
 256:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* DBGMCU_APB1_FZ_DBG_CAN2_STOP */
 257:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_CAN3_STOP)
 258:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN3_STOP       DBGMCU_APB1_FZ_DBG_CAN3_STOP         /*!< CAN3 debug st
 259:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_CAN3_STOP*/
 260:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 261:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 262:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 263:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 264:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB2_GRP1_STOP_IP DBGMCU APB2 GRP1 STOP IP
 265:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 266:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 267:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM1_STOP      DBGMCU_APB2_FZ_DBG_TIM1_STOP     /*!< TIM1 counter stopp
 268:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM8_STOP      DBGMCU_APB2_FZ_DBG_TIM8_STOP     /*!< TIM8 counter stopp
 269:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM9_STOP      DBGMCU_APB2_FZ_DBG_TIM9_STOP     /*!< TIM9 counter stopp
 270:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM10_STOP     DBGMCU_APB2_FZ_DBG_TIM10_STOP    /*!< TIM10 counter stop
 271:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM11_STOP     DBGMCU_APB2_FZ_DBG_TIM11_STOP    /*!< TIM11 counter stop
 272:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 273:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 274:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 275:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 276:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 277:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 278:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 279:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 FLASH_ACR_LATENCY_0WS   /*!< FLASH Zero wait state */
 280:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY_1WS   /*!< FLASH One wait state */
 281:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_2                 FLASH_ACR_LATENCY_2WS   /*!< FLASH Two wait states */
 282:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_3                 FLASH_ACR_LATENCY_3WS   /*!< FLASH Three wait states */
 283:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_4                 FLASH_ACR_LATENCY_4WS   /*!< FLASH Four wait states */
 284:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_5                 FLASH_ACR_LATENCY_5WS   /*!< FLASH five wait state */
 285:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_6                 FLASH_ACR_LATENCY_6WS   /*!< FLASH six wait state */
 286:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_7                 FLASH_ACR_LATENCY_7WS   /*!< FLASH seven wait states */
 287:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_8                 FLASH_ACR_LATENCY_8WS   /*!< FLASH eight wait states */
 288:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_9                 FLASH_ACR_LATENCY_9WS   /*!< FLASH nine wait states */
 289:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_10                FLASH_ACR_LATENCY_10WS   /*!< FLASH ten wait states */
 290:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_11                FLASH_ACR_LATENCY_11WS   /*!< FLASH eleven wait states *
 291:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_12                FLASH_ACR_LATENCY_12WS   /*!< FLASH twelve wait states *
 292:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_13                FLASH_ACR_LATENCY_13WS   /*!< FLASH thirteen wait states
 293:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_14                FLASH_ACR_LATENCY_14WS   /*!< FLASH fourteen wait states
 294:HALLIB/Inc/stm32f7xx_ll_system.h **** #define LL_FLASH_LATENCY_15                FLASH_ACR_LATENCY_15WS   /*!< FLASH fifteen wait states 
 295:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 296:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 297:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
ARM GAS  /tmp/ccQYuIjq.s 			page 27


 298:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 299:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 300:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 301:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 302:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 303:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 304:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 305:HALLIB/Inc/stm32f7xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 306:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 307:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 308:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 309:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 310:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_SYSCFG SYSCFG
 311:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 312:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 313:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 314:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 315:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Enables the FMC Memory Mapping Swapping
 316:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP SWP_FMC      LL_SYSCFG_EnableFMCMemorySwapping
 317:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @note   SDRAM is accessible at 0x60000000 and NOR/RAM
 318:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         is accessible at 0xC0000000
 319:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 320:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 321:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFMCMemorySwapping(void)
 322:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 323:HALLIB/Inc/stm32f7xx_ll_system.h ****   SET_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FMC_0);
 324:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 325:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 326:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 327:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Disables the FMC Memory Mapping Swapping
 328:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP SWP_FMC      LL_SYSCFG_DisableFMCMemorySwapping
 329:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)
 330:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)
 331:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 332:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 333:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableFMCMemorySwapping(void)
 334:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 335:HALLIB/Inc/stm32f7xx_ll_system.h ****   CLEAR_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FMC);
 336:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 337:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 338:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 339:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Enables the Compensation Cell
 340:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_CMPCR CMP_PD      LL_SYSCFG_EnableCompensationCell
 341:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @note   The I/O compensation cell can be used only when the device supply
 342:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         voltage ranges from 2.4 to 3.6 V
 343:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 344:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 345:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableCompensationCell(void)
 346:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 347:HALLIB/Inc/stm32f7xx_ll_system.h ****   SET_BIT(SYSCFG->CMPCR, SYSCFG_CMPCR_CMP_PD);
 348:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 349:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 350:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 351:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Disables the Compensation Cell
 352:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_CMPCR CMP_PD      LL_SYSCFG_DisableCompensationCell
 353:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @note   The I/O compensation cell can be used only when the device supply
 354:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         voltage ranges from 2.4 to 3.6 V
ARM GAS  /tmp/ccQYuIjq.s 			page 28


 355:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 356:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 357:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableCompensationCell(void)
 358:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 359:HALLIB/Inc/stm32f7xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CMPCR, SYSCFG_CMPCR_CMP_PD);
 360:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 361:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 362:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 363:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Get Compensation Cell ready Flag
 364:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_CMPCR READY  LL_SYSCFG_IsActiveFlag_CMPCR
 365:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval State of bit (1 or 0).
 366:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 367:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CMPCR(void)
 368:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 369:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (READ_BIT(SYSCFG->CMPCR, SYSCFG_CMPCR_READY) == (SYSCFG_CMPCR_READY));
 370:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 371:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 372:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 373:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 374:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Get the memory boot mapping as configured by user
 375:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP MEM_BOOT      LL_SYSCFG_GetRemapMemoryBoot
 376:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 377:HALLIB/Inc/stm32f7xx_ll_system.h ****   *           @arg @ref LL_SYSCFG_REMAP_BOOT0
 378:HALLIB/Inc/stm32f7xx_ll_system.h ****   *           @arg @ref LL_SYSCFG_REMAP_BOOT1
 379:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
 380:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices
 381:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 382:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetRemapMemoryBoot(void)
 383:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 384:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_MEM_BOOT));
 385:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 386:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 387:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_PMC_MII_RMII_SEL)
 388:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 389:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Select Ethernet PHY interface
 390:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_PMC MII_RMII_SEL       LL_SYSCFG_SetPHYInterface
 391:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Interface This parameter can be one of the following values:
 392:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_PMC_ETHMII
 393:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_PMC_ETHRMII
 394:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 395:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 396:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetPHYInterface(uint32_t Interface)
 397:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 398:HALLIB/Inc/stm32f7xx_ll_system.h ****   MODIFY_REG(SYSCFG->PMC, SYSCFG_PMC_MII_RMII_SEL, Interface);
 399:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 400:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 401:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 402:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Get Ethernet PHY interface
 403:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_PMC MII_RMII_SEL       LL_SYSCFG_GetPHYInterface
 404:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 405:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_PMC_ETHMII
 406:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_PMC_ETHRMII
 407:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 408:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 409:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetPHYInterface(void)
 410:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 411:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->PMC, SYSCFG_PMC_MII_RMII_SEL));
ARM GAS  /tmp/ccQYuIjq.s 			page 29


 412:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 413:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_PMC_MII_RMII_SEL */
 414:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 415:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 416:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_MEMRMP_SWP_FB)
 417:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 418:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Select Flash bank mode (Bank flashed at 0x08000000)
 419:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP FB_MODE       LL_SYSCFG_SetFlashBankMode
 420:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Bank This parameter can be one of the following values:
 421:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 422:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 423:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 424:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 425:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetFlashBankMode(uint32_t Bank)
 426:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 427:HALLIB/Inc/stm32f7xx_ll_system.h ****   MODIFY_REG(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB, Bank);
 428:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 429:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 430:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 431:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Get Flash bank mode (Bank flashed at 0x08000000)
 432:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP FB_MODE       LL_SYSCFG_GetFlashBankMode
 433:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 434:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 435:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 436:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 437:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetFlashBankMode(void)
 438:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 439:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB));
 440:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 441:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 442:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_MEMRMP_SWP_FB */
 443:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 444:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_PMC_I2C1_FMP)
 445:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 446:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Enable the I2C fast mode plus driving capability.
 447:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_PMC I2C_PBx_FMP   LL_SYSCFG_EnableFastModePlus\n
 448:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_PMC I2Cx_FMP      LL_SYSCFG_EnableFastModePlus
 449:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 450:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 451:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 452:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8 (*)
 453:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9 (*)
 454:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 455:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 456:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3
 457:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C4(*)
 458:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
 459:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices
 460:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 461:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 462:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFastModePlus(uint32_t ConfigFastModePlus)
 463:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 464:HALLIB/Inc/stm32f7xx_ll_system.h ****   SET_BIT(SYSCFG->PMC, ConfigFastModePlus);
 465:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 466:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 467:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 468:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Disable the I2C fast mode plus driving capability.
ARM GAS  /tmp/ccQYuIjq.s 			page 30


 469:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_PMC I2C_PBx_FMP   LL_SYSCFG_DisableFastModePlus\n
 470:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_PMC I2Cx_FMP      LL_SYSCFG_DisableFastModePlus
 471:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 472:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 473:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 474:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8 (*)
 475:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9 (*)
 476:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 477:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 478:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3
 479:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C4
 480:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices
 481:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 482:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 483:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableFastModePlus(uint32_t ConfigFastModePlus)
 484:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 485:HALLIB/Inc/stm32f7xx_ll_system.h ****   CLEAR_BIT(SYSCFG->PMC, ConfigFastModePlus);
 486:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 487:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_PMC_I2C1_FMP */
 488:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 489:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 490:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 491:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Configure source input for the EXTI external interrupt.
 492:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTIx         LL_SYSCFG_SetEXTISource\n
 493:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTIx         LL_SYSCFG_SetEXTISource\n
 494:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTIx         LL_SYSCFG_SetEXTISource\n
 495:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTIx         LL_SYSCFG_SetEXTISource
 496:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Port This parameter can be one of the following values:
 497:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 498:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 499:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 500:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD
 501:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE
 502:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 503:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTG
 504:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTH
 505:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTI
 506:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTJ
 507:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTK
 508:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
 509:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices
 510:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 511:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 512:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 513:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 514:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 515:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 516:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 517:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 518:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 519:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 520:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 521:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 522:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 523:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 524:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 525:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
ARM GAS  /tmp/ccQYuIjq.s 			page 31


 526:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 527:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 528:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 529:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetEXTISource(uint32_t Port, uint32_t Line)
 530:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 531:HALLIB/Inc/stm32f7xx_ll_system.h ****   MODIFY_REG(SYSCFG->EXTICR[Line & 0xFFU], (Line >> 16U), Port << POSITION_VAL((Line >> 16U)));
 532:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 533:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 534:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 535:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Get the configured defined for specific EXTI Line
 536:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTIx         LL_SYSCFG_GetEXTISource\n
 537:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTIx         LL_SYSCFG_GetEXTISource\n
 538:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTIx         LL_SYSCFG_GetEXTISource\n
 539:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTIx         LL_SYSCFG_GetEXTISource
 540:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 541:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 542:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 543:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 544:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 545:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 546:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 547:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 548:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 549:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 550:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 551:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 552:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 553:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 554:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 555:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 556:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 557:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 558:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 559:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 560:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 561:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD
 562:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE
 563:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 564:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTG
 565:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTH
 566:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTI
 567:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTJ
 568:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTK
 569:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices
 570:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 571:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetEXTISource(uint32_t Line)
 572:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 573:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->EXTICR[Line & 0xFFU], (Line >> 16U)) >> POSITION_VAL(Line >> 1
 574:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 575:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 576:HALLIB/Inc/stm32f7xx_ll_system.h **** #if defined(SYSCFG_CBR_CLL)
 577:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 578:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Set connections to TIM1/8/15/16/17 Break inputs
 579:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_CBR CLL             LL_SYSCFG_SetTIMBreakInputs\n
 580:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_CBR PVDL            LL_SYSCFG_SetTIMBreakInputs
 581:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Break This parameter can be a combination of the following values:
 582:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
ARM GAS  /tmp/ccQYuIjq.s 			page 32


 583:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD
 584:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 585:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 586:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetTIMBreakInputs(uint32_t Break)
 587:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 588:HALLIB/Inc/stm32f7xx_ll_system.h ****   MODIFY_REG(SYSCFG->CBR, SYSCFG_CBR_CLL | SYSCFG_CBR_PVDL, Break);
 589:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 590:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 591:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 592:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Get connections to TIM1/8/15/16/17 Break inputs
 593:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_CBR CLL             LL_SYSCFG_GetTIMBreakInputs\n
 594:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         SYSCFG_CBR PVDL            LL_SYSCFG_GetTIMBreakInputs
 595:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Returned value can be can be a combination of the following values:
 596:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
 597:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD
 598:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 599:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetTIMBreakInputs(void)
 600:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 601:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CBR, SYSCFG_CBR_CLL | SYSCFG_CBR_PVDL));
 602:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 603:HALLIB/Inc/stm32f7xx_ll_system.h **** #endif /* SYSCFG_CBR_CLL */
 604:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 605:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 606:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 607:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 608:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 609:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
 610:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 611:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 612:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 613:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 614:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Return the device identifier
 615:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @note For STM32F75xxx and STM32F74xxx devices, the device ID is 0x449
 616:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @note For STM32F77xxx and STM32F76xxx devices, the device ID is 0x451
 617:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @note For STM32F72xxx and STM32F73xxx devices, the device ID is 0x452
 618:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
 619:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFF
 620:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 621:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
 622:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 623:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
 624:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 625:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 626:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 627:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Return the device revision identifier
 628:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @note This field indicates the revision of the device.
 629:HALLIB/Inc/stm32f7xx_ll_system.h ****           For example, it is read as RevA -> 0x1000, Cat 2 revZ -> 0x1001
 630:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
 631:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
 632:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 633:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
 634:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 635:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> DBGMCU_IDCODE_REV_ID_Pos);
 636:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 637:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 638:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 639:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Enable the Debug Module during SLEEP mode
ARM GAS  /tmp/ccQYuIjq.s 			page 33


 640:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_EnableDBGSleepMode
 641:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 642:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 643:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGSleepMode(void)
 644:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 645:HALLIB/Inc/stm32f7xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 646:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 647:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 648:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 649:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Disable the Debug Module during SLEEP mode
 650:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_DisableDBGSleepMode
 651:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 652:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 653:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGSleepMode(void)
 654:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 655:HALLIB/Inc/stm32f7xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 656:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 657:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 658:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 659:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
 660:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
 661:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 662:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 663:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
 664:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 665:HALLIB/Inc/stm32f7xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 666:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 667:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 668:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 669:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
 670:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
 671:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 672:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 673:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
 674:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 675:HALLIB/Inc/stm32f7xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 676:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 677:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 678:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 679:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
 680:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
 681:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 682:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 683:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
 684:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 685:HALLIB/Inc/stm32f7xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 686:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 687:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 688:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 689:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
 690:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
 691:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 692:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 693:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
 694:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 695:HALLIB/Inc/stm32f7xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 696:HALLIB/Inc/stm32f7xx_ll_system.h **** }
ARM GAS  /tmp/ccQYuIjq.s 			page 34


 697:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 698:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 699:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Set Trace pin assignment control
 700:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_SetTracePinAssignment\n
 701:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_SetTracePinAssignment
 702:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  PinAssignment This parameter can be one of the following values:
 703:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
 704:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
 705:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
 706:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
 707:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
 708:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 709:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 710:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_SetTracePinAssignment(uint32_t PinAssignment)
 711:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 712:HALLIB/Inc/stm32f7xx_ll_system.h ****   MODIFY_REG(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE, PinAssignment);
 713:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 714:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 715:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 716:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Get Trace pin assignment control
 717:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_GetTracePinAssignment\n
 718:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_GetTracePinAssignment
 719:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 720:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
 721:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
 722:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
 723:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
 724:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
 725:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 726:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetTracePinAssignment(void)
 727:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 728:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE));
 729:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 730:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 731:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 732:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
 733:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_APB1_FZ      DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 734:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 735:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM4_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 736:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM5_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 737:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 738:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 739:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM12_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 740:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM13_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 741:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 742:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_LPTIM1_STOP         LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 743:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 744:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 745:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 746:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 747:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_I2C2_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 748:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_I2C3_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 749:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_I2C4_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 750:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_CAN1_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 751:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_CAN2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 752:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_CAN3_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph
 753:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  /tmp/ccQYuIjq.s 			page 35


 754:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 755:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
 756:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
 757:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP
 758:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
 759:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
 760:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM12_STOP
 761:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM13_STOP
 762:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
 763:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
 764:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 765:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 766:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 767:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 768:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP
 769:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP
 770:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C4_STOP (*)
 771:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN1_STOP
 772:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN2_STOP (*)
 773:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN3_STOP (*)
 774:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
 775:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices.
 776:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 777:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 778:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
 779:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 780:HALLIB/Inc/stm32f7xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZ, Periphs);
 781:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 782:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 783:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 784:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
 785:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_APB1_FZ      DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 786:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 787:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM4_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 788:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM5_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 789:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 790:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 791:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM12_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 792:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM13_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 793:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 794:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_LPTIM1_STOP         LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 795:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 796:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 797:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 798:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 799:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_I2C2_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 800:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_I2C3_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 801:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_I2C4_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 802:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_CAN1_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 803:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_CAN2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 804:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB1_FZ      DBG_CAN3_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph
 805:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 806:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 807:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
 808:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
 809:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP
 810:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
ARM GAS  /tmp/ccQYuIjq.s 			page 36


 811:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
 812:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM12_STOP
 813:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM13_STOP
 814:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
 815:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
 816:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 817:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 818:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 819:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 820:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP
 821:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP
 822:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C4_STOP (*)
 823:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN1_STOP
 824:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN2_STOP (*)
 825:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN3_STOP (*)
 826:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices.
 827:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 828:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 829:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
 830:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 831:HALLIB/Inc/stm32f7xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZ, Periphs);
 832:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 833:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 834:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 835:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Freeze APB2 peripherals
 836:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_APB2_FZ      DBG_TIM1_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 837:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB2_FZ      DBG_TIM8_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 838:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB2_FZ      DBG_TIM9_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 839:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB2_FZ      DBG_TIM10_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 840:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB2_FZ      DBG_TIM11_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph
 841:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 842:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
 843:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP
 844:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM9_STOP
 845:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM10_STOP
 846:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM11_STOP
 847:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
 848:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices.
 849:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 850:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 851:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_FreezePeriph(uint32_t Periphs)
 852:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 853:HALLIB/Inc/stm32f7xx_ll_system.h ****   SET_BIT(DBGMCU->APB2FZ, Periphs);
 854:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 855:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 856:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 857:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Unfreeze APB2 peripherals
 858:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll DBGMCU_APB2_FZ      DBG_TIM1_STOP    LL_DBGMCU_APB2_GRP1_UnFreezePeriph\n
 859:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB2_FZ      DBG_TIM8_STOP    LL_DBGMCU_APB2_GRP1_UnFreezePeriph\n
 860:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB2_FZ      DBG_TIM9_STOP    LL_DBGMCU_APB2_GRP1_UnFreezePeriph\n
 861:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB2_FZ      DBG_TIM10_STOP   LL_DBGMCU_APB2_GRP1_UnFreezePeriph\n
 862:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         DBGMCU_APB2_FZ      DBG_TIM11_STOP   LL_DBGMCU_APB2_GRP1_UnFreezePeriph
 863:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 864:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
 865:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP
 866:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM9_STOP
 867:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM10_STOP
ARM GAS  /tmp/ccQYuIjq.s 			page 37


 868:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM11_STOP
 869:HALLIB/Inc/stm32f7xx_ll_system.h ****   *
 870:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         (*) value not defined in all devices.
 871:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 872:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 873:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_UnFreezePeriph(uint32_t Periphs)
 874:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 875:HALLIB/Inc/stm32f7xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB2FZ, Periphs);
 876:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 877:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 878:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @}
 879:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 880:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 881:HALLIB/Inc/stm32f7xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
 882:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @{
 883:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 884:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 885:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
 886:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Set FLASH Latency
 887:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
 888:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
 889:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 890:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 891:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
 892:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_3
 893:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_4
 894:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_5
 895:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_6
 896:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_7
 897:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_8
 898:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_9
 899:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_10
 900:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_11
 901:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_12
 902:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_13
 903:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_14
 904:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_15
 905:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval None
 906:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 907:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
 908:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 909:HALLIB/Inc/stm32f7xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 247              		.loc 3 909 0
 248 010e 0F4A     		ldr	r2, .L25+28
 249              	.LVL16:
 250 0110 1368     		ldr	r3, [r2]
 251 0112 23F00F03 		bic	r3, r3, #15
 252 0116 0B43     		orrs	r3, r3, r1
 253 0118 1360     		str	r3, [r2]
 254              	.LVL17:
 255              	.LBE61:
 256              	.LBE60:
 257              	.LBB62:
 258              	.LBB63:
 910:HALLIB/Inc/stm32f7xx_ll_system.h **** }
 911:HALLIB/Inc/stm32f7xx_ll_system.h **** 
 912:HALLIB/Inc/stm32f7xx_ll_system.h **** /**
ARM GAS  /tmp/ccQYuIjq.s 			page 38


 913:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @brief  Get FLASH Latency
 914:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
 915:HALLIB/Inc/stm32f7xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 916:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 917:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 918:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
 919:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_3
 920:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_4
 921:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_5
 922:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_6
 923:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_7
 924:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_8
 925:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_9
 926:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_10
 927:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_11
 928:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_12
 929:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_13
 930:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_14
 931:HALLIB/Inc/stm32f7xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_15
 932:HALLIB/Inc/stm32f7xx_ll_system.h ****   */
 933:HALLIB/Inc/stm32f7xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
 934:HALLIB/Inc/stm32f7xx_ll_system.h **** {
 935:HALLIB/Inc/stm32f7xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 259              		.loc 3 935 0
 260 011a 1368     		ldr	r3, [r2]
 261 011c 03F00F03 		and	r3, r3, #15
 262              	.LBE63:
 263              	.LBE62:
 595:HALLIB/Src/stm32f7xx_ll_utils.c ****         }
 596:HALLIB/Src/stm32f7xx_ll_utils.c ****         /* else HCLK_Frequency < 22MHz default LL_FLASH_LATENCY_0 0WS */
 597:HALLIB/Src/stm32f7xx_ll_utils.c ****       }
 598:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 599:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 600:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_FLASH_SetLatency(latency);
 601:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 602:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 603:HALLIB/Src/stm32f7xx_ll_utils.c ****        memory by reading the FLASH_ACR register */
 604:HALLIB/Src/stm32f7xx_ll_utils.c ****     if(LL_FLASH_GetLatency() != latency)
 264              		.loc 1 604 0
 265 0120 9942     		cmp	r1, r3
 266 0122 03D1     		bne	.L24
 484:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 267              		.loc 1 484 0
 268 0124 0120     		movs	r0, #1
 269 0126 7047     		bx	lr
 270              	.LVL18:
 271              	.L7:
 491:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 272              		.loc 1 491 0
 273 0128 0020     		movs	r0, #0
 274              	.LVL19:
 275 012a 7047     		bx	lr
 276              	.LVL20:
 277              	.L24:
 605:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 606:HALLIB/Src/stm32f7xx_ll_utils.c ****       status = ERROR;
 278              		.loc 1 606 0
ARM GAS  /tmp/ccQYuIjq.s 			page 39


 279 012c 0020     		movs	r0, #0
 280              	.LVL21:
 607:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 608:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 609:HALLIB/Src/stm32f7xx_ll_utils.c ****   return status;
 610:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 281              		.loc 1 610 0
 282 012e 7047     		bx	lr
 283              	.L26:
 284              		.align	2
 285              	.L25:
 286 0130 00700040 		.word	1073770496
 287 0134 8058840C 		.word	210000000
 288 0138 80D1F008 		.word	150000000
 289 013c 000E2707 		.word	120000000
 290 0140 804A5D05 		.word	90000000
 291 0144 00879303 		.word	60000000
 292 0148 80C3C901 		.word	30000000
 293 014c 003C0240 		.word	1073888256
 294              		.cfi_endproc
 295              	.LFE405:
 297              		.section	.text.UTILS_GetPLLOutputFrequency,"ax",%progbits
 298              		.align	2
 299              		.thumb
 300              		.thumb_func
 302              	UTILS_GetPLLOutputFrequency:
 303              	.LFB406:
 611:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 612:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 613:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  Function to check that PLL can be modified
 614:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  PLL_InputFrequency  PLL input frequency (in Hz)
 615:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  UTILS_PLLInitStruct pointer to a @ref LL_UTILS_PLLInitTypeDef structure that contains
 616:HALLIB/Src/stm32f7xx_ll_utils.c ****   *                             the configuration information for the PLL.
 617:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval PLL output frequency (in Hz)
 618:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 619:HALLIB/Src/stm32f7xx_ll_utils.c **** static uint32_t UTILS_GetPLLOutputFrequency(uint32_t PLL_InputFrequency, LL_UTILS_PLLInitTypeDef *U
 620:HALLIB/Src/stm32f7xx_ll_utils.c **** {
 304              		.loc 1 620 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309              	.LVL22:
 621:HALLIB/Src/stm32f7xx_ll_utils.c ****   uint32_t pllfreq = 0U;
 622:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 623:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Check the parameters */
 624:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_PLLM_VALUE(UTILS_PLLInitStruct->PLLM));
 625:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_PLLN_VALUE(UTILS_PLLInitStruct->PLLN));
 626:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_PLLP_VALUE(UTILS_PLLInitStruct->PLLP));
 627:HALLIB/Src/stm32f7xx_ll_utils.c ****   
 628:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Check different PLL parameters according to RM                          */
 629:HALLIB/Src/stm32f7xx_ll_utils.c ****   /*  - PLLM: ensure that the VCO input frequency ranges from 0.95 to 2.1 MHz.   */
 630:HALLIB/Src/stm32f7xx_ll_utils.c ****   pllfreq = PLL_InputFrequency / (UTILS_PLLInitStruct->PLLM & (RCC_PLLCFGR_PLLM >> RCC_PLLCFGR_PLLM
 310              		.loc 1 630 0
 311 0000 0B68     		ldr	r3, [r1]
 312 0002 03F03F03 		and	r3, r3, #63
 313 0006 B0FBF3F0 		udiv	r0, r0, r3
ARM GAS  /tmp/ccQYuIjq.s 			page 40


 314              	.LVL23:
 631:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_PLLVCO_INPUT(pllfreq));
 632:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 633:HALLIB/Src/stm32f7xx_ll_utils.c ****   /*  - PLLN: ensure that the VCO output frequency is between 100 and 432 MHz.*/
 634:HALLIB/Src/stm32f7xx_ll_utils.c ****   pllfreq = pllfreq * (UTILS_PLLInitStruct->PLLN & (RCC_PLLCFGR_PLLN >> RCC_PLLCFGR_PLLN_Pos));
 315              		.loc 1 634 0
 316 000a 4B68     		ldr	r3, [r1, #4]
 317 000c C3F30803 		ubfx	r3, r3, #0, #9
 318 0010 03FB00F0 		mul	r0, r3, r0
 319              	.LVL24:
 635:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_PLLVCO_OUTPUT(pllfreq));
 636:HALLIB/Src/stm32f7xx_ll_utils.c ****   
 637:HALLIB/Src/stm32f7xx_ll_utils.c ****   /*  - PLLP: ensure that max frequency at 216000000 Hz is reached     */
 638:HALLIB/Src/stm32f7xx_ll_utils.c ****   pllfreq = pllfreq / (((UTILS_PLLInitStruct->PLLP >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 320              		.loc 1 638 0
 321 0014 4B89     		ldrh	r3, [r1, #10]
 322 0016 0133     		adds	r3, r3, #1
 323 0018 5B00     		lsls	r3, r3, #1
 324              	.LVL25:
 639:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_PLL_FREQUENCY(pllfreq));
 640:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 641:HALLIB/Src/stm32f7xx_ll_utils.c ****   return pllfreq;
 642:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 325              		.loc 1 642 0
 326 001a B0FBF3F0 		udiv	r0, r0, r3
 327              	.LVL26:
 328 001e 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE406:
 332              		.section	.text.UTILS_PLL_IsBusy,"ax",%progbits
 333              		.align	2
 334              		.thumb
 335              		.thumb_func
 337              	UTILS_PLL_IsBusy:
 338              	.LFB407:
 643:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 644:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 645:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  Function to check that PLL can be modified
 646:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 647:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - SUCCESS: PLL modification can be done
 648:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - ERROR: PLL is busy
 649:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 650:HALLIB/Src/stm32f7xx_ll_utils.c **** static ErrorStatus UTILS_PLL_IsBusy(void)
 651:HALLIB/Src/stm32f7xx_ll_utils.c **** {
 339              		.loc 1 651 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 344              	.LVL27:
 345              	.LBB64:
 346              	.LBB65:
 347              		.file 4 "HALLIB/Inc/stm32f7xx_ll_rcc.h"
   1:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
   2:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   ******************************************************************************
   3:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @file    stm32f7xx_ll_rcc.h
   4:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @author  MCD Application Team
ARM GAS  /tmp/ccQYuIjq.s 			page 41


   5:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   ******************************************************************************
   7:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @attention
   8:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
   9:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  10:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
  11:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * are permitted provided that the following conditions are met:
  13:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *      this list of conditions and the following disclaimer.
  15:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *      and/or other materials provided with the distribution.
  18:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *      may be used to endorse or promote products derived from this software
  20:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *      without specific prior written permission.
  21:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
  22:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
  33:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   ******************************************************************************
  34:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  35:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  36:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #ifndef __STM32F7xx_LL_RCC_H
  38:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __STM32F7xx_LL_RCC_H
  39:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  40:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #ifdef __cplusplus
  41:HALLIB/Inc/stm32f7xx_ll_rcc.h **** extern "C" {
  42:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif
  43:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  44:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  45:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #include "stm32f7xx.h"
  46:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  47:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @addtogroup STM32F7xx_LL_Driver
  48:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
  49:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  50:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  51:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC)
  52:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  53:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  54:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
  55:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  56:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  57:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  58:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  59:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Variables RCC Private Variables
  60:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
  61:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccQYuIjq.s 			page 42


  62:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  63:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_DCKCFGR1_PLLSAIDIVR)
  64:HALLIB/Inc/stm32f7xx_ll_rcc.h **** static const uint8_t aRCC_PLLSAIDIVRPrescTable[4] = {2, 4, 8, 16};
  65:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_DCKCFGR1_PLLSAIDIVR */
  66:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  67:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
  68:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
  69:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  70:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  71:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  72:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  73:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  74:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
  75:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  76:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
  77:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
  78:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  79:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  80:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  81:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  82:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  83:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
  84:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  85:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  86:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  87:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
  88:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  89:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
  90:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
  91:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
  92:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
  93:HALLIB/Inc/stm32f7xx_ll_rcc.h **** typedef struct
  94:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
  95:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
  96:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
  97:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
  98:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   uint32_t PCLK2_Frequency;         /*!< PCLK2 clock frequency */
  99:HALLIB/Inc/stm32f7xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
 100:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 101:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 102:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 103:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 104:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 105:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 106:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 107:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 108:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 109:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 110:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
 111:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
 112:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 113:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 114:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 115:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
 116:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
 117:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to 
 118:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *           HW set-up.
ARM GAS  /tmp/ccQYuIjq.s 			page 43


 119:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 120:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 121:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
 122:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define HSE_VALUE    25000000U  /*!< Value of the HSE oscillator in Hz */
 123:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* HSE_VALUE */
 124:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 125:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
 126:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define HSI_VALUE    16000000U  /*!< Value of the HSI oscillator in Hz */
 127:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* HSI_VALUE */
 128:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 129:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 130:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LSE_VALUE    32768U     /*!< Value of the LSE oscillator in Hz */
 131:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* LSE_VALUE */
 132:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 133:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 134:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LSI_VALUE    32000U     /*!< Value of the LSI oscillator in Hz */
 135:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* LSI_VALUE */
 136:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 137:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if !defined  (EXTERNAL_CLOCK_VALUE)
 138:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define EXTERNAL_CLOCK_VALUE    12288000U /*!< Value of the I2S_CKIN external oscillator in Hz */
 139:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* EXTERNAL_CLOCK_VALUE */
 140:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 141:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 142:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 143:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 144:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 145:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 146:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 147:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 148:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYC                RCC_CIR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 149:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYC                RCC_CIR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 150:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYC                RCC_CIR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 151:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYC                RCC_CIR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 152:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYC                RCC_CIR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 153:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLI2SRDYC             RCC_CIR_PLLI2SRDYC  /*!< PLLI2S Ready Interrupt Clear */
 154:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLSAIRDYC             RCC_CIR_PLLSAIRDYC  /*!< PLLSAI Ready Interrupt Clear */
 155:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_CSSC                   RCC_CIR_CSSC        /*!< Clock Security System Interrupt 
 156:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 157:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 158:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 159:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 160:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 161:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 162:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 163:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 164:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYF                RCC_CIR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 165:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYF                RCC_CIR_LSERDYF     /*!< LSE Ready Interrupt flag */
 166:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYF                RCC_CIR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 167:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYF                RCC_CIR_HSERDYF     /*!< HSE Ready Interrupt flag */
 168:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYF                RCC_CIR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 169:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLI2SRDYF             RCC_CIR_PLLI2SRDYF  /*!< PLLI2S Ready Interrupt flag */
 170:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLSAIRDYF             RCC_CIR_PLLSAIRDYF  /*!< PLLSAI Ready Interrupt flag */
 171:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_CSSF                   RCC_CIR_CSSF        /*!< Clock Security System Interrupt 
 172:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF                RCC_CSR_LPWRRSTF   /*!< Low-Power reset flag */
 173:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                 RCC_CSR_PINRSTF    /*!< PIN reset flag */
 174:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CSR_PORRSTF                 RCC_CSR_PORRSTF    /*!< POR/PDR reset flag */
 175:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                 RCC_CSR_SFTRSTF    /*!< Software Reset flag */
ARM GAS  /tmp/ccQYuIjq.s 			page 44


 176:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF                RCC_CSR_IWDGRSTF   /*!< Independent Watchdog reset flag 
 177:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF                RCC_CSR_WWDGRSTF   /*!< Window watchdog reset flag */
 178:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CSR_BORRSTF                 RCC_CSR_BORRSTF    /*!< BOR reset flag */
 179:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 180:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 181:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 182:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 183:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 184:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 185:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 186:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 187:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYIE               RCC_CIR_LSIRDYIE      /*!< LSI Ready Interrupt Enable */
 188:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYIE               RCC_CIR_LSERDYIE      /*!< LSE Ready Interrupt Enable */
 189:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYIE               RCC_CIR_HSIRDYIE      /*!< HSI Ready Interrupt Enable */
 190:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYIE               RCC_CIR_HSERDYIE      /*!< HSE Ready Interrupt Enable */
 191:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYIE               RCC_CIR_PLLRDYIE      /*!< PLL Ready Interrupt Enable */
 192:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLI2SRDYIE            RCC_CIR_PLLI2SRDYIE   /*!< PLLI2S Ready Interrupt Enable 
 193:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CIR_PLLSAIRDYIE            RCC_CIR_PLLSAIRDYIE   /*!< PLLSAI Ready Interrupt Enable 
 194:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 195:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 196:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 197:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 198:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSEDRIVE  LSE oscillator drive capability
 199:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 200:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 201:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_LOW                0x00000000U             /*!< Xtal mode lower driving cap
 202:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMHIGH         RCC_BDCR_LSEDRV_0       /*!< Xtal mode medium high drivi
 203:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMLOW          RCC_BDCR_LSEDRV_1       /*!< Xtal mode medium low drivin
 204:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_HIGH               RCC_BDCR_LSEDRV         /*!< Xtal mode higher driving ca
 205:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 206:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 207:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 208:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 209:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 210:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 211:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 212:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 213:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 214:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 215:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 216:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 217:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 218:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 219:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 220:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 221:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 222:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 223:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 224:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 225:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 226:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 227:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 228:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 229:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 230:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 231:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 232:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
ARM GAS  /tmp/ccQYuIjq.s 			page 45


 233:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 234:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 235:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 236:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 237:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 238:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 239:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 240:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 241:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 242:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 243:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 244:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 245:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 246:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 247:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 248:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE1_DIV1  /*!< HCLK not divided */
 249:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE1_DIV2  /*!< HCLK divided by 2 */
 250:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE1_DIV4  /*!< HCLK divided by 4 */
 251:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE1_DIV8  /*!< HCLK divided by 8 */
 252:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE1_DIV16 /*!< HCLK divided by 16 */
 253:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 254:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 255:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 256:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB2_DIV  APB high-speed prescaler (APB2)
 257:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 258:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 259:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_1                  RCC_CFGR_PPRE2_DIV1  /*!< HCLK not divided */
 260:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_2                  RCC_CFGR_PPRE2_DIV2  /*!< HCLK divided by 2 */
 261:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_4                  RCC_CFGR_PPRE2_DIV4  /*!< HCLK divided by 4 */
 262:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_8                  RCC_CFGR_PPRE2_DIV8  /*!< HCLK divided by 8 */
 263:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_16                 RCC_CFGR_PPRE2_DIV16 /*!< HCLK divided by 16 */
 264:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 265:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 266:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 267:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 268:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCOxSOURCE  MCO source selection
 269:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 270:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 271:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              (uint32_t)(RCC_CFGR_MCO1|0x00000000U)                   
 272:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSE              (uint32_t)(RCC_CFGR_MCO1|(RCC_CFGR_MCO1_0 >> 16U))      
 273:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              (uint32_t)(RCC_CFGR_MCO1|(RCC_CFGR_MCO1_1 >> 16U))      
 274:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK           (uint32_t)(RCC_CFGR_MCO1|((RCC_CFGR_MCO1_1|RCC_CFGR_MCO1
 275:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2SOURCE_SYSCLK           (uint32_t)(RCC_CFGR_MCO2|0x00000000U)                   
 276:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2SOURCE_PLLI2S           (uint32_t)(RCC_CFGR_MCO2|(RCC_CFGR_MCO2_0 >> 16U))      
 277:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2SOURCE_HSE              (uint32_t)(RCC_CFGR_MCO2|(RCC_CFGR_MCO2_1 >> 16U))      
 278:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2SOURCE_PLLCLK           (uint32_t)(RCC_CFGR_MCO2|((RCC_CFGR_MCO2_1|RCC_CFGR_MCO2
 279:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 280:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 281:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 282:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 283:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCOx_DIV  MCO prescaler
 284:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 285:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 286:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_1                  (uint32_t)(RCC_CFGR_MCO1PRE|0x00000000U)                
 287:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_2                  (uint32_t)(RCC_CFGR_MCO1PRE|(RCC_CFGR_MCO1PRE_2 >> 16U))
 288:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_3                  (uint32_t)(RCC_CFGR_MCO1PRE|((RCC_CFGR_MCO1PRE_2|RCC_CFG
 289:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_4                  (uint32_t)(RCC_CFGR_MCO1PRE|((RCC_CFGR_MCO1PRE_2|RCC_CFG
ARM GAS  /tmp/ccQYuIjq.s 			page 46


 290:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_5                  (uint32_t)(RCC_CFGR_MCO1PRE|(RCC_CFGR_MCO1PRE >> 16U))  
 291:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2_DIV_1                  (uint32_t)(RCC_CFGR_MCO2PRE|0x00000000U)                
 292:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2_DIV_2                  (uint32_t)(RCC_CFGR_MCO2PRE|(RCC_CFGR_MCO2PRE_2 >> 16U))
 293:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2_DIV_3                  (uint32_t)(RCC_CFGR_MCO2PRE|((RCC_CFGR_MCO2PRE_2|RCC_CFG
 294:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2_DIV_4                  (uint32_t)(RCC_CFGR_MCO2PRE|((RCC_CFGR_MCO2PRE_2|RCC_CFG
 295:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_MCO2_DIV_5                  (uint32_t)(RCC_CFGR_MCO2PRE|(RCC_CFGR_MCO2PRE >> 16U))  
 296:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 297:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 298:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 299:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 300:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_HSEDIV  HSE prescaler for RTC clock
 301:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 302:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 303:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_NOCLOCK                  0x00000000U             /*!< HSE not divided */
 304:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_2                RCC_CFGR_RTCPRE_1       /*!< HSE clock divided by 2 */
 305:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_3                (RCC_CFGR_RTCPRE_1|RCC_CFGR_RTCPRE_0)       /*!< HSE cl
 306:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_4                RCC_CFGR_RTCPRE_2       /*!< HSE clock divided by 4 */
 307:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_5                (RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_0)       /*!< HSE cl
 308:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_6                (RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_1)       /*!< HSE cl
 309:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_7                (RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_1|RCC_CFGR_RTCPRE_0)
 310:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_8                RCC_CFGR_RTCPRE_3       /*!< HSE clock divided by 8 */
 311:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_9                (RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_0)       /*!< HSE cl
 312:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_10               (RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_1)       /*!< HSE cl
 313:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_11               (RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_1|RCC_CFGR_RTCPRE_0)
 314:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_12               (RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_2)       /*!< HSE cl
 315:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_13               (RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_0)
 316:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_14               (RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_1)
 317:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_15               (RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_1|
 318:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_16               RCC_CFGR_RTCPRE_4       /*!< HSE clock divided by 16 */
 319:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_17               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_0)       /*!< HSE cl
 320:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_18               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_1)       /*!< HSE cl
 321:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_19               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_1|RCC_CFGR_RTCPRE_0)
 322:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_20               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_2)       /*!< HSE cl
 323:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_21               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_0)
 324:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_22               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_1)
 325:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_23               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_2|RCC_CFGR_RTCPRE_1|
 326:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_24               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_3)       /*!< HSE cl
 327:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_25               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_0)
 328:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_26               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_1)
 329:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_27               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_1|
 330:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_28               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_2)
 331:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_29               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_2|
 332:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_30               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_2|
 333:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_31               (RCC_CFGR_RTCPRE_4|RCC_CFGR_RTCPRE_3|RCC_CFGR_RTCPRE_2|
 334:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 335:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 336:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 337:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 338:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 339:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 340:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 341:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 342:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U                 /*!< No clock enabled for th
 343:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU                 /*!< Frequency cannot be pro
 344:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 345:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 346:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccQYuIjq.s 			page 47


 347:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 348:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 349:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USARTx_CLKSOURCE  Peripheral USART clock source selection
 350:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 351:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 352:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_PCLK2      (uint32_t)((RCC_DCKCFGR2_USART1SEL << 16U) | 0x00000000U
 353:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_SYSCLK     (uint32_t)((RCC_DCKCFGR2_USART1SEL << 16U) | RCC_DCKCFGR
 354:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_HSI        (uint32_t)((RCC_DCKCFGR2_USART1SEL << 16U) | RCC_DCKCFGR
 355:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_LSE        (uint32_t)((RCC_DCKCFGR2_USART1SEL << 16U) | RCC_DCKCFGR
 356:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_PCLK1      (uint32_t)((RCC_DCKCFGR2_USART2SEL << 16U) | 0x00000000U
 357:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_SYSCLK     (uint32_t)((RCC_DCKCFGR2_USART2SEL << 16U) | RCC_DCKCFGR
 358:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_HSI        (uint32_t)((RCC_DCKCFGR2_USART2SEL << 16U) | RCC_DCKCFGR
 359:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_LSE        (uint32_t)((RCC_DCKCFGR2_USART2SEL << 16U) | RCC_DCKCFGR
 360:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_PCLK1      (uint32_t)((RCC_DCKCFGR2_USART3SEL << 16U) | 0x00000000U
 361:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_SYSCLK     (uint32_t)((RCC_DCKCFGR2_USART3SEL << 16U) | RCC_DCKCFGR
 362:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_HSI        (uint32_t)((RCC_DCKCFGR2_USART3SEL << 16U) | RCC_DCKCFGR
 363:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_LSE        (uint32_t)((RCC_DCKCFGR2_USART3SEL << 16U) | RCC_DCKCFGR
 364:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART6_CLKSOURCE_PCLK2      (uint32_t)((RCC_DCKCFGR2_USART6SEL << 16U) | 0x00000000U
 365:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART6_CLKSOURCE_SYSCLK     (uint32_t)((RCC_DCKCFGR2_USART6SEL << 16U) | RCC_DCKCFGR
 366:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART6_CLKSOURCE_HSI        (uint32_t)((RCC_DCKCFGR2_USART6SEL << 16U) | RCC_DCKCFGR
 367:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART6_CLKSOURCE_LSE        (uint32_t)((RCC_DCKCFGR2_USART6SEL << 16U) | RCC_DCKCFGR
 368:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 369:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 370:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 371:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 372:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_UARTx_CLKSOURCE  Peripheral UART clock source selection
 373:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 374:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 375:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_PCLK1      (uint32_t)((RCC_DCKCFGR2_UART4SEL << 16U) | 0x00000000U) 
 376:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_SYSCLK     (uint32_t)((RCC_DCKCFGR2_UART4SEL << 16U) | RCC_DCKCFGR2_
 377:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_HSI        (uint32_t)((RCC_DCKCFGR2_UART4SEL << 16U) | RCC_DCKCFGR2_
 378:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_LSE        (uint32_t)((RCC_DCKCFGR2_UART4SEL << 16U) | RCC_DCKCFGR2_
 379:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_PCLK1      (uint32_t)((RCC_DCKCFGR2_UART5SEL << 16U) | 0x00000000U) 
 380:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_SYSCLK     (uint32_t)((RCC_DCKCFGR2_UART5SEL << 16U) | RCC_DCKCFGR2_
 381:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_HSI        (uint32_t)((RCC_DCKCFGR2_UART5SEL << 16U) | RCC_DCKCFGR2_
 382:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_LSE        (uint32_t)((RCC_DCKCFGR2_UART5SEL << 16U) | RCC_DCKCFGR2_
 383:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART7_CLKSOURCE_PCLK1      (uint32_t)((RCC_DCKCFGR2_UART7SEL << 16U) | 0x00000000U) 
 384:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART7_CLKSOURCE_SYSCLK     (uint32_t)((RCC_DCKCFGR2_UART7SEL << 16U) | RCC_DCKCFGR2_
 385:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART7_CLKSOURCE_HSI        (uint32_t)((RCC_DCKCFGR2_UART7SEL << 16U) | RCC_DCKCFGR2_
 386:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART7_CLKSOURCE_LSE        (uint32_t)((RCC_DCKCFGR2_UART7SEL << 16U) | RCC_DCKCFGR2_
 387:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART8_CLKSOURCE_PCLK1      (uint32_t)((RCC_DCKCFGR2_UART8SEL << 16U) | 0x00000000U) 
 388:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART8_CLKSOURCE_SYSCLK     (uint32_t)((RCC_DCKCFGR2_UART8SEL << 16U) | RCC_DCKCFGR2_
 389:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART8_CLKSOURCE_HSI        (uint32_t)((RCC_DCKCFGR2_UART8SEL << 16U) | RCC_DCKCFGR2_
 390:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART8_CLKSOURCE_LSE        (uint32_t)((RCC_DCKCFGR2_UART8SEL << 16U) | RCC_DCKCFGR2_
 391:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 392:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 393:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 394:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 395:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2Cx_CLKSOURCE  Peripheral I2C clock source selection
 396:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 397:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 398:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_PCLK1        (uint32_t)(RCC_DCKCFGR2_I2C1SEL|0x00000000U) /*!< PCLK1 
 399:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_SYSCLK       (uint32_t)(RCC_DCKCFGR2_I2C1SEL|(RCC_DCKCFGR2_I2C1SEL_0 
 400:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_HSI          (uint32_t)(RCC_DCKCFGR2_I2C1SEL|(RCC_DCKCFGR2_I2C1SEL_1 
 401:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_PCLK1        (uint32_t)(RCC_DCKCFGR2_I2C2SEL|0x00000000U) /*!< PCLK1 
 402:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_SYSCLK       (uint32_t)(RCC_DCKCFGR2_I2C2SEL|(RCC_DCKCFGR2_I2C2SEL_0 
 403:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_HSI          (uint32_t)(RCC_DCKCFGR2_I2C2SEL|(RCC_DCKCFGR2_I2C2SEL_1 
ARM GAS  /tmp/ccQYuIjq.s 			page 48


 404:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_PCLK1        (uint32_t)(RCC_DCKCFGR2_I2C3SEL|0x00000000U) /*!< PCLK1 
 405:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_SYSCLK       (uint32_t)(RCC_DCKCFGR2_I2C3SEL|(RCC_DCKCFGR2_I2C3SEL_0 
 406:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_HSI          (uint32_t)(RCC_DCKCFGR2_I2C3SEL|(RCC_DCKCFGR2_I2C3SEL_1 
 407:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(I2C4)
 408:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_PCLK1        (uint32_t)(RCC_DCKCFGR2_I2C4SEL|0x00000000U) /*!< PCLK1 
 409:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_SYSCLK       (uint32_t)(RCC_DCKCFGR2_I2C4SEL|(RCC_DCKCFGR2_I2C4SEL_0 
 410:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_HSI          (uint32_t)(RCC_DCKCFGR2_I2C4SEL|(RCC_DCKCFGR2_I2C4SEL_1 
 411:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* I2C4 */
 412:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 413:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 414:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 415:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 416:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1_CLKSOURCE  Peripheral LPTIM clock source selection
 417:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 418:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 419:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_PCLK1       0x00000000U                 /*!< PCLK1 clock used as LP
 420:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSI         RCC_DCKCFGR2_LPTIM1SEL_0    /*!< LSI oscillator clock u
 421:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_HSI         RCC_DCKCFGR2_LPTIM1SEL_1    /*!< HSI oscillator clock u
 422:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSE         (uint32_t)(RCC_DCKCFGR2_LPTIM1SEL_1 | RCC_DCKCFGR2_LPTI
 423:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 424:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 425:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 426:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 427:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SAIx_CLKSOURCE  Peripheral SAI clock source selection
 428:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 429:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 430:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLLSAI       (uint32_t)(RCC_DCKCFGR1_SAI1SEL | 0x00000000U)          
 431:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLLI2S       (uint32_t)(RCC_DCKCFGR1_SAI1SEL | (RCC_DCKCFGR1_SAI1SEL_
 432:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PIN          (uint32_t)(RCC_DCKCFGR1_SAI1SEL | (RCC_DCKCFGR1_SAI1SEL_
 433:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_SAI1SEL_PLLSRC_SUPPORT)
 434:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLLSRC       (uint32_t)(RCC_DCKCFGR1_SAI1SEL | (RCC_DCKCFGR1_SAI1SEL 
 435:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_SAI1SEL_PLLSRC_SUPPORT */
 436:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLLSAI       (uint32_t)(RCC_DCKCFGR1_SAI2SEL | 0x00000000U)          
 437:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLLI2S       (uint32_t)(RCC_DCKCFGR1_SAI2SEL | (RCC_DCKCFGR1_SAI2SEL_
 438:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PIN          (uint32_t)(RCC_DCKCFGR1_SAI2SEL | (RCC_DCKCFGR1_SAI2SEL_
 439:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_SAI2SEL_PLLSRC_SUPPORT)
 440:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLLSRC       (uint32_t)(RCC_DCKCFGR1_SAI2SEL | (RCC_DCKCFGR1_SAI2SEL 
 441:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_SAI2SEL_PLLSRC_SUPPORT */
 442:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 443:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 444:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 445:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 446:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SDMMCx_CLKSOURCE  Peripheral SDMMC clock source selection
 447:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 448:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 449:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE_PLL48CLK       (uint32_t)(RCC_DCKCFGR2_SDMMC1SEL | 0x00000000U)    
 450:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE_SYSCLK         (uint32_t)(RCC_DCKCFGR2_SDMMC1SEL | (RCC_DCKCFGR2_SD
 451:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(SDMMC2)
 452:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SDMMC2_CLKSOURCE_PLL48CLK       (uint32_t)(RCC_DCKCFGR2_SDMMC2SEL | 0x00000000U)    
 453:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SDMMC2_CLKSOURCE_SYSCLK         (uint32_t)(RCC_DCKCFGR2_SDMMC2SEL | (RCC_DCKCFGR2_SD
 454:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* SDMMC2 */
 455:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 456:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 457:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 458:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 459:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG_CLKSOURCE  Peripheral RNG clock source selection
 460:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
ARM GAS  /tmp/ccQYuIjq.s 			page 49


 461:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 462:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_PLL          0x00000000U            /*!< PLL clock used as RNG clock s
 463:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_PLLSAI       RCC_DCKCFGR2_CK48MSEL  /*!< PLLSAI clock used as RNG cloc
 464:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 465:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 466:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 467:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 468:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE  Peripheral USB clock source selection
 469:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 470:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 471:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL          0x00000000U            /*!< PLL clock used as USB clock s
 472:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLLSAI       RCC_DCKCFGR2_CK48MSEL  /*!< PLLSAI1 clock used as USB clo
 473:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 474:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 475:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 476:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 477:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DSI)
 478:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DSI_CLKSOURCE  Peripheral DSI clock source selection
 479:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 480:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 481:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DSI_CLKSOURCE_PHY          0x00000000U           /*!< DSI-PHY clock used as DSI byte
 482:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DSI_CLKSOURCE_PLL          RCC_DCKCFGR2_DSISEL   /*!< PLL clock used as DSI byte lan
 483:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 484:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 485:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 486:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DSI */
 487:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 488:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(CEC)
 489:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CEC_CLKSOURCE  Peripheral CEC clock source selection
 490:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 491:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 492:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE_LSE               0x00000000U                /*!< LSE oscillator clock
 493:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE_HSI_DIV488        RCC_DCKCFGR2_CECSEL        /*!< HSI oscillator clock
 494:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 495:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 496:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 497:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* CEC */
 498:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 499:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S1_CLKSOURCE  Peripheral I2S clock source selection
 500:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 501:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 502:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2S1_CLKSOURCE_PLLI2S           0x00000000U                /*!< I2S oscillator clock
 503:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2S1_CLKSOURCE_PIN              RCC_CFGR_I2SSRC            /*!< External pin clock u
 504:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 505:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 506:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 507:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 508:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CK48M_CLKSOURCE  Peripheral 48Mhz domain clock source selection
 509:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 510:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 511:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CK48M_CLKSOURCE_PLL             0x00000000U                /*!< PLL oscillator clock
 512:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CK48M_CLKSOURCE_PLLSAI          RCC_DCKCFGR2_CK48MSEL      /*!< PLLSAI oscillator cl
 513:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 514:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 515:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 516:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 517:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DFSDM1_Channel0)
ARM GAS  /tmp/ccQYuIjq.s 			page 50


 518:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DFSDM1_AUDIO_CLKSOURCE  Peripheral DFSDM Audio clock source selection
 519:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 520:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 521:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI1     0x00000000U                /*!< SAI1 clock used as D
 522:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI2     RCC_DCKCFGR1_ADFSDM1SEL    /*!< SAI2 clock used as D
 523:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 524:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 525:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 526:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 527:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DFSDM1_CLKSOURCE  Peripheral DFSDM clock source selection
 528:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 529:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 530:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE_PCLK2          0x00000000U                /*!< PCLK2 clock used as 
 531:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE_SYSCLK         RCC_DCKCFGR1_DFSDM1SEL     /*!< System clock used as
 532:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 533:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 534:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 535:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DFSDM1_Channel0 */
 536:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 537:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USARTx  Peripheral USART get clock source
 538:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 539:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 540:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE            RCC_DCKCFGR2_USART1SEL /*!< USART1 Clock source selectio
 541:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE            RCC_DCKCFGR2_USART2SEL /*!< USART2 Clock source selectio
 542:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE            RCC_DCKCFGR2_USART3SEL /*!< USART3 Clock source selectio
 543:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USART6_CLKSOURCE            RCC_DCKCFGR2_USART6SEL /*!< USART6 Clock source selectio
 544:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 545:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 546:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 547:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 548:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_UARTx  Peripheral UART get clock source
 549:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 550:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 551:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE             RCC_DCKCFGR2_UART4SEL /*!< UART4 Clock source selection 
 552:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE             RCC_DCKCFGR2_UART5SEL /*!< UART5 Clock source selection 
 553:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART7_CLKSOURCE             RCC_DCKCFGR2_UART7SEL /*!< UART7 Clock source selection 
 554:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_UART8_CLKSOURCE             RCC_DCKCFGR2_UART8SEL /*!< UART8 Clock source selection 
 555:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 556:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 557:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 558:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 559:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2Cx  Peripheral I2C get clock source
 560:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 561:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 562:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE              RCC_DCKCFGR2_I2C1SEL  /*!< I2C1 Clock source selection *
 563:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE              RCC_DCKCFGR2_I2C2SEL  /*!< I2C2 Clock source selection *
 564:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE              RCC_DCKCFGR2_I2C3SEL  /*!< I2C3 Clock source selection *
 565:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(I2C4)
 566:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE              RCC_DCKCFGR2_I2C4SEL  /*!< I2C4 Clock source selection *
 567:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* I2C4 */
 568:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 569:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 570:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 571:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 572:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1  Peripheral LPTIM get clock source
 573:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 574:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccQYuIjq.s 			page 51


 575:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE            RCC_DCKCFGR2_LPTIM1SEL /*!< LPTIM1 Clock source selectio
 576:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 577:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 578:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 579:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 580:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SAIx  Peripheral SAI get clock source
 581:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 582:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 583:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE              RCC_DCKCFGR1_SAI1SEL /*!< SAI1 Clock source selection */
 584:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE              RCC_DCKCFGR1_SAI2SEL /*!< SAI2 Clock source selection */
 585:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 586:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 587:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 588:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 589:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SDMMCx  Peripheral SDMMC get clock source
 590:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 591:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 592:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE            RCC_DCKCFGR2_SDMMC1SEL /*!< SDMMC1 Clock source selectio
 593:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(SDMMC2)
 594:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SDMMC2_CLKSOURCE            RCC_DCKCFGR2_SDMMC2SEL /*!< SDMMC2 Clock source selectio
 595:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* SDMMC2 */
 596:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 597:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 598:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 599:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 600:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CK48M  Peripheral CK48M get clock source
 601:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 602:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 603:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CK48M_CLKSOURCE             RCC_DCKCFGR2_CK48MSEL /*!< CK48M Domain clock source sel
 604:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 605:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 606:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 607:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 608:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG  Peripheral RNG get clock source
 609:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 610:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 611:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE               RCC_DCKCFGR2_CK48MSEL /*!< RNG Clock source selection */
 612:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 613:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 614:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 615:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 616:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB  Peripheral USB get clock source
 617:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 618:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 619:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               RCC_DCKCFGR2_CK48MSEL /*!< USB Clock source selection */
 620:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 621:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 622:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 623:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 624:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(CEC)
 625:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CEC  Peripheral CEC get clock source
 626:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 627:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 628:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE               RCC_DCKCFGR2_CECSEL /*!< CEC Clock source selection */
 629:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 630:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 631:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccQYuIjq.s 			page 52


 632:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* CEC */
 633:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 634:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S1  Peripheral I2S get clock source
 635:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 636:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 637:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_I2S1_CLKSOURCE              RCC_CFGR_I2SSRC /*!< I2S Clock source selection */
 638:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 639:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 640:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 641:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DFSDM1_Channel0)
 642:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DFSDM_AUDIO  Peripheral DFSDM Audio get clock source
 643:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 644:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 645:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DFSDM1_AUDIO_CLKSOURCE      RCC_DCKCFGR1_ADFSDM1SEL /*!< DFSDM Audio Clock source se
 646:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 647:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 648:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 649:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 650:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DFSDM  Peripheral DFSDM get clock source
 651:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 652:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 653:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE            RCC_DCKCFGR1_DFSDM1SEL /*!< DFSDM Clock source selection
 654:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 655:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 656:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 657:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DFSDM1_Channel0 */
 658:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 659:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DSI)
 660:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DSI  Peripheral DSI get clock source
 661:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 662:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 663:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_DSI_CLKSOURCE               RCC_DCKCFGR2_DSISEL /*!< DSI Clock source selection */
 664:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 665:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 666:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 667:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DSI */
 668:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 669:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(LTDC)
 670:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LTDC  Peripheral LTDC get clock source
 671:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 672:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 673:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_LTDC_CLKSOURCE              RCC_DCKCFGR1_PLLSAIDIVR /*!< LTDC Clock source selection
 674:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 675:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 676:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 677:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* LTDC */
 678:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 679:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(SPDIFRX)
 680:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SPDIFRX  Peripheral SPDIFRX get clock source
 681:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 682:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 683:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SPDIFRX1_CLKSOURCE           RCC_PLLI2SCFGR_PLLI2SP /*!< SPDIFRX Clock source select
 684:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 685:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 686:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 687:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* SPDIFRX */
 688:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
ARM GAS  /tmp/ccQYuIjq.s 			page 53


 689:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 690:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 691:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 692:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U             /*!< No clock used as RTC clock 
 693:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_BDCR_RTCSEL_0       /*!< LSE oscillator clock used a
 694:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_BDCR_RTCSEL_1       /*!< LSI oscillator clock used a
 695:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE           RCC_BDCR_RTCSEL         /*!< HSE oscillator clock divide
 696:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 697:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 698:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 699:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 700:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_TIM_CLKPRESCALER  Timers clocks prescalers selection
 701:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 702:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 703:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_TIM_PRESCALER_TWICE          0x00000000U                  /*!< Timers clock to twice
 704:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_TIM_PRESCALER_FOUR_TIMES     RCC_DCKCFGR1_TIMPRE          /*!< Timers clock to four 
 705:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 706:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 707:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 708:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 709:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE  PLL, PLLI2S and PLLSAI entry clock source
 710:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 711:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 712:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI               RCC_PLLCFGR_PLLSRC_HSI  /*!< HSI16 clock selected as PLL
 713:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_PLLCFGR_PLLSRC_HSE  /*!< HSE clock selected as PLL e
 714:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 715:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 716:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 717:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 718:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLM_DIV  PLL, PLLI2S and PLLSAI division factor
 719:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 720:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 721:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_2                  (RCC_PLLCFGR_PLLM_1) /*!< PLL, PLLI2S and PLLSAI divisio
 722:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_3                  (RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_PLLM_0) /*!< PLL, PLLI
 723:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_4                  (RCC_PLLCFGR_PLLM_2) /*!< PLL, PLLI2S and PLLSAI divisio
 724:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_5                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_0) /*!< PLL, PLLI
 725:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_6                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_1) /*!< PLL, PLLI
 726:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_7                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_P
 727:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_8                  (RCC_PLLCFGR_PLLM_3) /*!< PLL, PLLI2S and PLLSAI divisio
 728:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_9                  (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_0) /*!< PLL, PLLI
 729:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_10                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_1) /*!< PLL, PLLI
 730:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_11                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_P
 731:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_12                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2) /*!< PLL, PLLI
 732:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_13                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 733:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_14                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 734:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_15                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 735:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_16                 (RCC_PLLCFGR_PLLM_4) /*!< PLL, PLLI2S and PLLSAI divisio
 736:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_17                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_0) /*!< PLL, PLLI
 737:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_18                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_1) /*!< PLL, PLLI
 738:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_19                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_P
 739:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_20                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_2) /*!< PLL, PLLI
 740:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_21                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 741:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_22                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 742:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_23                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 743:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_24                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_3) /*!< PLL, PLLI
 744:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_25                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 745:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_26                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
ARM GAS  /tmp/ccQYuIjq.s 			page 54


 746:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_27                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 747:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_28                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 748:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_29                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 749:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_30                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 750:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_31                 (RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 751:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_32                 (RCC_PLLCFGR_PLLM_5) /*!< PLL, PLLI2S and PLLSAI divisio
 752:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_33                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_0) /*!< PLL, PLLI
 753:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_34                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_1) /*!< PLL, PLLI
 754:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_35                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_P
 755:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_36                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_2) /*!< PLL, PLLI
 756:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_37                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 757:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_38                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 758:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_39                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 759:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_40                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_3) /*!< PLL, PLLI
 760:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_41                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 761:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_42                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 762:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_43                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 763:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_44                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 764:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_45                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 765:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_46                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 766:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_47                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_P
 767:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_48                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4) /*!< PLL, PLLI
 768:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_49                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 769:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_50                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 770:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_51                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 771:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_52                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 772:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_53                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 773:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_54                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 774:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_55                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 775:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_56                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 776:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_57                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 777:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_58                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 778:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_59                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 779:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_60                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 780:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_61                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 781:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_62                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 782:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_63                 (RCC_PLLCFGR_PLLM_5 | RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_P
 783:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 784:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 785:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 786:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 787:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_PLLCFGR_PLLR)
 788:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLR_DIV  PLL division factor (PLLR)
 789:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 790:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 791:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_2                  (RCC_PLLCFGR_PLLR_1)                     /*!< Main PLL d
 792:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_3                  (RCC_PLLCFGR_PLLR_1|RCC_PLLCFGR_PLLR_0)  /*!< Main PLL d
 793:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_4                  (RCC_PLLCFGR_PLLR_2)                     /*!< Main PLL d
 794:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_5                  (RCC_PLLCFGR_PLLR_2|RCC_PLLCFGR_PLLR_0)  /*!< Main PLL d
 795:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_6                  (RCC_PLLCFGR_PLLR_2|RCC_PLLCFGR_PLLR_1)  /*!< Main PLL d
 796:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_7                  (RCC_PLLCFGR_PLLR)                       /*!< Main PLL d
 797:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 798:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 799:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 800:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_PLLCFGR_PLLR */
 801:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 802:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLP_DIV  PLL division factor (PLLP)
ARM GAS  /tmp/ccQYuIjq.s 			page 55


 803:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 804:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 805:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_2                  0x00000000U            /*!< Main PLL division factor for
 806:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_4                  RCC_PLLCFGR_PLLP_0     /*!< Main PLL division factor for
 807:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_6                  RCC_PLLCFGR_PLLP_1     /*!< Main PLL division factor for
 808:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_8                  (RCC_PLLCFGR_PLLP_1 | RCC_PLLCFGR_PLLP_0)   /*!< Main PL
 809:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 810:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 811:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 812:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 813:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLQ_DIV  PLL division factor (PLLQ)
 814:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 815:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 816:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_2                  RCC_PLLCFGR_PLLQ_1                      /*!< Main PLL di
 817:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_3                  (RCC_PLLCFGR_PLLQ_1|RCC_PLLCFGR_PLLQ_0) /*!< Main PLL di
 818:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_4                  RCC_PLLCFGR_PLLQ_2                      /*!< Main PLL di
 819:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_5                  (RCC_PLLCFGR_PLLQ_2|RCC_PLLCFGR_PLLQ_0) /*!< Main PLL di
 820:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_6                  (RCC_PLLCFGR_PLLQ_2|RCC_PLLCFGR_PLLQ_1) /*!< Main PLL di
 821:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_7                  (RCC_PLLCFGR_PLLQ_2|RCC_PLLCFGR_PLLQ_1|RCC_PLLCFGR_PLLQ_
 822:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_8                  RCC_PLLCFGR_PLLQ_3                      /*!< Main PLL di
 823:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_9                  (RCC_PLLCFGR_PLLQ_3|RCC_PLLCFGR_PLLQ_0) /*!< Main PLL di
 824:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_10                 (RCC_PLLCFGR_PLLQ_3|RCC_PLLCFGR_PLLQ_1) /*!< Main PLL di
 825:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_11                 (RCC_PLLCFGR_PLLQ_3|RCC_PLLCFGR_PLLQ_1|RCC_PLLCFGR_PLLQ_
 826:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_12                 (RCC_PLLCFGR_PLLQ_3|RCC_PLLCFGR_PLLQ_2) /*!< Main PLL di
 827:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_13                 (RCC_PLLCFGR_PLLQ_3|RCC_PLLCFGR_PLLQ_2|RCC_PLLCFGR_PLLQ_
 828:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_14                 (RCC_PLLCFGR_PLLQ_3|RCC_PLLCFGR_PLLQ_2|RCC_PLLCFGR_PLLQ_
 829:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_15                 (RCC_PLLCFGR_PLLQ_3|RCC_PLLCFGR_PLLQ_2|RCC_PLLCFGR_PLLQ_
 830:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 831:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 832:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 833:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 834:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_SPRE_SEL  PLL Spread Spectrum Selection
 835:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 836:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 837:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SPREAD_SELECT_CENTER        0x00000000U                   /*!< PLL center spread spe
 838:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_SPREAD_SELECT_DOWN          RCC_SSCGR_SPREADSEL           /*!< PLL down spread spect
 839:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 840:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 841:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 842:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 843:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLI2SQ  PLLI2SQ division factor (PLLI2SQ)
 844:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 845:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 846:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_2              RCC_PLLI2SCFGR_PLLI2SQ_1        /*!< PLLI2S division fact
 847:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_3              (RCC_PLLI2SCFGR_PLLI2SQ_1 | RCC_PLLI2SCFGR_PLLI2SQ_0)    
 848:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_4              RCC_PLLI2SCFGR_PLLI2SQ_2        /*!< PLLI2S division fact
 849:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_5              (RCC_PLLI2SCFGR_PLLI2SQ_2 | RCC_PLLI2SCFGR_PLLI2SQ_0)    
 850:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_6              (RCC_PLLI2SCFGR_PLLI2SQ_2 | RCC_PLLI2SCFGR_PLLI2SQ_1)    
 851:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_7              (RCC_PLLI2SCFGR_PLLI2SQ_2 | RCC_PLLI2SCFGR_PLLI2SQ_1 | RC
 852:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_8              RCC_PLLI2SCFGR_PLLI2SQ_3        /*!< PLLI2S division fact
 853:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_9              (RCC_PLLI2SCFGR_PLLI2SQ_3 | RCC_PLLI2SCFGR_PLLI2SQ_0)    
 854:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_10             (RCC_PLLI2SCFGR_PLLI2SQ_3 | RCC_PLLI2SCFGR_PLLI2SQ_1)    
 855:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_11             (RCC_PLLI2SCFGR_PLLI2SQ_3 | RCC_PLLI2SCFGR_PLLI2SQ_1 | RC
 856:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_12             (RCC_PLLI2SCFGR_PLLI2SQ_3 | RCC_PLLI2SCFGR_PLLI2SQ_2)    
 857:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_13             (RCC_PLLI2SCFGR_PLLI2SQ_3 | RCC_PLLI2SCFGR_PLLI2SQ_2 | RC
 858:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_14             (RCC_PLLI2SCFGR_PLLI2SQ_3 | RCC_PLLI2SCFGR_PLLI2SQ_2 | RC
 859:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SQ_DIV_15             (RCC_PLLI2SCFGR_PLLI2SQ_3 | RCC_PLLI2SCFGR_PLLI2SQ_2 | RC
ARM GAS  /tmp/ccQYuIjq.s 			page 56


 860:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 861:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 862:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 863:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 864:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLI2SDIVQ  PLLI2SDIVQ division factor (PLLI2SDIVQ)
 865:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 866:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 867:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_1           0x00000000U                        /*!< PLLI2S division f
 868:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_2           RCC_DCKCFGR1_PLLI2SDIVQ_0          /*!< PLLI2S division f
 869:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_3           RCC_DCKCFGR1_PLLI2SDIVQ_1          /*!< PLLI2S division f
 870:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_4           (RCC_DCKCFGR1_PLLI2SDIVQ_1 | RCC_DCKCFGR1_PLLI2SDIVQ_0)  
 871:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_5           RCC_DCKCFGR1_PLLI2SDIVQ_2          /*!< PLLI2S division f
 872:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_6           (RCC_DCKCFGR1_PLLI2SDIVQ_2 | RCC_DCKCFGR1_PLLI2SDIVQ_0)  
 873:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_7           (RCC_DCKCFGR1_PLLI2SDIVQ_2 | RCC_DCKCFGR1_PLLI2SDIVQ_1)  
 874:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_8           (RCC_DCKCFGR1_PLLI2SDIVQ_2 | RCC_DCKCFGR1_PLLI2SDIVQ_1 | 
 875:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_9           RCC_DCKCFGR1_PLLI2SDIVQ_3          /*!< PLLI2S division f
 876:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_10          (RCC_DCKCFGR1_PLLI2SDIVQ_3 | RCC_DCKCFGR1_PLLI2SDIVQ_0)  
 877:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_11          (RCC_DCKCFGR1_PLLI2SDIVQ_3 | RCC_DCKCFGR1_PLLI2SDIVQ_1)  
 878:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_12          (RCC_DCKCFGR1_PLLI2SDIVQ_3 | RCC_DCKCFGR1_PLLI2SDIVQ_1 | 
 879:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_13          (RCC_DCKCFGR1_PLLI2SDIVQ_3 | RCC_DCKCFGR1_PLLI2SDIVQ_2)  
 880:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_14          (RCC_DCKCFGR1_PLLI2SDIVQ_3 | RCC_DCKCFGR1_PLLI2SDIVQ_2 | 
 881:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_15          (RCC_DCKCFGR1_PLLI2SDIVQ_3 | RCC_DCKCFGR1_PLLI2SDIVQ_2 | 
 882:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_16          (RCC_DCKCFGR1_PLLI2SDIVQ_3 | RCC_DCKCFGR1_PLLI2SDIVQ_2 | 
 883:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_17          RCC_DCKCFGR1_PLLI2SDIVQ_4          /*!< PLLI2S division f
 884:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_18          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_0)  
 885:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_19          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_1)  
 886:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_20          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_1 | 
 887:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_21          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_2)  
 888:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_22          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_2 | 
 889:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_23          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_2 | 
 890:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_24          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_2 | 
 891:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_25          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_3)  
 892:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_26          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_3 | 
 893:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_27          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_3 | 
 894:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_28          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_3 | 
 895:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_29          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_3 | 
 896:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_30          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_3 | 
 897:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_31          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_3 | 
 898:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SDIVQ_DIV_32          (RCC_DCKCFGR1_PLLI2SDIVQ_4 | RCC_DCKCFGR1_PLLI2SDIVQ_3 | 
 899:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 900:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 901:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 902:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 903:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLI2SR  PLLI2SR division factor (PLLI2SR)
 904:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 905:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 906:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SR_DIV_2              RCC_PLLI2SCFGR_PLLI2SR_1                                 
 907:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SR_DIV_3              (RCC_PLLI2SCFGR_PLLI2SR_1 | RCC_PLLI2SCFGR_PLLI2SR_0)    
 908:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SR_DIV_4              RCC_PLLI2SCFGR_PLLI2SR_2                                 
 909:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SR_DIV_5              (RCC_PLLI2SCFGR_PLLI2SR_2 | RCC_PLLI2SCFGR_PLLI2SR_0)    
 910:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SR_DIV_6              (RCC_PLLI2SCFGR_PLLI2SR_2 | RCC_PLLI2SCFGR_PLLI2SR_1)    
 911:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SR_DIV_7              (RCC_PLLI2SCFGR_PLLI2SR_2 | RCC_PLLI2SCFGR_PLLI2SR_1 | RC
 912:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 913:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 914:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 915:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 916:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_PLLI2SCFGR_PLLI2SP)
ARM GAS  /tmp/ccQYuIjq.s 			page 57


 917:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLI2SP  PLLI2SP division factor (PLLI2SP)
 918:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 919:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 920:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SP_DIV_2              0x00000000U            /*!< PLLI2S division factor for PL
 921:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SP_DIV_4              RCC_PLLI2SCFGR_PLLI2SP_0        /*!< PLLI2S division fact
 922:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SP_DIV_6              RCC_PLLI2SCFGR_PLLI2SP_1        /*!< PLLI2S division fact
 923:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLI2SP_DIV_8              (RCC_PLLI2SCFGR_PLLI2SP_1 | RCC_PLLI2SCFGR_PLLI2SP_0)    
 924:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 925:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 926:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 927:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_PLLI2SCFGR_PLLI2SP */
 928:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 929:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAIQ  PLLSAIQ division factor (PLLSAIQ)
 930:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 931:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 932:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_2              RCC_PLLSAICFGR_PLLSAIQ_1        /*!< PLLSAI division fact
 933:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_3              (RCC_PLLSAICFGR_PLLSAIQ_1 | RCC_PLLSAICFGR_PLLSAIQ_0)    
 934:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_4              RCC_PLLSAICFGR_PLLSAIQ_2        /*!< PLLSAI division fact
 935:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_5              (RCC_PLLSAICFGR_PLLSAIQ_2 | RCC_PLLSAICFGR_PLLSAIQ_0)    
 936:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_6              (RCC_PLLSAICFGR_PLLSAIQ_2 | RCC_PLLSAICFGR_PLLSAIQ_1)    
 937:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_7              (RCC_PLLSAICFGR_PLLSAIQ_2 | RCC_PLLSAICFGR_PLLSAIQ_1 | RC
 938:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_8              RCC_PLLSAICFGR_PLLSAIQ_3        /*!< PLLSAI division fact
 939:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_9              (RCC_PLLSAICFGR_PLLSAIQ_3 | RCC_PLLSAICFGR_PLLSAIQ_0)    
 940:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_10             (RCC_PLLSAICFGR_PLLSAIQ_3 | RCC_PLLSAICFGR_PLLSAIQ_1)    
 941:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_11             (RCC_PLLSAICFGR_PLLSAIQ_3 | RCC_PLLSAICFGR_PLLSAIQ_1 | RC
 942:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_12             (RCC_PLLSAICFGR_PLLSAIQ_3 | RCC_PLLSAICFGR_PLLSAIQ_2)    
 943:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_13             (RCC_PLLSAICFGR_PLLSAIQ_3 | RCC_PLLSAICFGR_PLLSAIQ_2 | RC
 944:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_14             (RCC_PLLSAICFGR_PLLSAIQ_3 | RCC_PLLSAICFGR_PLLSAIQ_2 | RC
 945:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIQ_DIV_15             (RCC_PLLSAICFGR_PLLSAIQ_3 | RCC_PLLSAICFGR_PLLSAIQ_2 | RC
 946:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 947:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 948:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 949:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 950:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAIDIVQ  PLLSAIDIVQ division factor (PLLSAIDIVQ)
 951:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 952:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 953:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_1           0x00000000U               /*!< PLLSAI division factor for
 954:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_2           RCC_DCKCFGR1_PLLSAIDIVQ_0          /*!< PLLSAI division f
 955:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_3           RCC_DCKCFGR1_PLLSAIDIVQ_1          /*!< PLLSAI division f
 956:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_4           (RCC_DCKCFGR1_PLLSAIDIVQ_1 | RCC_DCKCFGR1_PLLSAIDIVQ_0)  
 957:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_5           RCC_DCKCFGR1_PLLSAIDIVQ_2          /*!< PLLSAI division f
 958:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_6           (RCC_DCKCFGR1_PLLSAIDIVQ_2 | RCC_DCKCFGR1_PLLSAIDIVQ_0)  
 959:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_7           (RCC_DCKCFGR1_PLLSAIDIVQ_2 | RCC_DCKCFGR1_PLLSAIDIVQ_1)  
 960:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_8           (RCC_DCKCFGR1_PLLSAIDIVQ_2 | RCC_DCKCFGR1_PLLSAIDIVQ_1 | 
 961:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_9           RCC_DCKCFGR1_PLLSAIDIVQ_3          /*!< PLLSAI division f
 962:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_10          (RCC_DCKCFGR1_PLLSAIDIVQ_3 | RCC_DCKCFGR1_PLLSAIDIVQ_0)  
 963:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_11          (RCC_DCKCFGR1_PLLSAIDIVQ_3 | RCC_DCKCFGR1_PLLSAIDIVQ_1)  
 964:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_12          (RCC_DCKCFGR1_PLLSAIDIVQ_3 | RCC_DCKCFGR1_PLLSAIDIVQ_1 | 
 965:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_13          (RCC_DCKCFGR1_PLLSAIDIVQ_3 | RCC_DCKCFGR1_PLLSAIDIVQ_2)  
 966:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_14          (RCC_DCKCFGR1_PLLSAIDIVQ_3 | RCC_DCKCFGR1_PLLSAIDIVQ_2 | 
 967:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_15          (RCC_DCKCFGR1_PLLSAIDIVQ_3 | RCC_DCKCFGR1_PLLSAIDIVQ_2 | 
 968:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_16          (RCC_DCKCFGR1_PLLSAIDIVQ_3 | RCC_DCKCFGR1_PLLSAIDIVQ_2 | 
 969:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_17          RCC_DCKCFGR1_PLLSAIDIVQ_4         /*!< PLLSAI division fa
 970:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_18          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_0)  
 971:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_19          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_1)  
 972:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_20          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_1 | 
 973:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_21          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_2)  
ARM GAS  /tmp/ccQYuIjq.s 			page 58


 974:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_22          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_2 | 
 975:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_23          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_2 | 
 976:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_24          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_2 | 
 977:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_25          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_3)  
 978:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_26          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_3 | 
 979:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_27          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_3 | 
 980:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_28          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_3 | 
 981:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_29          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_3 | 
 982:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_30          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_3 | 
 983:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_31          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_3 | 
 984:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVQ_DIV_32          (RCC_DCKCFGR1_PLLSAIDIVQ_4 | RCC_DCKCFGR1_PLLSAIDIVQ_3 | 
 985:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
 986:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
 987:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 988:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
 989:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_PLLSAICFGR_PLLSAIR)
 990:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAIR  PLLSAIR division factor (PLLSAIR)
 991:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
 992:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
 993:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIR_DIV_2              RCC_PLLSAICFGR_PLLSAIR_1                                 
 994:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIR_DIV_3              (RCC_PLLSAICFGR_PLLSAIR_1 | RCC_PLLSAICFGR_PLLSAIR_0)    
 995:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIR_DIV_4              RCC_PLLSAICFGR_PLLSAIR_2                                 
 996:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIR_DIV_5              (RCC_PLLSAICFGR_PLLSAIR_2 | RCC_PLLSAICFGR_PLLSAIR_0)    
 997:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIR_DIV_6              (RCC_PLLSAICFGR_PLLSAIR_2 | RCC_PLLSAICFGR_PLLSAIR_1)    
 998:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIR_DIV_7              (RCC_PLLSAICFGR_PLLSAIR_2 | RCC_PLLSAICFGR_PLLSAIR_1 | RC
 999:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1000:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
1001:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1002:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_PLLSAICFGR_PLLSAIR */
1003:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1004:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_DCKCFGR1_PLLSAIDIVR)
1005:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAIDIVR  PLLSAIDIVR division factor (PLLSAIDIVR)
1006:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
1007:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1008:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVR_DIV_2           0x00000000U             /*!< PLLSAI division factor for P
1009:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVR_DIV_4           RCC_DCKCFGR1_PLLSAIDIVR_0        /*!< PLLSAI division fac
1010:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVR_DIV_8           RCC_DCKCFGR1_PLLSAIDIVR_1        /*!< PLLSAI division fac
1011:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIDIVR_DIV_16          (RCC_DCKCFGR1_PLLSAIDIVR_1 | RCC_DCKCFGR1_PLLSAIDIVR_0)  
1012:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1013:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
1014:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1015:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_DCKCFGR1_PLLSAIDIVR */
1016:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1017:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAIP  PLLSAIP division factor (PLLSAIP)
1018:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
1019:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1020:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIP_DIV_2              0x00000000U               /*!< PLLSAI division factor for
1021:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIP_DIV_4              RCC_PLLSAICFGR_PLLSAIP_0        /*!< PLLSAI division fact
1022:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIP_DIV_6              RCC_PLLSAICFGR_PLLSAIP_1        /*!< PLLSAI division fact
1023:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_PLLSAIP_DIV_8              (RCC_PLLSAICFGR_PLLSAIP_1 | RCC_PLLSAICFGR_PLLSAIP_0)    
1024:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1025:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
1026:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1027:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1028:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1029:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
1030:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccQYuIjq.s 			page 59


1031:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1032:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
1033:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
1034:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
1035:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1036:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1037:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
1038:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
1039:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1040:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1041:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1042:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Write a value in RCC register
1043:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __REG__ Register to be written
1044:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
1045:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
1046:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1047:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
1048:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1049:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1050:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Read a value in RCC register
1051:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __REG__ Register to be read
1052:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Register value
1053:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1054:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
1055:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1056:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
1057:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1058:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1059:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
1060:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
1061:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1062:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1063:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1064:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency on system domain
1065:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1066:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetP ());
1067:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1068:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1069:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1070:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1071:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1072:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1073:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1074:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1075:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1076:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1077:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1078:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1079:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1080:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1081:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1082:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1083:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1084:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1085:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
1086:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1087:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
ARM GAS  /tmp/ccQYuIjq.s 			page 60


1088:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1089:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
1090:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
1091:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1092:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1093:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1094:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1095:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1096:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1097:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1098:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1099:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1100:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1101:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1102:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1103:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1104:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1105:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1106:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1107:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1108:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
1109:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1110:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1111:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1112:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1113:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
1114:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1115:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1116:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1117:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
1118:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1119:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1120:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1121:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
1122:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
1123:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1124:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1125:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1126:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1127:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1128:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1129:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1130:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1131:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLN__ Between 50 and 432
1132:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLP__ This parameter can be one of the following values:
1133:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_2
1134:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_4
1135:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_6
1136:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_8
1137:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
1138:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1139:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLP__) ((__INPUTFREQ__) / (
1140:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    ((((__PLLP__) >> RCC_PLLCFGR_PLLP_Pos ) + 1U) * 2U))
1141:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1142:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1143:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency used on 48M domain
1144:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_48M_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
ARM GAS  /tmp/ccQYuIjq.s 			page 61


1145:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetQ ());
1146:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1147:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1148:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1149:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1150:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1151:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1152:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1153:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1154:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1155:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1156:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1157:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1158:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1159:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1160:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1161:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1162:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1163:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1164:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
1165:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1166:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
1167:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1168:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
1169:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
1170:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1171:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1172:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1173:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1174:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1175:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1176:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1177:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1178:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1179:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1180:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1181:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1182:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1183:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1184:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1185:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1186:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1187:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
1188:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1189:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1190:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1191:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1192:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
1193:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1194:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1195:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1196:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
1197:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1198:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1199:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1200:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
1201:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
ARM GAS  /tmp/ccQYuIjq.s 			page 62


1202:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1203:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1204:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1205:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1206:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1207:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1208:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1209:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1210:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLN__ Between 50 and 432
1211:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLQ__ This parameter can be one of the following values:
1212:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_2
1213:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_3
1214:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_4
1215:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_5
1216:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_6
1217:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_7
1218:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_8
1219:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_9
1220:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_10
1221:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_11
1222:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_12
1223:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_13
1224:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_14
1225:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_15
1226:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
1227:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1228:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_48M_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLQ__) ((__INPUTFREQ__)
1229:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    ((__PLLQ__) >> RCC_PLLCFGR_PLLQ_Pos ))
1230:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1231:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DSI)
1232:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1233:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency used on DSI
1234:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_DSI_FREQ (HSE_VALUE, @ref LL_RCC_PLL_GetDivider (),
1235:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetR ());
1236:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1237:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1238:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1239:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1240:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1241:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1242:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1243:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1244:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1245:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1246:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1247:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1248:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1249:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1250:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1251:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1252:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1253:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1254:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
1255:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1256:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
1257:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1258:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
ARM GAS  /tmp/ccQYuIjq.s 			page 63


1259:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
1260:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1261:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1262:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1263:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1264:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1265:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1266:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1267:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1268:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1269:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1270:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1271:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1272:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1273:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1274:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1275:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1276:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1277:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
1278:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1279:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1280:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1281:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1282:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
1283:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1284:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1285:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1286:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
1287:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1288:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1289:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1290:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
1291:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
1292:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1293:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1294:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1295:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1296:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1297:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1298:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1299:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1300:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLN__ Between 50 and 432
1301:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLR__ This parameter can be one of the following values:
1302:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_2
1303:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_3
1304:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_4
1305:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_5
1306:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_6
1307:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_7
1308:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
1309:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1310:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_DSI_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLR__) ((__INPUTFREQ__)
1311:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    ((__PLLR__) >> RCC_PLLCFGR_PLLR_Pos ))
1312:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DSI */
1313:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1314:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1315:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI frequency used for SAI1 and SAI2 domains
ARM GAS  /tmp/ccQYuIjq.s 			page 64


1316:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1317:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI_GetN (), @ref LL_RCC_PLLSAI_GetQ (), @ref LL_RCC_PLLSAI_GetDIVQ 
1318:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1319:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1320:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1321:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1322:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1323:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1324:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1325:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1326:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1327:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1328:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1329:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1330:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1331:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1332:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1333:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1334:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1335:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1336:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
1337:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1338:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
1339:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1340:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
1341:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
1342:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1343:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1344:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1345:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1346:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1347:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1348:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1349:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1350:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1351:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1352:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1353:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1354:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1355:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1356:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1357:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1358:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1359:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
1360:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1361:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1362:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1363:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1364:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
1365:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1366:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1367:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1368:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
1369:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1370:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1371:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1372:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
ARM GAS  /tmp/ccQYuIjq.s 			page 65


1373:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
1374:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1375:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1376:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1377:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1378:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1379:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1380:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1381:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1382:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLSAIN__ Between 50 and 432
1383:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLSAIQ__ This parameter can be one of the following values:
1384:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_2
1385:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_3
1386:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_4
1387:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_5
1388:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_6
1389:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_7
1390:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_8
1391:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_9
1392:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_10
1393:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_11
1394:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_12
1395:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_13
1396:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_14
1397:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIQ_DIV_15
1398:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLSAIDIVQ__ This parameter can be one of the following values:
1399:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_1
1400:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_2
1401:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_3
1402:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_4
1403:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_5
1404:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_6
1405:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_7
1406:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_8
1407:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_9
1408:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_10
1409:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_11
1410:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_12
1411:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_13
1412:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_14
1413:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_15
1414:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_16
1415:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_17
1416:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_18
1417:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_19
1418:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_20
1419:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_21
1420:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_22
1421:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_23
1422:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_24
1423:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_25
1424:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_26
1425:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_27
1426:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_28
1427:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_29
1428:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_30
1429:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_31
ARM GAS  /tmp/ccQYuIjq.s 			page 66


1430:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVQ_DIV_32
1431:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLLSAI clock frequency (in Hz)
1432:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1433:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI_SAI_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAIN__, __PLLSAIQ__, __PLLSAIDI
1434:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    (((__PLLSAIQ__) >> RCC_PLLSAICFGR_PLLSAIQ_Pos) * (((__PLLSAIDIVQ__) >> RCC_DCKCF
1435:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1436:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1437:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI frequency used on 48Mhz domain
1438:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI_48M_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1439:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI_GetN (), @ref LL_RCC_PLLSAI_GetP ());
1440:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1441:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1442:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1443:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1444:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1445:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1446:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1447:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1448:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1449:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1450:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1451:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1452:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1453:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1454:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1455:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1456:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1457:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1458:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
1459:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1460:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
1461:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1462:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
1463:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
1464:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1465:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1466:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1467:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1468:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1469:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1470:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1471:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1472:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1473:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1474:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1475:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1476:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1477:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1478:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1479:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1480:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1481:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
1482:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1483:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1484:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1485:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1486:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
ARM GAS  /tmp/ccQYuIjq.s 			page 67


1487:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1488:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1489:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1490:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
1491:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1492:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1493:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1494:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
1495:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
1496:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1497:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1498:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1499:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1500:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1501:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1502:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1503:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1504:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLSAIN__ Between 50 and 432
1505:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLSAIP__ This parameter can be one of the following values:
1506:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIP_DIV_2
1507:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIP_DIV_4
1508:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIP_DIV_6
1509:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIP_DIV_8
1510:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLLSAI clock frequency (in Hz)
1511:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1512:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI_48M_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAIN__, __PLLSAIP__) (((__INPUT
1513:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    ((((__PLLSAIP__) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U ) * 2U))
1514:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1515:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(LTDC)
1516:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1517:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI frequency used for LTDC domain
1518:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI_LTDC_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1519:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI_GetN (), @ref LL_RCC_PLLSAI_GetR (), @ref LL_RCC_PLLSAI_GetDIVR 
1520:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1521:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1522:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1523:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1524:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1525:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1526:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1527:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1528:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1529:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1530:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1531:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1532:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1533:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1534:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1535:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1536:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1537:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1538:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
1539:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1540:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
1541:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1542:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
1543:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
ARM GAS  /tmp/ccQYuIjq.s 			page 68


1544:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1545:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1546:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1547:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1548:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1549:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1550:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1551:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1552:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1553:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1554:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1555:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1556:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1557:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1558:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1559:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1560:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1561:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
1562:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1563:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1564:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1565:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1566:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
1567:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1568:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1569:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1570:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
1571:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1572:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1573:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1574:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
1575:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
1576:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1577:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1578:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1579:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1580:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1581:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1582:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1583:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1584:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLSAIN__ Between 50 and 432
1585:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLSAIR__ This parameter can be one of the following values:
1586:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIR_DIV_2
1587:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIR_DIV_3
1588:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIR_DIV_4
1589:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIR_DIV_5
1590:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIR_DIV_6
1591:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIR_DIV_7
1592:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLSAIDIVR__ This parameter can be one of the following values:
1593:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVR_DIV_2
1594:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVR_DIV_4
1595:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVR_DIV_8
1596:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAIDIVR_DIV_16
1597:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLLSAI clock frequency (in Hz)
1598:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1599:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI_LTDC_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAIN__, __PLLSAIR__, __PLLSAID
1600:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    (((__PLLSAIR__) >> RCC_PLLSAICFGR_PLLSAIR_Pos) * (aRCC_PLLSAIDIVRPrescTable[(__P
ARM GAS  /tmp/ccQYuIjq.s 			page 69


1601:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* LTDC */
1602:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1603:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1604:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLI2S frequency used for SAI1 and SAI2 domains
1605:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLI2S_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1606:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLLI2S_GetN (), @ref LL_RCC_PLLI2S_GetQ (), @ref LL_RCC_PLLI2S_GetDIVQ 
1607:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1608:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1609:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1610:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1611:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1612:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1613:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1614:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1615:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1616:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1617:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1618:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1619:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1620:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1621:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1622:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1623:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1624:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1625:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
1626:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1627:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
1628:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1629:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
1630:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
1631:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1632:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1633:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1634:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1635:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1636:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1637:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1638:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1639:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1640:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1641:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1642:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1643:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1644:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1645:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1646:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1647:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1648:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
1649:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1650:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1651:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1652:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1653:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
1654:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1655:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1656:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1657:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
ARM GAS  /tmp/ccQYuIjq.s 			page 70


1658:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1659:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1660:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1661:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
1662:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
1663:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1664:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1665:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1666:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1667:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1668:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1669:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1670:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1671:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLI2SN__ Between 50 and 432
1672:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLI2SQ__ This parameter can be one of the following values:
1673:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_2
1674:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_3
1675:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_4
1676:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_5
1677:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_6
1678:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_7
1679:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_8
1680:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_9
1681:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_10
1682:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_11
1683:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_12
1684:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_13
1685:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_14
1686:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_15
1687:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLI2SDIVQ__ This parameter can be one of the following values:
1688:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_1
1689:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_2
1690:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_3
1691:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_4
1692:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_5
1693:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_6
1694:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_7
1695:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_8
1696:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_9
1697:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_10
1698:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_11
1699:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_12
1700:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_13
1701:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_14
1702:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_15
1703:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_16
1704:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_17
1705:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_18
1706:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_19
1707:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_20
1708:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_21
1709:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_22
1710:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_23
1711:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_24
1712:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_25
1713:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_26
1714:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_27
ARM GAS  /tmp/ccQYuIjq.s 			page 71


1715:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_28
1716:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_29
1717:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_30
1718:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_31
1719:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_32
1720:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLLI2S clock frequency (in Hz)
1721:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1722:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLI2S_SAI_FREQ(__INPUTFREQ__, __PLLM__, __PLLI2SN__, __PLLI2SQ__, __PLLI2SDI
1723:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    (((__PLLI2SQ__) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos) * (((__PLLI2SDIVQ__) >> RCC_DCKCF
1724:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1725:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(SPDIFRX)
1726:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1727:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLI2S frequency used on SPDIFRX domain
1728:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLI2S_SPDIFRX_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1729:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLLI2S_GetN (), @ref LL_RCC_PLLI2S_GetP ());
1730:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1731:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1732:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1733:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1734:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1735:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1736:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1737:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1738:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1739:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1740:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1741:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1742:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1743:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1744:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1745:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1746:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1747:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1748:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
1749:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1750:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
1751:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1752:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
1753:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
1754:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1755:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1756:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1757:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1758:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1759:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1760:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1761:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1762:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1763:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1764:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1765:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1766:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1767:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1768:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1769:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1770:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1771:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
ARM GAS  /tmp/ccQYuIjq.s 			page 72


1772:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1773:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1774:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1775:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1776:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
1777:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1778:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1779:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1780:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
1781:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1782:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1783:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1784:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
1785:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
1786:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1787:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1788:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1789:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1790:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1791:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1792:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1793:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1794:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLI2SN__ Between 50 and 432
1795:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLI2SP__ This parameter can be one of the following values:
1796:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_2
1797:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_4
1798:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_6
1799:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_8
1800:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLLI2S clock frequency (in Hz)
1801:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1802:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLI2S_SPDIFRX_FREQ(__INPUTFREQ__, __PLLM__, __PLLI2SN__, __PLLI2SP__) (((__I
1803:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    ((((__PLLI2SP__) >> RCC_PLLI2SCFGR_PLLI2SP_Pos) + 1U) * 2U))
1804:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* SPDIFRX */
1805:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1806:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1807:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLI2S frequency used for I2S domain
1808:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLI2S_I2S_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1809:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *             @ref LL_RCC_PLLI2S_GetN (), @ref LL_RCC_PLLI2S_GetR ());
1810:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
1811:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1812:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1813:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1814:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1815:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1816:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1817:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1818:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1819:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
1820:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
1821:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
1822:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
1823:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
1824:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
1825:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
1826:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
1827:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
1828:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
ARM GAS  /tmp/ccQYuIjq.s 			page 73


1829:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
1830:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
1831:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
1832:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
1833:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
1834:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
1835:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
1836:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
1837:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
1838:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
1839:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
1840:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
1841:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
1842:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
1843:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
1844:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
1845:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
1846:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
1847:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
1848:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
1849:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
1850:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
1851:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
1852:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
1853:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
1854:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
1855:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
1856:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
1857:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
1858:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
1859:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
1860:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
1861:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
1862:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
1863:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
1864:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
1865:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
1866:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
1867:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
1868:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
1869:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
1870:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
1871:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
1872:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
1873:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
1874:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLI2SN__ Between 50 and 432
1875:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __PLLI2SR__ This parameter can be one of the following values:
1876:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_2
1877:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_3
1878:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_4
1879:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_5
1880:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_6
1881:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_7
1882:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PLLI2S clock frequency (in Hz)
1883:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1884:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLI2S_I2S_FREQ(__INPUTFREQ__, __PLLM__, __PLLI2SN__, __PLLI2SR__) (((__INPUT
1885:HALLIB/Inc/stm32f7xx_ll_rcc.h ****                    ((__PLLI2SR__) >> RCC_PLLI2SCFGR_PLLI2SR_Pos))
ARM GAS  /tmp/ccQYuIjq.s 			page 74


1886:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1887:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1888:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
1889:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on HSE/HSI/PLLCLK)
1890:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __AHBPRESCALER__ This parameter can be one of the following values:
1891:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1892:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1893:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1894:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1895:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1896:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1897:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1898:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1899:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1900:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
1901:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1902:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
1903:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1904:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1905:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
1906:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
1907:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __APB1PRESCALER__ This parameter can be one of the following values:
1908:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1909:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1910:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1911:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1912:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1913:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
1914:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1915:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
1916:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1917:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1918:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK2 frequency (ABP2)
1919:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
1920:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  __APB2PRESCALER__ This parameter can be one of the following values:
1921:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1922:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1923:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1924:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1925:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1926:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval PCLK2 clock frequency (in Hz)
1927:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1928:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK2_FREQ(__HCLKFREQ__, __APB2PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
1929:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1930:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1931:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
1932:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1933:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1934:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1935:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
1936:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1937:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1938:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
1939:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
1940:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
1941:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1942:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
ARM GAS  /tmp/ccQYuIjq.s 			page 75


1943:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
1944:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
1945:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1946:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1947:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1948:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
1949:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_EnableCSS
1950:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
1951:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1952:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
1953:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
1954:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
1955:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
1956:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1957:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1958:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
1959:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
1960:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
1961:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1962:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
1963:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
1964:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
1965:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
1966:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1967:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1968:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
1969:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
1970:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
1971:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1972:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
1973:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
1974:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
1975:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
1976:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1977:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1978:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
1979:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
1980:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
1981:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1982:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
1983:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
1984:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
1985:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
1986:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1987:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1988:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
1989:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
1990:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
1991:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
1992:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
1993:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
1994:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
1995:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
1996:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
1997:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
1998:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
1999:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
ARM GAS  /tmp/ccQYuIjq.s 			page 76


2000:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2001:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2002:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
2003:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2004:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
2005:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2006:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2007:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2008:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
2009:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2010:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2011:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
2012:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
2013:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2014:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2015:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2016:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
2017:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
2018:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2019:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2020:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
2021:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2022:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
2023:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2024:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2025:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2026:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
2027:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
2028:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2029:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2030:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
2031:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2032:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
2033:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2034:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2035:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2036:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
2037:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
2038:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2039:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2040:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
2041:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2042:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
2043:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2044:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2045:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2046:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
2047:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
2048:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
2049:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR        HSICAL        LL_RCC_HSI_GetCalibration
2050:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
2051:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2052:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
2053:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2054:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSICAL) >> RCC_CR_HSICAL_Pos);
2055:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2056:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
ARM GAS  /tmp/ccQYuIjq.s 			page 77


2057:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2058:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
2059:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
2060:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
2061:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
2062:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
2063:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Value Between Min_Data = 0 and Max_Data = 31
2064:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2065:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2066:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
2067:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2068:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, Value << RCC_CR_HSITRIM_Pos);
2069:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2070:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2071:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2072:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
2073:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
2074:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Between Min_Data = 0 and Max_Data = 31
2075:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2076:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
2077:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2078:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_Pos);
2079:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2080:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2081:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2082:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
2083:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2084:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2085:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
2086:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
2087:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2088:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2089:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2090:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
2091:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Enable
2092:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2093:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2094:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
2095:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2096:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
2097:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2098:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2099:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2100:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
2101:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Disable
2102:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2103:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2104:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
2105:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2106:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
2107:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2108:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2109:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2110:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
2111:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_EnableBypass
2112:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2113:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
ARM GAS  /tmp/ccQYuIjq.s 			page 78


2114:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
2115:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2116:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
2117:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2118:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2119:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2120:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
2121:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_DisableBypass
2122:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2123:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2124:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
2125:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2126:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
2127:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2128:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2129:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2130:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Set LSE oscillator drive capability
2131:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note The oscillator is in Xtal mode when it is not in bypass mode.
2132:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_SetDriveCapability
2133:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  LSEDrive This parameter can be one of the following values:
2134:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
2135:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
2136:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
2137:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
2138:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2139:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2140:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
2141:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2142:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSEDRV, LSEDrive);
2143:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2144:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2145:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2146:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get LSE oscillator drive capability
2147:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_GetDriveCapability
2148:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2149:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
2150:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
2151:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
2152:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
2153:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2154:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_GetDriveCapability(void)
2155:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2156:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_LSEDRV));
2157:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2158:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2159:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2160:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
2161:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         LSERDY        LL_RCC_LSE_IsReady
2162:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2163:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2164:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
2165:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2166:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY));
2167:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2168:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2169:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2170:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
ARM GAS  /tmp/ccQYuIjq.s 			page 79


2171:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2172:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2173:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
2174:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
2175:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2176:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2177:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2178:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
2179:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
2180:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2181:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2182:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
2183:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2184:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
2185:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2186:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2187:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2188:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
2189:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
2190:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2191:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2192:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
2193:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2194:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
2195:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2196:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2197:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2198:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
2199:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
2200:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2201:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2202:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
2203:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2204:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == (RCC_CSR_LSIRDY));
2205:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2206:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2207:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2208:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
2209:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2210:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2211:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
2212:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
2213:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2214:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2215:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2216:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure the system clock source
2217:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
2218:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2219:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
2220:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
2221:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
2222:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2223:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2224:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
2225:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2226:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
2227:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
ARM GAS  /tmp/ccQYuIjq.s 			page 80


2228:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2229:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2230:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get the system clock source
2231:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
2232:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2233:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
2234:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
2235:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
2236:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2237:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
2238:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2239:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
2240:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2241:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2242:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2243:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Set AHB prescaler
2244:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
2245:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
2246:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
2247:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
2248:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
2249:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
2250:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
2251:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
2252:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
2253:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
2254:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
2255:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2256:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2257:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
2258:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2259:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
2260:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2261:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2262:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2263:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
2264:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_SetAPB1Prescaler
2265:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
2266:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
2267:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
2268:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
2269:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
2270:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
2271:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2272:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2273:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
2274:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2275:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
2276:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2277:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2278:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2279:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Set APB2 prescaler
2280:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_SetAPB2Prescaler
2281:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
2282:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
2283:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
2284:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
ARM GAS  /tmp/ccQYuIjq.s 			page 81


2285:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
2286:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
2287:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2288:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2289:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
2290:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2291:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
2292:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2293:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2294:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2295:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get AHB prescaler
2296:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
2297:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2298:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
2299:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
2300:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
2301:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
2302:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
2303:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
2304:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
2305:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
2306:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
2307:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2308:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
2309:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2310:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
2311:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2312:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2313:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2314:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
2315:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_GetAPB1Prescaler
2316:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2317:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
2318:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
2319:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
2320:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
2321:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
2322:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2323:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
2324:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2325:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
2326:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2327:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2328:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2329:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get APB2 prescaler
2330:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_GetAPB2Prescaler
2331:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2332:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
2333:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
2334:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
2335:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
2336:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
2337:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2338:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
2339:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2340:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
2341:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
ARM GAS  /tmp/ccQYuIjq.s 			page 82


2342:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2343:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2344:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
2345:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2346:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2347:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
2348:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
2349:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2350:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2351:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2352:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure MCOx
2353:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         MCO1          LL_RCC_ConfigMCO\n
2354:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         CFGR         MCO1PRE       LL_RCC_ConfigMCO\n
2355:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         CFGR         MCO2          LL_RCC_ConfigMCO\n
2356:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         CFGR         MCO2PRE       LL_RCC_ConfigMCO
2357:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
2358:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
2359:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSE
2360:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
2361:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK
2362:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2SOURCE_SYSCLK
2363:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2SOURCE_PLLI2S
2364:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2SOURCE_HSE
2365:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2SOURCE_PLLCLK
2366:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  MCOxPrescaler This parameter can be one of the following values:
2367:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_1
2368:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_2
2369:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_3
2370:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_4
2371:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_5
2372:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2_DIV_1
2373:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2_DIV_2
2374:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2_DIV_3
2375:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2_DIV_4
2376:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO2_DIV_5
2377:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2378:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2379:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource, uint32_t MCOxPrescaler)
2380:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2381:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, (MCOxSource & 0xFFFF0000U) | (MCOxPrescaler & 0xFFFF0000U),  (MCOxSource <<
2382:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2383:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2384:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2385:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
2386:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2387:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2388:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
2389:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
2390:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2391:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2392:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2393:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure USARTx clock source
2394:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        USART1SEL     LL_RCC_SetUSARTClockSource\n
2395:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        USART2SEL     LL_RCC_SetUSARTClockSource\n
2396:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        USART3SEL     LL_RCC_SetUSARTClockSource\n
2397:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        USART6SEL     LL_RCC_SetUSARTClockSource
2398:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  USARTxSource This parameter can be one of the following values:
ARM GAS  /tmp/ccQYuIjq.s 			page 83


2399:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK2
2400:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
2401:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
2402:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
2403:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1
2404:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK
2405:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI
2406:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE
2407:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1
2408:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK
2409:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI
2410:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE
2411:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE_PCLK2
2412:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE_SYSCLK
2413:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE_HSI
2414:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE_LSE
2415:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2416:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2417:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSARTClockSource(uint32_t USARTxSource)
2418:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2419:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, (USARTxSource >> 16U), (USARTxSource & 0x0000FFFFU));
2420:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2421:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2422:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2423:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure UARTx clock source
2424:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        UART4SEL      LL_RCC_SetUARTClockSource\n
2425:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        UART5SEL      LL_RCC_SetUARTClockSource\n
2426:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        UART7SEL      LL_RCC_SetUARTClockSource\n
2427:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        UART8SEL      LL_RCC_SetUARTClockSource
2428:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  UARTxSource This parameter can be one of the following values:
2429:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_PCLK1
2430:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_SYSCLK
2431:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_HSI
2432:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_LSE
2433:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_PCLK1
2434:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_SYSCLK
2435:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_HSI
2436:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_LSE
2437:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE_PCLK1
2438:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE_SYSCLK
2439:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE_HSI
2440:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE_LSE
2441:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE_PCLK1
2442:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE_SYSCLK
2443:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE_HSI
2444:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE_LSE
2445:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2446:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2447:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUARTClockSource(uint32_t UARTxSource)
2448:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2449:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, (UARTxSource >> 16U), (UARTxSource & 0x0000FFFFU));
2450:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2451:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2452:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2453:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure I2Cx clock source
2454:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        I2C1SEL       LL_RCC_SetI2CClockSource\n
2455:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        I2C2SEL       LL_RCC_SetI2CClockSource\n
ARM GAS  /tmp/ccQYuIjq.s 			page 84


2456:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        I2C3SEL       LL_RCC_SetI2CClockSource\n
2457:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        I2C4SEL       LL_RCC_SetI2CClockSource
2458:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  I2CxSource This parameter can be one of the following values:
2459:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_PCLK1
2460:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
2461:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
2462:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_PCLK1
2463:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_SYSCLK
2464:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_HSI
2465:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_PCLK1
2466:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_SYSCLK
2467:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_HSI
2468:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_PCLK1 (*)
2469:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_SYSCLK (*)
2470:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_HSI (*)
2471:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
2472:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         (*) value not defined in all devices.
2473:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2474:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2475:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2CClockSource(uint32_t I2CxSource)
2476:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2477:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, (I2CxSource & 0xFFFF0000U),  (I2CxSource << 16U));
2478:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2479:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2480:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2481:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure LPTIMx clock source
2482:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        LPTIM1SEL     LL_RCC_SetLPTIMClockSource
2483:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  LPTIMxSource This parameter can be one of the following values:
2484:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_PCLK1
2485:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSI
2486:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_HSI
2487:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSE
2488:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2489:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2490:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetLPTIMClockSource(uint32_t LPTIMxSource)
2491:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2492:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, RCC_DCKCFGR2_LPTIM1SEL, LPTIMxSource);
2493:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2494:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2495:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2496:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure SAIx clock source
2497:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1        SAI1SEL       LL_RCC_SetSAIClockSource\n
2498:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR1        SAI2SEL       LL_RCC_SetSAIClockSource
2499:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  SAIxSource This parameter can be one of the following values:
2500:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PLLSAI
2501:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PLLI2S
2502:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PIN
2503:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PLLSRC (*)
2504:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE_PLLSAI
2505:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE_PLLI2S
2506:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE_PIN
2507:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE_PLLSRC (*)
2508:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
2509:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         (*) value not defined in all devices.
2510:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2511:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2512:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSAIClockSource(uint32_t SAIxSource)
ARM GAS  /tmp/ccQYuIjq.s 			page 85


2513:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2514:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR1, (SAIxSource & 0xFFFF0000U), (SAIxSource << 16U));
2515:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2516:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2517:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2518:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure SDMMC clock source
2519:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        SDMMC1SEL      LL_RCC_SetSDMMCClockSource\n
2520:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        SDMMC2SEL      LL_RCC_SetSDMMCClockSource
2521:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  SDMMCxSource This parameter can be one of the following values:
2522:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC1_CLKSOURCE_PLL48CLK
2523:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC1_CLKSOURCE_SYSCLK
2524:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC2_CLKSOURCE_PLL48CLK (*)
2525:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC2_CLKSOURCE_SYSCLK (*)
2526:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
2527:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         (*) value not defined in all devices.
2528:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2529:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2530:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSDMMCClockSource(uint32_t SDMMCxSource)
2531:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2532:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, (SDMMCxSource & 0xFFFF0000U), (SDMMCxSource << 16U));
2533:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2534:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2535:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2536:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure 48Mhz domain clock source
2537:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        CK48MSEL      LL_RCC_SetCK48MClockSource
2538:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  CK48MxSource This parameter can be one of the following values:
2539:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CK48M_CLKSOURCE_PLL
2540:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CK48M_CLKSOURCE_PLLSAI
2541:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2542:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2543:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetCK48MClockSource(uint32_t CK48MxSource)
2544:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2545:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL, CK48MxSource);
2546:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2547:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2548:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2549:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure RNG clock source
2550:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        CK48MSEL      LL_RCC_SetRNGClockSource
2551:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  RNGxSource This parameter can be one of the following values:
2552:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLL
2553:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLLSAI
2554:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2555:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2556:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRNGClockSource(uint32_t RNGxSource)
2557:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2558:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL, RNGxSource);
2559:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2560:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2561:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2562:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure USB clock source
2563:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        CK48MSEL      LL_RCC_SetUSBClockSource
2564:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  USBxSource This parameter can be one of the following values:
2565:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
2566:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLLSAI
2567:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2568:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2569:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSBClockSource(uint32_t USBxSource)
ARM GAS  /tmp/ccQYuIjq.s 			page 86


2570:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2571:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL, USBxSource);
2572:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2573:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2574:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(CEC)
2575:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2576:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure CEC clock source
2577:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2         CECSEL        LL_RCC_SetCECClockSource
2578:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2579:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_LSE
2580:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_HSI_DIV488
2581:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2582:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2583:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetCECClockSource(uint32_t Source)
2584:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2585:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL, Source);
2586:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2587:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* CEC */
2588:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2589:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2590:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure I2S clock source
2591:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         I2SSRC        LL_RCC_SetI2SClockSource
2592:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2593:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S1_CLKSOURCE_PLLI2S
2594:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S1_CLKSOURCE_PIN
2595:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2596:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2597:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2SClockSource(uint32_t Source)
2598:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2599:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_I2SSRC, Source);
2600:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2601:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2602:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DSI)
2603:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2604:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure DSI clock source
2605:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2         DSISEL        LL_RCC_SetDSIClockSource
2606:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2607:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DSI_CLKSOURCE_PHY
2608:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DSI_CLKSOURCE_PLL
2609:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2610:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2611:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetDSIClockSource(uint32_t Source)
2612:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2613:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR2, RCC_DCKCFGR2_DSISEL, Source);
2614:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2615:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DSI */
2616:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2617:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DFSDM1_Channel0)
2618:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2619:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure DFSDM Audio clock source
2620:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1         ADFSDM1SEL        LL_RCC_SetDFSDMAudioClockSource
2621:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2622:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI1
2623:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI2
2624:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2625:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2626:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetDFSDMAudioClockSource(uint32_t Source)
ARM GAS  /tmp/ccQYuIjq.s 			page 87


2627:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2628:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR1, RCC_DCKCFGR1_ADFSDM1SEL, Source);
2629:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2630:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2631:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2632:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure DFSDM Kernel clock source
2633:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1         DFSDM1SEL        LL_RCC_SetDFSDMClockSource
2634:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2635:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_CLKSOURCE_PCLK2
2636:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_CLKSOURCE_SYSCLK
2637:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2638:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2639:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetDFSDMClockSource(uint32_t Source)
2640:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2641:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR1, RCC_DCKCFGR1_DFSDM1SEL, Source);
2642:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2643:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DFSDM1_Channel0 */
2644:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2645:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2646:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get USARTx clock source
2647:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        USART1SEL     LL_RCC_GetUSARTClockSource\n
2648:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        USART2SEL     LL_RCC_GetUSARTClockSource\n
2649:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        USART3SEL     LL_RCC_GetUSARTClockSource\n
2650:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        USART6SEL     LL_RCC_GetUSARTClockSource
2651:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  USARTx This parameter can be one of the following values:
2652:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE
2653:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE
2654:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE
2655:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE
2656:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2657:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK2
2658:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
2659:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
2660:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
2661:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1
2662:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK
2663:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI
2664:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE
2665:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1
2666:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK
2667:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI
2668:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE
2669:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE_PCLK2
2670:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE_SYSCLK
2671:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE_HSI
2672:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART6_CLKSOURCE_LSE
2673:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2674:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSARTClockSource(uint32_t USARTx)
2675:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2676:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, USARTx) | (USARTx << 16U));
2677:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2678:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2679:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2680:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get UARTx clock source
2681:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        UART4SEL      LL_RCC_GetUARTClockSource\n
2682:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        UART5SEL      LL_RCC_GetUARTClockSource\n
2683:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        UART7SEL      LL_RCC_GetUARTClockSource\n
ARM GAS  /tmp/ccQYuIjq.s 			page 88


2684:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        UART8SEL      LL_RCC_GetUARTClockSource
2685:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  UARTx This parameter can be one of the following values:
2686:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE
2687:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE
2688:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE
2689:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE
2690:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2691:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_PCLK1
2692:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_SYSCLK
2693:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_HSI
2694:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_LSE
2695:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_PCLK1
2696:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_SYSCLK
2697:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_HSI
2698:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_LSE
2699:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE_PCLK1
2700:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE_SYSCLK
2701:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE_HSI
2702:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART7_CLKSOURCE_LSE
2703:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE_PCLK1
2704:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE_SYSCLK
2705:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE_HSI
2706:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART8_CLKSOURCE_LSE
2707:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2708:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUARTClockSource(uint32_t UARTx)
2709:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2710:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, UARTx) | (UARTx << 16U));
2711:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2712:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2713:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2714:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get I2Cx clock source
2715:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        I2C1SEL       LL_RCC_GetI2CClockSource\n
2716:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        I2C2SEL       LL_RCC_GetI2CClockSource\n
2717:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        I2C3SEL       LL_RCC_GetI2CClockSource\n
2718:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        I2C4SEL       LL_RCC_GetI2CClockSource
2719:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  I2Cx This parameter can be one of the following values:
2720:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE
2721:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE
2722:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE
2723:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE (*)
2724:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2725:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_PCLK1
2726:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
2727:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
2728:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_PCLK1
2729:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_SYSCLK
2730:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_HSI
2731:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_PCLK1
2732:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_SYSCLK
2733:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_HSI
2734:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_PCLK1 (*)
2735:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_SYSCLK (*)
2736:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_HSI (*)
2737:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
2738:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         (*) value not defined in all devices.
2739:HALLIB/Inc/stm32f7xx_ll_rcc.h ****  */
2740:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2CClockSource(uint32_t I2Cx)
ARM GAS  /tmp/ccQYuIjq.s 			page 89


2741:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2742:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)((READ_BIT(RCC->DCKCFGR2, I2Cx) >> 16U) | I2Cx);
2743:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2744:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2745:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2746:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get LPTIMx clock source
2747:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        LPTIM1SEL     LL_RCC_GetLPTIMClockSource
2748:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  LPTIMx This parameter can be one of the following values:
2749:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE
2750:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2751:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_PCLK1
2752:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSI
2753:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_HSI
2754:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSE
2755:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2756:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetLPTIMClockSource(uint32_t LPTIMx)
2757:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2758:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_LPTIM1SEL));
2759:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2760:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2761:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2762:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get SAIx clock source
2763:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1        SAI1SEL       LL_RCC_GetSAIClockSource\n
2764:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR1        SAI2SEL       LL_RCC_GetSAIClockSource
2765:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  SAIx This parameter can be one of the following values:
2766:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE
2767:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE
2768:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2769:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PLLSAI
2770:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PLLI2S
2771:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PIN
2772:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PLLSRC (*)
2773:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE_PLLSAI
2774:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE_PLLI2S
2775:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE_PIN
2776:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI2_CLKSOURCE_PLLSRC (*)
2777:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
2778:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         (*) value not defined in all devices.
2779:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2780:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSAIClockSource(uint32_t SAIx)
2781:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2782:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR1, SAIx) >> 16U | SAIx);
2783:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2784:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2785:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2786:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get SDMMCx clock source
2787:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        SDMMC1SEL      LL_RCC_GetSDMMCClockSource\n
2788:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR2        SDMMC2SEL      LL_RCC_GetSDMMCClockSource
2789:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  SDMMCx This parameter can be one of the following values:
2790:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC1_CLKSOURCE
2791:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC1_CLKSOURCE (*)
2792:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2793:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC1_CLKSOURCE_PLL48CLK
2794:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC1_CLKSOURCE_SYSCLK
2795:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC2_CLKSOURCE_PLL48CLK (*)
2796:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SDMMC2_CLKSOURCE_SYSCLK (*)
2797:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *
ARM GAS  /tmp/ccQYuIjq.s 			page 90


2798:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         (*) value not defined in all devices.
2799:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2800:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSDMMCClockSource(uint32_t SDMMCx)
2801:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2802:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, SDMMCx) >> 16U | SDMMCx);
2803:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2804:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2805:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2806:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get 48Mhz domain clock source
2807:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        CK48MSEL      LL_RCC_GetCK48MClockSource
2808:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  CK48Mx This parameter can be one of the following values:
2809:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CK48M_CLKSOURCE
2810:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2811:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CK48M_CLKSOURCE_PLL
2812:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CK48M_CLKSOURCE_PLLSAI
2813:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2814:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetCK48MClockSource(uint32_t CK48Mx)
2815:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2816:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, CK48Mx));
2817:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2818:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2819:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2820:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get RNGx clock source
2821:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        CK48MSEL      LL_RCC_GetRNGClockSource
2822:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  RNGx This parameter can be one of the following values:
2823:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE
2824:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2825:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLL
2826:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLLSAI
2827:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2828:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRNGClockSource(uint32_t RNGx)
2829:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2830:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, RNGx));
2831:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2832:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2833:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2834:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get USBx clock source
2835:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2        CK48MSEL      LL_RCC_GetUSBClockSource
2836:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  USBx This parameter can be one of the following values:
2837:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE
2838:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2839:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
2840:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLLSAI
2841:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2842:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSBClockSource(uint32_t USBx)
2843:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2844:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, USBx));
2845:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2846:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2847:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(CEC)
2848:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2849:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get CEC Clock Source
2850:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2         CECSEL        LL_RCC_GetCECClockSource
2851:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  CECx This parameter can be one of the following values:
2852:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE
2853:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2854:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_LSE
ARM GAS  /tmp/ccQYuIjq.s 			page 91


2855:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_HSI_DIV488
2856:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2857:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetCECClockSource(uint32_t CECx)
2858:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2859:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, CECx));
2860:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2861:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* CEC */
2862:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2863:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2864:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get I2S Clock Source
2865:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         I2SSRC        LL_RCC_GetI2SClockSource
2866:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  I2Sx This parameter can be one of the following values:
2867:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S1_CLKSOURCE
2868:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2869:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S1_CLKSOURCE_PLLI2S
2870:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S1_CLKSOURCE_PIN
2871:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2872:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2SClockSource(uint32_t I2Sx)
2873:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2874:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, I2Sx));
2875:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2876:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2877:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DFSDM1_Channel0)
2878:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2879:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get DFSDM Audio Clock Source
2880:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1         ADFSDM1SEL        LL_RCC_GetDFSDMAudioClockSource
2881:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  DFSDMx This parameter can be one of the following values:
2882:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_AUDIO_CLKSOURCE
2883:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2884:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI1
2885:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI2
2886:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2887:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetDFSDMAudioClockSource(uint32_t DFSDMx)
2888:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2889:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR1, DFSDMx));
2890:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2891:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2892:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2893:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get DFSDM Audio Clock Source
2894:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1         DFSDM1SEL        LL_RCC_GetDFSDMClockSource
2895:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  DFSDMx This parameter can be one of the following values:
2896:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_CLKSOURCE
2897:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2898:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_CLKSOURCE_PCLK2
2899:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DFSDM1_CLKSOURCE_SYSCLK
2900:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2901:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetDFSDMClockSource(uint32_t DFSDMx)
2902:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2903:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR1, DFSDMx));
2904:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2905:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DFSDM1_Channel0 */
2906:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2907:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DSI)
2908:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2909:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get DSI Clock Source
2910:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR2         DSISEL        LL_RCC_GetDSIClockSource
2911:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  DSIx This parameter can be one of the following values:
ARM GAS  /tmp/ccQYuIjq.s 			page 92


2912:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DSI_CLKSOURCE
2913:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2914:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DSI_CLKSOURCE_PHY
2915:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_DSI_CLKSOURCE_PLL
2916:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2917:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetDSIClockSource(uint32_t DSIx)
2918:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2919:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR2, DSIx));
2920:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2921:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DSI */
2922:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2923:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2924:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
2925:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2926:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2927:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_RTC RTC
2928:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
2929:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2930:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2931:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2932:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Set RTC Clock Source
2933:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note Once the RTC clock source has been selected, it cannot be changed anymore unless
2934:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       the Backup domain is reset, or unless a failure is detected on LSE (LSECSSD is
2935:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       set). The BDRST bit can be used to reset them.
2936:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_SetRTCClockSource
2937:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2938:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
2939:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
2940:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
2941:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE
2942:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2943:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2944:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTCClockSource(uint32_t Source)
2945:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2946:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_RTCSEL, Source);
2947:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2948:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2949:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2950:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get RTC Clock Source
2951:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_GetRTCClockSource
2952:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2953:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
2954:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
2955:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
2956:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE
2957:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2958:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTCClockSource(void)
2959:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2960:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL));
2961:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2962:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2963:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2964:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable RTC
2965:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
2966:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2967:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2968:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_EnableRTC(void)
ARM GAS  /tmp/ccQYuIjq.s 			page 93


2969:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2970:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
2971:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2972:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2973:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2974:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable RTC
2975:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_DisableRTC
2976:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2977:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2978:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_DisableRTC(void)
2979:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2980:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
2981:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2982:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2983:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2984:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Check if RTC has been enabled or not
2985:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_IsEnabledRTC
2986:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2987:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2988:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_IsEnabledRTC(void)
2989:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
2990:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_RTCEN) == (RCC_BDCR_RTCEN));
2991:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
2992:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
2993:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
2994:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Force the Backup domain reset
2995:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ForceBackupDomainReset
2996:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
2997:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
2998:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ForceBackupDomainReset(void)
2999:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3000:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_BDRST);
3001:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3002:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3003:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3004:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Release the Backup domain reset
3005:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ReleaseBackupDomainReset
3006:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3007:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3008:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ReleaseBackupDomainReset(void)
3009:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3010:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_BDRST);
3011:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3012:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3013:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3014:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Set HSE Prescalers for RTC Clock
3015:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         RTCPRE        LL_RCC_SetRTC_HSEPrescaler
3016:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
3017:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_NOCLOCK
3018:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_2
3019:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_3
3020:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_4
3021:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_5
3022:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_6
3023:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_7
3024:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_8
3025:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_9
ARM GAS  /tmp/ccQYuIjq.s 			page 94


3026:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_10
3027:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_11
3028:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_12
3029:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_13
3030:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_14
3031:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_15
3032:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_16
3033:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_17
3034:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_18
3035:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_19
3036:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_20
3037:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_21
3038:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_22
3039:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_23
3040:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_24
3041:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_25
3042:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_26
3043:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_27
3044:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_28
3045:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_29
3046:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_30
3047:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_31
3048:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3049:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3050:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTC_HSEPrescaler(uint32_t Prescaler)
3051:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3052:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_RTCPRE, Prescaler);
3053:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3054:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3055:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3056:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get HSE Prescalers for RTC Clock
3057:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CFGR         RTCPRE        LL_RCC_GetRTC_HSEPrescaler
3058:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
3059:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_NOCLOCK
3060:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_2
3061:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_3
3062:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_4
3063:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_5
3064:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_6
3065:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_7
3066:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_8
3067:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_9
3068:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_10
3069:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_11
3070:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_12
3071:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_13
3072:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_14
3073:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_15
3074:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_16
3075:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_17
3076:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_18
3077:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_19
3078:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_20
3079:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_21
3080:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_22
3081:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_23
3082:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_24
ARM GAS  /tmp/ccQYuIjq.s 			page 95


3083:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_25
3084:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_26
3085:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_27
3086:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_28
3087:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_29
3088:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_30
3089:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_31
3090:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3091:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTC_HSEPrescaler(void)
3092:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3093:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_RTCPRE));
3094:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3095:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3096:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3097:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
3098:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3099:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3100:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_TIM_CLOCK_PRESCALER TIM
3101:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
3102:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3103:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3104:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3105:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Set Timers Clock Prescalers
3106:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1         TIMPRE        LL_RCC_SetTIMPrescaler
3107:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
3108:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_TIM_PRESCALER_TWICE
3109:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_TIM_PRESCALER_FOUR_TIMES
3110:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3111:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3112:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetTIMPrescaler(uint32_t Prescaler)
3113:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3114:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR1, RCC_DCKCFGR1_TIMPRE, Prescaler);
3115:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3116:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3117:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3118:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Timers Clock Prescalers
3119:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1         TIMPRE        LL_RCC_GetTIMPrescaler
3120:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
3121:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_TIM_PRESCALER_TWICE
3122:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_TIM_PRESCALER_FOUR_TIMES
3123:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3124:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetTIMPrescaler(void)
3125:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3126:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR1, RCC_DCKCFGR1_TIMPRE));
3127:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3128:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3129:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3130:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
3131:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3132:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3133:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLL PLL
3134:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
3135:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3136:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3137:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3138:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable PLL
3139:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
ARM GAS  /tmp/ccQYuIjq.s 			page 96


3140:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3141:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3142:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Enable(void)
3143:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3144:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLON);
3145:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3146:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3147:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3148:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable PLL
3149:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system clock
3150:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Disable
3151:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3152:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3153:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Disable(void)
3154:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3155:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
3156:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3157:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3158:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3159:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Check if PLL Ready
3160:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
3161:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
3162:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3163:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
3164:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3165:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
 348              		.loc 4 3165 0
 349 0000 0A4B     		ldr	r3, .L35
 350 0002 1B68     		ldr	r3, [r3]
 351              	.LBE65:
 352              	.LBE64:
 652:HALLIB/Src/stm32f7xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 653:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 654:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Check if PLL is busy*/
 655:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(LL_RCC_PLL_IsReady() != 0U)
 353              		.loc 1 655 0
 354 0004 13F0007F 		tst	r3, #33554432
 355 0008 01D1     		bne	.L32
 652:HALLIB/Src/stm32f7xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 356              		.loc 1 652 0
 357 000a 0120     		movs	r0, #1
 358 000c 00E0     		b	.L29
 359              	.L32:
 656:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 657:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* PLL configuration cannot be modified */
 658:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = ERROR;
 360              		.loc 1 658 0
 361 000e 0020     		movs	r0, #0
 362              	.L29:
 363              	.LVL28:
 364              	.LBB66:
 365              	.LBB67:
3166:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3167:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3168:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3169:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure PLL used for SYSCLK Domain
3170:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL,
ARM GAS  /tmp/ccQYuIjq.s 			page 97


3171:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       PLLI2S and PLLSAI are disabled
3172:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLLN/PLLP can be written only when PLL is disabled
3173:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_ConfigDomain_SYS\n
3174:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLL_ConfigDomain_SYS\n
3175:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLN          LL_RCC_PLL_ConfigDomain_SYS\n
3176:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLP          LL_RCC_PLL_ConfigDomain_SYS
3177:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
3178:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
3179:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
3180:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
3181:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
3182:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
3183:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
3184:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
3185:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
3186:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
3187:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
3188:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
3189:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
3190:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
3191:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
3192:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
3193:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
3194:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
3195:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
3196:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
3197:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
3198:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
3199:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
3200:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
3201:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
3202:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
3203:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
3204:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
3205:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
3206:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
3207:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
3208:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
3209:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
3210:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
3211:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
3212:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
3213:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
3214:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
3215:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
3216:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
3217:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
3218:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
3219:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
3220:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
3221:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
3222:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
3223:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
3224:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
3225:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
3226:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
3227:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
ARM GAS  /tmp/ccQYuIjq.s 			page 98


3228:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
3229:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
3230:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
3231:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
3232:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
3233:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
3234:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
3235:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
3236:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
3237:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
3238:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
3239:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
3240:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
3241:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
3242:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
3243:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLN Between 50 and 432
3244:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLP This parameter can be one of the following values:
3245:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_2
3246:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_4
3247:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_6
3248:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_8
3249:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3250:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3251:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLM, uint32_t PLLN, uin
3252:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3253:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_P
3254:HALLIB/Inc/stm32f7xx_ll_rcc.h ****              Source | PLLM | PLLN << RCC_PLLCFGR_PLLN_Pos | PLLP);
3255:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3256:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3257:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3258:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure PLL used for 48Mhz domain clock
3259:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL,
3260:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       PLLI2S and PLLSAI are disabled
3261:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLLN/PLLQ can be written only when PLL is disabled
3262:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note This  can be selected for USB, RNG, SDMMC1
3263:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_ConfigDomain_48M\n
3264:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLL_ConfigDomain_48M\n
3265:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLN          LL_RCC_PLL_ConfigDomain_48M\n
3266:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLQ          LL_RCC_PLL_ConfigDomain_48M
3267:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
3268:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
3269:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
3270:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
3271:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
3272:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
3273:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
3274:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
3275:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
3276:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
3277:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
3278:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
3279:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
3280:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
3281:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
3282:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
3283:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
3284:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
ARM GAS  /tmp/ccQYuIjq.s 			page 99


3285:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
3286:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
3287:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
3288:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
3289:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
3290:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
3291:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
3292:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
3293:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
3294:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
3295:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
3296:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
3297:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
3298:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
3299:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
3300:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
3301:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
3302:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
3303:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
3304:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
3305:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
3306:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
3307:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
3308:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
3309:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
3310:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
3311:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
3312:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
3313:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
3314:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
3315:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
3316:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
3317:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
3318:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
3319:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
3320:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
3321:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
3322:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
3323:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
3324:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
3325:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
3326:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
3327:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
3328:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
3329:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
3330:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
3331:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
3332:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
3333:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLN Between 50 and 432
3334:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLQ This parameter can be one of the following values:
3335:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_2
3336:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_3
3337:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_4
3338:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_5
3339:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_6
3340:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_7
3341:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_8
ARM GAS  /tmp/ccQYuIjq.s 			page 100


3342:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_9
3343:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_10
3344:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_11
3345:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_12
3346:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_13
3347:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_14
3348:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_15
3349:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3350:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3351:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_48M(uint32_t Source, uint32_t PLLM, uint32_t PLLN, uin
3352:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3353:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_P
3354:HALLIB/Inc/stm32f7xx_ll_rcc.h ****              Source | PLLM | PLLN << RCC_PLLCFGR_PLLN_Pos | PLLQ);
3355:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3356:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3357:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(DSI)
3358:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3359:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure PLL used for DSI clock
3360:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL,
3361:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       PLLI2S and PLLSAI are disabled
3362:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLLN/PLLR can be written only when PLL is disabled
3363:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note This  can be selected for DSI
3364:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_ConfigDomain_DSI\n
3365:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLL_ConfigDomain_DSI\n
3366:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLN          LL_RCC_PLL_ConfigDomain_DSI\n
3367:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLR          LL_RCC_PLL_ConfigDomain_DSI
3368:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
3369:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
3370:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
3371:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
3372:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
3373:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
3374:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
3375:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
3376:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
3377:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
3378:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
3379:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
3380:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
3381:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
3382:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
3383:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
3384:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
3385:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
3386:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
3387:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
3388:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
3389:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
3390:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
3391:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
3392:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
3393:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
3394:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
3395:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
3396:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
3397:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
3398:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
ARM GAS  /tmp/ccQYuIjq.s 			page 101


3399:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
3400:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
3401:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
3402:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
3403:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
3404:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
3405:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
3406:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
3407:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
3408:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
3409:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
3410:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
3411:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
3412:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
3413:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
3414:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
3415:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
3416:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
3417:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
3418:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
3419:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
3420:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
3421:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
3422:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
3423:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
3424:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
3425:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
3426:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
3427:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
3428:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
3429:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
3430:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
3431:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
3432:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
3433:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
3434:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLN Between 50 and 432
3435:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLR This parameter can be one of the following values:
3436:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_2
3437:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_3
3438:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_4
3439:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_5
3440:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_6
3441:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_7
3442:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3443:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3444:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_DSI(uint32_t Source, uint32_t PLLM, uint32_t PLLN, uin
3445:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3446:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_P
3447:HALLIB/Inc/stm32f7xx_ll_rcc.h ****              Source | PLLM | PLLN << RCC_PLLCFGR_PLLN_Pos | PLLR);
3448:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3449:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* DSI */
3450:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3451:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3452:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure PLL clock source
3453:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_SetMainSource
3454:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param PLLSource This parameter can be one of the following values:
3455:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
ARM GAS  /tmp/ccQYuIjq.s 			page 102


3456:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
3457:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3458:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3459:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_SetMainSource(uint32_t PLLSource)
3460:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3461:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PLLSource);
3462:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3463:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3464:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3465:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get the oscillator used as PLL clock source.
3466:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_GetMainSource
3467:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
3468:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
3469:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
3470:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3471:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetMainSource(void)
3472:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3473:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC));
3474:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3475:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3476:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3477:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Main PLL multiplication factor for VCO
3478:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLN          LL_RCC_PLL_GetN
3479:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Between 50 and 432
3480:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3481:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetN(void)
3482:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3483:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >>  RCC_PLLCFGR_PLLN_Pos);
3484:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3485:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3486:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3487:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Main PLL division factor for PLLP 
3488:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLP       LL_RCC_PLL_GetP
3489:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
3490:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_2
3491:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_4
3492:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_6
3493:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_8
3494:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3495:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetP(void)
3496:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3497:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP));
3498:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3499:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3500:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3501:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Main PLL division factor for PLLQ
3502:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note used for PLL48MCLK selected for USB, RNG, SDMMC (48 MHz clock)
3503:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLQ          LL_RCC_PLL_GetQ
3504:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
3505:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_2
3506:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_3
3507:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_4
3508:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_5
3509:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_6
3510:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_7
3511:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_8
3512:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_9
ARM GAS  /tmp/ccQYuIjq.s 			page 103


3513:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_10
3514:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_11
3515:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_12
3516:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_13
3517:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_14
3518:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_15
3519:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3520:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetQ(void)
3521:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3522:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ));
3523:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3524:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3525:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_PLLCFGR_PLLR)
3526:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3527:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Main PLL division factor for PLLR
3528:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note used for PLLCLK (system clock)
3529:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLR          LL_RCC_PLL_GetR
3530:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
3531:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_2
3532:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_3
3533:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_4
3534:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_5
3535:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_6
3536:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_7
3537:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3538:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetR(void)
3539:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3540:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR));
3541:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3542:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_PLLCFGR_PLLR */
3543:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3544:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3545:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Division factor for the main PLL and other PLL
3546:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLM          LL_RCC_PLL_GetDivider
3547:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
3548:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
3549:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
3550:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
3551:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
3552:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
3553:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
3554:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
3555:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
3556:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
3557:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
3558:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
3559:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
3560:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
3561:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
3562:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
3563:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
3564:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
3565:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
3566:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
3567:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
3568:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
3569:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
ARM GAS  /tmp/ccQYuIjq.s 			page 104


3570:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
3571:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
3572:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
3573:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
3574:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
3575:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
3576:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
3577:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
3578:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
3579:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
3580:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
3581:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
3582:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
3583:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
3584:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
3585:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
3586:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
3587:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
3588:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
3589:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
3590:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
3591:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
3592:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
3593:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
3594:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
3595:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
3596:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
3597:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
3598:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
3599:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
3600:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
3601:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
3602:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
3603:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
3604:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
3605:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
3606:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
3607:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
3608:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
3609:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
3610:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3611:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetDivider(void)
3612:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3613:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM));
3614:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3615:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3616:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3617:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure Spread Spectrum used for PLL
3618:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note These bits must be written before enabling PLL
3619:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll SSCGR        MODPER        LL_RCC_PLL_ConfigSpreadSpectrum\n
3620:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         SSCGR        INCSTEP       LL_RCC_PLL_ConfigSpreadSpectrum\n
3621:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         SSCGR        SPREADSEL     LL_RCC_PLL_ConfigSpreadSpectrum
3622:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Mod Between Min_Data=0 and Max_Data=8191
3623:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Inc Between Min_Data=0 and Max_Data=32767
3624:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Sel This parameter can be one of the following values:
3625:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SPREAD_SELECT_CENTER
3626:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SPREAD_SELECT_DOWN
ARM GAS  /tmp/ccQYuIjq.s 			page 105


3627:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3628:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3629:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigSpreadSpectrum(uint32_t Mod, uint32_t Inc, uint32_t Sel)
3630:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3631:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->SSCGR, RCC_SSCGR_MODPER | RCC_SSCGR_INCSTEP | RCC_SSCGR_SPREADSEL, Mod | (Inc << 
3632:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3633:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3634:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3635:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Spread Spectrum Modulation Period for PLL
3636:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll SSCGR         MODPER        LL_RCC_PLL_GetPeriodModulation
3637:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Between Min_Data=0 and Max_Data=8191
3638:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3639:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetPeriodModulation(void)
3640:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3641:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->SSCGR, RCC_SSCGR_MODPER));
3642:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3643:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3644:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3645:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Spread Spectrum Incrementation Step for PLL
3646:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note Must be written before enabling PLL
3647:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll SSCGR         INCSTEP        LL_RCC_PLL_GetStepIncrementation
3648:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Between Min_Data=0 and Max_Data=32767
3649:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3650:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetStepIncrementation(void)
3651:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3652:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->SSCGR, RCC_SSCGR_INCSTEP) >> RCC_SSCGR_INCSTEP_Pos);
3653:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3654:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3655:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3656:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get Spread Spectrum Selection for PLL
3657:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note Must be written before enabling PLL
3658:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll SSCGR         SPREADSEL        LL_RCC_PLL_GetSpreadSelection
3659:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
3660:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SPREAD_SELECT_CENTER
3661:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SPREAD_SELECT_DOWN
3662:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3663:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetSpreadSelection(void)
3664:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3665:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->SSCGR, RCC_SSCGR_SPREADSEL));
3666:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3667:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3668:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3669:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable Spread Spectrum for PLL.
3670:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll SSCGR         SSCGEN         LL_RCC_PLL_SpreadSpectrum_Enable
3671:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3672:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3673:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_SpreadSpectrum_Enable(void)
3674:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3675:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->SSCGR, RCC_SSCGR_SSCGEN);
3676:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3677:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3678:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3679:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable Spread Spectrum for PLL.
3680:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll SSCGR         SSCGEN         LL_RCC_PLL_SpreadSpectrum_Disable
3681:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3682:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3683:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_SpreadSpectrum_Disable(void)
ARM GAS  /tmp/ccQYuIjq.s 			page 106


3684:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3685:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->SSCGR, RCC_SSCGR_SSCGEN);
3686:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3687:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3688:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3689:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
3690:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3691:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3692:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLLI2S PLLI2S
3693:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
3694:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3695:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3696:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3697:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable PLLI2S
3698:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLI2SON     LL_RCC_PLLI2S_Enable
3699:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3700:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3701:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLLI2S_Enable(void)
3702:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3703:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLI2SON);
3704:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3705:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3706:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3707:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable PLLI2S
3708:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLI2SON     LL_RCC_PLLI2S_Disable
3709:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3710:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3711:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLLI2S_Disable(void)
3712:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3713:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLI2SON);
3714:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3715:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3716:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3717:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Check if PLLI2S Ready
3718:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLI2SRDY    LL_RCC_PLLI2S_IsReady
3719:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
3720:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3721:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLLI2S_IsReady(void)
3722:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3723:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_PLLI2SRDY) == (RCC_CR_PLLI2SRDY));
3724:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3725:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3726:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3727:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure PLLI2S used for SAI1 and SAI2 domain clock
3728:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL,
3729:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       PLLI2S and PLLSAI are disabled
3730:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLLN/PLLQ can be written only when PLLI2S is disabled
3731:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note This can be selected for SAI1 and SAI2
3732:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLLI2S_ConfigDomain_SAI\n
3733:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLLI2S_ConfigDomain_SAI\n
3734:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLI2SCFGR   PLLI2SN       LL_RCC_PLLI2S_ConfigDomain_SAI\n
3735:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLI2SCFGR   PLLI2SQ       LL_RCC_PLLI2S_ConfigDomain_SAI\n
3736:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         DCKCFGR1      PLLI2SDIVQ    LL_RCC_PLLI2S_ConfigDomain_SAI
3737:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
3738:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
3739:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
3740:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
ARM GAS  /tmp/ccQYuIjq.s 			page 107


3741:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
3742:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
3743:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
3744:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
3745:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
3746:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
3747:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
3748:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
3749:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
3750:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
3751:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
3752:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
3753:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
3754:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
3755:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
3756:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
3757:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
3758:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
3759:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
3760:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
3761:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
3762:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
3763:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
3764:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
3765:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
3766:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
3767:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
3768:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
3769:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
3770:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
3771:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
3772:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
3773:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
3774:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
3775:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
3776:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
3777:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
3778:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
3779:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
3780:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
3781:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
3782:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
3783:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
3784:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
3785:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
3786:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
3787:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
3788:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
3789:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
3790:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
3791:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
3792:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
3793:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
3794:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
3795:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
3796:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
3797:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
ARM GAS  /tmp/ccQYuIjq.s 			page 108


3798:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
3799:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
3800:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
3801:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
3802:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
3803:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLN Between 50 and 432
3804:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLQ This parameter can be one of the following values:
3805:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_2
3806:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_3
3807:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_4
3808:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_5
3809:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_6
3810:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_7
3811:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_8
3812:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_9
3813:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_10
3814:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_11
3815:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_12
3816:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_13
3817:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_14
3818:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_15
3819:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLDIVQ This parameter can be one of the following values:
3820:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_1
3821:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_2
3822:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_3
3823:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_4
3824:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_5
3825:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_6
3826:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_7
3827:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_8
3828:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_9
3829:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_10
3830:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_11
3831:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_12
3832:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_13
3833:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_14
3834:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_15
3835:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_16
3836:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_17
3837:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_18
3838:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_19
3839:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_20
3840:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_21
3841:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_22
3842:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_23
3843:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_24
3844:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_25
3845:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_26
3846:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_27
3847:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_28
3848:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_29
3849:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_30
3850:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_31
3851:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_32
3852:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3853:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3854:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLLI2S_ConfigDomain_SAI(uint32_t Source, uint32_t PLLM, uint32_t PLLN, 
ARM GAS  /tmp/ccQYuIjq.s 			page 109


3855:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3856:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, Source | PLLM);
3857:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLI2SCFGR, RCC_PLLI2SCFGR_PLLI2SN | RCC_PLLI2SCFGR_PLLI2SQ, PLLN << RCC_PLLI2SCF
3858:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->DCKCFGR1, RCC_DCKCFGR1_PLLI2SDIVQ, PLLDIVQ);
3859:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3860:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3861:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(SPDIFRX)
3862:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3863:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief Configure PLLI2S used for SPDIFRX domain clock
3864:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL,
3865:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       PLLI2S and PLLSAI are disabled
3866:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLLN/PLLP can be written only when PLLI2S is disabled
3867:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note This  can be selected for SPDIFRX
3868:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLLI2S_ConfigDomain_SPDIFRX\n
3869:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLLI2S_ConfigDomain_SPDIFRX\n
3870:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLI2SCFGR   PLLI2SN       LL_RCC_PLLI2S_ConfigDomain_SPDIFRX\n
3871:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLI2SCFGR   PLLI2SP       LL_RCC_PLLI2S_ConfigDomain_SPDIFRX
3872:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
3873:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
3874:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
3875:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
3876:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
3877:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
3878:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
3879:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
3880:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
3881:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
3882:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
3883:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
3884:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
3885:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
3886:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
3887:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
3888:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
3889:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
3890:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
3891:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
3892:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
3893:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
3894:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
3895:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
3896:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
3897:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
3898:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
3899:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
3900:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
3901:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
3902:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
3903:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
3904:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
3905:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
3906:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
3907:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
3908:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
3909:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
3910:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
3911:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
ARM GAS  /tmp/ccQYuIjq.s 			page 110


3912:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
3913:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
3914:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
3915:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
3916:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
3917:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
3918:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
3919:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
3920:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
3921:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
3922:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
3923:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
3924:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
3925:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
3926:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
3927:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
3928:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
3929:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
3930:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
3931:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
3932:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
3933:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
3934:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
3935:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
3936:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
3937:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
3938:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLN Between 50 and 432
3939:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLP This parameter can be one of the following values:
3940:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_2
3941:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_4
3942:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_6
3943:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_8
3944:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
3945:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
3946:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLLI2S_ConfigDomain_SPDIFRX(uint32_t Source, uint32_t PLLM, uint32_t PL
3947:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
3948:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, Source | PLLM);
3949:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLI2SCFGR, RCC_PLLI2SCFGR_PLLI2SN | RCC_PLLI2SCFGR_PLLI2SP, PLLN << RCC_PLLI2SCF
3950:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
3951:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* SPDIFRX */
3952:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
3953:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
3954:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Configure PLLI2S used for I2S1 domain clock
3955:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL,
3956:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *       PLLI2S and PLLSAI are disabled
3957:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note PLLN/PLLR can be written only when PLLI2S is disabled
3958:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note This  can be selected for I2S
3959:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLLI2S_ConfigDomain_I2S\n
3960:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLLI2S_ConfigDomain_I2S\n
3961:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLI2SCFGR   PLLI2SN       LL_RCC_PLLI2S_ConfigDomain_I2S\n
3962:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         PLLI2SCFGR   PLLI2SR       LL_RCC_PLLI2S_ConfigDomain_I2S
3963:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
3964:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
3965:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
3966:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
3967:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
3968:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
ARM GAS  /tmp/ccQYuIjq.s 			page 111


3969:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
3970:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
3971:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
3972:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
3973:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
3974:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
3975:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
3976:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
3977:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
3978:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
3979:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
3980:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
3981:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
3982:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_17
3983:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_18
3984:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_19
3985:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_20
3986:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_21
3987:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_22
3988:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_23
3989:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_24
3990:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_25
3991:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_26
3992:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_27
3993:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_28
3994:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_29
3995:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_30
3996:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_31
3997:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_32
3998:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_33
3999:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_34
4000:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_35
4001:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_36
4002:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_37
4003:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_38
4004:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_39
4005:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_40
4006:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_41
4007:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_42
4008:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_43
4009:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_44
4010:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_45
4011:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_46
4012:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_47
4013:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_48
4014:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_49
4015:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_50
4016:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_51
4017:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_52
4018:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_53
4019:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_54
4020:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_55
4021:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_56
4022:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_57
4023:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_58
4024:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_59
4025:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_60
ARM GAS  /tmp/ccQYuIjq.s 			page 112


4026:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_61
4027:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_62
4028:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_63
4029:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLN Between 50 and 432
4030:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @param  PLLR This parameter can be one of the following values:
4031:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_2
4032:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_3
4033:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_4
4034:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_5
4035:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_6
4036:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_7
4037:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
4038:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4039:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLLI2S_ConfigDomain_I2S(uint32_t Source, uint32_t PLLM, uint32_t PLLN, 
4040:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4041:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, Source | PLLM);
4042:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLI2SCFGR, RCC_PLLI2SCFGR_PLLI2SN | RCC_PLLI2SCFGR_PLLI2SR, PLLN << RCC_PLLI2SCF
4043:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
4044:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4045:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4046:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get I2SPLL multiplication factor for VCO
4047:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLI2SCFGR  PLLI2SN      LL_RCC_PLLI2S_GetN
4048:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Between 50 and 432
4049:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4050:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLLI2S_GetN(void)
4051:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4052:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLI2SCFGR, RCC_PLLI2SCFGR_PLLI2SN) >> RCC_PLLI2SCFGR_PLLI2SN_Pos
4053:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
4054:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4055:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4056:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get I2SPLL division factor for PLLI2SQ
4057:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLI2SCFGR  PLLI2SQ      LL_RCC_PLLI2S_GetQ
4058:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
4059:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_2
4060:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_3
4061:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_4
4062:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_5
4063:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_6
4064:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_7
4065:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_8
4066:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_9
4067:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_10
4068:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_11
4069:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_12
4070:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_13
4071:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_14
4072:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SQ_DIV_15
4073:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4074:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLLI2S_GetQ(void)
4075:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4076:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLI2SCFGR, RCC_PLLI2SCFGR_PLLI2SQ));
4077:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
4078:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4079:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4080:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get I2SPLL division factor for PLLI2SR
4081:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note used for PLLI2SCLK (I2S clock)
4082:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLI2SCFGR  PLLI2SR      LL_RCC_PLLI2S_GetR
ARM GAS  /tmp/ccQYuIjq.s 			page 113


4083:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
4084:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_2
4085:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_3
4086:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_4
4087:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_5
4088:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_6
4089:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SR_DIV_7
4090:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4091:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLLI2S_GetR(void)
4092:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4093:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLI2SCFGR, RCC_PLLI2SCFGR_PLLI2SR));
4094:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
4095:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4096:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #if defined(RCC_PLLI2SCFGR_PLLI2SP)
4097:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4098:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get I2SPLL division factor for PLLI2SP
4099:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note used for PLLSPDIFRXCLK (SPDIFRX clock)
4100:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll PLLI2SCFGR  PLLI2SP      LL_RCC_PLLI2S_GetP
4101:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
4102:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_2
4103:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_4
4104:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_6
4105:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SP_DIV_8
4106:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4107:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLLI2S_GetP(void)
4108:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4109:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLI2SCFGR, RCC_PLLI2SCFGR_PLLI2SP));
4110:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
4111:HALLIB/Inc/stm32f7xx_ll_rcc.h **** #endif /* RCC_PLLI2SCFGR_PLLI2SP */
4112:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4113:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4114:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Get I2SPLL division factor for PLLI2SDIVQ
4115:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @note used PLLSAI1CLK, PLLSAI2CLK selected (SAI1 and SAI2 clock)
4116:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll DCKCFGR1   PLLI2SDIVQ      LL_RCC_PLLI2S_GetDIVQ
4117:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
4118:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_1
4119:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_2
4120:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_3
4121:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_4
4122:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_5
4123:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_6
4124:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_7
4125:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_8
4126:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_9
4127:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_10
4128:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_11
4129:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_12
4130:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_13
4131:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_14
4132:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_15
4133:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_16
4134:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_17
4135:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_18
4136:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_19
4137:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_20
4138:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_21
4139:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_22
ARM GAS  /tmp/ccQYuIjq.s 			page 114


4140:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_23
4141:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_24
4142:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_25
4143:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_26
4144:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_27
4145:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_28
4146:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_29
4147:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_30
4148:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_31
4149:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2SDIVQ_DIV_32
4150:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4151:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLLI2S_GetDIVQ(void)
4152:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4153:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->DCKCFGR1, RCC_DCKCFGR1_PLLI2SDIVQ));
4154:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
4155:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4156:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4157:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @}
4158:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4159:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4160:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLLSAI PLLSAI
4161:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @{
4162:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4163:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4164:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4165:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Enable PLLSAI
4166:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLSAION     LL_RCC_PLLSAI_Enable
4167:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
4168:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4169:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLLSAI_Enable(void)
4170:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4171:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLSAION);
4172:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
4173:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4174:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4175:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Disable PLLSAI
4176:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLSAION     LL_RCC_PLLSAI_Disable
4177:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval None
4178:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4179:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLLSAI_Disable(void)
4180:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4181:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLSAION);
4182:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
4183:HALLIB/Inc/stm32f7xx_ll_rcc.h **** 
4184:HALLIB/Inc/stm32f7xx_ll_rcc.h **** /**
4185:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @brief  Check if PLLSAI Ready
4186:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @rmtoll CR           PLLSAIRDY    LL_RCC_PLLSAI_IsReady
4187:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
4188:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   */
4189:HALLIB/Inc/stm32f7xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLLSAI_IsReady(void)
4190:HALLIB/Inc/stm32f7xx_ll_rcc.h **** {
4191:HALLIB/Inc/stm32f7xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_PLLSAIRDY) == (RCC_CR_PLLSAIRDY));
 366              		.loc 4 4191 0
 367 0010 064B     		ldr	r3, .L35
 368 0012 1B68     		ldr	r3, [r3]
 369              	.LBE67:
 370              	.LBE66:
ARM GAS  /tmp/ccQYuIjq.s 			page 115


 659:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 660:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 661:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Check if PLLSAI is busy*/
 662:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(LL_RCC_PLLSAI_IsReady() != 0U)
 371              		.loc 1 662 0
 372 0014 13F0005F 		tst	r3, #536870912
 373 0018 00D0     		beq	.L30
 663:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 664:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* PLLSAI1 configuration cannot be modified */
 665:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = ERROR;
 374              		.loc 1 665 0
 375 001a 0020     		movs	r0, #0
 376              	.LVL29:
 377              	.L30:
 378              	.LBB68:
 379              	.LBB69:
3723:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 380              		.loc 4 3723 0
 381 001c 034B     		ldr	r3, .L35
 382 001e 1B68     		ldr	r3, [r3]
 383              	.LBE69:
 384              	.LBE68:
 666:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 667:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Check if PLLI2S is busy*/
 668:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(LL_RCC_PLLI2S_IsReady() != 0U)
 385              		.loc 1 668 0
 386 0020 13F0006F 		tst	r3, #134217728
 387 0024 00D0     		beq	.L31
 669:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 670:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* PLLI2S configuration cannot be modified */
 671:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = ERROR;
 388              		.loc 1 671 0
 389 0026 0020     		movs	r0, #0
 390              	.LVL30:
 391              	.L31:
 672:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 673:HALLIB/Src/stm32f7xx_ll_utils.c ****   return status;
 674:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 392              		.loc 1 674 0
 393 0028 7047     		bx	lr
 394              	.L36:
 395 002a 00BF     		.align	2
 396              	.L35:
 397 002c 00380240 		.word	1073887232
 398              		.cfi_endproc
 399              	.LFE407:
 401              		.section	.text.LL_Init1msTick,"ax",%progbits
 402              		.align	2
 403              		.global	LL_Init1msTick
 404              		.thumb
 405              		.thumb_func
 407              	LL_Init1msTick:
 408              	.LFB400:
 237:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Use frequency provided in argument */
 409              		.loc 1 237 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQYuIjq.s 			page 116


 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414              	.LVL31:
 415              	.LBB70:
 416              	.LBB71:
 417              		.file 5 "HALLIB/Inc/stm32f7xx_ll_utils.h"
   1:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
   2:HALLIB/Inc/stm32f7xx_ll_utils.h ****   ******************************************************************************
   3:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @file    stm32f7xx_ll_utils.h
   4:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @author  MCD Application Team
   5:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief   Header file of UTILS LL module.
   6:HALLIB/Inc/stm32f7xx_ll_utils.h ****   @verbatim
   7:HALLIB/Inc/stm32f7xx_ll_utils.h ****   ==============================================================================
   8:HALLIB/Inc/stm32f7xx_ll_utils.h ****                      ##### How to use this driver #####
   9:HALLIB/Inc/stm32f7xx_ll_utils.h ****   ==============================================================================
  10:HALLIB/Inc/stm32f7xx_ll_utils.h ****     [..]
  11:HALLIB/Inc/stm32f7xx_ll_utils.h ****     The LL UTILS driver contains a set of generic APIs that can be
  12:HALLIB/Inc/stm32f7xx_ll_utils.h ****     used by user:
  13:HALLIB/Inc/stm32f7xx_ll_utils.h ****       (+) Device electronic signature
  14:HALLIB/Inc/stm32f7xx_ll_utils.h ****       (+) Timing functions
  15:HALLIB/Inc/stm32f7xx_ll_utils.h ****       (+) PLL configuration functions
  16:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  17:HALLIB/Inc/stm32f7xx_ll_utils.h ****   @endverbatim
  18:HALLIB/Inc/stm32f7xx_ll_utils.h ****   ******************************************************************************
  19:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @attention
  20:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *
  21:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  22:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *
  23:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * Redistribution and use in source and binary forms, with or without modification,
  24:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * are permitted provided that the following conditions are met:
  25:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  26:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *      this list of conditions and the following disclaimer.
  27:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  28:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *      this list of conditions and the following disclaimer in the documentation
  29:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *      and/or other materials provided with the distribution.
  30:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  31:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *      may be used to endorse or promote products derived from this software
  32:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *      without specific prior written permission.
  33:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *
  34:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  37:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  38:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  39:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  40:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  41:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  42:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  43:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *
  45:HALLIB/Inc/stm32f7xx_ll_utils.h ****   ******************************************************************************
  46:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
  47:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  48:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  49:HALLIB/Inc/stm32f7xx_ll_utils.h **** #ifndef __STM32F7xx_LL_UTILS_H
  50:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define __STM32F7xx_LL_UTILS_H
  51:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
ARM GAS  /tmp/ccQYuIjq.s 			page 117


  52:HALLIB/Inc/stm32f7xx_ll_utils.h **** #ifdef __cplusplus
  53:HALLIB/Inc/stm32f7xx_ll_utils.h **** extern "C" {
  54:HALLIB/Inc/stm32f7xx_ll_utils.h **** #endif
  55:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  56:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Includes ------------------------------------------------------------------*/
  57:HALLIB/Inc/stm32f7xx_ll_utils.h **** #include "stm32f7xx.h"
  58:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  59:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @addtogroup STM32F7xx_LL_Driver
  60:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
  61:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
  62:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  63:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_LL UTILS
  64:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
  65:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
  66:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  67:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Private types -------------------------------------------------------------*/
  68:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Private variables ---------------------------------------------------------*/
  69:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  70:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Private constants ---------------------------------------------------------*/
  71:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_LL_Private_Constants UTILS Private Constants
  72:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
  73:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
  74:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  75:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Max delay can be used in LL_mDelay */
  76:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_MAX_DELAY                  0xFFFFFFFFU
  77:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  78:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
  79:HALLIB/Inc/stm32f7xx_ll_utils.h ****  * @brief Unique device ID register base address
  80:HALLIB/Inc/stm32f7xx_ll_utils.h ****  */
  81:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define UID_BASE_ADDRESS              UID_BASE
  82:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  83:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
  84:HALLIB/Inc/stm32f7xx_ll_utils.h ****  * @brief Flash size data register base address
  85:HALLIB/Inc/stm32f7xx_ll_utils.h ****  */
  86:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define FLASHSIZE_BASE_ADDRESS        FLASHSIZE_BASE
  87:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  88:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
  89:HALLIB/Inc/stm32f7xx_ll_utils.h ****  * @brief Package data register base address
  90:HALLIB/Inc/stm32f7xx_ll_utils.h ****  */
  91:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define PACKAGE_BASE_ADDRESS          PACKAGE_BASE
  92:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  93:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
  94:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @}
  95:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
  96:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
  97:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Private macros ------------------------------------------------------------*/
  98:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_LL_Private_Macros UTILS Private Macros
  99:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
 100:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 101:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 102:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @}
 103:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 104:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Exported types ------------------------------------------------------------*/
 105:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_LL_ES_INIT UTILS Exported structures
 106:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
 107:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 108:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
ARM GAS  /tmp/ccQYuIjq.s 			page 118


 109:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief  UTILS PLL structure definition
 110:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 111:HALLIB/Inc/stm32f7xx_ll_utils.h **** typedef struct
 112:HALLIB/Inc/stm32f7xx_ll_utils.h **** {
 113:HALLIB/Inc/stm32f7xx_ll_utils.h ****   uint32_t PLLM;   /*!< Division factor for PLL VCO input clock.
 114:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         This parameter can be a value of @ref RCC_LL_EC_PLLM_DIV
 115:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 116:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         This feature can be modified afterwards using unitary function
 117:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         @ref LL_RCC_PLL_ConfigDomain_SYS(). */
 118:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 119:HALLIB/Inc/stm32f7xx_ll_utils.h ****   uint32_t PLLN;   /*!< Multiplication factor for PLL VCO output clock.
 120:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         This parameter must be a number between Min_Data = 50 and Max_Data = 432
 121:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 122:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         This feature can be modified afterwards using unitary function
 123:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         @ref LL_RCC_PLL_ConfigDomain_SYS(). */
 124:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 125:HALLIB/Inc/stm32f7xx_ll_utils.h ****   uint32_t PLLP;   /*!< Division for the main system clock.
 126:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         This parameter can be a value of @ref RCC_LL_EC_PLLP_DIV
 127:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 128:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         This feature can be modified afterwards using unitary function
 129:HALLIB/Inc/stm32f7xx_ll_utils.h ****                         @ref LL_RCC_PLL_ConfigDomain_SYS(). */
 130:HALLIB/Inc/stm32f7xx_ll_utils.h **** } LL_UTILS_PLLInitTypeDef;
 131:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 132:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 133:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief  UTILS System, AHB and APB buses clock configuration structure definition
 134:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 135:HALLIB/Inc/stm32f7xx_ll_utils.h **** typedef struct
 136:HALLIB/Inc/stm32f7xx_ll_utils.h **** {
 137:HALLIB/Inc/stm32f7xx_ll_utils.h ****   uint32_t AHBCLKDivider;         /*!< The AHB clock (HCLK) divider. This clock is derived from the
 138:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        This parameter can be a value of @ref RCC_LL_EC_SYSCLK_DIV
 139:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 140:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        This feature can be modified afterwards using unitary functi
 141:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        @ref LL_RCC_SetAHBPrescaler(). */
 142:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 143:HALLIB/Inc/stm32f7xx_ll_utils.h ****   uint32_t APB1CLKDivider;        /*!< The APB1 clock (PCLK1) divider. This clock is derived from t
 144:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        This parameter can be a value of @ref RCC_LL_EC_APB1_DIV
 145:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 146:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        This feature can be modified afterwards using unitary functi
 147:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        @ref LL_RCC_SetAPB1Prescaler(). */
 148:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 149:HALLIB/Inc/stm32f7xx_ll_utils.h ****   uint32_t APB2CLKDivider;        /*!< The APB2 clock (PCLK2) divider. This clock is derived from t
 150:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        This parameter can be a value of @ref RCC_LL_EC_APB2_DIV
 151:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 152:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        This feature can be modified afterwards using unitary functi
 153:HALLIB/Inc/stm32f7xx_ll_utils.h ****                                        @ref LL_RCC_SetAPB2Prescaler(). */
 154:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 155:HALLIB/Inc/stm32f7xx_ll_utils.h **** } LL_UTILS_ClkInitTypeDef;
 156:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 157:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 158:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @}
 159:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 160:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 161:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Exported constants --------------------------------------------------------*/
 162:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_LL_Exported_Constants UTILS Exported Constants
 163:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
 164:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 165:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
ARM GAS  /tmp/ccQYuIjq.s 			page 119


 166:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_EC_HSE_BYPASS HSE Bypass activation
 167:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
 168:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 169:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_HSEBYPASS_OFF        0x00000000U       /*!< HSE Bypass is not enabled             
 170:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_HSEBYPASS_ON         0x00000001U       /*!< HSE Bypass is enabled                 
 171:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 172:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @}
 173:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 174:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 175:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_EC_PACKAGETYPE PACKAGE TYPE
 176:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
 177:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 178:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_PACKAGETYPE_LQFP100                    0x00000100U /*!< LQFP100 package type      
 179:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_PACKAGETYPE_LQFP144_WLCSP143           0x00000200U /*!< LQFP144 or WLCSP143 packag
 180:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_PACKAGETYPE_WLCSP180_LQFP176_UFBGA176  0x00000300U /*!< WLCSP180, LQFP176 or UFBGA
 181:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_PACKAGETYPE_LQFP176_LQFP208_TFBGA216   0x00000400U /*!< LQFP176, LQFP208 or TFBGA2
 182:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_PACKAGETYPE_TFBGA216_LQFP176_LQFP208   0x00000500U /*!< LQFP176, LQFP208 or TFBGA2
 183:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_PACKAGETYPE_LQFP176_TFBGA216_LQFP208   0x00000600U /*!< LQFP176, LQFP208 or TFBGA2
 184:HALLIB/Inc/stm32f7xx_ll_utils.h **** #define LL_UTILS_PACKAGETYPE_LQFP208_LQFP176_TFBGA216   0x00000700U /*!< LQFP176, LQFP208 or TFBGA2
 185:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 186:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @}
 187:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 188:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 189:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 190:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @}
 191:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 192:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 193:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Exported macro ------------------------------------------------------------*/
 194:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 195:HALLIB/Inc/stm32f7xx_ll_utils.h **** /* Exported functions --------------------------------------------------------*/
 196:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_LL_Exported_Functions UTILS Exported Functions
 197:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
 198:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 199:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 200:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_EF_DEVICE_ELECTRONIC_SIGNATURE DEVICE ELECTRONIC SIGNATURE
 201:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
 202:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 203:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 204:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 205:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief  Get Word0 of the unique device identifier (UID based on 96 bits)
 206:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @retval UID[31:0]
 207:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 208:HALLIB/Inc/stm32f7xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetUID_Word0(void)
 209:HALLIB/Inc/stm32f7xx_ll_utils.h **** {
 210:HALLIB/Inc/stm32f7xx_ll_utils.h ****   return (uint32_t)(READ_REG(*((uint32_t *)UID_BASE_ADDRESS)));
 211:HALLIB/Inc/stm32f7xx_ll_utils.h **** }
 212:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 213:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 214:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief  Get Word1 of the unique device identifier (UID based on 96 bits)
 215:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @retval UID[63:32]
 216:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 217:HALLIB/Inc/stm32f7xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetUID_Word1(void)
 218:HALLIB/Inc/stm32f7xx_ll_utils.h **** {
 219:HALLIB/Inc/stm32f7xx_ll_utils.h ****   return (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE_ADDRESS + 4U))));
 220:HALLIB/Inc/stm32f7xx_ll_utils.h **** }
 221:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 222:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
ARM GAS  /tmp/ccQYuIjq.s 			page 120


 223:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief  Get Word2 of the unique device identifier (UID based on 96 bits)
 224:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @retval UID[95:64]
 225:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 226:HALLIB/Inc/stm32f7xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetUID_Word2(void)
 227:HALLIB/Inc/stm32f7xx_ll_utils.h **** {
 228:HALLIB/Inc/stm32f7xx_ll_utils.h ****   return (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE_ADDRESS + 8U))));
 229:HALLIB/Inc/stm32f7xx_ll_utils.h **** }
 230:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 231:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 232:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief  Get Flash memory size
 233:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @note   This bitfield indicates the size of the device Flash memory expressed in
 234:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *         Kbytes. As an example, 0x040 corresponds to 64 Kbytes.
 235:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @retval FLASH_SIZE[15:0]: Flash memory size
 236:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 237:HALLIB/Inc/stm32f7xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetFlashSize(void)
 238:HALLIB/Inc/stm32f7xx_ll_utils.h **** {
 239:HALLIB/Inc/stm32f7xx_ll_utils.h ****   return (uint32_t)(READ_REG(*((uint32_t *)FLASHSIZE_BASE_ADDRESS)) & 0xFFFFU);
 240:HALLIB/Inc/stm32f7xx_ll_utils.h **** }
 241:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 242:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 243:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief  Get Package type
 244:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @retval Returned value can be one of the following values:
 245:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *         @arg @ref LL_UTILS_PACKAGETYPE_LQFP100
 246:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *         @arg @ref LL_UTILS_PACKAGETYPE_LQFP144_WLCSP143 (*)
 247:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *         @arg @ref LL_UTILS_PACKAGETYPE_WLCSP180_LQFP176_UFBGA176 (*)
 248:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *         @arg @ref LL_UTILS_PACKAGETYPE_LQFP176_LQFP208_TFBGA216 (*)
 249:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *
 250:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *         (*) value not defined in all devices.
 251:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 252:HALLIB/Inc/stm32f7xx_ll_utils.h **** __STATIC_INLINE uint32_t LL_GetPackageType(void)
 253:HALLIB/Inc/stm32f7xx_ll_utils.h **** {
 254:HALLIB/Inc/stm32f7xx_ll_utils.h ****   return (uint32_t)(READ_REG(*((uint32_t *)PACKAGE_BASE_ADDRESS)) & 0x0700U);
 255:HALLIB/Inc/stm32f7xx_ll_utils.h **** }
 256:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 257:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 258:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @}
 259:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 260:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 261:HALLIB/Inc/stm32f7xx_ll_utils.h **** /** @defgroup UTILS_LL_EF_DELAY DELAY
 262:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @{
 263:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 264:HALLIB/Inc/stm32f7xx_ll_utils.h **** 
 265:HALLIB/Inc/stm32f7xx_ll_utils.h **** /**
 266:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @brief  This function configures the Cortex-M SysTick source of the time base.
 267:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @param  HCLKFrequency HCLK frequency in Hz (can be calculated thanks to RCC helper macro)
 268:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @note   When a RTOS is used, it is recommended to avoid changing the SysTick 
 269:HALLIB/Inc/stm32f7xx_ll_utils.h ****   *         configuration by calling this function, for a delay use rather osDelay RTOS service.
 270:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @param  Ticks Number of ticks
 271:HALLIB/Inc/stm32f7xx_ll_utils.h ****   * @retval None
 272:HALLIB/Inc/stm32f7xx_ll_utils.h ****   */
 273:HALLIB/Inc/stm32f7xx_ll_utils.h **** __STATIC_INLINE void LL_InitTick(uint32_t HCLKFrequency, uint32_t Ticks)
 274:HALLIB/Inc/stm32f7xx_ll_utils.h **** {
 275:HALLIB/Inc/stm32f7xx_ll_utils.h ****   /* Configure the SysTick to have interrupt in 1ms time base */
 276:HALLIB/Inc/stm32f7xx_ll_utils.h ****   SysTick->LOAD  = (uint32_t)((HCLKFrequency / Ticks) - 1UL);  /* set reload register */
 418              		.loc 5 276 0
 419 0000 054B     		ldr	r3, .L38
 420 0002 A3FB0030 		umull	r3, r0, r3, r0
ARM GAS  /tmp/ccQYuIjq.s 			page 121


 421              	.LVL32:
 422 0006 8009     		lsrs	r0, r0, #6
 423 0008 0138     		subs	r0, r0, #1
 424 000a 044B     		ldr	r3, .L38+4
 425 000c 5860     		str	r0, [r3, #4]
 277:HALLIB/Inc/stm32f7xx_ll_utils.h ****   SysTick->VAL   = 0UL;                                       /* Load the SysTick Counter Value */
 426              		.loc 5 277 0
 427 000e 0022     		movs	r2, #0
 428 0010 9A60     		str	r2, [r3, #8]
 278:HALLIB/Inc/stm32f7xx_ll_utils.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 429              		.loc 5 278 0
 430 0012 0522     		movs	r2, #5
 431 0014 1A60     		str	r2, [r3]
 432              	.LVL33:
 433 0016 7047     		bx	lr
 434              	.L39:
 435              		.align	2
 436              	.L38:
 437 0018 D34D6210 		.word	274877907
 438 001c 10E000E0 		.word	-536813552
 439              	.LBE71:
 440              	.LBE70:
 441              		.cfi_endproc
 442              	.LFE400:
 444              		.section	.text.LL_mDelay,"ax",%progbits
 445              		.align	2
 446              		.global	LL_mDelay
 447              		.thumb
 448              		.thumb_func
 450              	LL_mDelay:
 451              	.LFB401:
 253:HALLIB/Src/stm32f7xx_ll_utils.c ****   __IO uint32_t  tmp = SysTick->CTRL;  /* Clear the COUNTFLAG first */
 452              		.loc 1 253 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL34:
 458 0000 82B0     		sub	sp, sp, #8
 459              	.LCFI0:
 460              		.cfi_def_cfa_offset 8
 254:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Add this code to indicate that local variable is not used */
 461              		.loc 1 254 0
 462 0002 094B     		ldr	r3, .L46
 463 0004 1B68     		ldr	r3, [r3]
 464 0006 0193     		str	r3, [sp, #4]
 256:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 465              		.loc 1 256 0
 466 0008 019B     		ldr	r3, [sp, #4]
 259:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 467              		.loc 1 259 0
 468 000a B0F1FF3F 		cmp	r0, #-1
 469 000e 07D0     		beq	.L43
 261:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 470              		.loc 1 261 0
 471 0010 0130     		adds	r0, r0, #1
 472              	.LVL35:
ARM GAS  /tmp/ccQYuIjq.s 			page 122


 473 0012 05E0     		b	.L43
 474              	.L44:
 266:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 475              		.loc 1 266 0
 476 0014 044B     		ldr	r3, .L46
 477 0016 1B68     		ldr	r3, [r3]
 478 0018 13F4803F 		tst	r3, #65536
 479 001c 00D0     		beq	.L43
 268:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 480              		.loc 1 268 0
 481 001e 0138     		subs	r0, r0, #1
 482              	.LVL36:
 483              	.L43:
 264:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 484              		.loc 1 264 0
 485 0020 0028     		cmp	r0, #0
 486 0022 F7D1     		bne	.L44
 271:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 487              		.loc 1 271 0
 488 0024 02B0     		add	sp, sp, #8
 489              	.LCFI1:
 490              		.cfi_def_cfa_offset 0
 491              		@ sp needed
 492 0026 7047     		bx	lr
 493              	.L47:
 494              		.align	2
 495              	.L46:
 496 0028 10E000E0 		.word	-536813552
 497              		.cfi_endproc
 498              	.LFE401:
 500              		.section	.text.LL_SetSystemCoreClock,"ax",%progbits
 501              		.align	2
 502              		.global	LL_SetSystemCoreClock
 503              		.thumb
 504              		.thumb_func
 506              	LL_SetSystemCoreClock:
 507              	.LFB402:
 330:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* HCLK clock frequency */
 508              		.loc 1 330 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513              	.LVL37:
 332:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 514              		.loc 1 332 0
 515 0000 014B     		ldr	r3, .L49
 516 0002 1860     		str	r0, [r3]
 517 0004 7047     		bx	lr
 518              	.L50:
 519 0006 00BF     		.align	2
 520              	.L49:
 521 0008 00000000 		.word	SystemCoreClock
 522              		.cfi_endproc
 523              	.LFE402:
 525              		.section	.text.UTILS_EnablePLLAndSwitchSystem,"ax",%progbits
 526              		.align	2
ARM GAS  /tmp/ccQYuIjq.s 			page 123


 527              		.thumb
 528              		.thumb_func
 530              	UTILS_EnablePLLAndSwitchSystem:
 531              	.LFB408:
 675:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 676:HALLIB/Src/stm32f7xx_ll_utils.c **** /**
 677:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @brief  Function to enable PLL and switch system clock to PLL
 678:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  SYSCLK_Frequency SYSCLK frequency
 679:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @param  UTILS_ClkInitStruct pointer to a @ref LL_UTILS_ClkInitTypeDef structure that contains
 680:HALLIB/Src/stm32f7xx_ll_utils.c ****   *                             the configuration information for the BUS prescalers.
 681:HALLIB/Src/stm32f7xx_ll_utils.c ****   * @retval An ErrorStatus enumeration value:
 682:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - SUCCESS: No problem to switch system to PLL
 683:HALLIB/Src/stm32f7xx_ll_utils.c ****   *          - ERROR: Problem to switch system to PLL
 684:HALLIB/Src/stm32f7xx_ll_utils.c ****   */
 685:HALLIB/Src/stm32f7xx_ll_utils.c **** static ErrorStatus UTILS_EnablePLLAndSwitchSystem(uint32_t SYSCLK_Frequency, LL_UTILS_ClkInitTypeDe
 686:HALLIB/Src/stm32f7xx_ll_utils.c **** {
 532              		.loc 1 686 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              	.LVL38:
 537 0000 70B5     		push	{r4, r5, r6, lr}
 538              	.LCFI2:
 539              		.cfi_def_cfa_offset 16
 540              		.cfi_offset 4, -16
 541              		.cfi_offset 5, -12
 542              		.cfi_offset 6, -8
 543              		.cfi_offset 14, -4
 544 0002 0E46     		mov	r6, r1
 545              	.LVL39:
 687:HALLIB/Src/stm32f7xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 688:HALLIB/Src/stm32f7xx_ll_utils.c ****   uint32_t hclk_frequency = 0U;
 689:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 690:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_SYSCLK_DIV(UTILS_ClkInitStruct->AHBCLKDivider));
 691:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_APB1_DIV(UTILS_ClkInitStruct->APB1CLKDivider));
 692:HALLIB/Src/stm32f7xx_ll_utils.c ****   assert_param(IS_LL_UTILS_APB2_DIV(UTILS_ClkInitStruct->APB2CLKDivider));
 693:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 694:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Calculate HCLK frequency */
 695:HALLIB/Src/stm32f7xx_ll_utils.c ****   hclk_frequency = __LL_RCC_CALC_HCLK_FREQ(SYSCLK_Frequency, UTILS_ClkInitStruct->AHBCLKDivider);
 546              		.loc 1 695 0
 547 0004 0B68     		ldr	r3, [r1]
 548 0006 C3F30313 		ubfx	r3, r3, #4, #4
 549 000a 244A     		ldr	r2, .L60
 550 000c D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 551 000e 20FA04F4 		lsr	r4, r0, r4
 552              	.LVL40:
 696:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 697:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 698:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(SystemCoreClock < hclk_frequency)
 553              		.loc 1 698 0
 554 0012 234B     		ldr	r3, .L60+4
 555 0014 1B68     		ldr	r3, [r3]
 556 0016 9C42     		cmp	r4, r3
 557 0018 04D9     		bls	.L58
 699:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 700:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Set FLASH latency to highest latency */
 701:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = UTILS_SetFlashLatency(hclk_frequency);
ARM GAS  /tmp/ccQYuIjq.s 			page 124


 558              		.loc 1 701 0
 559 001a 2046     		mov	r0, r4
 560              	.LVL41:
 561 001c FFF7FEFF 		bl	UTILS_SetFlashLatency
 562              	.LVL42:
 563 0020 0546     		mov	r5, r0
 564              	.LVL43:
 565 0022 00E0     		b	.L52
 566              	.LVL44:
 567              	.L58:
 687:HALLIB/Src/stm32f7xx_ll_utils.c ****   uint32_t hclk_frequency = 0U;
 568              		.loc 1 687 0
 569 0024 0125     		movs	r5, #1
 570              	.LVL45:
 571              	.L52:
 702:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 703:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 704:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Update system clock configuration */
 705:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(status == SUCCESS)
 572              		.loc 1 705 0
 573 0026 012D     		cmp	r5, #1
 574 0028 29D1     		bne	.L53
 575              	.LBB72:
 576              	.LBB73:
3144:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 577              		.loc 4 3144 0
 578 002a 1E4A     		ldr	r2, .L60+8
 579 002c 1368     		ldr	r3, [r2]
 580 002e 43F08073 		orr	r3, r3, #16777216
 581 0032 1360     		str	r3, [r2]
 582              	.L54:
 583              	.LBE73:
 584              	.LBE72:
 585              	.LBB74:
 586              	.LBB75:
3165:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 587              		.loc 4 3165 0 discriminator 1
 588 0034 1B4B     		ldr	r3, .L60+8
 589 0036 1B68     		ldr	r3, [r3]
 590              	.LBE75:
 591              	.LBE74:
 706:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 707:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Enable PLL */
 708:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_RCC_PLL_Enable();
 709:HALLIB/Src/stm32f7xx_ll_utils.c ****     while (LL_RCC_PLL_IsReady() != 1U)
 592              		.loc 1 709 0 discriminator 1
 593 0038 13F0007F 		tst	r3, #33554432
 594 003c FAD0     		beq	.L54
 710:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 711:HALLIB/Src/stm32f7xx_ll_utils.c ****       /* Wait for PLL ready */
 712:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 713:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 714:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Sysclk activation on the main PLL */
 715:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_RCC_SetAHBPrescaler(UTILS_ClkInitStruct->AHBCLKDivider);
 595              		.loc 1 715 0
 596 003e 3168     		ldr	r1, [r6]
 597              	.LVL46:
ARM GAS  /tmp/ccQYuIjq.s 			page 125


 598              	.LBB76:
 599              	.LBB77:
2259:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 600              		.loc 4 2259 0
 601 0040 184A     		ldr	r2, .L60+8
 602 0042 9368     		ldr	r3, [r2, #8]
 603 0044 23F0F003 		bic	r3, r3, #240
 604 0048 0B43     		orrs	r3, r3, r1
 605 004a 9360     		str	r3, [r2, #8]
 606              	.LVL47:
 607              	.LBE77:
 608              	.LBE76:
 609              	.LBB78:
 610              	.LBB79:
2226:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 611              		.loc 4 2226 0
 612 004c 9368     		ldr	r3, [r2, #8]
 613 004e 23F00303 		bic	r3, r3, #3
 614 0052 43F00203 		orr	r3, r3, #2
 615 0056 9360     		str	r3, [r2, #8]
 616              	.L55:
 617              	.LBE79:
 618              	.LBE78:
 619              	.LBB80:
 620              	.LBB81:
2239:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 621              		.loc 4 2239 0 discriminator 1
 622 0058 124B     		ldr	r3, .L60+8
 623 005a 9B68     		ldr	r3, [r3, #8]
 624 005c 03F00C03 		and	r3, r3, #12
 625              	.LBE81:
 626              	.LBE80:
 716:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 717:HALLIB/Src/stm32f7xx_ll_utils.c ****     while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 627              		.loc 1 717 0 discriminator 1
 628 0060 082B     		cmp	r3, #8
 629 0062 F9D1     		bne	.L55
 718:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 719:HALLIB/Src/stm32f7xx_ll_utils.c ****       /* Wait for system clock switch to PLL */
 720:HALLIB/Src/stm32f7xx_ll_utils.c ****     }
 721:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 722:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Set APB1 & APB2 prescaler*/
 723:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_RCC_SetAPB1Prescaler(UTILS_ClkInitStruct->APB1CLKDivider);
 630              		.loc 1 723 0
 631 0064 7168     		ldr	r1, [r6, #4]
 632              	.LVL48:
 633              	.LBB82:
 634              	.LBB83:
2275:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 635              		.loc 4 2275 0
 636 0066 0F4A     		ldr	r2, .L60+8
 637 0068 9368     		ldr	r3, [r2, #8]
 638 006a 23F4E053 		bic	r3, r3, #7168
 639 006e 0B43     		orrs	r3, r3, r1
 640 0070 9360     		str	r3, [r2, #8]
 641              	.LVL49:
 642              	.LBE83:
ARM GAS  /tmp/ccQYuIjq.s 			page 126


 643              	.LBE82:
 724:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_RCC_SetAPB2Prescaler(UTILS_ClkInitStruct->APB2CLKDivider);
 644              		.loc 1 724 0
 645 0072 B168     		ldr	r1, [r6, #8]
 646              	.LVL50:
 647              	.LBB84:
 648              	.LBB85:
2291:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 649              		.loc 4 2291 0
 650 0074 9368     		ldr	r3, [r2, #8]
 651 0076 23F46043 		bic	r3, r3, #57344
 652 007a 0B43     		orrs	r3, r3, r1
 653 007c 9360     		str	r3, [r2, #8]
 654              	.LVL51:
 655              	.L53:
 656              	.LBE85:
 657              	.LBE84:
 725:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 726:HALLIB/Src/stm32f7xx_ll_utils.c ****     
 727:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 728:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(SystemCoreClock > hclk_frequency)
 658              		.loc 1 728 0
 659 007e 084B     		ldr	r3, .L60+4
 660 0080 1B68     		ldr	r3, [r3]
 661 0082 9C42     		cmp	r4, r3
 662 0084 03D2     		bcs	.L56
 729:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 730:HALLIB/Src/stm32f7xx_ll_utils.c ****     /* Set FLASH latency to lowest latency */
 731:HALLIB/Src/stm32f7xx_ll_utils.c ****     status = UTILS_SetFlashLatency(hclk_frequency);
 663              		.loc 1 731 0
 664 0086 2046     		mov	r0, r4
 665 0088 FFF7FEFF 		bl	UTILS_SetFlashLatency
 666              	.LVL52:
 667 008c 0546     		mov	r5, r0
 668              	.LVL53:
 669              	.L56:
 732:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 733:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 734:HALLIB/Src/stm32f7xx_ll_utils.c ****   /* Update SystemCoreClock variable */
 735:HALLIB/Src/stm32f7xx_ll_utils.c ****   if(status == SUCCESS)
 670              		.loc 1 735 0
 671 008e 012D     		cmp	r5, #1
 672 0090 02D1     		bne	.L57
 736:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 737:HALLIB/Src/stm32f7xx_ll_utils.c ****     LL_SetSystemCoreClock(hclk_frequency);
 673              		.loc 1 737 0
 674 0092 2046     		mov	r0, r4
 675 0094 FFF7FEFF 		bl	LL_SetSystemCoreClock
 676              	.LVL54:
 677              	.L57:
 738:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 739:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 740:HALLIB/Src/stm32f7xx_ll_utils.c ****   return status;
 741:HALLIB/Src/stm32f7xx_ll_utils.c **** }
 678              		.loc 1 741 0
 679 0098 2846     		mov	r0, r5
 680 009a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccQYuIjq.s 			page 127


 681              	.LVL55:
 682              	.L61:
 683              		.align	2
 684              	.L60:
 685 009c 00000000 		.word	AHBPrescTable
 686 00a0 00000000 		.word	SystemCoreClock
 687 00a4 00380240 		.word	1073887232
 688              		.cfi_endproc
 689              	.LFE408:
 691              		.section	.text.LL_PLL_ConfigSystemClock_HSI,"ax",%progbits
 692              		.align	2
 693              		.global	LL_PLL_ConfigSystemClock_HSI
 694              		.thumb
 695              		.thumb_func
 697              	LL_PLL_ConfigSystemClock_HSI:
 698              	.LFB403:
 353:HALLIB/Src/stm32f7xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 699              		.loc 1 353 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              	.LVL56:
 704 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 705              	.LCFI3:
 706              		.cfi_def_cfa_offset 24
 707              		.cfi_offset 3, -24
 708              		.cfi_offset 4, -20
 709              		.cfi_offset 5, -16
 710              		.cfi_offset 6, -12
 711              		.cfi_offset 7, -8
 712              		.cfi_offset 14, -4
 713 0002 0446     		mov	r4, r0
 714 0004 0D46     		mov	r5, r1
 715              	.LVL57:
 358:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 716              		.loc 1 358 0
 717 0006 FFF7FEFF 		bl	UTILS_PLL_IsBusy
 718              	.LVL58:
 719 000a 0128     		cmp	r0, #1
 720 000c 22D1     		bne	.L66
 361:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 721              		.loc 1 361 0
 722 000e 2146     		mov	r1, r4
 723 0010 1148     		ldr	r0, .L68
 724 0012 FFF7FEFF 		bl	UTILS_GetPLLOutputFrequency
 725              	.LVL59:
 726              	.LBB86:
 727              	.LBB87:
2042:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 728              		.loc 4 2042 0
 729 0016 114B     		ldr	r3, .L68+4
 730 0018 1B68     		ldr	r3, [r3]
 731              	.LBE87:
 732              	.LBE86:
 364:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 733              		.loc 1 364 0
 734 001a 13F0020F 		tst	r3, #2
ARM GAS  /tmp/ccQYuIjq.s 			page 128


 735 001e 09D1     		bne	.L64
 736              	.LBB88:
 737              	.LBB89:
2022:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 738              		.loc 4 2022 0
 739 0020 0E4A     		ldr	r2, .L68+4
 740 0022 1368     		ldr	r3, [r2]
 741 0024 43F00103 		orr	r3, r3, #1
 742 0028 1360     		str	r3, [r2]
 743              	.L65:
 744              	.LBE89:
 745              	.LBE88:
 746              	.LBB90:
 747              	.LBB91:
2042:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 748              		.loc 4 2042 0 discriminator 1
 749 002a 0C4B     		ldr	r3, .L68+4
 750 002c 1B68     		ldr	r3, [r3]
 751              	.LBE91:
 752              	.LBE90:
 367:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 753              		.loc 1 367 0 discriminator 1
 754 002e 13F0020F 		tst	r3, #2
 755 0032 FAD0     		beq	.L65
 756              	.L64:
 374:HALLIB/Src/stm32f7xx_ll_utils.c ****                                 UTILS_PLLInitStruct->PLLP);
 757              		.loc 1 374 0
 758 0034 2268     		ldr	r2, [r4]
 759 0036 6668     		ldr	r6, [r4, #4]
 760 0038 A368     		ldr	r3, [r4, #8]
 761              	.LVL60:
 762              	.LBB92:
 763              	.LBB93:
3253:HALLIB/Inc/stm32f7xx_ll_rcc.h ****              Source | PLLM | PLLN << RCC_PLLCFGR_PLLN_Pos | PLLP);
 764              		.loc 4 3253 0
 765 003a 084C     		ldr	r4, .L68+4
 766              	.LVL61:
 767 003c 6768     		ldr	r7, [r4, #4]
 768 003e 0849     		ldr	r1, .L68+8
 769 0040 3940     		ands	r1, r1, r7
 770 0042 42EA8612 		orr	r2, r2, r6, lsl #6
 771              	.LVL62:
 772 0046 1343     		orrs	r3, r3, r2
 773              	.LVL63:
 774 0048 0B43     		orrs	r3, r3, r1
 775 004a 6360     		str	r3, [r4, #4]
 776              	.LVL64:
 777              	.LBE93:
 778              	.LBE92:
 378:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 779              		.loc 1 378 0
 780 004c 2946     		mov	r1, r5
 781 004e FFF7FEFF 		bl	UTILS_EnablePLLAndSwitchSystem
 782              	.LVL65:
 783 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 784              	.LVL66:
 785              	.L66:
ARM GAS  /tmp/ccQYuIjq.s 			page 129


 383:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 786              		.loc 1 383 0
 787 0054 0020     		movs	r0, #0
 788              	.LVL67:
 387:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 789              		.loc 1 387 0
 790 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 791              	.LVL68:
 792              	.L69:
 793              		.align	2
 794              	.L68:
 795 0058 0024F400 		.word	16000000
 796 005c 00380240 		.word	1073887232
 797 0060 0080BCFF 		.word	-4423680
 798              		.cfi_endproc
 799              	.LFE403:
 801              		.section	.text.LL_PLL_ConfigSystemClock_HSE,"ax",%progbits
 802              		.align	2
 803              		.global	LL_PLL_ConfigSystemClock_HSE
 804              		.thumb
 805              		.thumb_func
 807              	LL_PLL_ConfigSystemClock_HSE:
 808              	.LFB404:
 411:HALLIB/Src/stm32f7xx_ll_utils.c ****   ErrorStatus status = SUCCESS;
 809              		.loc 1 411 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              	.LVL69:
 814 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 815              	.LCFI4:
 816              		.cfi_def_cfa_offset 24
 817              		.cfi_offset 3, -24
 818              		.cfi_offset 4, -20
 819              		.cfi_offset 5, -16
 820              		.cfi_offset 6, -12
 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 823 0002 0646     		mov	r6, r0
 824 0004 0F46     		mov	r7, r1
 825 0006 1546     		mov	r5, r2
 826 0008 1C46     		mov	r4, r3
 827              	.LVL70:
 420:HALLIB/Src/stm32f7xx_ll_utils.c ****   {
 828              		.loc 1 420 0
 829 000a FFF7FEFF 		bl	UTILS_PLL_IsBusy
 830              	.LVL71:
 831 000e 0128     		cmp	r0, #1
 832 0010 31D1     		bne	.L76
 423:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 833              		.loc 1 423 0
 834 0012 2946     		mov	r1, r5
 835 0014 3046     		mov	r0, r6
 836 0016 FFF7FEFF 		bl	UTILS_GetPLLOutputFrequency
 837              	.LVL72:
 838              	.LBB94:
 839              	.LBB95:
ARM GAS  /tmp/ccQYuIjq.s 			page 130


2004:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 840              		.loc 4 2004 0
 841 001a 184B     		ldr	r3, .L78
 842 001c 1B68     		ldr	r3, [r3]
 843              	.LBE95:
 844              	.LBE94:
 426:HALLIB/Src/stm32f7xx_ll_utils.c ****     {
 845              		.loc 1 426 0
 846 001e 13F4003F 		tst	r3, #131072
 847 0022 16D1     		bne	.L72
 429:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
 848              		.loc 1 429 0
 849 0024 012F     		cmp	r7, #1
 850 0026 05D1     		bne	.L73
 851              	.LBB96:
 852              	.LBB97:
1964:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 853              		.loc 4 1964 0
 854 0028 144A     		ldr	r2, .L78
 855 002a 1368     		ldr	r3, [r2]
 856 002c 43F48023 		orr	r3, r3, #262144
 857 0030 1360     		str	r3, [r2]
 858 0032 04E0     		b	.L74
 859              	.L73:
 860              	.LBE97:
 861              	.LBE96:
 862              	.LBB98:
 863              	.LBB99:
1974:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 864              		.loc 4 1974 0
 865 0034 114A     		ldr	r2, .L78
 866 0036 1368     		ldr	r3, [r2]
 867 0038 23F48023 		bic	r3, r3, #262144
 868 003c 1360     		str	r3, [r2]
 869              	.L74:
 870              	.LBE99:
 871              	.LBE98:
 872              	.LBB100:
 873              	.LBB101:
1984:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 874              		.loc 4 1984 0
 875 003e 0F4A     		ldr	r2, .L78
 876 0040 1368     		ldr	r3, [r2]
 877 0042 43F48033 		orr	r3, r3, #65536
 878 0046 1360     		str	r3, [r2]
 879              	.L75:
 880              	.LBE101:
 881              	.LBE100:
 882              	.LBB102:
 883              	.LBB103:
2004:HALLIB/Inc/stm32f7xx_ll_rcc.h **** }
 884              		.loc 4 2004 0 discriminator 1
 885 0048 0C4B     		ldr	r3, .L78
 886 004a 1B68     		ldr	r3, [r3]
 887              	.LBE103:
 888              	.LBE102:
 440:HALLIB/Src/stm32f7xx_ll_utils.c ****       {
ARM GAS  /tmp/ccQYuIjq.s 			page 131


 889              		.loc 1 440 0 discriminator 1
 890 004c 13F4003F 		tst	r3, #131072
 891 0050 FAD0     		beq	.L75
 892              	.L72:
 447:HALLIB/Src/stm32f7xx_ll_utils.c ****                                 UTILS_PLLInitStruct->PLLP);
 893              		.loc 1 447 0
 894 0052 2A68     		ldr	r2, [r5]
 895 0054 6E68     		ldr	r6, [r5, #4]
 896              	.LVL73:
 897 0056 AB68     		ldr	r3, [r5, #8]
 898              	.LVL74:
 899              	.LBB104:
 900              	.LBB105:
3253:HALLIB/Inc/stm32f7xx_ll_rcc.h ****              Source | PLLM | PLLN << RCC_PLLCFGR_PLLN_Pos | PLLP);
 901              		.loc 4 3253 0
 902 0058 084D     		ldr	r5, .L78
 903              	.LVL75:
 904 005a 6F68     		ldr	r7, [r5, #4]
 905              	.LVL76:
 906 005c 0849     		ldr	r1, .L78+4
 907 005e 3940     		ands	r1, r1, r7
 908 0060 42F48002 		orr	r2, r2, #4194304
 909              	.LVL77:
 910 0064 42EA8612 		orr	r2, r2, r6, lsl #6
 911 0068 1343     		orrs	r3, r3, r2
 912              	.LVL78:
 913 006a 0B43     		orrs	r3, r3, r1
 914 006c 6B60     		str	r3, [r5, #4]
 915              	.LVL79:
 916              	.LBE105:
 917              	.LBE104:
 451:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 918              		.loc 1 451 0
 919 006e 2146     		mov	r1, r4
 920 0070 FFF7FEFF 		bl	UTILS_EnablePLLAndSwitchSystem
 921              	.LVL80:
 922 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 923              	.LVL81:
 924              	.L76:
 456:HALLIB/Src/stm32f7xx_ll_utils.c ****   }
 925              		.loc 1 456 0
 926 0076 0020     		movs	r0, #0
 927              	.LVL82:
 460:HALLIB/Src/stm32f7xx_ll_utils.c **** 
 928              		.loc 1 460 0
 929 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 930              	.LVL83:
 931              	.L79:
 932 007a 00BF     		.align	2
 933              	.L78:
 934 007c 00380240 		.word	1073887232
 935 0080 0080BCFF 		.word	-4423680
 936              		.cfi_endproc
 937              	.LFE404:
 939              		.text
 940              	.Letext0:
 941              		.file 6 "/opt/5.4.2016q3/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccQYuIjq.s 			page 132


 942              		.file 7 "/opt/5.4.2016q3/arm-none-eabi/include/sys/_stdint.h"
 943              		.file 8 "CORE/core_cm7.h"
 944              		.file 9 "Inc/stm32f767xx.h"
 945              		.file 10 "Inc/stm32f7xx.h"
 946              		.file 11 "Inc/system_stm32f7xx.h"
ARM GAS  /tmp/ccQYuIjq.s 			page 133


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_ll_utils.c
     /tmp/ccQYuIjq.s:21     .text.UTILS_SetFlashLatency:00000000 $t
     /tmp/ccQYuIjq.s:25     .text.UTILS_SetFlashLatency:00000000 UTILS_SetFlashLatency
     /tmp/ccQYuIjq.s:286    .text.UTILS_SetFlashLatency:00000130 $d
     /tmp/ccQYuIjq.s:298    .text.UTILS_GetPLLOutputFrequency:00000000 $t
     /tmp/ccQYuIjq.s:302    .text.UTILS_GetPLLOutputFrequency:00000000 UTILS_GetPLLOutputFrequency
     /tmp/ccQYuIjq.s:333    .text.UTILS_PLL_IsBusy:00000000 $t
     /tmp/ccQYuIjq.s:337    .text.UTILS_PLL_IsBusy:00000000 UTILS_PLL_IsBusy
     /tmp/ccQYuIjq.s:397    .text.UTILS_PLL_IsBusy:0000002c $d
     /tmp/ccQYuIjq.s:402    .text.LL_Init1msTick:00000000 $t
     /tmp/ccQYuIjq.s:407    .text.LL_Init1msTick:00000000 LL_Init1msTick
     /tmp/ccQYuIjq.s:437    .text.LL_Init1msTick:00000018 $d
     /tmp/ccQYuIjq.s:445    .text.LL_mDelay:00000000 $t
     /tmp/ccQYuIjq.s:450    .text.LL_mDelay:00000000 LL_mDelay
     /tmp/ccQYuIjq.s:496    .text.LL_mDelay:00000028 $d
     /tmp/ccQYuIjq.s:501    .text.LL_SetSystemCoreClock:00000000 $t
     /tmp/ccQYuIjq.s:506    .text.LL_SetSystemCoreClock:00000000 LL_SetSystemCoreClock
     /tmp/ccQYuIjq.s:521    .text.LL_SetSystemCoreClock:00000008 $d
     /tmp/ccQYuIjq.s:526    .text.UTILS_EnablePLLAndSwitchSystem:00000000 $t
     /tmp/ccQYuIjq.s:530    .text.UTILS_EnablePLLAndSwitchSystem:00000000 UTILS_EnablePLLAndSwitchSystem
     /tmp/ccQYuIjq.s:685    .text.UTILS_EnablePLLAndSwitchSystem:0000009c $d
     /tmp/ccQYuIjq.s:692    .text.LL_PLL_ConfigSystemClock_HSI:00000000 $t
     /tmp/ccQYuIjq.s:697    .text.LL_PLL_ConfigSystemClock_HSI:00000000 LL_PLL_ConfigSystemClock_HSI
     /tmp/ccQYuIjq.s:795    .text.LL_PLL_ConfigSystemClock_HSI:00000058 $d
     /tmp/ccQYuIjq.s:802    .text.LL_PLL_ConfigSystemClock_HSE:00000000 $t
     /tmp/ccQYuIjq.s:807    .text.LL_PLL_ConfigSystemClock_HSE:00000000 LL_PLL_ConfigSystemClock_HSE
     /tmp/ccQYuIjq.s:934    .text.LL_PLL_ConfigSystemClock_HSE:0000007c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
AHBPrescTable
