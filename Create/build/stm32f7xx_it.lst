ARM GAS  /tmp/ccyvQ5X7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f7xx_it.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	2
  22              		.global	NMI_Handler
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB136:
  28              		.file 1 "src/stm32f7xx_it.c"
   1:src/stm32f7xx_it.c **** /**
   2:src/stm32f7xx_it.c ****   ******************************************************************************
   3:src/stm32f7xx_it.c ****   * @file    Templates/Src/stm32f7xx.c
   4:src/stm32f7xx_it.c ****   * @author  MCD Application Team
   5:src/stm32f7xx_it.c ****   * @brief   Main Interrupt Service Routines.
   6:src/stm32f7xx_it.c ****   *          This file provides template for all exceptions handler and 
   7:src/stm32f7xx_it.c ****   *          peripherals interrupt service routine.
   8:src/stm32f7xx_it.c ****   ******************************************************************************
   9:src/stm32f7xx_it.c ****   * @attention
  10:src/stm32f7xx_it.c ****   *
  11:src/stm32f7xx_it.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  12:src/stm32f7xx_it.c ****   *
  13:src/stm32f7xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  14:src/stm32f7xx_it.c ****   * are permitted provided that the following conditions are met:
  15:src/stm32f7xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  16:src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer.
  17:src/stm32f7xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  18:src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  19:src/stm32f7xx_it.c ****   *      and/or other materials provided with the distribution.
  20:src/stm32f7xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  21:src/stm32f7xx_it.c ****   *      may be used to endorse or promote products derived from this software
  22:src/stm32f7xx_it.c ****   *      without specific prior written permission.
  23:src/stm32f7xx_it.c ****   *
  24:src/stm32f7xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:src/stm32f7xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:src/stm32f7xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  27:src/stm32f7xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  28:src/stm32f7xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  29:src/stm32f7xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  30:src/stm32f7xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccyvQ5X7.s 			page 2


  31:src/stm32f7xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  32:src/stm32f7xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  33:src/stm32f7xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:src/stm32f7xx_it.c ****   *
  35:src/stm32f7xx_it.c ****   ******************************************************************************
  36:src/stm32f7xx_it.c ****   */
  37:src/stm32f7xx_it.c **** 
  38:src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  39:src/stm32f7xx_it.c **** #include "main.h"
  40:src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  41:src/stm32f7xx_it.c ****    
  42:src/stm32f7xx_it.c **** /** @addtogroup STM32F7xx_HAL_Examples
  43:src/stm32f7xx_it.c ****   * @{
  44:src/stm32f7xx_it.c ****   */
  45:src/stm32f7xx_it.c **** 
  46:src/stm32f7xx_it.c **** /** @addtogroup Templates
  47:src/stm32f7xx_it.c ****   * @{
  48:src/stm32f7xx_it.c ****   */
  49:src/stm32f7xx_it.c **** 
  50:src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  51:src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  52:src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  53:src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  54:src/stm32f7xx_it.c **** 
  55:src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  56:src/stm32f7xx_it.c **** /* Private functions ---------------------------------------------------------*/
  57:src/stm32f7xx_it.c **** 
  58:src/stm32f7xx_it.c **** /******************************************************************************/
  59:src/stm32f7xx_it.c **** /*            Cortex-M7 Processor Exceptions Handlers                         */
  60:src/stm32f7xx_it.c **** /******************************************************************************/
  61:src/stm32f7xx_it.c **** 
  62:src/stm32f7xx_it.c **** /**
  63:src/stm32f7xx_it.c ****   * @brief   This function handles NMI exception.
  64:src/stm32f7xx_it.c ****   * @param  None
  65:src/stm32f7xx_it.c ****   * @retval None
  66:src/stm32f7xx_it.c ****   */
  67:src/stm32f7xx_it.c **** void NMI_Handler(void)
  68:src/stm32f7xx_it.c **** {
  29              		.loc 1 68 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE136:
  38 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	2
  40              		.global	HardFault_Handler
  41              		.thumb
  42              		.thumb_func
  44              	HardFault_Handler:
  45              	.LFB137:
  69:src/stm32f7xx_it.c **** }
  70:src/stm32f7xx_it.c **** 
  71:src/stm32f7xx_it.c **** /**
  72:src/stm32f7xx_it.c ****   * @brief  This function handles Hard Fault exception.
ARM GAS  /tmp/ccyvQ5X7.s 			page 3


  73:src/stm32f7xx_it.c ****   * @param  None
  74:src/stm32f7xx_it.c ****   * @retval None
  75:src/stm32f7xx_it.c ****   */
  76:src/stm32f7xx_it.c **** void HardFault_Handler(void)
  77:src/stm32f7xx_it.c **** {
  46              		.loc 1 77 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE137:
  57 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	2
  59              		.global	MemManage_Handler
  60              		.thumb
  61              		.thumb_func
  63              	MemManage_Handler:
  64              	.LFB138:
  78:src/stm32f7xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  79:src/stm32f7xx_it.c ****   while (1)
  80:src/stm32f7xx_it.c ****   {
  81:src/stm32f7xx_it.c ****   }
  82:src/stm32f7xx_it.c **** }
  83:src/stm32f7xx_it.c **** 
  84:src/stm32f7xx_it.c **** /**
  85:src/stm32f7xx_it.c ****   * @brief  This function handles Memory Manage exception.
  86:src/stm32f7xx_it.c ****   * @param  None
  87:src/stm32f7xx_it.c ****   * @retval None
  88:src/stm32f7xx_it.c ****   */
  89:src/stm32f7xx_it.c **** void MemManage_Handler(void)
  90:src/stm32f7xx_it.c **** {
  65              		.loc 1 90 0
  66              		.cfi_startproc
  67              		@ Volatile: function does not return.
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.L5:
  72 0000 FEE7     		b	.L5
  73              		.cfi_endproc
  74              	.LFE138:
  76 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  77              		.align	2
  78              		.global	BusFault_Handler
  79              		.thumb
  80              		.thumb_func
  82              	BusFault_Handler:
  83              	.LFB139:
  91:src/stm32f7xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  92:src/stm32f7xx_it.c ****   while (1)
  93:src/stm32f7xx_it.c ****   {
  94:src/stm32f7xx_it.c ****   }
  95:src/stm32f7xx_it.c **** }
ARM GAS  /tmp/ccyvQ5X7.s 			page 4


  96:src/stm32f7xx_it.c **** 
  97:src/stm32f7xx_it.c **** /**
  98:src/stm32f7xx_it.c ****   * @brief  This function handles Bus Fault exception.
  99:src/stm32f7xx_it.c ****   * @param  None
 100:src/stm32f7xx_it.c ****   * @retval None
 101:src/stm32f7xx_it.c ****   */
 102:src/stm32f7xx_it.c **** void BusFault_Handler(void)
 103:src/stm32f7xx_it.c **** {
  84              		.loc 1 103 0
  85              		.cfi_startproc
  86              		@ Volatile: function does not return.
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.L7:
  91 0000 FEE7     		b	.L7
  92              		.cfi_endproc
  93              	.LFE139:
  95 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  96              		.align	2
  97              		.global	UsageFault_Handler
  98              		.thumb
  99              		.thumb_func
 101              	UsageFault_Handler:
 102              	.LFB140:
 104:src/stm32f7xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
 105:src/stm32f7xx_it.c ****   while (1)
 106:src/stm32f7xx_it.c ****   {
 107:src/stm32f7xx_it.c ****   }
 108:src/stm32f7xx_it.c **** }
 109:src/stm32f7xx_it.c **** 
 110:src/stm32f7xx_it.c **** /**
 111:src/stm32f7xx_it.c ****   * @brief  This function handles Usage Fault exception.
 112:src/stm32f7xx_it.c ****   * @param  None
 113:src/stm32f7xx_it.c ****   * @retval None
 114:src/stm32f7xx_it.c ****   */
 115:src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 116:src/stm32f7xx_it.c **** {
 103              		.loc 1 116 0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.L9:
 110 0000 FEE7     		b	.L9
 111              		.cfi_endproc
 112              	.LFE140:
 114 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 115              		.align	2
 116              		.global	SVC_Handler
 117              		.thumb
 118              		.thumb_func
 120              	SVC_Handler:
 121              	.LFB141:
 117:src/stm32f7xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 118:src/stm32f7xx_it.c ****   while (1)
ARM GAS  /tmp/ccyvQ5X7.s 			page 5


 119:src/stm32f7xx_it.c ****   {
 120:src/stm32f7xx_it.c ****   }
 121:src/stm32f7xx_it.c **** }
 122:src/stm32f7xx_it.c **** 
 123:src/stm32f7xx_it.c **** /**
 124:src/stm32f7xx_it.c ****   * @brief  This function handles SVCall exception.
 125:src/stm32f7xx_it.c ****   * @param  None
 126:src/stm32f7xx_it.c ****   * @retval None
 127:src/stm32f7xx_it.c ****   */
 128:src/stm32f7xx_it.c **** void SVC_Handler(void)
 129:src/stm32f7xx_it.c **** {
 122              		.loc 1 129 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127 0000 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE141:
 131 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 132              		.align	2
 133              		.global	DebugMon_Handler
 134              		.thumb
 135              		.thumb_func
 137              	DebugMon_Handler:
 138              	.LFB142:
 130:src/stm32f7xx_it.c **** }
 131:src/stm32f7xx_it.c **** 
 132:src/stm32f7xx_it.c **** /**
 133:src/stm32f7xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 134:src/stm32f7xx_it.c ****   * @param  None
 135:src/stm32f7xx_it.c ****   * @retval None
 136:src/stm32f7xx_it.c ****   */
 137:src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 138:src/stm32f7xx_it.c **** {
 139              		.loc 1 138 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0000 7047     		bx	lr
 145              		.cfi_endproc
 146              	.LFE142:
 148 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 149              		.align	2
 150              		.global	PendSV_Handler
 151              		.thumb
 152              		.thumb_func
 154              	PendSV_Handler:
 155              	.LFB143:
 139:src/stm32f7xx_it.c **** }
 140:src/stm32f7xx_it.c **** 
 141:src/stm32f7xx_it.c **** /**
 142:src/stm32f7xx_it.c ****   * @brief  This function handles PendSVC exception.
 143:src/stm32f7xx_it.c ****   * @param  None
 144:src/stm32f7xx_it.c ****   * @retval None
 145:src/stm32f7xx_it.c ****   */
ARM GAS  /tmp/ccyvQ5X7.s 			page 6


 146:src/stm32f7xx_it.c **** void PendSV_Handler(void)
 147:src/stm32f7xx_it.c **** {
 156              		.loc 1 147 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 0000 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE143:
 165 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 166              		.align	2
 167              		.global	SysTick_Handler
 168              		.thumb
 169              		.thumb_func
 171              	SysTick_Handler:
 172              	.LFB144:
 148:src/stm32f7xx_it.c **** }
 149:src/stm32f7xx_it.c **** 
 150:src/stm32f7xx_it.c **** /**
 151:src/stm32f7xx_it.c ****   * @brief  This function handles SysTick Handler.
 152:src/stm32f7xx_it.c ****   * @param  None
 153:src/stm32f7xx_it.c ****   * @retval None
 154:src/stm32f7xx_it.c ****   */
 155:src/stm32f7xx_it.c **** void SysTick_Handler(void)
 156:src/stm32f7xx_it.c **** {
 173              		.loc 1 156 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		.loc 1 156 0
 178 0000 08B5     		push	{r3, lr}
 179              	.LCFI0:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
 157:src/stm32f7xx_it.c ****   HAL_IncTick();
 183              		.loc 1 157 0
 184 0002 FFF7FEFF 		bl	HAL_IncTick
 185              	.LVL0:
 186 0006 08BD     		pop	{r3, pc}
 187              		.cfi_endproc
 188              	.LFE144:
 190              		.text
 191              	.Letext0:
 192              		.file 2 "/opt/5.4.2016q3/arm-none-eabi/include/machine/_default_types.h"
 193              		.file 3 "/opt/5.4.2016q3/arm-none-eabi/include/sys/_stdint.h"
 194              		.file 4 "CORE/core_cm7.h"
 195              		.file 5 "HALLIB/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccyvQ5X7.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
     /tmp/ccyvQ5X7.s:21     .text.NMI_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:26     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccyvQ5X7.s:39     .text.HardFault_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:44     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccyvQ5X7.s:58     .text.MemManage_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:63     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/ccyvQ5X7.s:77     .text.BusFault_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:82     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/ccyvQ5X7.s:96     .text.UsageFault_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:101    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/ccyvQ5X7.s:115    .text.SVC_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:120    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccyvQ5X7.s:132    .text.DebugMon_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:137    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/ccyvQ5X7.s:149    .text.PendSV_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:154    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccyvQ5X7.s:166    .text.SysTick_Handler:00000000 $t
     /tmp/ccyvQ5X7.s:171    .text.SysTick_Handler:00000000 SysTick_Handler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
