ARM GAS  /tmp/cchzUtnS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f7xx_hal_tim_ex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.TIM_CCxNChannelCmd,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	TIM_CCxNChannelCmd:
  26              	.LFB177:
  27              		.file 1 "HALLIB/Src/stm32f7xx_hal_tim_ex.c"
   1:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
   2:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ******************************************************************************
   3:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @file    stm32f7xx_hal_tim_ex.c
   4:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @author  MCD Application Team
   5:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief   TIM HAL module driver.
   6:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This file provides firmware functions to manage the following 
   7:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          functionalities of the Timer extension peripheral:
   8:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *           + Time Hall Sensor Interface Initialization
   9:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *           + Time Hall Sensor Interface Start
  10:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *           + Time Complementary signal bread and dead time configuration  
  11:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *           + Time Master and Slave synchronization configuration
  12:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *           + Time Output Compare/PWM Channel Configuration (for channels 5 and 6)
  13:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *           + Time OCRef clear configuration
  14:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *           + Timer remapping capabilities configuration  
  15:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   @verbatim 
  16:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
  17:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                       ##### TIMER Extended features #####
  18:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
  19:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..] 
  20:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     The Timer Extension features include: 
  21:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (#) Complementary outputs with programmable dead-time for :
  22:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         (++) Input Capture
  23:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         (++) Output Compare
  24:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         (++) PWM generation (Edge and Center-aligned Mode)
  25:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         (++) One-pulse mode output
  26:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (#) Synchronization circuit to control the timer with external signals and to 
  27:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         interconnect several timers together.
  28:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (#) Break input to put the timer output signals in reset state or in a known state.
  29:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (#) Supports incremental (quadrature) encoder and hall-sensor circuitry for 
  30:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         positioning purposes                
  31:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    
ARM GAS  /tmp/cchzUtnS.s 			page 2


  32:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                         ##### How to use this driver #####
  33:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
  34:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..]
  35:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      (#) Initialize the TIM low level resources by implementing the following functions 
  36:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****          depending from feature used :
  37:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            (++) Complementary Output Compare : HAL_TIM_OC_MspInit()
  38:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            (++) Complementary PWM generation : HAL_TIM_PWM_MspInit()
  39:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            (++) Complementary One-pulse mode output : HAL_TIM_OnePulse_MspInit()
  40:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            (++) Hall Sensor output : HAL_TIM_HallSensor_MspInit()
  41:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            
  42:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      (#) Initialize the TIM low level resources :
  43:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         (##) Enable the TIM interface clock using __HAL_RCC_TIMx_CLK_ENABLE(); 
  44:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         (##) TIM pins configuration
  45:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****             (+++) Enable the clock for the TIM GPIOs using the following function:
  46:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                   __HAL_RCC_GPIOx_CLK_ENABLE();   
  47:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****             (+++) Configure these TIM pins in Alternate function mode using HAL_GPIO_Init();  
  48:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
  49:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      (#) The external Clock can be configured, if needed (the default clock is the 
  50:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****          internal clock from the APBx), using the following function:
  51:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****          HAL_TIM_ConfigClockSource, the clock configuration should be done before 
  52:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****          any start function.
  53:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
  54:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (#) Configure the TIM in the desired functioning mode using one of the 
  55:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         initialization function of this driver:
  56:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         (++) HAL_TIMEx_HallSensor_Init and HAL_TIMEx_ConfigCommutationEvent: to use the 
  57:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****              Timer Hall Sensor Interface and the commutation event with the corresponding 
  58:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****              Interrupt and DMA request if needed (Note that One Timer is used to interface 
  59:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****              with the Hall sensor Interface and another Timer should be used to use 
  60:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****              the commutation event).
  61:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
  62:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (#) Activate the TIM peripheral using one of the start functions: 
  63:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            (++) Complementary Output Compare : HAL_TIMEx_OCN_Start(), HAL_TIMEx_OCN_Start_DMA(), HA
  64:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            (++) Complementary PWM generation : HAL_TIMEx_PWMN_Start(), HAL_TIMEx_PWMN_Start_DMA(), 
  65:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            (++) Complementary One-pulse mode output : HAL_TIMEx_OnePulseN_Start(), HAL_TIMEx_OnePul
  66:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****            (++) Hall Sensor output : HAL_TIMEx_HallSensor_Start(), HAL_TIMEx_HallSensor_Start_DMA()
  67:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
  68:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
  69:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   @endverbatim
  70:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ******************************************************************************
  71:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @attention
  72:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *
  73:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  74:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *
  75:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  76:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * are permitted provided that the following conditions are met:
  77:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  78:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *      this list of conditions and the following disclaimer.
  79:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  80:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  81:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *      and/or other materials provided with the distribution.
  82:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  83:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *      may be used to endorse or promote products derived from this software
  84:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *      without specific prior written permission.
  85:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *
  86:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  87:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  88:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
ARM GAS  /tmp/cchzUtnS.s 			page 3


  89:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  90:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  91:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  92:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  93:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  94:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  95:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  96:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *
  97:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ******************************************************************************
  98:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */ 
  99:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 100:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /* Includes ------------------------------------------------------------------*/
 101:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #include "stm32f7xx_hal.h"
 102:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 103:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
 104:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
 105:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 106:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 107:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx TIMEx
 108:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief TIM Extended HAL module driver
 109:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
 110:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 111:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 112:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #ifdef HAL_TIM_MODULE_ENABLED
 113:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 114:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /* Private typedef -----------------------------------------------------------*/
 115:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /* Private define ------------------------------------------------------------*/
 116:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #define BDTR_BKF_SHIFT  (16)
 117:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #define BDTR_BK2F_SHIFT (20)
 118:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /* Private macro -------------------------------------------------------------*/
 119:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /* Private variables ---------------------------------------------------------*/
 120:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /* Private function prototypes -----------------------------------------------*/
 121:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @addtogroup TIMEx_Private_Functions
 122:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
 123:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 124:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** static void TIM_CCxNChannelCmd(TIM_TypeDef* TIMx, uint32_t Channel, uint32_t ChannelNState);  
 125:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config);
 126:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config);
 127:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 128:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
 129:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 130:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /* Private functions ---------------------------------------------------------*/
 131:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 132:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx_Exported_Functions TIMEx Exported Functions
 133:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
 134:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 135:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 136:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx_Exported_Functions_Group1 Extended Timer Hall Sensor functions
 137:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *  @brief    Timer Hall Sensor functions 
 138:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *
 139:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @verbatim    
 140:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
 141:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                       ##### Timer Hall Sensor functions #####
 142:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
 143:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..]  
 144:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     This section provides functions allowing to:
 145:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Initialize and configure TIM HAL Sensor. 
ARM GAS  /tmp/cchzUtnS.s 			page 4


 146:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) De-initialize TIM HAL Sensor.
 147:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Hall Sensor Interface.
 148:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Hall Sensor Interface.
 149:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Hall Sensor Interface and enable interrupts.
 150:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Hall Sensor Interface and disable interrupts.
 151:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Hall Sensor Interface and enable DMA transfers.
 152:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Hall Sensor Interface and disable DMA transfers.
 153:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 154:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @endverbatim
 155:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
 156:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 157:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 158:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Initializes the TIM Hall Sensor Interface and create the associated handle.
 159:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 160:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 161:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  sConfig TIM Hall Sensor configuration structure
 162:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 163:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 164:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_HallSensor_Init(TIM_HandleTypeDef *htim, TIM_HallSensor_InitTypeDef* sC
 165:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 166:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_OC_InitTypeDef OC_Config;
 167:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 168:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the TIM handle allocation */
 169:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if(htim == NULL)
 170:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 171:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     return HAL_ERROR;
 172:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 173:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 174:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
 175:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 176:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 177:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 178:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->IC1Polarity));
 179:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC1Prescaler));
 180:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
 181:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 182:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 183:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 184:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Allocate lock resource and initialize it */
 185:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Lock = HAL_UNLOCKED;
 186:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 187:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 188:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Reset interrupt callbacks to legacy week callbacks */
 189:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     TIM_ResetCallback(htim);
 190:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 191:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     if(htim->HallSensor_MspInitCallback == NULL)
 192:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 193:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->HallSensor_MspInitCallback = HAL_TIMEx_HallSensor_MspInit;
 194:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 195:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 196:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->HallSensor_MspInitCallback(htim);
 197:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #else
 198:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
 199:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     HAL_TIMEx_HallSensor_MspInit(htim);
 200:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 201:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 202:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
ARM GAS  /tmp/cchzUtnS.s 			page 5


 203:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the TIM state */
 204:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State= HAL_TIM_STATE_BUSY;
 205:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 206:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Configure the Time base in the Encoder Mode */
 207:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 208:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 209:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Configure the Channel 1 as Input Channel to interface with the three Outputs of the  Hall sens
 210:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_TI1_SetConfig(htim->Instance, sConfig->IC1Polarity, TIM_ICSELECTION_TRC, sConfig->IC1Filter);
 211:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 212:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Reset the IC1PSC Bits */
 213:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 214:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the IC1PSC value */
 215:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CCMR1 |= sConfig->IC1Prescaler;
 216:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 217:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Hall sensor interface (XOR function of the three inputs) */
 218:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= TIM_CR2_TI1S;
 219:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 220:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the TIM_TS_TI1F_ED signal as Input trigger for the TIM */
 221:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->SMCR &= ~TIM_SMCR_TS;
 222:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->SMCR |= TIM_TS_TI1F_ED;
 223:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 224:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Use the TIM_TS_TI1F_ED signal to reset the TIM counter each edge detection */  
 225:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 226:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->SMCR |= TIM_SLAVEMODE_RESET;
 227:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 228:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Program channel 2 in PWM 2 mode with the desired Commutation_Delay*/
 229:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCFastMode = TIM_OCFAST_DISABLE;
 230:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCIdleState = TIM_OCIDLESTATE_RESET;
 231:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCMode = TIM_OCMODE_PWM2;
 232:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 233:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 234:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCPolarity = TIM_OCPOLARITY_HIGH;
 235:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.Pulse = sConfig->Commutation_Delay; 
 236:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 237:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_OC2_SetConfig(htim->Instance, &OC_Config);
 238:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 239:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select OC2REF as trigger output on TRGO: write the MMS bits in the TIMx_CR2
 240:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     register to 101 */
 241:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 &= ~TIM_CR2_MMS;
 242:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= TIM_TRGO_OC2REF; 
 243:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 244:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Initialize the TIM state*/
 245:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State= HAL_TIM_STATE_READY;
 246:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 247:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 248:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 249:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 250:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 251:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  DeInitializes the TIM Hall Sensor interface  
 252:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 253:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 254:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 255:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 256:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_HallSensor_DeInit(TIM_HandleTypeDef *htim)
 257:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 258:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 259:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
ARM GAS  /tmp/cchzUtnS.s 			page 6


 260:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 261:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_BUSY;
 262:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 263:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the TIM Peripheral Clock */
 264:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
 265:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 266:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 267:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if(htim->HallSensor_MspDeInitCallback == NULL)
 268:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 269:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->HallSensor_MspDeInitCallback = HAL_TIMEx_HallSensor_MspDeInit;
 270:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 271:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* DeInit the low level hardware */
 272:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->HallSensor_MspDeInitCallback(htim);
 273:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #else
 274:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 275:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   HAL_TIMEx_HallSensor_MspDeInit(htim);
 276:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 277:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 278:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Change TIM state */  
 279:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_RESET; 
 280:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 281:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Release Lock */
 282:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
 283:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 284:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 285:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 286:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 287:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 288:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Initializes the TIM Hall Sensor MSP.
 289:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 290:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 291:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
 292:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 293:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** __weak void HAL_TIMEx_HallSensor_MspInit(TIM_HandleTypeDef *htim)
 294:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 295:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Prevent unused argument(s) compilation warning */
 296:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   UNUSED(htim);
 297:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 298:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 299:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****             the HAL_TIMEx_HallSensor_MspInit could be implemented in the user file
 300:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    */
 301:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 302:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 303:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 304:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  DeInitializes TIM Hall Sensor MSP.
 305:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 306:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 307:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
 308:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 309:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** __weak void HAL_TIMEx_HallSensor_MspDeInit(TIM_HandleTypeDef *htim)
 310:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 311:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Prevent unused argument(s) compilation warning */
 312:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   UNUSED(htim);
 313:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 314:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 315:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****             the HAL_TIMEx_HallSensor_MspDeInit could be implemented in the user file
 316:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    */
ARM GAS  /tmp/cchzUtnS.s 			page 7


 317:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 318:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 319:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 320:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM Hall Sensor Interface.
 321:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 322:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 323:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 324:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 325:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_HallSensor_Start(TIM_HandleTypeDef *htim)
 326:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 327:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 328:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
 329:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 330:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Input Capture channels 1
 331:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (in the Hall Sensor Interface the Three possible channels that can be used are TIM_CHANNEL_1, T
 332:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
 333:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 334:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
 335:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim);
 336:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 337:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 338:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 339:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 340:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 341:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 342:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM Hall sensor Interface.
 343:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 344:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 345:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 346:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 347:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_HallSensor_Stop(TIM_HandleTypeDef *htim)
 348:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 349:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 350:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
 351:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 352:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Input Capture channels 1, 2 and 3
 353:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (in the Hall Sensor Interface the Three possible channels that can be used are TIM_CHANNEL_1, T
 354:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 355:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 356:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
 357:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
 358:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 359:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 360:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 361:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 362:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 363:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 364:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM Hall Sensor Interface in interrupt mode.
 365:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 366:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 367:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 368:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 369:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_HallSensor_Start_IT(TIM_HandleTypeDef *htim)
 370:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** { 
 371:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 372:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
 373:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 8


 374:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the capture compare Interrupts 1 event */
 375:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 376:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 377:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Input Capture channels 1
 378:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (in the Hall Sensor Interface the Three possible channels that can be used are TIM_CHANNEL_1, T
 379:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);  
 380:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 381:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
 382:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim);
 383:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 384:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 385:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 386:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 387:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 388:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 389:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM Hall Sensor Interface in interrupt mode.
 390:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 391:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 392:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 393:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 394:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_HallSensor_Stop_IT(TIM_HandleTypeDef *htim)
 395:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 396:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 397:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
 398:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 399:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Input Capture channels 1
 400:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (in the Hall Sensor Interface the Three possible channels that can be used are TIM_CHANNEL_1, T
 401:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 402:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 403:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the capture compare Interrupts event */
 404:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 405:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 406:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
 407:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
 408:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 409:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 410:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 411:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 412:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 413:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 414:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM Hall Sensor Interface in DMA mode.
 415:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 416:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 417:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  pData The destination Buffer address.
 418:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Length The length of data to be transferred from TIM peripheral to memory.
 419:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 420:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 421:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_HallSensor_Start_DMA(TIM_HandleTypeDef *htim, uint32_t *pData, uint16_t
 422:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 423:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 424:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
 425:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 426:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    if((htim->State == HAL_TIM_STATE_BUSY))
 427:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 428:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      return HAL_BUSY;
 429:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 430:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   else if((htim->State == HAL_TIM_STATE_READY))
ARM GAS  /tmp/cchzUtnS.s 			page 9


 431:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 432:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     if(((uint32_t)pData == 0 ) && (Length > 0)) 
 433:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 434:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       return HAL_ERROR;                                    
 435:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 436:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     else
 437:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 438:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->State = HAL_TIM_STATE_BUSY;
 439:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 440:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 441:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Input Capture channels 1
 442:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (in the Hall Sensor Interface the Three possible channels that can be used are TIM_CHANNEL_1, T
 443:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
 444:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 445:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the DMA Input Capture 1 Callback */
 446:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = HAL_TIM_DMACaptureCplt;     
 447:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the DMA error callback */
 448:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = HAL_TIM_DMAError ;
 449:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 450:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the DMA Stream for Capture 1*/
 451:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData, Le
 452:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 453:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the capture compare 1 Interrupt */
 454:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 455:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 456:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
 457:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim);
 458:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 459:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 460:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 461:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 462:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 463:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 464:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM Hall Sensor Interface in DMA mode.
 465:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 466:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 467:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 468:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 469:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_HallSensor_Stop_DMA(TIM_HandleTypeDef *htim)
 470:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 471:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 472:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
 473:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 474:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Input Capture channels 1
 475:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (in the Hall Sensor Interface the Three possible channels that can be used are TIM_CHANNEL_1, T
 476:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 477:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 478:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 479:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the capture compare Interrupts 1 event */
 480:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 481:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 482:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
 483:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
 484:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 485:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 486:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 487:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
ARM GAS  /tmp/cchzUtnS.s 			page 10


 488:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 489:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 490:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
 491:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 492:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 493:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx_Exported_Functions_Group2 Extended Timer Complementary Output Compare functions
 494:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *  @brief    Timer Complementary Output Compare functions 
 495:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *
 496:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @verbatim   
 497:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
 498:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****               ##### Timer Complementary Output Compare functions #####
 499:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================  
 500:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..]  
 501:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     This section provides functions allowing to:
 502:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary Output Compare/PWM.
 503:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary Output Compare/PWM.
 504:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary Output Compare/PWM and enable interrupts.
 505:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary Output Compare/PWM and disable interrupts.
 506:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary Output Compare/PWM and enable DMA transfers.
 507:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary Output Compare/PWM and disable DMA transfers.
 508:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                
 509:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @endverbatim
 510:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
 511:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 512:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 513:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 514:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM Output Compare signal generation on the complementary
 515:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         output.
 516:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 517:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.  
 518:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be enabled.
 519:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 520:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 521:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 522:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 523:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 524:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 525:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OCN_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
 526:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 527:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 528:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
 529:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 530:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Enable the Capture compare channel N */
 531:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_ENABLE);
 532:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 533:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Main Output */
 534:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     __HAL_TIM_MOE_ENABLE(htim);
 535:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 536:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
 537:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim);
 538:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 539:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 540:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 541:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
 542:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 543:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 544:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM Output Compare signal generation on the complementary
ARM GAS  /tmp/cchzUtnS.s 			page 11


 545:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         output.
 546:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 547:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 548:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be disabled.
 549:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 550:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 551:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 552:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 553:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 554:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 555:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OCN_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
 556:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** { 
 557:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 558:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
 559:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 560:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Disable the Capture compare channel N */
 561:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_DISABLE);
 562:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 563:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Main Output */
 564:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     __HAL_TIM_MOE_DISABLE(htim);
 565:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 566:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
 567:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
 568:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 569:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 570:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 571:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
 572:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 573:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 574:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM Output Compare signal generation in interrupt mode 
 575:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         on the complementary output.
 576:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 577:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 578:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be enabled.
 579:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 580:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 581:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 582:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 583:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 584:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 585:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OCN_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 586:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 587:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 588:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
 589:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 590:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
 591:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 592:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
 593:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {       
 594:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Output Compare interrupt */
 595:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 596:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 597:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 598:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 599:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
 600:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 601:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Output Compare interrupt */
ARM GAS  /tmp/cchzUtnS.s 			page 12


 602:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 603:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 604:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 605:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 606:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
 607:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 608:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Output Compare interrupt */
 609:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 610:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 611:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 612:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 613:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
 614:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 615:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Output Compare interrupt */
 616:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 617:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 618:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 619:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 620:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
 621:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 622:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   } 
 623:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 624:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the TIM Break interrupt */
 625:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_BREAK);
 626:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 627:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Capture compare channel N */
 628:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_ENABLE);
 629:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 630:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Main Output */
 631:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  __HAL_TIM_MOE_ENABLE(htim);
 632:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 633:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
 634:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim);
 635:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 636:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 637:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 638:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
 639:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 640:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 641:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM Output Compare signal generation in interrupt mode 
 642:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         on the complementary output.
 643:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 644:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 645:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be disabled.
 646:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 647:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 648:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 649:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 650:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 651:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 652:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OCN_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 653:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 654:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpccer = 0; 
 655:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 656:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 657:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
 658:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 13


 659:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
 660:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 661:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
 662:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {       
 663:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Output Compare interrupt */
 664:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 665:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 666:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 667:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 668:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
 669:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 670:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Output Compare interrupt */
 671:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 672:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 673:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 674:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 675:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
 676:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 677:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Output Compare interrupt */
 678:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 679:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 680:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 681:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 682:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
 683:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 684:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Output Compare interrupt */
 685:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 686:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 687:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 688:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 689:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
 690:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break; 
 691:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 692:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 693:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Capture compare channel N */
 694:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_DISABLE);
 695:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 696:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the TIM Break interrupt (only if no more channel is active) */
 697:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccer = htim->Instance->CCER;
 698:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if ((tmpccer & (TIM_CCER_CC1NE | TIM_CCER_CC2NE | TIM_CCER_CC3NE)) == RESET)
 699:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 700:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_BREAK);
 701:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 702:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 703:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Main Output */
 704:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_DISABLE(htim);
 705:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 706:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
 707:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
 708:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 709:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 710:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 711:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
 712:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 713:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 714:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM Output Compare signal generation in DMA mode 
 715:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         on the complementary output.
ARM GAS  /tmp/cchzUtnS.s 			page 14


 716:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 717:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 718:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be enabled.
 719:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 720:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 721:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 722:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 723:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  pData The source Buffer address.
 724:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Length The length of data to be transferred from memory to TIM peripheral
 725:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 726:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 727:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OCN_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pDat
 728:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 729:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 730:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
 731:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 732:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 733:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 734:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      return HAL_BUSY;
 735:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 736:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 737:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 738:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     if(((uint32_t)pData == 0 ) && (Length > 0)) 
 739:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 740:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       return HAL_ERROR;                                    
 741:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 742:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     else
 743:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 744:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->State = HAL_TIM_STATE_BUSY;
 745:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 746:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }    
 747:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
 748:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 749:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
 750:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {      
 751:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA Period elapsed callback */
 752:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = HAL_TIM_DMADelayPulseCplt;
 753:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 754:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA error callback */
 755:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = HAL_TIM_DMAError ;
 756:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 757:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the DMA Stream */
 758:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
 759:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 760:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Output Compare DMA request */
 761:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 762:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 763:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 764:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 765:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
 766:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 767:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA Period elapsed callback */
 768:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = HAL_TIM_DMADelayPulseCplt;
 769:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 770:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA error callback */
 771:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = HAL_TIM_DMAError ;
 772:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
ARM GAS  /tmp/cchzUtnS.s 			page 15


 773:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the DMA Stream */
 774:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
 775:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 776:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Output Compare DMA request */
 777:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 778:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 779:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 780:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 781:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
 782:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 783:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA Period elapsed callback */
 784:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = HAL_TIM_DMADelayPulseCplt;
 785:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 786:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA error callback */
 787:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = HAL_TIM_DMAError ;
 788:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 789:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the DMA Stream */
 790:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
 791:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 792:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Output Compare DMA request */
 793:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 794:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 795:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 796:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 797:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
 798:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 799:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Set the DMA Period elapsed callback */
 800:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = HAL_TIM_DMADelayPulseCplt;
 801:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 802:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA error callback */
 803:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = HAL_TIM_DMAError ;
 804:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 805:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the DMA Stream */
 806:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
 807:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 808:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Output Compare DMA request */
 809:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 810:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 811:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 812:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 813:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
 814:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 815:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 816:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 817:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Capture compare channel N */
 818:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_ENABLE);
 819:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 820:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Main Output */
 821:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_ENABLE(htim);
 822:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 823:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
 824:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim); 
 825:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 826:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 827:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 828:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 829:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
ARM GAS  /tmp/cchzUtnS.s 			page 16


 830:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 831:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM Output Compare signal generation in DMA mode 
 832:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         on the complementary output.
 833:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 834:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 835:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be disabled.
 836:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 837:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 838:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 839:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 840:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 841:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 842:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OCN_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
 843:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 844:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 845:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
 846:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 847:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
 848:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 849:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
 850:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {       
 851:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Output Compare DMA request */
 852:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 853:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 854:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 855:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 856:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
 857:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 858:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Output Compare DMA request */
 859:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 860:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 861:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 862:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 863:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
 864:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 865:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Output Compare DMA request */
 866:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 867:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 868:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 869:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 870:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
 871:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 872:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Output Compare interrupt */
 873:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 874:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 875:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 876:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 877:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
 878:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
 879:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   } 
 880:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 881:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Capture compare channel N */
 882:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_DISABLE);
 883:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 884:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Main Output */
 885:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_DISABLE(htim);
 886:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 17


 887:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
 888:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
 889:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 890:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Change the htim state */
 891:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_READY;
 892:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 893:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 894:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 895:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 896:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 897:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 898:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
 899:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 900:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 901:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx_Exported_Functions_Group3 Extended Timer Complementary PWM functions
 902:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *  @brief    Timer Complementary PWM functions 
 903:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *
 904:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @verbatim   
 905:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
 906:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                  ##### Timer Complementary PWM functions #####
 907:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================  
 908:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..]  
 909:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     This section provides functions allowing to:
 910:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary PWM.
 911:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary PWM.
 912:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary PWM and enable interrupts.
 913:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary PWM and disable interrupts.
 914:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary PWM and enable DMA transfers.
 915:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary PWM and disable DMA transfers.
 916:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary Input Capture measurement.
 917:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary Input Capture.
 918:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary Input Capture and enable interrupts.
 919:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary Input Capture and disable interrupts.
 920:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary Input Capture and enable DMA transfers.
 921:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary Input Capture and disable DMA transfers.
 922:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary One Pulse generation.
 923:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary One Pulse.
 924:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary One Pulse and enable interrupts.
 925:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary One Pulse and disable interrupts.
 926:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                
 927:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @endverbatim
 928:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
 929:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 930:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 931:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 932:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the PWM signal generation on the complementary output.
 933:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 934:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 935:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be enabled.
 936:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 937:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 938:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 939:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 940:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 941:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 942:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_PWMN_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
 943:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
ARM GAS  /tmp/cchzUtnS.s 			page 18


 944:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 945:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
 946:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 947:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the complementary PWM output  */
 948:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_ENABLE);
 949:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 950:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Main Output */
 951:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_ENABLE(htim);
 952:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 953:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
 954:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim);
 955:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 956:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 957:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 958:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
 959:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 960:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 961:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the PWM signal generation on the complementary output.
 962:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 963:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 964:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be disabled.
 965:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 966:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 967:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 968:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 969:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
 970:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
 971:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_PWMN_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
 972:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** { 
 973:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 974:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
 975:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 976:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the complementary PWM output  */
 977:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_DISABLE);  
 978:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 979:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Main Output */
 980:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_DISABLE(htim);
 981:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 982:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
 983:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
 984:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 985:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
 986:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
 987:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
 988:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 989:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 990:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the PWM signal generation in interrupt mode on the 
 991:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         complementary output.
 992:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
 993:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
 994:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be disabled.
 995:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
 996:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 997:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 998:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 999:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1000:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
ARM GAS  /tmp/cchzUtnS.s 			page 19


1001:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_PWMN_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1002:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1003:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1004:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
1005:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1006:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
1007:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1008:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
1009:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {       
1010:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1011:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1012:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1013:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1014:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1015:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
1016:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1017:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
1018:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1019:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1020:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1021:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1022:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
1023:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1024:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1025:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
1026:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1027:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1028:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1029:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
1030:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1031:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1032:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
1033:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1034:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1035:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1036:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
1037:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1038:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   } 
1039:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1040:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the TIM Break interrupt */
1041:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_BREAK);
1042:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1043:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the complementary PWM output  */
1044:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_ENABLE);
1045:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1046:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Main Output */
1047:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_ENABLE(htim);
1048:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1049:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
1050:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim);
1051:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1052:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
1053:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1054:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
1055:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1056:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1057:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the PWM signal generation in interrupt mode on the 
ARM GAS  /tmp/cchzUtnS.s 			page 20


1058:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         complementary output.
1059:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1060:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1061:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be disabled.
1062:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1063:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1064:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1065:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1066:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1067:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1068:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_PWMN_Stop_IT (TIM_HandleTypeDef *htim, uint32_t Channel)
1069:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1070:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpccer = 0;
1071:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1072:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1073:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
1074:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1075:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
1076:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1077:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
1078:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {       
1079:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
1080:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
1081:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1082:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1083:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1084:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
1085:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1086:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
1087:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
1088:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1089:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1090:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1091:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
1092:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1093:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1094:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
1095:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1096:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1097:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1098:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
1099:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1100:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1101:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
1102:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1103:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1104:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1105:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
1106:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break; 
1107:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1108:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1109:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the complementary PWM output  */
1110:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_DISABLE);
1111:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1112:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the TIM Break interrupt (only if no more channel is active) */
1113:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccer = htim->Instance->CCER;
1114:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if ((tmpccer & (TIM_CCER_CC1NE | TIM_CCER_CC2NE | TIM_CCER_CC3NE)) == RESET)
ARM GAS  /tmp/cchzUtnS.s 			page 21


1115:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1116:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_BREAK);
1117:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1118:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1119:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Main Output */
1120:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_DISABLE(htim);
1121:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1122:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
1123:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
1124:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1125:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
1126:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1127:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
1128:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1129:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1130:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM PWM signal generation in DMA mode on the 
1131:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         complementary output
1132:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1133:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1134:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be enabled.
1135:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1136:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1137:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1138:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1139:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  pData The source Buffer address.
1140:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Length The length of data to be transferred from memory to TIM peripheral
1141:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1142:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1143:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_PWMN_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pDa
1144:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1145:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1146:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
1147:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1148:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
1149:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1150:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      return HAL_BUSY;
1151:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1152:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   else if((htim->State == HAL_TIM_STATE_READY))
1153:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1154:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     if(((uint32_t)pData == 0 ) && (Length > 0)) 
1155:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1156:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       return HAL_ERROR;                                    
1157:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1158:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     else
1159:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1160:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->State = HAL_TIM_STATE_BUSY;
1161:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1162:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }    
1163:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
1164:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1165:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
1166:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {      
1167:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA Period elapsed callback */
1168:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = HAL_TIM_DMADelayPulseCplt;
1169:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
1170:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA error callback */
1171:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = HAL_TIM_DMAError ;
ARM GAS  /tmp/cchzUtnS.s 			page 22


1172:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1173:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the DMA Stream */
1174:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
1175:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1176:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
1177:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
1178:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1179:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1180:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1181:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
1182:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1183:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA Period elapsed callback */
1184:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = HAL_TIM_DMADelayPulseCplt;
1185:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
1186:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA error callback */
1187:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = HAL_TIM_DMAError ;
1188:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1189:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the DMA Stream */
1190:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
1191:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1192:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
1193:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
1194:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1195:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1196:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1197:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
1198:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1199:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA Period elapsed callback */
1200:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = HAL_TIM_DMADelayPulseCplt;
1201:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
1202:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA error callback */
1203:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = HAL_TIM_DMAError ;
1204:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1205:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the DMA Stream */
1206:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
1207:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1208:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Capture/Compare 3 DMA request */
1209:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1210:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1211:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1212:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1213:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
1214:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1215:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Set the DMA Period elapsed callback */
1216:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = HAL_TIM_DMADelayPulseCplt;
1217:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
1218:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the DMA error callback */
1219:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = HAL_TIM_DMAError ;
1220:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1221:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the DMA Stream */
1222:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
1223:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1224:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1225:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
1226:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1227:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1228:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
ARM GAS  /tmp/cchzUtnS.s 			page 23


1229:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
1230:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1231:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1232:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1233:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the complementary PWM output  */
1234:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_ENABLE);
1235:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1236:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Main Output */
1237:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     __HAL_TIM_MOE_ENABLE(htim);
1238:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1239:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Peripheral */
1240:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE(htim); 
1241:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1242:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
1243:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1244:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1245:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1246:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1247:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM PWM signal generation in DMA mode on the complementary
1248:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         output
1249:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1250:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1251:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel TIM Channel to be disabled.
1252:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1253:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1254:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1255:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1256:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1257:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1258:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_PWMN_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1259:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1260:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1261:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, Channel)); 
1262:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1263:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
1264:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1265:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
1266:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {       
1267:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1268:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1269:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1270:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1271:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1272:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
1273:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1274:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1275:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1276:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1277:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1278:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1279:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
1280:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1281:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1282:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1283:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1284:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1285:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
ARM GAS  /tmp/cchzUtnS.s 			page 24


1286:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
1287:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1288:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Disable the TIM Capture/Compare 4 DMA request */
1289:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1290:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1291:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1292:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1293:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
1294:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1295:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   } 
1296:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1297:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the complementary PWM output */
1298:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     TIM_CCxNChannelCmd(htim->Instance, Channel, TIM_CCxN_DISABLE);
1299:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
1300:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Main Output */
1301:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     __HAL_TIM_MOE_DISABLE(htim);
1302:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1303:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
1304:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim);
1305:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1306:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Change the htim state */
1307:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_READY;
1308:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1309:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
1310:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1311:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1312:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1313:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1314:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
1315:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1316:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1317:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx_Exported_Functions_Group4 Extended Timer Complementary One Pulse functions
1318:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *  @brief    Timer Complementary One Pulse functions 
1319:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *
1320:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @verbatim   
1321:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
1322:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                 ##### Timer Complementary One Pulse functions #####
1323:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================  
1324:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..]  
1325:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     This section provides functions allowing to:
1326:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary One Pulse generation.
1327:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary One Pulse.
1328:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Start the Complementary One Pulse and enable interrupts.
1329:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Stop the Complementary One Pulse and disable interrupts.
1330:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                
1331:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @endverbatim
1332:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
1333:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1334:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1335:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1336:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM One Pulse signal generation on the complemetary 
1337:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         output.
1338:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1339:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1340:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  OutputChannel TIM Channel to be enabled.
1341:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1342:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
ARM GAS  /tmp/cchzUtnS.s 			page 25


1343:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1344:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1345:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1346:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OnePulseN_Start(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
1347:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1348:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1349:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, OutputChannel)); 
1350:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1351:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the complementary One Pulse output */
1352:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, OutputChannel, TIM_CCxN_ENABLE); 
1353:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1354:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Main Output */
1355:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_ENABLE(htim);
1356:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1357:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
1358:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1359:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1360:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1361:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1362:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM One Pulse signal generation on the complementary 
1363:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         output.
1364:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1365:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1366:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  OutputChannel TIM Channel to be disabled.
1367:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1368:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1369:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1370:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1371:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1372:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OnePulseN_Stop(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
1373:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1374:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1375:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1376:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, OutputChannel)); 
1377:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1378:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the complementary One Pulse output */
1379:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     TIM_CCxNChannelCmd(htim->Instance, OutputChannel, TIM_CCxN_DISABLE);
1380:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1381:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Main Output */
1382:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     __HAL_TIM_MOE_DISABLE(htim);
1383:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1384:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
1385:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE(htim); 
1386:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    
1387:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
1388:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1389:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1390:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1391:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1392:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Starts the TIM One Pulse signal generation in interrupt mode on the
1393:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         complementary channel.
1394:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1395:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1396:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  OutputChannel TIM Channel to be enabled.
1397:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1398:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1399:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
ARM GAS  /tmp/cchzUtnS.s 			page 26


1400:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1401:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1402:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OnePulseN_Start_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
1403:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1404:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1405:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, OutputChannel)); 
1406:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1407:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the TIM Capture/Compare 1 interrupt */
1408:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1409:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1410:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the TIM Capture/Compare 2 interrupt */
1411:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1412:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1413:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the complementary One Pulse output */
1414:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, OutputChannel, TIM_CCxN_ENABLE); 
1415:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1416:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Main Output */
1417:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_ENABLE(htim);
1418:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1419:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
1420:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1421:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   } 
1422:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1423:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1424:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Stops the TIM One Pulse signal generation in interrupt mode on the
1425:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         complementary channel.
1426:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1427:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1428:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  OutputChannel TIM Channel to be disabled.
1429:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1430:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1431:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1432:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1433:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1434:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_OnePulseN_Stop_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
1435:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1436:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1437:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CCXN_INSTANCE(htim->Instance, OutputChannel)); 
1438:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1439:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the TIM Capture/Compare 1 interrupt */
1440:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
1441:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1442:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the TIM Capture/Compare 2 interrupt */
1443:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
1444:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1445:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the complementary One Pulse output */
1446:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_CCxNChannelCmd(htim->Instance, OutputChannel, TIM_CCxN_DISABLE);
1447:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1448:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Main Output */
1449:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_MOE_DISABLE(htim);
1450:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1451:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the Peripheral */
1452:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    __HAL_TIM_DISABLE(htim);  
1453:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1454:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Return function status */
1455:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1456:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
ARM GAS  /tmp/cchzUtnS.s 			page 27


1457:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1458:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1459:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
1460:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1461:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1462:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx_Exported_Functions_Group5 Extended Peripheral Control functions
1463:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *  @brief   	Peripheral Control functions 
1464:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *
1465:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @verbatim   
1466:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
1467:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                     ##### Peripheral Control functions #####
1468:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================  
1469:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..]  
1470:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     This section provides functions allowing to:
1471:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Configure The Input Output channels for OC, PWM, IC or One Pulse mode. 
1472:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Configure External Clock source.
1473:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Configure Complementary channels, break features and dead time.
1474:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Configure Master and the Slave synchronization.
1475:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Configure the commutation event in case of use of the Hall sensor interface.
1476:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Configure the DMA Burst Mode.
1477:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
1478:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @endverbatim
1479:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
1480:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1481:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1482:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Configure the TIM commutation event sequence.
1483:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @note  This function is mandatory to use the commutation event in order to 
1484:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        update the configuration at each commutation detection on the TRGI input of the Timer,
1485:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        the typical use of this feature is with the use of another Timer(interface Timer) 
1486:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        configured in Hall sensor interface, this interface Timer will generate the 
1487:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        commutation at its TRGO output (connected to Timer used in this function) each time 
1488:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        the TI1 of the Interface Timer detect a commutation at its input TI1.
1489:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1490:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1491:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  InputTrigger the Internal trigger corresponding to the Timer Interfacing with the Hall 
1492:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1493:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR0: Internal trigger 0 selected
1494:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR1: Internal trigger 1 selected
1495:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR2: Internal trigger 2 selected
1496:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR3: Internal trigger 3 selected
1497:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_NONE: No trigger is needed 
1498:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  CommutationSource the Commutation Event source.
1499:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1500:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_COMMUTATION_TRGI: Commutation source is the TRGI of the Interface Timer
1501:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_COMMUTATION_SOFTWARE:  Commutation source is set by software using the COMG
1502:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1503:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1504:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_ConfigCommutationEvent(TIM_HandleTypeDef *htim, uint32_t  InputTrigger,
1505:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1506:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1507:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_ADVANCED_INSTANCE(htim->Instance));
1508:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_INTERNAL_TRIGGEREVENT_SELECTION(InputTrigger));
1509:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1510:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
1511:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1512:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if ((InputTrigger == TIM_TS_ITR0) || (InputTrigger == TIM_TS_ITR1) ||
1513:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       (InputTrigger == TIM_TS_ITR2) || (InputTrigger == TIM_TS_ITR3))
ARM GAS  /tmp/cchzUtnS.s 			page 28


1514:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {    
1515:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Select the Input trigger */
1516:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR &= ~TIM_SMCR_TS;
1517:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR |= InputTrigger;
1518:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1519:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1520:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Capture Compare preload feature */
1521:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= TIM_CR2_CCPC;
1522:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Commutation event source */
1523:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 &= ~TIM_CR2_CCUS;
1524:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= CommutationSource;
1525:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1526:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
1527:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1528:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1529:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1530:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1531:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1532:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Configure the TIM commutation event sequence with interrupt.
1533:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @note  This function is mandatory to use the commutation event in order to 
1534:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        update the configuration at each commutation detection on the TRGI input of the Timer,
1535:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        the typical use of this feature is with the use of another Timer(interface Timer) 
1536:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        configured in Hall sensor interface, this interface Timer will generate the 
1537:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        commutation at its TRGO output (connected to Timer used in this function) each time 
1538:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        the TI1 of the Interface Timer detect a commutation at its input TI1.
1539:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1540:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1541:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  InputTrigger the Internal trigger corresponding to the Timer Interfacing with the Hall 
1542:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1543:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR0: Internal trigger 0 selected
1544:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR1: Internal trigger 1 selected
1545:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR2: Internal trigger 2 selected
1546:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR3: Internal trigger 3 selected
1547:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_NONE: No trigger is needed
1548:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  CommutationSource the Commutation Event source.
1549:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1550:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_COMMUTATION_TRGI: Commutation source is the TRGI of the Interface Timer
1551:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_COMMUTATION_SOFTWARE:  Commutation source is set by software using the COMG
1552:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1553:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1554:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_ConfigCommutationEvent_IT(TIM_HandleTypeDef *htim, uint32_t  InputTrigg
1555:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1556:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1557:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_ADVANCED_INSTANCE(htim->Instance));
1558:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_INTERNAL_TRIGGEREVENT_SELECTION(InputTrigger));
1559:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1560:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
1561:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1562:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if ((InputTrigger == TIM_TS_ITR0) || (InputTrigger == TIM_TS_ITR1) ||
1563:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       (InputTrigger == TIM_TS_ITR2) || (InputTrigger == TIM_TS_ITR3))
1564:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {    
1565:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Select the Input trigger */
1566:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR &= ~TIM_SMCR_TS;
1567:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR |= InputTrigger;
1568:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1569:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1570:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Capture Compare preload feature */
ARM GAS  /tmp/cchzUtnS.s 			page 29


1571:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= TIM_CR2_CCPC;
1572:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Commutation event source */
1573:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 &= ~TIM_CR2_CCUS;
1574:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= CommutationSource;
1575:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1576:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Commutation Interrupt Request */
1577:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_COM);
1578:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1579:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
1580:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1581:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1582:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1583:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1584:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1585:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Configure the TIM commutation event sequence with DMA.
1586:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @note  This function is mandatory to use the commutation event in order to 
1587:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        update the configuration at each commutation detection on the TRGI input of the Timer,
1588:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        the typical use of this feature is with the use of another Timer(interface Timer) 
1589:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        configured in Hall sensor interface, this interface Timer will generate the 
1590:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        commutation at its TRGO output (connected to Timer used in this function) each time 
1591:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *        the TI1 of the Interface Timer detect a commutation at its input TI1.
1592:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @note: The user should configure the DMA in his own software, in This function only the COMDE b
1593:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1594:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1595:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  InputTrigger the Internal trigger corresponding to the Timer Interfacing with the Hall 
1596:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1597:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR0: Internal trigger 0 selected
1598:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR1: Internal trigger 1 selected
1599:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR2: Internal trigger 2 selected
1600:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_ITR3: Internal trigger 3 selected
1601:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TS_NONE: No trigger is needed
1602:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  CommutationSource the Commutation Event source.
1603:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1604:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_COMMUTATION_TRGI: Commutation source is the TRGI of the Interface Timer
1605:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_COMMUTATION_SOFTWARE:  Commutation source is set by software using the COMG
1606:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1607:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1608:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_ConfigCommutationEvent_DMA(TIM_HandleTypeDef *htim, uint32_t  InputTrig
1609:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1610:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1611:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_ADVANCED_INSTANCE(htim->Instance));
1612:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_INTERNAL_TRIGGEREVENT_SELECTION(InputTrigger));
1613:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1614:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
1615:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1616:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if ((InputTrigger == TIM_TS_ITR0) || (InputTrigger == TIM_TS_ITR1) ||
1617:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       (InputTrigger == TIM_TS_ITR2) || (InputTrigger == TIM_TS_ITR3))
1618:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {    
1619:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Select the Input trigger */
1620:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR &= ~TIM_SMCR_TS;
1621:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR |= InputTrigger;
1622:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1623:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1624:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Capture Compare preload feature */
1625:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= TIM_CR2_CCPC;
1626:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Commutation event source */
1627:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 &= ~TIM_CR2_CCUS;
ARM GAS  /tmp/cchzUtnS.s 			page 30


1628:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= CommutationSource;
1629:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1630:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Commutation DMA Request */
1631:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the DMA Commutation Callback */
1632:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback = HAL_TIMEx_DMACommutationCplt;     
1633:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the DMA error callback */
1634:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = HAL_TIM_DMAError;
1635:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1636:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Enable the Commutation DMA Request */
1637:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_COM);
1638:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1639:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
1640:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1641:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1642:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }  
1643:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1644:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1645:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Configures the TIM in master mode.
1646:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1647:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.   
1648:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  sMasterConfig pointer to a TIM_MasterConfigTypeDef structure that
1649:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         contains the selected trigger output (TRGO) and the Master/Slave 
1650:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         mode. 
1651:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1652:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1653:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim, TIM_MasterConfigTy
1654:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1655:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpcr2;  
1656:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpsmcr;  
1657:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1658:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1659:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_SYNCHRO_INSTANCE(htim->Instance));
1660:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
1661:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));
1662:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1663:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check input state */
1664:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
1665:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1666:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  /* Get the TIMx CR2 register value */
1667:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpcr2 = htim->Instance->CR2;
1668:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1669:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Get the TIMx SMCR register value */
1670:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpsmcr = htim->Instance->SMCR;
1671:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1672:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
1673:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
1674:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1675:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Check the parameters */
1676:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));
1677:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1678:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Clear the MMS2 bits */
1679:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     tmpcr2 &= ~TIM_CR2_MMS2;
1680:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Select the TRGO2 source*/
1681:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
1682:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1683:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1684:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Reset the MMS Bits */
ARM GAS  /tmp/cchzUtnS.s 			page 31


1685:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpcr2 &= ~TIM_CR2_MMS;
1686:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the TRGO source */
1687:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
1688:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1689:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Reset the MSM Bit */
1690:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpsmcr &= ~TIM_SMCR_MSM;
1691:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set master mode */
1692:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpsmcr |= sMasterConfig->MasterSlaveMode;
1693:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1694:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Update TIMx CR2 */
1695:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 = tmpcr2;
1696:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1697:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Update TIMx SMCR */
1698:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->SMCR = tmpsmcr;
1699:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1700:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
1701:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1702:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1703:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
1704:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                                      
1705:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1706:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief   Configures the Break feature, dead time, Lock level, OSSI/OSSR State
1707:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         and the AOE(automatic output enable).
1708:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1709:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1710:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  sBreakDeadTimeConfig pointer to a TIM_ConfigBreakDeadConfig_TypeDef structure that
1711:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral. 
1712:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1713:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */ 
1714:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_ConfigBreakDeadTime(TIM_HandleTypeDef *htim, 
1715:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                               TIM_BreakDeadTimeConfigTypeDef * sBreakDeadTimeConfig
1716:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1717:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpbdtr = 0;
1718:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1719:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1720:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAK_INSTANCE(htim->Instance));
1721:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_OSSR_STATE(sBreakDeadTimeConfig->OffStateRunMode));
1722:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_OSSI_STATE(sBreakDeadTimeConfig->OffStateIDLEMode));
1723:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_LOCK_LEVEL(sBreakDeadTimeConfig->LockLevel));
1724:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_DEADTIME(sBreakDeadTimeConfig->DeadTime));
1725:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAK_STATE(sBreakDeadTimeConfig->BreakState));
1726:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAK_POLARITY(sBreakDeadTimeConfig->BreakPolarity));
1727:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->BreakFilter));
1728:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));
1729:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAK2_STATE(sBreakDeadTimeConfig->Break2State));
1730:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAK2_POLARITY(sBreakDeadTimeConfig->Break2Polarity));
1731:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->Break2Filter));
1732:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1733:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check input state */
1734:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
1735:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1736:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
1737:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
1738:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the BDTR bits */
1739:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
1740:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
1741:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
ARM GAS  /tmp/cchzUtnS.s 			page 32


1742:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
1743:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
1744:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
1745:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
1746:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_MOE, sBreakDeadTimeConfig->AutomaticOutput);
1747:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << BDTR_BKF_SHIFT));
1748:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1749:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if (IS_TIM_BKIN2_INSTANCE(htim->Instance))
1750:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1751:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     assert_param(IS_TIM_BREAK2_STATE(sBreakDeadTimeConfig->Break2State));
1752:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     assert_param(IS_TIM_BREAK2_POLARITY(sBreakDeadTimeConfig->Break2Polarity));
1753:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->Break2Filter));
1754:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1755:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Set the BREAK2 input related BDTR bits */
1756:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     MODIFY_REG(tmpbdtr, TIM_BDTR_BK2F, (sBreakDeadTimeConfig->Break2Filter << BDTR_BK2F_SHIFT));
1757:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     MODIFY_REG(tmpbdtr, TIM_BDTR_BK2E, sBreakDeadTimeConfig->Break2State);
1758:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     MODIFY_REG(tmpbdtr, TIM_BDTR_BK2P, sBreakDeadTimeConfig->Break2Polarity);
1759:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1760:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1761:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1762:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1763:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set TIMx_BDTR */
1764:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->BDTR = tmpbdtr;
1765:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1766:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
1767:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1768:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1769:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1770:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #if defined (STM32F765xx) || defined(STM32F767xx) || defined(STM32F769xx) || defined(STM32F777xx) |
1771:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1772:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Configures the break input source.
1773:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim TIM handle.
1774:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  BreakInput Break input to configure
1775:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1776:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_BREAKINPUT_BRK: Timer break input
1777:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_BREAKINPUT_BRK2: Timer break 2 input
1778:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  sBreakInputConfig Break input source configuration
1779:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1780:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1781:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_ConfigBreakInput(TIM_HandleTypeDef *htim,
1782:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                              uint32_t BreakInput,
1783:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                              TIMEx_BreakInputConfigTypeDef *sBreakInputConfig)
1784:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1785:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1786:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmporx = 0;
1787:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t bkin_enable_mask = 0;
1788:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t bkin_polarity_mask = 0;
1789:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t bkin_enable_bitpos = 0;
1790:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t bkin_polarity_bitpos = 0;
1791:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1792:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
1793:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAK_INSTANCE(htim->Instance));
1794:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAKINPUT(BreakInput));
1795:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAKINPUTSOURCE(sBreakInputConfig->Source));
1796:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_BREAKINPUTSOURCE_STATE(sBreakInputConfig->Enable));
1797:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if (sBreakInputConfig->Source != TIM_BREAKINPUTSOURCE_DFSDM1)
1798:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
ARM GAS  /tmp/cchzUtnS.s 			page 33


1799:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     assert_param(IS_TIM_BREAKINPUTSOURCE_POLARITY(sBreakInputConfig->Polarity));
1800:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1801:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1802:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check input state */
1803:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
1804:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1805:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch(sBreakInputConfig->Source)
1806:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1807:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   case TIM_BREAKINPUTSOURCE_BKIN:
1808:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1809:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_enable_mask = TIM1_AF1_BKINE;
1810:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_enable_bitpos = 0;
1811:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_polarity_mask = TIM1_AF1_BKINP;
1812:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_polarity_bitpos = 9;
1813:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1814:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1815:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1816:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   case TIM_BREAKINPUTSOURCE_DFSDM1:
1817:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
1818:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_enable_mask = TIM1_AF1_BKDF1BKE;
1819:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_enable_bitpos = 8;
1820:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
1821:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;    
1822:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1823:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   default:
1824:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1825:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1826:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1827:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch(BreakInput)
1828:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
1829:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_BREAKINPUT_BRK:
1830:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       {
1831:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         /* Get the TIMx_AF1 register value */
1832:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         tmporx = htim->Instance->AF1;
1833:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         
1834:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         /* Enable the break input */
1835:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         tmporx &= ~bkin_enable_mask;
1836:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         tmporx |= (sBreakInputConfig->Enable << bkin_enable_bitpos) & bkin_enable_mask;
1837:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         
1838:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         if(sBreakInputConfig->Source != TIM_BREAKINPUTSOURCE_DFSDM1)
1839:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
1840:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           tmporx &= ~bkin_polarity_mask;
1841:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           tmporx |= (sBreakInputConfig->Polarity << bkin_polarity_bitpos) & bkin_polarity_mask;
1842:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
1843:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         /* Set TIMx_AF1 */
1844:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         htim->Instance->AF1 = tmporx;        
1845:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }
1846:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         break;
1847:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_BREAKINPUT_BRK2:
1848:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       {
1849:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         /* Get the TIMx_AF2 register value */
1850:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         tmporx = htim->Instance->AF2;
1851:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1852:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         /* Enable the break input */
1853:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         tmporx &= ~bkin_enable_mask;
1854:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         tmporx |= (sBreakInputConfig->Enable << bkin_enable_bitpos) & bkin_enable_mask;
1855:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
ARM GAS  /tmp/cchzUtnS.s 			page 34


1856:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         if (sBreakInputConfig->Source != TIM_BREAKINPUTSOURCE_DFSDM1)
1857:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
1858:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           tmporx &= ~bkin_polarity_mask;
1859:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           tmporx |= (sBreakInputConfig->Polarity << bkin_polarity_bitpos) & bkin_polarity_mask;
1860:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
1861:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1862:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         /* Set TIMx_AF2 */
1863:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         htim->Instance->AF2 = tmporx;        
1864:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }
1865:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       break;    
1866:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   default:
1867:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
1868:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
1869:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1870:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
1871:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1872:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1873:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1874:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */
1875:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1876:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1877:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
1878:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1879:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1880:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Remap specifies the TIM input remapping source.
1881:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
1882:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default
1883:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trigger output.
1884:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
1885:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
1886:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
1887:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
1888:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
1889:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
1890:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default
1891:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM11_SPDIF:    SPDIF Frame synchronous   
1892:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
1893:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                                     (HSE divided by a programmable prescaler) 
1894:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_TIM11_MCO1:     TIM11 CH1 input is connected to MCO1    
1895:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1896:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1897:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_RemapConfig(TIM_HandleTypeDef *htim, uint32_t Remap)
1898:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1899:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
1900:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
1901:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check parameters */
1902:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_REMAP_INSTANCE(htim->Instance));
1903:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_REMAP(Remap));
1904:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1905:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the Timer remapping configuration */
1906:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->OR = Remap;
1907:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1908:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_READY;
1909:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1910:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);  
1911:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1912:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
ARM GAS  /tmp/cchzUtnS.s 			page 35


1913:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1914:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1915:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1916:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Group channel 5 and channel 1, 2 or 3
1917:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim TIM handle.
1918:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  OCRef specifies the reference signal(s) the OC5REF is combined with.
1919:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         This parameter can be any combination of the following values:
1920:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         TIM_GROUPCH5_NONE: No effect of OC5REF on OC1REFC, OC2REFC and OC3REFC
1921:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         TIM_GROUPCH5_OC1REFC: OC1REFC is the logical AND of OC1REFC and OC5REF
1922:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         TIM_GROUPCH5_OC2REFC: OC2REFC is the logical AND of OC2REFC and OC5REF
1923:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         TIM_GROUPCH5_OC3REFC: OC3REFC is the logical AND of OC3REFC and OC5REF
1924:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
1925:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1926:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIMEx_GroupChannel5(TIM_HandleTypeDef *htim, uint32_t OCRef)
1927:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1928:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check parameters */
1929:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_COMBINED3PHASEPWM_INSTANCE(htim->Instance));
1930:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_GROUPCH5(OCRef));
1931:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1932:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Process Locked */
1933:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
1934:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1935:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_BUSY;
1936:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1937:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Clear GC5Cx bit fields */
1938:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CCR5 &= ~(TIM_CCR5_GC5C3|TIM_CCR5_GC5C2|TIM_CCR5_GC5C1);
1939:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1940:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set GC5Cx bit fields */
1941:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CCR5 |= OCRef;
1942:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                    
1943:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_READY;                                 
1944:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1945:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
1946:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
1947:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
1948:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1949:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1950:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
1951:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1952:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1953:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx_Exported_Functions_Group6 Extended Callbacks functions 
1954:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief    Extended Callbacks functions
1955:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *
1956:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @verbatim   
1957:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
1958:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                     ##### Extension Callbacks functions #####
1959:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================  
1960:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..]  
1961:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     This section provides Extension TIM callback functions:
1962:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Timer Commutation callback
1963:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     (+) Timer Break callback
1964:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1965:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @endverbatim
1966:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
1967:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1968:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1969:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
ARM GAS  /tmp/cchzUtnS.s 			page 36


1970:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Hall commutation changed callback in non blocking mode 
1971:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1972:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1973:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
1974:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1975:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** __weak void HAL_TIMEx_CommutationCallback(TIM_HandleTypeDef *htim)
1976:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1977:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Prevent unused argument(s) compilation warning */
1978:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   UNUSED(htim);
1979:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
1980:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1981:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****             the HAL_TIMEx_CommutationCallback could be implemented in the user file
1982:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    */
1983:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
1984:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
1985:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
1986:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Hall Break detection callback in non blocking mode 
1987:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
1988:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
1989:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
1990:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
1991:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** __weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
1992:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
1993:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Prevent unused argument(s) compilation warning */
1994:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   UNUSED(htim);
1995:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
1996:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1997:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****             the HAL_TIMEx_BreakCallback could be implemented in the user file
1998:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    */
1999:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
2000:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2001:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2002:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
2003:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2004:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2005:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /** @defgroup TIMEx_Exported_Functions_Group7 Extended Peripheral State functions 
2006:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *  @brief    Extended Peripheral State functions
2007:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  *
2008:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @verbatim   
2009:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================
2010:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                 ##### Extension Peripheral State functions #####
2011:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   ==============================================================================  
2012:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   [..]
2013:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     This subsection permits to get in run-time the status of the peripheral 
2014:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     and the data flow.
2015:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2016:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** @endverbatim
2017:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @{
2018:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2019:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2020:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2021:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Return the TIM Hall Sensor interface state
2022:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim pointer to a TIM_HandleTypeDef structure that contains
2023:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for TIM module.
2024:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL state
2025:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2026:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_TIM_StateTypeDef HAL_TIMEx_HallSensor_GetState(TIM_HandleTypeDef *htim)
ARM GAS  /tmp/cchzUtnS.s 			page 37


2027:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
2028:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return htim->State;
2029:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
2030:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2031:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2032:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
2033:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2034:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2035:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2036:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  TIM DMA Commutation callback. 
2037:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2038:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *                the configuration information for the specified DMA module.
2039:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
2040:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2041:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** void HAL_TIMEx_DMACommutationCplt(DMA_HandleTypeDef *hdma)
2042:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
2043:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2044:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2045:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State= HAL_TIM_STATE_READY;
2046:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2047:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2048:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->CommutationCallback(htim);
2049:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #else
2050:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   HAL_TIMEx_CommutationCallback(htim); 
2051:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2052:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
2053:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2054:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @}
2055:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2056:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2057:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2058:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Configures the OCRef clear feature
2059:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim TIM handle
2060:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  sClearInputConfig pointer to a TIM_ClearInputConfigTypeDef structure that
2061:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         contains the OCREF clear feature and parameters for the TIM peripheral. 
2062:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel specifies the TIM Channel
2063:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
2064:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_1: TIM Channel 1
2065:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_2: TIM Channel 2
2066:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_3: TIM Channel 3
2067:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_4: TIM Channel 4
2068:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_5: TIM Channel 5
2069:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_6: TIM Channel 6
2070:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
2071:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */ 
2072:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIM_ConfigOCrefClear(TIM_HandleTypeDef *htim,
2073:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                            TIM_ClearInputConfigTypeDef *sClearInputConfig,
2074:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                            uint32_t Channel)
2075:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** { 
2076:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpsmcr = 0;
2077:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2078:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */ 
2079:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_OCXREF_CLEAR_INSTANCE(htim->Instance));
2080:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CLEARINPUT_SOURCE(sClearInputConfig->ClearInputSource));
2081:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                         
2082:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check input state */
2083:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
ARM GAS  /tmp/cchzUtnS.s 			page 38


2084:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2085:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (sClearInputConfig->ClearInputSource)
2086:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
2087:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CLEARINPUTSOURCE_NONE:
2088:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2089:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Get the TIMx SMCR register value */
2090:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       tmpsmcr = htim->Instance->SMCR;
2091:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2092:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Clear the ETR Bits */
2093:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
2094:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2095:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set TIMx_SMCR */
2096:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->SMCR = tmpsmcr;
2097:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    }
2098:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2099:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2100:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CLEARINPUTSOURCE_ETR:
2101:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2102:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */ 
2103:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CLEARINPUT_POLARITY(sClearInputConfig->ClearInputPolarity));
2104:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CLEARINPUT_PRESCALER(sClearInputConfig->ClearInputPrescaler));
2105:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CLEARINPUT_FILTER(sClearInputConfig->ClearInputFilter));
2106:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2107:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_ETR_SetConfig(htim->Instance,
2108:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                         sClearInputConfig->ClearInputPrescaler,
2109:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                         sClearInputConfig->ClearInputPolarity,
2110:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                         sClearInputConfig->ClearInputFilter);
2111:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2112:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2113:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:  
2114:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2115:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
2116:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2117:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
2118:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   { 
2119:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
2120:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       {
2121:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         if(sClearInputConfig->ClearInputState != RESET)
2122:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2123:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Enable the Ocref clear feature for Channel 1 */
2124:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR1 |= TIM_CCMR1_OC1CE;
2125:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2126:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         else
2127:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2128:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Disable the Ocref clear feature for Channel 1 */
2129:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1CE;      
2130:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2131:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }    
2132:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       break;
2133:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:    
2134:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       {
2135:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         if(sClearInputConfig->ClearInputState != RESET)
2136:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2137:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Enable the Ocref clear feature for Channel 2 */
2138:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR1 |= TIM_CCMR1_OC2CE;
2139:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2140:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         else
ARM GAS  /tmp/cchzUtnS.s 			page 39


2141:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2142:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Disable the Ocref clear feature for Channel 2 */
2143:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2CE;      
2144:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2145:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }    
2146:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2147:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:    
2148:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       {
2149:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         if(sClearInputConfig->ClearInputState != RESET)
2150:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2151:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Enable the Ocref clear feature for Channel 3 */
2152:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR2 |= TIM_CCMR2_OC3CE;
2153:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2154:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         else
2155:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2156:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Disable the Ocref clear feature for Channel 3 */
2157:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3CE;      
2158:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2159:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }    
2160:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2161:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:    
2162:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       {
2163:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         if(sClearInputConfig->ClearInputState != RESET)
2164:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2165:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Enable the Ocref clear feature for Channel 4 */
2166:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR2 |= TIM_CCMR2_OC4CE;
2167:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2168:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         else
2169:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2170:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Disable the Ocref clear feature for Channel 4 */
2171:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4CE;      
2172:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2173:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }    
2174:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2175:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_5:    
2176:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       {
2177:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         if(sClearInputConfig->ClearInputState != RESET)
2178:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2179:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Enable the Ocref clear feature for Channel 1 */
2180:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR3 |= TIM_CCMR3_OC5CE;
2181:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2182:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         else
2183:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2184:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Disable the Ocref clear feature for Channel 1 */
2185:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5CE;      
2186:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2187:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }    
2188:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2189:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_6:    
2190:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       {
2191:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         if(sClearInputConfig->ClearInputState != RESET)
2192:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
2193:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Enable the Ocref clear feature for Channel 1 */
2194:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR3 |= TIM_CCMR3_OC6CE;
2195:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2196:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         else
2197:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
ARM GAS  /tmp/cchzUtnS.s 			page 40


2198:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           /* Disable the Ocref clear feature for Channel 1 */
2199:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****           htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6CE;      
2200:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
2201:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }    
2202:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2203:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:  
2204:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2205:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   } 
2206:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2207:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
2208:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2209:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;  
2210:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
2211:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2212:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2213:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Initializes the TIM Output Compare Channels according to the specified
2214:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         parameters in the TIM_OC_InitTypeDef.
2215:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim TIM Output Compare handle
2216:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  sConfig TIM Output Compare configuration structure
2217:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel  TIM Channels to configure
2218:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
2219:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2220:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2221:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2222:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected 
2223:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_5: TIM Channel 5 selected 
2224:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_6: TIM Channel 6 selected 
2225:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
2226:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2227:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIM_OC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_OC_InitTypeDef* sConfig, ui
2228:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {  
2229:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
2230:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CHANNELS(Channel)); 
2231:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_OC_MODE(sConfig->OCMode));
2232:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
2233:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2234:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check input state */
2235:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim); 
2236:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2237:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_BUSY;
2238:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2239:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
2240:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
2241:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
2242:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2243:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2244:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance)); 
2245:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2246:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Configure the TIM Channel 1 in Output Compare */
2247:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
2248:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2249:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2250:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2251:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
2252:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2253:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2254:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance)); 
ARM GAS  /tmp/cchzUtnS.s 			page 41


2255:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2256:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Configure the TIM Channel 2 in Output Compare */
2257:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
2258:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2259:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2260:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2261:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
2262:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2263:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2264:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance)); 
2265:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2266:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Configure the TIM Channel 3 in Output Compare */
2267:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
2268:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2269:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2270:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2271:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
2272:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2273:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2274:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance)); 
2275:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2276:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****        /* Configure the TIM Channel 4 in Output Compare */
2277:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****        TIM_OC4_SetConfig(htim->Instance, sConfig);
2278:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2279:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2280:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2281:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_5:
2282:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2283:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2284:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC5_INSTANCE(htim->Instance)); 
2285:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2286:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****        /* Configure the TIM Channel 5 in Output Compare */
2287:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****        TIM_OC5_SetConfig(htim->Instance, sConfig);
2288:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2289:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2290:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2291:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_6:
2292:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2293:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2294:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC6_INSTANCE(htim->Instance)); 
2295:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2296:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****        /* Configure the TIM Channel 6 in Output Compare */
2297:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****        TIM_OC6_SetConfig(htim->Instance, sConfig);
2298:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2299:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2300:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         
2301:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
2302:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;    
2303:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
2304:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2305:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_READY;
2306:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2307:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim); 
2308:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2309:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
2310:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
2311:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
ARM GAS  /tmp/cchzUtnS.s 			page 42


2312:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2313:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Initializes the TIM PWM  channels according to the specified
2314:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *         parameters in the TIM_OC_InitTypeDef.
2315:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  htim TIM PWM handle
2316:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  sConfig TIM PWM configuration structure
2317:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel  TIM Channels to be configured
2318:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
2319:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2320:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2321:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2322:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2323:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_5: TIM Channel 5 selected 
2324:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_CHANNEL_6: TIM Channel 6 selected 
2325:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval HAL status
2326:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2327:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim, 
2328:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                             TIM_OC_InitTypeDef* sConfig, 
2329:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                             uint32_t Channel)
2330:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
2331:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
2332:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_CHANNELS(Channel)); 
2333:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
2334:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
2335:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));
2336:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2337:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check input state */
2338:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
2339:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2340:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_BUSY;
2341:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2342:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   switch (Channel)
2343:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
2344:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_1:
2345:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2346:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2347:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance)); 
2348:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2349:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Configure the Channel 1 in PWM mode */
2350:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
2351:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2352:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the Preload enable bit for channel1 */
2353:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
2354:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2355:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Configure the Output Fast mode */
2356:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
2357:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
2358:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2359:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2360:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2361:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_2:
2362:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2363:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2364:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance)); 
2365:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2366:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Configure the Channel 2 in PWM mode */
2367:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
2368:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
ARM GAS  /tmp/cchzUtnS.s 			page 43


2369:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the Preload enable bit for channel2 */
2370:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
2371:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2372:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Configure the Output Fast mode */
2373:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
2374:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8;
2375:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2376:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2377:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2378:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_3:
2379:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2380:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2381:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance)); 
2382:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2383:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Configure the Channel 3 in PWM mode */
2384:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
2385:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2386:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the Preload enable bit for channel3 */
2387:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
2388:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2389:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Configure the Output Fast mode */
2390:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
2391:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;  
2392:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2393:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2394:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2395:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_4:
2396:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2397:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Check the parameters */
2398:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance)); 
2399:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2400:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Configure the Channel 4 in PWM mode */
2401:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
2402:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2403:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the Preload enable bit for channel4 */
2404:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
2405:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2406:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Configure the Output Fast mode */
2407:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
2408:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8;  
2409:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2410:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2411:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2412:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_5:
2413:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2414:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****        /* Check the parameters */
2415:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC5_INSTANCE(htim->Instance)); 
2416:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2417:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Configure the Channel 5 in PWM mode */
2418:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC5_SetConfig(htim->Instance, sConfig);
2419:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2420:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the Preload enable bit for channel5*/
2421:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
2422:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2423:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Configure the Output Fast mode */
2424:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
2425:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR3 |= sConfig->OCFastMode;  
ARM GAS  /tmp/cchzUtnS.s 			page 44


2426:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2427:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2428:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2429:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_CHANNEL_6:
2430:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
2431:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****        /* Check the parameters */
2432:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       assert_param(IS_TIM_CC6_INSTANCE(htim->Instance)); 
2433:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2434:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Configure the Channel 5 in PWM mode */
2435:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       TIM_OC6_SetConfig(htim->Instance, sConfig);
2436:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2437:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       /* Set the Preload enable bit for channel6 */
2438:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
2439:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
2440:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      /* Configure the Output Fast mode */
2441:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
2442:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR3 |= sConfig->OCFastMode << 8;  
2443:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
2444:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;
2445:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2446:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     default:
2447:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     break;    
2448:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
2449:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2450:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->State = HAL_TIM_STATE_READY;
2451:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2452:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_UNLOCK(htim);
2453:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2454:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return HAL_OK;
2455:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
2456:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2457:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2458:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
2459:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  TIMx to select the TIM peripheral
2460:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  Channel specifies the TIM Channel
2461:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be one of the following values:
2462:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_1: TIM Channel 1
2463:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_2: TIM Channel 2
2464:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *            @arg TIM_Channel_3: TIM Channel 3
2465:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  ChannelNState specifies the TIM Channel CCxNE bit new state.
2466:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   *          This parameter can be: TIM_CCxN_ENABLE or TIM_CCxN_Disable. 
2467:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
2468:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2469:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** static void TIM_CCxNChannelCmd(TIM_TypeDef* TIMx, uint32_t Channel, uint32_t ChannelNState)
2470:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
  28              		.loc 1 2470 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 10B4     		push	{r4}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 4, -4
  38              	.LVL1:
2471:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmp = 0;
ARM GAS  /tmp/cchzUtnS.s 			page 45


2472:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2473:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
2474:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_ADVANCED_INSTANCE(TIMx));
2475:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNELS(Channel));
2476:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2477:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmp = TIM_CCER_CC1NE << Channel;
  39              		.loc 1 2477 0
  40 0002 0423     		movs	r3, #4
  41 0004 03FA01F4 		lsl	r4, r3, r1
  42              	.LVL2:
2478:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2479:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Reset the CCxNE Bit */
2480:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCER &= ~tmp;
  43              		.loc 1 2480 0
  44 0008 036A     		ldr	r3, [r0, #32]
  45 000a 23EA0403 		bic	r3, r3, r4
  46 000e 0362     		str	r3, [r0, #32]
2481:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2482:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set or reset the CCxNE Bit */ 
2483:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCER |= (uint32_t)(ChannelNState << Channel);
  47              		.loc 1 2483 0
  48 0010 036A     		ldr	r3, [r0, #32]
  49 0012 8A40     		lsls	r2, r2, r1
  50              	.LVL3:
  51 0014 1A43     		orrs	r2, r2, r3
  52 0016 0262     		str	r2, [r0, #32]
2484:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
  53              		.loc 1 2484 0
  54 0018 5DF8044B 		ldr	r4, [sp], #4
  55              	.LCFI1:
  56              		.cfi_restore 4
  57              		.cfi_def_cfa_offset 0
  58              	.LVL4:
  59 001c 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE177:
  63 001e 00BF     		.section	.text.TIM_OC5_SetConfig,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  68              	TIM_OC5_SetConfig:
  69              	.LFB178:
2485:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2486:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2487:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Timer Output Compare 5 configuration
2488:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  TIMx to select the TIM peripheral
2489:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  OC_Config The output configuration structure
2490:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
2491:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2492:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
2493:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
  70              		.loc 1 2493 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.LVL5:
ARM GAS  /tmp/cchzUtnS.s 			page 46


  76 0000 70B4     		push	{r4, r5, r6}
  77              	.LCFI2:
  78              		.cfi_def_cfa_offset 12
  79              		.cfi_offset 4, -12
  80              		.cfi_offset 5, -8
  81              		.cfi_offset 6, -4
  82              	.LVL6:
2494:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpccmrx = 0;
2495:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpccer = 0;
2496:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpcr2 = 0; 
2497:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2498:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the output: Reset the CCxE Bit */
2499:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCER &= ~TIM_CCER_CC5E;
  83              		.loc 1 2499 0
  84 0002 036A     		ldr	r3, [r0, #32]
  85 0004 23F48033 		bic	r3, r3, #65536
  86 0008 0362     		str	r3, [r0, #32]
2500:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2501:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Get the TIMx CCER register value */
2502:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccer = TIMx->CCER;
  87              		.loc 1 2502 0
  88 000a 036A     		ldr	r3, [r0, #32]
  89              	.LVL7:
2503:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Get the TIMx CR2 register value */
2504:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpcr2 =  TIMx->CR2; 
  90              		.loc 1 2504 0
  91 000c 4268     		ldr	r2, [r0, #4]
  92              	.LVL8:
2505:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Get the TIMx CCMR1 register value */
2506:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccmrx = TIMx->CCMR3;
  93              		.loc 1 2506 0
  94 000e 446D     		ldr	r4, [r0, #84]
  95              	.LVL9:
2507:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2508:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Reset the Output Compare Mode Bits */
2509:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccmrx &= ~(TIM_CCMR3_OC5M);
  96              		.loc 1 2509 0
  97 0010 0D4D     		ldr	r5, .L6
  98 0012 2540     		ands	r5, r5, r4
  99              	.LVL10:
2510:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Output Compare Mode */
2511:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccmrx |= OC_Config->OCMode;
 100              		.loc 1 2511 0
 101 0014 0C68     		ldr	r4, [r1]
 102 0016 2C43     		orrs	r4, r4, r5
 103              	.LVL11:
2512:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2513:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Reset the Output Polarity level */
2514:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccer &= ~TIM_CCER_CC5P;
 104              		.loc 1 2514 0
 105 0018 23F40033 		bic	r3, r3, #131072
 106              	.LVL12:
2515:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the Output Compare Polarity */
2516:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccer |= (OC_Config->OCPolarity << 16);
 107              		.loc 1 2516 0
 108 001c 8D68     		ldr	r5, [r1, #8]
 109 001e 43EA0543 		orr	r3, r3, r5, lsl #16
ARM GAS  /tmp/cchzUtnS.s 			page 47


 110              	.LVL13:
2517:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2518:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 111              		.loc 1 2518 0
 112 0022 0A4D     		ldr	r5, .L6+4
 113 0024 0A4E     		ldr	r6, .L6+8
 114 0026 A842     		cmp	r0, r5
 115 0028 18BF     		it	ne
 116 002a B042     		cmpne	r0, r6
 117 002c 04D1     		bne	.L4
2519:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {   
2520:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Reset the Output Compare IDLE State */
2521:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     tmpcr2 &= ~TIM_CR2_OIS5;
 118              		.loc 1 2521 0
 119 002e 22F48032 		bic	r2, r2, #65536
 120              	.LVL14:
2522:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Set the Output Idle state */
2523:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     tmpcr2 |= (OC_Config->OCIdleState << 8);
 121              		.loc 1 2523 0
 122 0032 4D69     		ldr	r5, [r1, #20]
 123 0034 42EA0522 		orr	r2, r2, r5, lsl #8
 124              	.LVL15:
 125              	.L4:
2524:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
2525:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Write to TIMx CR2 */
2526:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CR2 = tmpcr2;
 126              		.loc 1 2526 0
 127 0038 4260     		str	r2, [r0, #4]
2527:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2528:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Write to TIMx CCMR3 */
2529:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCMR3 = tmpccmrx;
 128              		.loc 1 2529 0
 129 003a 4465     		str	r4, [r0, #84]
2530:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2531:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the Capture Compare Register value */
2532:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCR5 = OC_Config->Pulse;
 130              		.loc 1 2532 0
 131 003c 4A68     		ldr	r2, [r1, #4]
 132              	.LVL16:
 133 003e 8265     		str	r2, [r0, #88]
2533:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2534:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Write to TIMx CCER */
2535:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCER = tmpccer;  
 134              		.loc 1 2535 0
 135 0040 0362     		str	r3, [r0, #32]
2536:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 136              		.loc 1 2536 0
 137 0042 70BC     		pop	{r4, r5, r6}
 138              	.LCFI3:
 139              		.cfi_restore 6
 140              		.cfi_restore 5
 141              		.cfi_restore 4
 142              		.cfi_def_cfa_offset 0
 143              	.LVL17:
 144 0044 7047     		bx	lr
 145              	.L7:
 146 0046 00BF     		.align	2
ARM GAS  /tmp/cchzUtnS.s 			page 48


 147              	.L6:
 148 0048 8FFFFEFF 		.word	-65649
 149 004c 00040140 		.word	1073808384
 150 0050 00000140 		.word	1073807360
 151              		.cfi_endproc
 152              	.LFE178:
 154              		.section	.text.TIM_OC6_SetConfig,"ax",%progbits
 155              		.align	2
 156              		.thumb
 157              		.thumb_func
 159              	TIM_OC6_SetConfig:
 160              	.LFB179:
2537:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2538:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
2539:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @brief  Timer Output Compare 6 configuration
2540:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  TIMx to select the TIM peripheral
2541:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @param  OC_Config The output configuration structure
2542:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   * @retval None
2543:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   */
2544:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
2545:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** {
 161              		.loc 1 2545 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL18:
 167 0000 70B4     		push	{r4, r5, r6}
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 12
 170              		.cfi_offset 4, -12
 171              		.cfi_offset 5, -8
 172              		.cfi_offset 6, -4
 173              	.LVL19:
2546:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpccmrx = 0;
2547:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpccer = 0;
2548:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpcr2 = 0; 
2549:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2550:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Disable the output: Reset the CCxE Bit */
2551:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCER &= ~TIM_CCER_CC6E;
 174              		.loc 1 2551 0
 175 0002 036A     		ldr	r3, [r0, #32]
 176 0004 23F48013 		bic	r3, r3, #1048576
 177 0008 0362     		str	r3, [r0, #32]
2552:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2553:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Get the TIMx CCER register value */
2554:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccer = TIMx->CCER;
 178              		.loc 1 2554 0
 179 000a 036A     		ldr	r3, [r0, #32]
 180              	.LVL20:
2555:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Get the TIMx CR2 register value */
2556:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpcr2 =  TIMx->CR2; 
 181              		.loc 1 2556 0
 182 000c 4468     		ldr	r4, [r0, #4]
 183              	.LVL21:
2557:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Get the TIMx CCMR1 register value */
2558:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccmrx = TIMx->CCMR3;
ARM GAS  /tmp/cchzUtnS.s 			page 49


 184              		.loc 1 2558 0
 185 000e 456D     		ldr	r5, [r0, #84]
 186              	.LVL22:
2559:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
2560:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Reset the Output Compare Mode Bits */
2561:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccmrx &= ~(TIM_CCMR3_OC6M);
 187              		.loc 1 2561 0
 188 0010 0D4A     		ldr	r2, .L11
 189 0012 2A40     		ands	r2, r2, r5
 190              	.LVL23:
2562:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Output Compare Mode */
2563:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccmrx |= (OC_Config->OCMode << 8);
 191              		.loc 1 2563 0
 192 0014 0D68     		ldr	r5, [r1]
 193 0016 42EA0522 		orr	r2, r2, r5, lsl #8
 194              	.LVL24:
2564:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2565:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Reset the Output Polarity level */
2566:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 195              		.loc 1 2566 0
 196 001a 23F40013 		bic	r3, r3, #2097152
 197              	.LVL25:
2567:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the Output Compare Polarity */
2568:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   tmpccer |= (OC_Config->OCPolarity << 20);
 198              		.loc 1 2568 0
 199 001e 8D68     		ldr	r5, [r1, #8]
 200 0020 43EA0553 		orr	r3, r3, r5, lsl #20
 201              	.LVL26:
2569:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
2570:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 202              		.loc 1 2570 0
 203 0024 094D     		ldr	r5, .L11+4
 204 0026 0A4E     		ldr	r6, .L11+8
 205 0028 A842     		cmp	r0, r5
 206 002a 18BF     		it	ne
 207 002c B042     		cmpne	r0, r6
 208 002e 04D1     		bne	.L9
2571:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {   
2572:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Reset the Output Compare IDLE State */
2573:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     tmpcr2 &= ~TIM_CR2_OIS6;
 209              		.loc 1 2573 0
 210 0030 24F48024 		bic	r4, r4, #262144
 211              	.LVL27:
2574:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Set the Output Idle state */
2575:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     tmpcr2 |= (OC_Config->OCIdleState << 10);
 212              		.loc 1 2575 0
 213 0034 4D69     		ldr	r5, [r1, #20]
 214 0036 44EA8524 		orr	r4, r4, r5, lsl #10
 215              	.LVL28:
 216              	.L9:
2576:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
2577:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2578:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Write to TIMx CR2 */
2579:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CR2 = tmpcr2;
 217              		.loc 1 2579 0
 218 003a 4460     		str	r4, [r0, #4]
2580:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 50


2581:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Write to TIMx CCMR3 */
2582:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCMR3 = tmpccmrx;
 219              		.loc 1 2582 0
 220 003c 4265     		str	r2, [r0, #84]
2583:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2584:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the Capture Compare Register value */
2585:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCR6 = OC_Config->Pulse;
 221              		.loc 1 2585 0
 222 003e 4A68     		ldr	r2, [r1, #4]
 223              	.LVL29:
 224 0040 C265     		str	r2, [r0, #92]
 225              	.LVL30:
2586:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
2587:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Write to TIMx CCER */
2588:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIMx->CCER = tmpccer;  
 226              		.loc 1 2588 0
 227 0042 0362     		str	r3, [r0, #32]
2589:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 228              		.loc 1 2589 0
 229 0044 70BC     		pop	{r4, r5, r6}
 230              	.LCFI5:
 231              		.cfi_restore 6
 232              		.cfi_restore 5
 233              		.cfi_restore 4
 234              		.cfi_def_cfa_offset 0
 235              	.LVL31:
 236 0046 7047     		bx	lr
 237              	.L12:
 238              		.align	2
 239              	.L11:
 240 0048 FF8FFFFE 		.word	-16805889
 241 004c 00040140 		.word	1073808384
 242 0050 00000140 		.word	1073807360
 243              		.cfi_endproc
 244              	.LFE179:
 246              		.section	.text.HAL_TIMEx_HallSensor_MspInit,"ax",%progbits
 247              		.align	2
 248              		.weak	HAL_TIMEx_HallSensor_MspInit
 249              		.thumb
 250              		.thumb_func
 252              	HAL_TIMEx_HallSensor_MspInit:
 253              	.LFB138:
 294:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Prevent unused argument(s) compilation warning */
 254              		.loc 1 294 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LVL32:
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE138:
 264 0002 00BF     		.section	.text.HAL_TIMEx_HallSensor_Init,"ax",%progbits
 265              		.align	2
 266              		.global	HAL_TIMEx_HallSensor_Init
 267              		.thumb
 268              		.thumb_func
ARM GAS  /tmp/cchzUtnS.s 			page 51


 270              	HAL_TIMEx_HallSensor_Init:
 271              	.LFB136:
 165:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_OC_InitTypeDef OC_Config;
 272              		.loc 1 165 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 32
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              	.LVL33:
 169:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 277              		.loc 1 169 0
 278 0000 0028     		cmp	r0, #0
 279 0002 5AD0     		beq	.L17
 165:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_OC_InitTypeDef OC_Config;
 280              		.loc 1 165 0
 281 0004 70B5     		push	{r4, r5, r6, lr}
 282              	.LCFI6:
 283              		.cfi_def_cfa_offset 16
 284              		.cfi_offset 4, -16
 285              		.cfi_offset 5, -12
 286              		.cfi_offset 6, -8
 287              		.cfi_offset 14, -4
 288 0006 88B0     		sub	sp, sp, #32
 289              	.LCFI7:
 290              		.cfi_def_cfa_offset 48
 291 0008 0446     		mov	r4, r0
 292 000a 0E46     		mov	r6, r1
 182:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 293              		.loc 1 182 0
 294 000c 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 295 0010 13F0FF0F 		tst	r3, #255
 296 0014 04D1     		bne	.L16
 185:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 297              		.loc 1 185 0
 298 0016 0023     		movs	r3, #0
 299 0018 80F83C30 		strb	r3, [r0, #60]
 199:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 300              		.loc 1 199 0
 301 001c FFF7FEFF 		bl	HAL_TIMEx_HallSensor_MspInit
 302              	.LVL34:
 303              	.L16:
 204:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 304              		.loc 1 204 0
 305 0020 0223     		movs	r3, #2
 306 0022 84F83D30 		strb	r3, [r4, #61]
 207:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 307              		.loc 1 207 0
 308 0026 211D     		adds	r1, r4, #4
 309 0028 2068     		ldr	r0, [r4]
 310 002a FFF7FEFF 		bl	TIM_Base_SetConfig
 311              	.LVL35:
 210:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 312              		.loc 1 210 0
 313 002e B368     		ldr	r3, [r6, #8]
 314 0030 0322     		movs	r2, #3
 315 0032 3168     		ldr	r1, [r6]
 316 0034 2068     		ldr	r0, [r4]
 317 0036 FFF7FEFF 		bl	TIM_TI1_SetConfig
ARM GAS  /tmp/cchzUtnS.s 			page 52


 318              	.LVL36:
 213:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the IC1PSC value */
 319              		.loc 1 213 0
 320 003a 2268     		ldr	r2, [r4]
 321 003c 9369     		ldr	r3, [r2, #24]
 322 003e 23F00C03 		bic	r3, r3, #12
 323 0042 9361     		str	r3, [r2, #24]
 215:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 324              		.loc 1 215 0
 325 0044 2268     		ldr	r2, [r4]
 326 0046 9169     		ldr	r1, [r2, #24]
 327 0048 7368     		ldr	r3, [r6, #4]
 328 004a 0B43     		orrs	r3, r3, r1
 329 004c 9361     		str	r3, [r2, #24]
 218:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 330              		.loc 1 218 0
 331 004e 2268     		ldr	r2, [r4]
 332 0050 5368     		ldr	r3, [r2, #4]
 333 0052 43F08003 		orr	r3, r3, #128
 334 0056 5360     		str	r3, [r2, #4]
 221:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->SMCR |= TIM_TS_TI1F_ED;
 335              		.loc 1 221 0
 336 0058 2268     		ldr	r2, [r4]
 337 005a 9368     		ldr	r3, [r2, #8]
 338 005c 23F07003 		bic	r3, r3, #112
 339 0060 9360     		str	r3, [r2, #8]
 222:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 340              		.loc 1 222 0
 341 0062 2268     		ldr	r2, [r4]
 342 0064 9368     		ldr	r3, [r2, #8]
 343 0066 43F04003 		orr	r3, r3, #64
 344 006a 9360     		str	r3, [r2, #8]
 225:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->SMCR |= TIM_SLAVEMODE_RESET;
 345              		.loc 1 225 0
 346 006c 2268     		ldr	r2, [r4]
 347 006e 9168     		ldr	r1, [r2, #8]
 348 0070 144B     		ldr	r3, .L20
 349 0072 0B40     		ands	r3, r3, r1
 350 0074 9360     		str	r3, [r2, #8]
 226:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 351              		.loc 1 226 0
 352 0076 2268     		ldr	r2, [r4]
 353 0078 9368     		ldr	r3, [r2, #8]
 354 007a 43F00403 		orr	r3, r3, #4
 355 007e 9360     		str	r3, [r2, #8]
 229:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCIdleState = TIM_OCIDLESTATE_RESET;
 356              		.loc 1 229 0
 357 0080 0025     		movs	r5, #0
 358 0082 0595     		str	r5, [sp, #20]
 230:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCMode = TIM_OCMODE_PWM2;
 359              		.loc 1 230 0
 360 0084 0695     		str	r5, [sp, #24]
 231:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 361              		.loc 1 231 0
 362 0086 7023     		movs	r3, #112
 363 0088 0193     		str	r3, [sp, #4]
 232:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCNPolarity = TIM_OCNPOLARITY_HIGH;
ARM GAS  /tmp/cchzUtnS.s 			page 53


 364              		.loc 1 232 0
 365 008a 0795     		str	r5, [sp, #28]
 233:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.OCPolarity = TIM_OCPOLARITY_HIGH;
 366              		.loc 1 233 0
 367 008c 0495     		str	r5, [sp, #16]
 234:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   OC_Config.Pulse = sConfig->Commutation_Delay; 
 368              		.loc 1 234 0
 369 008e 0395     		str	r5, [sp, #12]
 235:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 370              		.loc 1 235 0
 371 0090 F368     		ldr	r3, [r6, #12]
 372 0092 0293     		str	r3, [sp, #8]
 237:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 373              		.loc 1 237 0
 374 0094 01A9     		add	r1, sp, #4
 375 0096 2068     		ldr	r0, [r4]
 376 0098 FFF7FEFF 		bl	TIM_OC2_SetConfig
 377              	.LVL37:
 241:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= TIM_TRGO_OC2REF; 
 378              		.loc 1 241 0
 379 009c 2268     		ldr	r2, [r4]
 380 009e 5368     		ldr	r3, [r2, #4]
 381 00a0 23F07003 		bic	r3, r3, #112
 382 00a4 5360     		str	r3, [r2, #4]
 242:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 383              		.loc 1 242 0
 384 00a6 2268     		ldr	r2, [r4]
 385 00a8 5368     		ldr	r3, [r2, #4]
 386 00aa 43F05003 		orr	r3, r3, #80
 387 00ae 5360     		str	r3, [r2, #4]
 245:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 388              		.loc 1 245 0
 389 00b0 0123     		movs	r3, #1
 390 00b2 84F83D30 		strb	r3, [r4, #61]
 247:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 391              		.loc 1 247 0
 392 00b6 2846     		mov	r0, r5
 393 00b8 01E0     		b	.L15
 394              	.LVL38:
 395              	.L17:
 396              	.LCFI8:
 397              		.cfi_def_cfa_offset 0
 398              		.cfi_restore 4
 399              		.cfi_restore 5
 400              		.cfi_restore 6
 401              		.cfi_restore 14
 171:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 402              		.loc 1 171 0
 403 00ba 0120     		movs	r0, #1
 404              	.LVL39:
 405 00bc 7047     		bx	lr
 406              	.LVL40:
 407              	.L15:
 408              	.LCFI9:
 409              		.cfi_def_cfa_offset 48
 410              		.cfi_offset 4, -16
 411              		.cfi_offset 5, -12
ARM GAS  /tmp/cchzUtnS.s 			page 54


 412              		.cfi_offset 6, -8
 413              		.cfi_offset 14, -4
 248:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 414              		.loc 1 248 0
 415 00be 08B0     		add	sp, sp, #32
 416              	.LCFI10:
 417              		.cfi_def_cfa_offset 16
 418              		@ sp needed
 419 00c0 70BD     		pop	{r4, r5, r6, pc}
 420              	.LVL41:
 421              	.L21:
 422 00c2 00BF     		.align	2
 423              	.L20:
 424 00c4 F8FFFEFF 		.word	-65544
 425              		.cfi_endproc
 426              	.LFE136:
 428              		.section	.text.HAL_TIMEx_HallSensor_MspDeInit,"ax",%progbits
 429              		.align	2
 430              		.weak	HAL_TIMEx_HallSensor_MspDeInit
 431              		.thumb
 432              		.thumb_func
 434              	HAL_TIMEx_HallSensor_MspDeInit:
 435              	.LFB139:
 310:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Prevent unused argument(s) compilation warning */
 436              		.loc 1 310 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441              	.LVL42:
 442 0000 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE139:
 446 0002 00BF     		.section	.text.HAL_TIMEx_HallSensor_DeInit,"ax",%progbits
 447              		.align	2
 448              		.global	HAL_TIMEx_HallSensor_DeInit
 449              		.thumb
 450              		.thumb_func
 452              	HAL_TIMEx_HallSensor_DeInit:
 453              	.LFB137:
 257:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 454              		.loc 1 257 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              	.LVL43:
 257:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 459              		.loc 1 257 0
 460 0000 10B5     		push	{r4, lr}
 461              	.LCFI11:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 4, -8
 464              		.cfi_offset 14, -4
 465 0002 0446     		mov	r4, r0
 261:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 466              		.loc 1 261 0
 467 0004 0223     		movs	r3, #2
ARM GAS  /tmp/cchzUtnS.s 			page 55


 468 0006 80F83D30 		strb	r3, [r0, #61]
 264:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 469              		.loc 1 264 0
 470 000a 0368     		ldr	r3, [r0]
 471 000c 196A     		ldr	r1, [r3, #32]
 472 000e 41F21112 		movw	r2, #4369
 473 0012 1142     		tst	r1, r2
 474 0014 08D1     		bne	.L24
 264:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 475              		.loc 1 264 0 is_stmt 0 discriminator 1
 476 0016 196A     		ldr	r1, [r3, #32]
 477 0018 40F24442 		movw	r2, #1092
 478 001c 1142     		tst	r1, r2
 479 001e 03D1     		bne	.L24
 264:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 480              		.loc 1 264 0 discriminator 2
 481 0020 1A68     		ldr	r2, [r3]
 482 0022 22F00102 		bic	r2, r2, #1
 483 0026 1A60     		str	r2, [r3]
 484              	.L24:
 275:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 485              		.loc 1 275 0 is_stmt 1
 486 0028 2046     		mov	r0, r4
 487              	.LVL44:
 488 002a FFF7FEFF 		bl	HAL_TIMEx_HallSensor_MspDeInit
 489              	.LVL45:
 279:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 490              		.loc 1 279 0
 491 002e 0020     		movs	r0, #0
 492 0030 84F83D00 		strb	r0, [r4, #61]
 282:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 493              		.loc 1 282 0
 494 0034 84F83C00 		strb	r0, [r4, #60]
 285:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 495              		.loc 1 285 0
 496 0038 10BD     		pop	{r4, pc}
 497              		.cfi_endproc
 498              	.LFE137:
 500 003a 00BF     		.section	.text.HAL_TIMEx_HallSensor_Start,"ax",%progbits
 501              		.align	2
 502              		.global	HAL_TIMEx_HallSensor_Start
 503              		.thumb
 504              		.thumb_func
 506              	HAL_TIMEx_HallSensor_Start:
 507              	.LFB140:
 326:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 508              		.loc 1 326 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              	.LVL46:
 513 0000 10B5     		push	{r4, lr}
 514              	.LCFI12:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 4, -8
 517              		.cfi_offset 14, -4
 518 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cchzUtnS.s 			page 56


 332:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 519              		.loc 1 332 0
 520 0004 0122     		movs	r2, #1
 521 0006 0021     		movs	r1, #0
 522 0008 0068     		ldr	r0, [r0]
 523              	.LVL47:
 524 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 525              	.LVL48:
 335:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 526              		.loc 1 335 0
 527 000e 2268     		ldr	r2, [r4]
 528 0010 1368     		ldr	r3, [r2]
 529 0012 43F00103 		orr	r3, r3, #1
 530 0016 1360     		str	r3, [r2]
 339:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 531              		.loc 1 339 0
 532 0018 0020     		movs	r0, #0
 533 001a 10BD     		pop	{r4, pc}
 534              		.cfi_endproc
 535              	.LFE140:
 537              		.section	.text.HAL_TIMEx_HallSensor_Stop,"ax",%progbits
 538              		.align	2
 539              		.global	HAL_TIMEx_HallSensor_Stop
 540              		.thumb
 541              		.thumb_func
 543              	HAL_TIMEx_HallSensor_Stop:
 544              	.LFB141:
 348:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 545              		.loc 1 348 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              	.LVL49:
 550 0000 10B5     		push	{r4, lr}
 551              	.LCFI13:
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 4, -8
 554              		.cfi_offset 14, -4
 555 0002 0446     		mov	r4, r0
 354:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 556              		.loc 1 354 0
 557 0004 0022     		movs	r2, #0
 558 0006 1146     		mov	r1, r2
 559 0008 0068     		ldr	r0, [r0]
 560              	.LVL50:
 561 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 562              	.LVL51:
 357:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 563              		.loc 1 357 0
 564 000e 2368     		ldr	r3, [r4]
 565 0010 196A     		ldr	r1, [r3, #32]
 566 0012 41F21112 		movw	r2, #4369
 567 0016 1142     		tst	r1, r2
 568 0018 08D1     		bne	.L29
 357:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 569              		.loc 1 357 0 is_stmt 0 discriminator 1
 570 001a 196A     		ldr	r1, [r3, #32]
ARM GAS  /tmp/cchzUtnS.s 			page 57


 571 001c 40F24442 		movw	r2, #1092
 572 0020 1142     		tst	r1, r2
 573 0022 03D1     		bne	.L29
 357:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 574              		.loc 1 357 0 discriminator 2
 575 0024 1A68     		ldr	r2, [r3]
 576 0026 22F00102 		bic	r2, r2, #1
 577 002a 1A60     		str	r2, [r3]
 578              	.L29:
 361:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 579              		.loc 1 361 0 is_stmt 1
 580 002c 0020     		movs	r0, #0
 581 002e 10BD     		pop	{r4, pc}
 582              		.cfi_endproc
 583              	.LFE141:
 585              		.section	.text.HAL_TIMEx_HallSensor_Start_IT,"ax",%progbits
 586              		.align	2
 587              		.global	HAL_TIMEx_HallSensor_Start_IT
 588              		.thumb
 589              		.thumb_func
 591              	HAL_TIMEx_HallSensor_Start_IT:
 592              	.LFB142:
 370:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 593              		.loc 1 370 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              	.LVL52:
 598 0000 10B5     		push	{r4, lr}
 599              	.LCFI14:
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 4, -8
 602              		.cfi_offset 14, -4
 603 0002 0446     		mov	r4, r0
 375:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 604              		.loc 1 375 0
 605 0004 0268     		ldr	r2, [r0]
 606 0006 D368     		ldr	r3, [r2, #12]
 607 0008 43F00203 		orr	r3, r3, #2
 608 000c D360     		str	r3, [r2, #12]
 379:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 609              		.loc 1 379 0
 610 000e 0122     		movs	r2, #1
 611 0010 0021     		movs	r1, #0
 612 0012 0068     		ldr	r0, [r0]
 613              	.LVL53:
 614 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 615              	.LVL54:
 382:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 616              		.loc 1 382 0
 617 0018 2268     		ldr	r2, [r4]
 618 001a 1368     		ldr	r3, [r2]
 619 001c 43F00103 		orr	r3, r3, #1
 620 0020 1360     		str	r3, [r2]
 386:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 621              		.loc 1 386 0
 622 0022 0020     		movs	r0, #0
ARM GAS  /tmp/cchzUtnS.s 			page 58


 623 0024 10BD     		pop	{r4, pc}
 624              		.cfi_endproc
 625              	.LFE142:
 627 0026 00BF     		.section	.text.HAL_TIMEx_HallSensor_Stop_IT,"ax",%progbits
 628              		.align	2
 629              		.global	HAL_TIMEx_HallSensor_Stop_IT
 630              		.thumb
 631              		.thumb_func
 633              	HAL_TIMEx_HallSensor_Stop_IT:
 634              	.LFB143:
 395:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 635              		.loc 1 395 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              	.LVL55:
 640 0000 10B5     		push	{r4, lr}
 641              	.LCFI15:
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 4, -8
 644              		.cfi_offset 14, -4
 645 0002 0446     		mov	r4, r0
 401:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 646              		.loc 1 401 0
 647 0004 0022     		movs	r2, #0
 648 0006 1146     		mov	r1, r2
 649 0008 0068     		ldr	r0, [r0]
 650              	.LVL56:
 651 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 652              	.LVL57:
 404:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 653              		.loc 1 404 0
 654 000e 2268     		ldr	r2, [r4]
 655 0010 D368     		ldr	r3, [r2, #12]
 656 0012 23F00203 		bic	r3, r3, #2
 657 0016 D360     		str	r3, [r2, #12]
 407:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 658              		.loc 1 407 0
 659 0018 2368     		ldr	r3, [r4]
 660 001a 196A     		ldr	r1, [r3, #32]
 661 001c 41F21112 		movw	r2, #4369
 662 0020 1142     		tst	r1, r2
 663 0022 08D1     		bne	.L34
 407:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 664              		.loc 1 407 0 is_stmt 0 discriminator 1
 665 0024 196A     		ldr	r1, [r3, #32]
 666 0026 40F24442 		movw	r2, #1092
 667 002a 1142     		tst	r1, r2
 668 002c 03D1     		bne	.L34
 407:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 669              		.loc 1 407 0 discriminator 2
 670 002e 1A68     		ldr	r2, [r3]
 671 0030 22F00102 		bic	r2, r2, #1
 672 0034 1A60     		str	r2, [r3]
 673              	.L34:
 411:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 674              		.loc 1 411 0 is_stmt 1
ARM GAS  /tmp/cchzUtnS.s 			page 59


 675 0036 0020     		movs	r0, #0
 676 0038 10BD     		pop	{r4, pc}
 677              		.cfi_endproc
 678              	.LFE143:
 680 003a 00BF     		.section	.text.HAL_TIMEx_HallSensor_Start_DMA,"ax",%progbits
 681              		.align	2
 682              		.global	HAL_TIMEx_HallSensor_Start_DMA
 683              		.thumb
 684              		.thumb_func
 686              	HAL_TIMEx_HallSensor_Start_DMA:
 687              	.LFB144:
 422:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 688              		.loc 1 422 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              	.LVL58:
 693 0000 70B5     		push	{r4, r5, r6, lr}
 694              	.LCFI16:
 695              		.cfi_def_cfa_offset 16
 696              		.cfi_offset 4, -16
 697              		.cfi_offset 5, -12
 698              		.cfi_offset 6, -8
 699              		.cfi_offset 14, -4
 426:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 700              		.loc 1 426 0
 701 0002 90F83D50 		ldrb	r5, [r0, #61]	@ zero_extendqisi2
 702 0006 EDB2     		uxtb	r5, r5
 703 0008 022D     		cmp	r5, #2
 704 000a 2FD0     		beq	.L39
 430:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 705              		.loc 1 430 0
 706 000c 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 707 0010 E4B2     		uxtb	r4, r4
 708 0012 012C     		cmp	r4, #1
 709 0014 09D1     		bne	.L38
 432:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 710              		.loc 1 432 0
 711 0016 B1FA81F3 		clz	r3, r1
 712 001a 5B09     		lsrs	r3, r3, #5
 713 001c 002A     		cmp	r2, #0
 714 001e 08BF     		it	eq
 715 0020 0023     		moveq	r3, #0
 716 0022 2BBB     		cbnz	r3, .L40
 438:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 717              		.loc 1 438 0
 718 0024 0223     		movs	r3, #2
 719 0026 80F83D30 		strb	r3, [r0, #61]
 720              	.L38:
 721 002a 1646     		mov	r6, r2
 722 002c 0D46     		mov	r5, r1
 723 002e 0446     		mov	r4, r0
 443:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 724              		.loc 1 443 0
 725 0030 0122     		movs	r2, #1
 726              	.LVL59:
 727 0032 0021     		movs	r1, #0
ARM GAS  /tmp/cchzUtnS.s 			page 60


 728              	.LVL60:
 729 0034 0068     		ldr	r0, [r0]
 730              	.LVL61:
 731 0036 FFF7FEFF 		bl	TIM_CCxChannelCmd
 732              	.LVL62:
 446:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the DMA error callback */
 733              		.loc 1 446 0
 734 003a 636A     		ldr	r3, [r4, #36]
 735 003c 0D4A     		ldr	r2, .L42
 736 003e DA63     		str	r2, [r3, #60]
 448:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 737              		.loc 1 448 0
 738 0040 636A     		ldr	r3, [r4, #36]
 739 0042 0D4A     		ldr	r2, .L42+4
 740 0044 DA64     		str	r2, [r3, #76]
 451:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 741              		.loc 1 451 0
 742 0046 2168     		ldr	r1, [r4]
 743 0048 3346     		mov	r3, r6
 744 004a 2A46     		mov	r2, r5
 745 004c 3431     		adds	r1, r1, #52
 746 004e 606A     		ldr	r0, [r4, #36]
 747 0050 FFF7FEFF 		bl	HAL_DMA_Start_IT
 748              	.LVL63:
 454:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 749              		.loc 1 454 0
 750 0054 2268     		ldr	r2, [r4]
 751 0056 D368     		ldr	r3, [r2, #12]
 752 0058 43F40073 		orr	r3, r3, #512
 753 005c D360     		str	r3, [r2, #12]
 457:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 754              		.loc 1 457 0
 755 005e 2268     		ldr	r2, [r4]
 756 0060 1368     		ldr	r3, [r2]
 757 0062 43F00103 		orr	r3, r3, #1
 758 0066 1360     		str	r3, [r2]
 460:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 759              		.loc 1 460 0
 760 0068 0020     		movs	r0, #0
 761 006a 70BD     		pop	{r4, r5, r6, pc}
 762              	.LVL64:
 763              	.L39:
 428:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 764              		.loc 1 428 0
 765 006c 0220     		movs	r0, #2
 766              	.LVL65:
 767 006e 70BD     		pop	{r4, r5, r6, pc}
 768              	.LVL66:
 769              	.L40:
 434:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 770              		.loc 1 434 0
 771 0070 0120     		movs	r0, #1
 772              	.LVL67:
 461:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 773              		.loc 1 461 0
 774 0072 70BD     		pop	{r4, r5, r6, pc}
 775              	.L43:
ARM GAS  /tmp/cchzUtnS.s 			page 61


 776              		.align	2
 777              	.L42:
 778 0074 00000000 		.word	TIM_DMACaptureCplt
 779 0078 00000000 		.word	TIM_DMAError
 780              		.cfi_endproc
 781              	.LFE144:
 783              		.section	.text.HAL_TIMEx_HallSensor_Stop_DMA,"ax",%progbits
 784              		.align	2
 785              		.global	HAL_TIMEx_HallSensor_Stop_DMA
 786              		.thumb
 787              		.thumb_func
 789              	HAL_TIMEx_HallSensor_Stop_DMA:
 790              	.LFB145:
 470:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 791              		.loc 1 470 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              	.LVL68:
 796 0000 10B5     		push	{r4, lr}
 797              	.LCFI17:
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 4, -8
 800              		.cfi_offset 14, -4
 801 0002 0446     		mov	r4, r0
 476:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 802              		.loc 1 476 0
 803 0004 0022     		movs	r2, #0
 804 0006 1146     		mov	r1, r2
 805 0008 0068     		ldr	r0, [r0]
 806              	.LVL69:
 807 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 808              	.LVL70:
 480:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****  
 809              		.loc 1 480 0
 810 000e 2268     		ldr	r2, [r4]
 811 0010 D368     		ldr	r3, [r2, #12]
 812 0012 23F40073 		bic	r3, r3, #512
 813 0016 D360     		str	r3, [r2, #12]
 483:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 814              		.loc 1 483 0
 815 0018 2368     		ldr	r3, [r4]
 816 001a 196A     		ldr	r1, [r3, #32]
 817 001c 41F21112 		movw	r2, #4369
 818 0020 1142     		tst	r1, r2
 819 0022 08D1     		bne	.L45
 483:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 820              		.loc 1 483 0 is_stmt 0 discriminator 1
 821 0024 196A     		ldr	r1, [r3, #32]
 822 0026 40F24442 		movw	r2, #1092
 823 002a 1142     		tst	r1, r2
 824 002c 03D1     		bne	.L45
 483:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 825              		.loc 1 483 0 discriminator 2
 826 002e 1A68     		ldr	r2, [r3]
 827 0030 22F00102 		bic	r2, r2, #1
 828 0034 1A60     		str	r2, [r3]
ARM GAS  /tmp/cchzUtnS.s 			page 62


 829              	.L45:
 487:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 830              		.loc 1 487 0 is_stmt 1
 831 0036 0020     		movs	r0, #0
 832 0038 10BD     		pop	{r4, pc}
 833              		.cfi_endproc
 834              	.LFE145:
 836 003a 00BF     		.section	.text.HAL_TIMEx_OCN_Start,"ax",%progbits
 837              		.align	2
 838              		.global	HAL_TIMEx_OCN_Start
 839              		.thumb
 840              		.thumb_func
 842              	HAL_TIMEx_OCN_Start:
 843              	.LFB146:
 526:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 844              		.loc 1 526 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              	.LVL71:
 849 0000 10B5     		push	{r4, lr}
 850              	.LCFI18:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 854 0002 0446     		mov	r4, r0
 531:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 855              		.loc 1 531 0
 856 0004 0422     		movs	r2, #4
 857 0006 0068     		ldr	r0, [r0]
 858              	.LVL72:
 859 0008 FFF7FEFF 		bl	TIM_CCxNChannelCmd
 860              	.LVL73:
 534:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 861              		.loc 1 534 0
 862 000c 2268     		ldr	r2, [r4]
 863 000e 536C     		ldr	r3, [r2, #68]
 864 0010 43F40043 		orr	r3, r3, #32768
 865 0014 5364     		str	r3, [r2, #68]
 537:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 866              		.loc 1 537 0
 867 0016 2268     		ldr	r2, [r4]
 868 0018 1368     		ldr	r3, [r2]
 869 001a 43F00103 		orr	r3, r3, #1
 870 001e 1360     		str	r3, [r2]
 541:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 871              		.loc 1 541 0
 872 0020 0020     		movs	r0, #0
 873 0022 10BD     		pop	{r4, pc}
 874              		.cfi_endproc
 875              	.LFE146:
 877              		.section	.text.HAL_TIMEx_OCN_Stop,"ax",%progbits
 878              		.align	2
 879              		.global	HAL_TIMEx_OCN_Stop
 880              		.thumb
 881              		.thumb_func
 883              	HAL_TIMEx_OCN_Stop:
ARM GAS  /tmp/cchzUtnS.s 			page 63


 884              	.LFB147:
 556:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 885              		.loc 1 556 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              	.LVL74:
 890 0000 10B5     		push	{r4, lr}
 891              	.LCFI19:
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 4, -8
 894              		.cfi_offset 14, -4
 895 0002 0446     		mov	r4, r0
 561:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 896              		.loc 1 561 0
 897 0004 0022     		movs	r2, #0
 898 0006 0068     		ldr	r0, [r0]
 899              	.LVL75:
 900 0008 FFF7FEFF 		bl	TIM_CCxNChannelCmd
 901              	.LVL76:
 564:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 902              		.loc 1 564 0
 903 000c 2368     		ldr	r3, [r4]
 904 000e 196A     		ldr	r1, [r3, #32]
 905 0010 41F21112 		movw	r2, #4369
 906 0014 1142     		tst	r1, r2
 907 0016 08D1     		bne	.L50
 564:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 908              		.loc 1 564 0 is_stmt 0 discriminator 1
 909 0018 196A     		ldr	r1, [r3, #32]
 910 001a 40F24442 		movw	r2, #1092
 911 001e 1142     		tst	r1, r2
 912 0020 03D1     		bne	.L50
 564:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 913              		.loc 1 564 0 discriminator 2
 914 0022 5A6C     		ldr	r2, [r3, #68]
 915 0024 22F40042 		bic	r2, r2, #32768
 916 0028 5A64     		str	r2, [r3, #68]
 917              	.L50:
 567:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 918              		.loc 1 567 0 is_stmt 1
 919 002a 2368     		ldr	r3, [r4]
 920 002c 196A     		ldr	r1, [r3, #32]
 921 002e 41F21112 		movw	r2, #4369
 922 0032 1142     		tst	r1, r2
 923 0034 08D1     		bne	.L51
 567:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 924              		.loc 1 567 0 is_stmt 0 discriminator 1
 925 0036 196A     		ldr	r1, [r3, #32]
 926 0038 40F24442 		movw	r2, #1092
 927 003c 1142     		tst	r1, r2
 928 003e 03D1     		bne	.L51
 567:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 929              		.loc 1 567 0 discriminator 2
 930 0040 1A68     		ldr	r2, [r3]
 931 0042 22F00102 		bic	r2, r2, #1
 932 0046 1A60     		str	r2, [r3]
ARM GAS  /tmp/cchzUtnS.s 			page 64


 933              	.L51:
 571:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 934              		.loc 1 571 0 is_stmt 1
 935 0048 0020     		movs	r0, #0
 936 004a 10BD     		pop	{r4, pc}
 937              		.cfi_endproc
 938              	.LFE147:
 940              		.section	.text.HAL_TIMEx_OCN_Start_IT,"ax",%progbits
 941              		.align	2
 942              		.global	HAL_TIMEx_OCN_Start_IT
 943              		.thumb
 944              		.thumb_func
 946              	HAL_TIMEx_OCN_Start_IT:
 947              	.LFB148:
 586:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 948              		.loc 1 586 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              	.LVL77:
 953 0000 10B5     		push	{r4, lr}
 954              	.LCFI20:
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 4, -8
 957              		.cfi_offset 14, -4
 958 0002 0446     		mov	r4, r0
 590:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 959              		.loc 1 590 0
 960 0004 0C29     		cmp	r1, #12
 961 0006 1FD8     		bhi	.L54
 962 0008 DFE801F0 		tbb	[pc, r1]
 963              	.L56:
 964 000c 07       		.byte	(.L55-.L56)/2
 965 000d 1E       		.byte	(.L54-.L56)/2
 966 000e 1E       		.byte	(.L54-.L56)/2
 967 000f 1E       		.byte	(.L54-.L56)/2
 968 0010 0D       		.byte	(.L57-.L56)/2
 969 0011 1E       		.byte	(.L54-.L56)/2
 970 0012 1E       		.byte	(.L54-.L56)/2
 971 0013 1E       		.byte	(.L54-.L56)/2
 972 0014 13       		.byte	(.L58-.L56)/2
 973 0015 1E       		.byte	(.L54-.L56)/2
 974 0016 1E       		.byte	(.L54-.L56)/2
 975 0017 1E       		.byte	(.L54-.L56)/2
 976 0018 19       		.byte	(.L59-.L56)/2
 977 0019 00       		.p2align 1
 978              	.L55:
 595:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 979              		.loc 1 595 0
 980 001a 0268     		ldr	r2, [r0]
 981 001c D368     		ldr	r3, [r2, #12]
 982 001e 43F00203 		orr	r3, r3, #2
 983 0022 D360     		str	r3, [r2, #12]
 597:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 984              		.loc 1 597 0
 985 0024 10E0     		b	.L54
 986              	.L57:
ARM GAS  /tmp/cchzUtnS.s 			page 65


 602:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 987              		.loc 1 602 0
 988 0026 0268     		ldr	r2, [r0]
 989 0028 D368     		ldr	r3, [r2, #12]
 990 002a 43F00403 		orr	r3, r3, #4
 991 002e D360     		str	r3, [r2, #12]
 604:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 992              		.loc 1 604 0
 993 0030 0AE0     		b	.L54
 994              	.L58:
 609:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 995              		.loc 1 609 0
 996 0032 0268     		ldr	r2, [r0]
 997 0034 D368     		ldr	r3, [r2, #12]
 998 0036 43F00803 		orr	r3, r3, #8
 999 003a D360     		str	r3, [r2, #12]
 611:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1000              		.loc 1 611 0
 1001 003c 04E0     		b	.L54
 1002              	.L59:
 616:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1003              		.loc 1 616 0
 1004 003e 0268     		ldr	r2, [r0]
 1005 0040 D368     		ldr	r3, [r2, #12]
 1006 0042 43F01003 		orr	r3, r3, #16
 1007 0046 D360     		str	r3, [r2, #12]
 1008              	.L54:
 625:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1009              		.loc 1 625 0
 1010 0048 2268     		ldr	r2, [r4]
 1011 004a D368     		ldr	r3, [r2, #12]
 1012 004c 43F08003 		orr	r3, r3, #128
 1013 0050 D360     		str	r3, [r2, #12]
 628:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1014              		.loc 1 628 0
 1015 0052 0422     		movs	r2, #4
 1016 0054 2068     		ldr	r0, [r4]
 1017              	.LVL78:
 1018 0056 FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1019              	.LVL79:
 631:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1020              		.loc 1 631 0
 1021 005a 2268     		ldr	r2, [r4]
 1022 005c 536C     		ldr	r3, [r2, #68]
 1023 005e 43F40043 		orr	r3, r3, #32768
 1024 0062 5364     		str	r3, [r2, #68]
 634:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1025              		.loc 1 634 0
 1026 0064 2268     		ldr	r2, [r4]
 1027 0066 1368     		ldr	r3, [r2]
 1028 0068 43F00103 		orr	r3, r3, #1
 1029 006c 1360     		str	r3, [r2]
 638:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1030              		.loc 1 638 0
 1031 006e 0020     		movs	r0, #0
 1032 0070 10BD     		pop	{r4, pc}
 1033              		.cfi_endproc
ARM GAS  /tmp/cchzUtnS.s 			page 66


 1034              	.LFE148:
 1036 0072 00BF     		.section	.text.HAL_TIMEx_OCN_Stop_IT,"ax",%progbits
 1037              		.align	2
 1038              		.global	HAL_TIMEx_OCN_Stop_IT
 1039              		.thumb
 1040              		.thumb_func
 1042              	HAL_TIMEx_OCN_Stop_IT:
 1043              	.LFB149:
 653:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpccer = 0; 
 1044              		.loc 1 653 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048              	.LVL80:
 1049 0000 10B5     		push	{r4, lr}
 1050              	.LCFI21:
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 4, -8
 1053              		.cfi_offset 14, -4
 1054 0002 0446     		mov	r4, r0
 1055              	.LVL81:
 659:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1056              		.loc 1 659 0
 1057 0004 0C29     		cmp	r1, #12
 1058 0006 1FD8     		bhi	.L62
 1059 0008 DFE801F0 		tbb	[pc, r1]
 1060              	.L64:
 1061 000c 07       		.byte	(.L63-.L64)/2
 1062 000d 1E       		.byte	(.L62-.L64)/2
 1063 000e 1E       		.byte	(.L62-.L64)/2
 1064 000f 1E       		.byte	(.L62-.L64)/2
 1065 0010 0D       		.byte	(.L65-.L64)/2
 1066 0011 1E       		.byte	(.L62-.L64)/2
 1067 0012 1E       		.byte	(.L62-.L64)/2
 1068 0013 1E       		.byte	(.L62-.L64)/2
 1069 0014 13       		.byte	(.L66-.L64)/2
 1070 0015 1E       		.byte	(.L62-.L64)/2
 1071 0016 1E       		.byte	(.L62-.L64)/2
 1072 0017 1E       		.byte	(.L62-.L64)/2
 1073 0018 19       		.byte	(.L67-.L64)/2
 1074 0019 00       		.p2align 1
 1075              	.L63:
 664:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1076              		.loc 1 664 0
 1077 001a 0268     		ldr	r2, [r0]
 1078 001c D368     		ldr	r3, [r2, #12]
 1079 001e 23F00203 		bic	r3, r3, #2
 1080 0022 D360     		str	r3, [r2, #12]
 666:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1081              		.loc 1 666 0
 1082 0024 10E0     		b	.L62
 1083              	.L65:
 671:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1084              		.loc 1 671 0
 1085 0026 0268     		ldr	r2, [r0]
 1086 0028 D368     		ldr	r3, [r2, #12]
 1087 002a 23F00403 		bic	r3, r3, #4
ARM GAS  /tmp/cchzUtnS.s 			page 67


 1088 002e D360     		str	r3, [r2, #12]
 673:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1089              		.loc 1 673 0
 1090 0030 0AE0     		b	.L62
 1091              	.L66:
 678:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1092              		.loc 1 678 0
 1093 0032 0268     		ldr	r2, [r0]
 1094 0034 D368     		ldr	r3, [r2, #12]
 1095 0036 23F00803 		bic	r3, r3, #8
 1096 003a D360     		str	r3, [r2, #12]
 680:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1097              		.loc 1 680 0
 1098 003c 04E0     		b	.L62
 1099              	.L67:
 685:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1100              		.loc 1 685 0
 1101 003e 0268     		ldr	r2, [r0]
 1102 0040 D368     		ldr	r3, [r2, #12]
 1103 0042 23F01003 		bic	r3, r3, #16
 1104 0046 D360     		str	r3, [r2, #12]
 1105              	.L62:
 694:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1106              		.loc 1 694 0
 1107 0048 0022     		movs	r2, #0
 1108 004a 2068     		ldr	r0, [r4]
 1109              	.LVL82:
 1110 004c FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1111              	.LVL83:
 697:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if ((tmpccer & (TIM_CCER_CC1NE | TIM_CCER_CC2NE | TIM_CCER_CC3NE)) == RESET)
 1112              		.loc 1 697 0
 1113 0050 2368     		ldr	r3, [r4]
 1114 0052 196A     		ldr	r1, [r3, #32]
 1115              	.LVL84:
 698:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1116              		.loc 1 698 0
 1117 0054 40F24442 		movw	r2, #1092
 1118 0058 1142     		tst	r1, r2
 1119 005a 03D1     		bne	.L68
 700:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 1120              		.loc 1 700 0
 1121 005c DA68     		ldr	r2, [r3, #12]
 1122 005e 22F08002 		bic	r2, r2, #128
 1123 0062 DA60     		str	r2, [r3, #12]
 1124              	.L68:
 704:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1125              		.loc 1 704 0
 1126 0064 2368     		ldr	r3, [r4]
 1127 0066 196A     		ldr	r1, [r3, #32]
 1128              	.LVL85:
 1129 0068 41F21112 		movw	r2, #4369
 1130 006c 1142     		tst	r1, r2
 1131 006e 08D1     		bne	.L69
 704:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1132              		.loc 1 704 0 is_stmt 0 discriminator 1
 1133 0070 196A     		ldr	r1, [r3, #32]
 1134 0072 40F24442 		movw	r2, #1092
ARM GAS  /tmp/cchzUtnS.s 			page 68


 1135 0076 1142     		tst	r1, r2
 1136 0078 03D1     		bne	.L69
 704:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1137              		.loc 1 704 0 discriminator 2
 1138 007a 5A6C     		ldr	r2, [r3, #68]
 1139 007c 22F40042 		bic	r2, r2, #32768
 1140 0080 5A64     		str	r2, [r3, #68]
 1141              	.L69:
 707:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1142              		.loc 1 707 0 is_stmt 1
 1143 0082 2368     		ldr	r3, [r4]
 1144 0084 196A     		ldr	r1, [r3, #32]
 1145 0086 41F21112 		movw	r2, #4369
 1146 008a 1142     		tst	r1, r2
 1147 008c 08D1     		bne	.L70
 707:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1148              		.loc 1 707 0 is_stmt 0 discriminator 1
 1149 008e 196A     		ldr	r1, [r3, #32]
 1150 0090 40F24442 		movw	r2, #1092
 1151 0094 1142     		tst	r1, r2
 1152 0096 03D1     		bne	.L70
 707:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1153              		.loc 1 707 0 discriminator 2
 1154 0098 1A68     		ldr	r2, [r3]
 1155 009a 22F00102 		bic	r2, r2, #1
 1156 009e 1A60     		str	r2, [r3]
 1157              	.L70:
 711:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1158              		.loc 1 711 0 is_stmt 1
 1159 00a0 0020     		movs	r0, #0
 1160 00a2 10BD     		pop	{r4, pc}
 1161              		.cfi_endproc
 1162              	.LFE149:
 1164              		.section	.text.HAL_TIMEx_OCN_Start_DMA,"ax",%progbits
 1165              		.align	2
 1166              		.global	HAL_TIMEx_OCN_Start_DMA
 1167              		.thumb
 1168              		.thumb_func
 1170              	HAL_TIMEx_OCN_Start_DMA:
 1171              	.LFB150:
 728:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 1172              		.loc 1 728 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              	.LVL86:
 1177 0000 70B5     		push	{r4, r5, r6, lr}
 1178              	.LCFI22:
 1179              		.cfi_def_cfa_offset 16
 1180              		.cfi_offset 4, -16
 1181              		.cfi_offset 5, -12
 1182              		.cfi_offset 6, -8
 1183              		.cfi_offset 14, -4
 732:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1184              		.loc 1 732 0
 1185 0002 90F83D50 		ldrb	r5, [r0, #61]	@ zero_extendqisi2
 1186 0006 EDB2     		uxtb	r5, r5
ARM GAS  /tmp/cchzUtnS.s 			page 69


 1187 0008 022D     		cmp	r5, #2
 1188 000a 75D0     		beq	.L81
 736:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1189              		.loc 1 736 0
 1190 000c 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1191 0010 E4B2     		uxtb	r4, r4
 1192 0012 012C     		cmp	r4, #1
 1193 0014 0AD1     		bne	.L74
 738:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 1194              		.loc 1 738 0
 1195 0016 B2FA82F4 		clz	r4, r2
 1196 001a 6409     		lsrs	r4, r4, #5
 1197 001c 002B     		cmp	r3, #0
 1198 001e 08BF     		it	eq
 1199 0020 0024     		moveq	r4, #0
 1200 0022 002C     		cmp	r4, #0
 1201 0024 6AD1     		bne	.L82
 744:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1202              		.loc 1 744 0
 1203 0026 0224     		movs	r4, #2
 1204 0028 80F83D40 		strb	r4, [r0, #61]
 1205              	.L74:
 1206 002c 1646     		mov	r6, r2
 1207 002e 0D46     		mov	r5, r1
 1208 0030 0446     		mov	r4, r0
 747:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1209              		.loc 1 747 0
 1210 0032 0C29     		cmp	r1, #12
 1211 0034 4FD8     		bhi	.L75
 1212 0036 DFE801F0 		tbb	[pc, r1]
 1213              	.LVL87:
 1214              	.L77:
 1215 003a 07       		.byte	(.L76-.L77)/2
 1216 003b 4E       		.byte	(.L75-.L77)/2
 1217 003c 4E       		.byte	(.L75-.L77)/2
 1218 003d 4E       		.byte	(.L75-.L77)/2
 1219 003e 19       		.byte	(.L78-.L77)/2
 1220 003f 4E       		.byte	(.L75-.L77)/2
 1221 0040 4E       		.byte	(.L75-.L77)/2
 1222 0041 4E       		.byte	(.L75-.L77)/2
 1223 0042 2B       		.byte	(.L79-.L77)/2
 1224 0043 4E       		.byte	(.L75-.L77)/2
 1225 0044 4E       		.byte	(.L75-.L77)/2
 1226 0045 4E       		.byte	(.L75-.L77)/2
 1227 0046 3D       		.byte	(.L80-.L77)/2
 1228 0047 00       		.p2align 1
 1229              	.L76:
 752:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 1230              		.loc 1 752 0
 1231 0048 426A     		ldr	r2, [r0, #36]
 1232 004a 2D49     		ldr	r1, .L84
 1233              	.LVL88:
 1234 004c D163     		str	r1, [r2, #60]
 755:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1235              		.loc 1 755 0
 1236 004e 426A     		ldr	r2, [r0, #36]
 1237 0050 2C49     		ldr	r1, .L84+4
ARM GAS  /tmp/cchzUtnS.s 			page 70


 1238 0052 D164     		str	r1, [r2, #76]
 758:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1239              		.loc 1 758 0
 1240 0054 0268     		ldr	r2, [r0]
 1241 0056 3432     		adds	r2, r2, #52
 1242 0058 3146     		mov	r1, r6
 1243 005a 406A     		ldr	r0, [r0, #36]
 1244              	.LVL89:
 1245 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1246              	.LVL90:
 761:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1247              		.loc 1 761 0
 1248 0060 2268     		ldr	r2, [r4]
 1249 0062 D368     		ldr	r3, [r2, #12]
 1250 0064 43F40073 		orr	r3, r3, #512
 1251 0068 D360     		str	r3, [r2, #12]
 763:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1252              		.loc 1 763 0
 1253 006a 34E0     		b	.L75
 1254              	.LVL91:
 1255              	.L78:
 768:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 1256              		.loc 1 768 0
 1257 006c 826A     		ldr	r2, [r0, #40]
 1258 006e 2449     		ldr	r1, .L84
 1259              	.LVL92:
 1260 0070 D163     		str	r1, [r2, #60]
 771:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1261              		.loc 1 771 0
 1262 0072 826A     		ldr	r2, [r0, #40]
 1263 0074 2349     		ldr	r1, .L84+4
 1264 0076 D164     		str	r1, [r2, #76]
 774:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1265              		.loc 1 774 0
 1266 0078 0268     		ldr	r2, [r0]
 1267 007a 3832     		adds	r2, r2, #56
 1268 007c 3146     		mov	r1, r6
 1269 007e 806A     		ldr	r0, [r0, #40]
 1270              	.LVL93:
 1271 0080 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1272              	.LVL94:
 777:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1273              		.loc 1 777 0
 1274 0084 2268     		ldr	r2, [r4]
 1275 0086 D368     		ldr	r3, [r2, #12]
 1276 0088 43F48063 		orr	r3, r3, #1024
 1277 008c D360     		str	r3, [r2, #12]
 779:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1278              		.loc 1 779 0
 1279 008e 22E0     		b	.L75
 1280              	.LVL95:
 1281              	.L79:
 784:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 1282              		.loc 1 784 0
 1283 0090 C26A     		ldr	r2, [r0, #44]
 1284 0092 1B49     		ldr	r1, .L84
 1285              	.LVL96:
ARM GAS  /tmp/cchzUtnS.s 			page 71


 1286 0094 D163     		str	r1, [r2, #60]
 787:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1287              		.loc 1 787 0
 1288 0096 C26A     		ldr	r2, [r0, #44]
 1289 0098 1A49     		ldr	r1, .L84+4
 1290 009a D164     		str	r1, [r2, #76]
 790:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1291              		.loc 1 790 0
 1292 009c 0268     		ldr	r2, [r0]
 1293 009e 3C32     		adds	r2, r2, #60
 1294 00a0 3146     		mov	r1, r6
 1295 00a2 C06A     		ldr	r0, [r0, #44]
 1296              	.LVL97:
 1297 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1298              	.LVL98:
 793:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1299              		.loc 1 793 0
 1300 00a8 2268     		ldr	r2, [r4]
 1301 00aa D368     		ldr	r3, [r2, #12]
 1302 00ac 43F40063 		orr	r3, r3, #2048
 1303 00b0 D360     		str	r3, [r2, #12]
 795:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1304              		.loc 1 795 0
 1305 00b2 10E0     		b	.L75
 1306              	.LVL99:
 1307              	.L80:
 800:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 1308              		.loc 1 800 0
 1309 00b4 026B     		ldr	r2, [r0, #48]
 1310 00b6 1249     		ldr	r1, .L84
 1311              	.LVL100:
 1312 00b8 D163     		str	r1, [r2, #60]
 803:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1313              		.loc 1 803 0
 1314 00ba 026B     		ldr	r2, [r0, #48]
 1315 00bc 1149     		ldr	r1, .L84+4
 1316 00be D164     		str	r1, [r2, #76]
 806:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1317              		.loc 1 806 0
 1318 00c0 0268     		ldr	r2, [r0]
 1319 00c2 4032     		adds	r2, r2, #64
 1320 00c4 3146     		mov	r1, r6
 1321 00c6 006B     		ldr	r0, [r0, #48]
 1322              	.LVL101:
 1323 00c8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1324              	.LVL102:
 809:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1325              		.loc 1 809 0
 1326 00cc 2268     		ldr	r2, [r4]
 1327 00ce D368     		ldr	r3, [r2, #12]
 1328 00d0 43F48053 		orr	r3, r3, #4096
 1329 00d4 D360     		str	r3, [r2, #12]
 1330              	.L75:
 818:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1331              		.loc 1 818 0
 1332 00d6 0422     		movs	r2, #4
 1333 00d8 2946     		mov	r1, r5
ARM GAS  /tmp/cchzUtnS.s 			page 72


 1334 00da 2068     		ldr	r0, [r4]
 1335 00dc FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1336              	.LVL103:
 821:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1337              		.loc 1 821 0
 1338 00e0 2268     		ldr	r2, [r4]
 1339 00e2 536C     		ldr	r3, [r2, #68]
 1340 00e4 43F40043 		orr	r3, r3, #32768
 1341 00e8 5364     		str	r3, [r2, #68]
 824:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1342              		.loc 1 824 0
 1343 00ea 2268     		ldr	r2, [r4]
 1344 00ec 1368     		ldr	r3, [r2]
 1345 00ee 43F00103 		orr	r3, r3, #1
 1346 00f2 1360     		str	r3, [r2]
 827:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 1347              		.loc 1 827 0
 1348 00f4 0020     		movs	r0, #0
 1349 00f6 70BD     		pop	{r4, r5, r6, pc}
 1350              	.LVL104:
 1351              	.L81:
 734:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 1352              		.loc 1 734 0
 1353 00f8 0220     		movs	r0, #2
 1354              	.LVL105:
 1355 00fa 70BD     		pop	{r4, r5, r6, pc}
 1356              	.LVL106:
 1357              	.L82:
 740:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1358              		.loc 1 740 0
 1359 00fc 0120     		movs	r0, #1
 1360              	.LVL107:
 828:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1361              		.loc 1 828 0
 1362 00fe 70BD     		pop	{r4, r5, r6, pc}
 1363              	.L85:
 1364              		.align	2
 1365              	.L84:
 1366 0100 00000000 		.word	TIM_DMADelayPulseCplt
 1367 0104 00000000 		.word	TIM_DMAError
 1368              		.cfi_endproc
 1369              	.LFE150:
 1371              		.section	.text.HAL_TIMEx_OCN_Stop_DMA,"ax",%progbits
 1372              		.align	2
 1373              		.global	HAL_TIMEx_OCN_Stop_DMA
 1374              		.thumb
 1375              		.thumb_func
 1377              	HAL_TIMEx_OCN_Stop_DMA:
 1378              	.LFB151:
 843:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 1379              		.loc 1 843 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383              	.LVL108:
 1384 0000 10B5     		push	{r4, lr}
 1385              	.LCFI23:
ARM GAS  /tmp/cchzUtnS.s 			page 73


 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 4, -8
 1388              		.cfi_offset 14, -4
 1389 0002 0446     		mov	r4, r0
 847:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1390              		.loc 1 847 0
 1391 0004 0C29     		cmp	r1, #12
 1392 0006 1FD8     		bhi	.L87
 1393 0008 DFE801F0 		tbb	[pc, r1]
 1394              	.L89:
 1395 000c 07       		.byte	(.L88-.L89)/2
 1396 000d 1E       		.byte	(.L87-.L89)/2
 1397 000e 1E       		.byte	(.L87-.L89)/2
 1398 000f 1E       		.byte	(.L87-.L89)/2
 1399 0010 0D       		.byte	(.L90-.L89)/2
 1400 0011 1E       		.byte	(.L87-.L89)/2
 1401 0012 1E       		.byte	(.L87-.L89)/2
 1402 0013 1E       		.byte	(.L87-.L89)/2
 1403 0014 13       		.byte	(.L91-.L89)/2
 1404 0015 1E       		.byte	(.L87-.L89)/2
 1405 0016 1E       		.byte	(.L87-.L89)/2
 1406 0017 1E       		.byte	(.L87-.L89)/2
 1407 0018 19       		.byte	(.L92-.L89)/2
 1408 0019 00       		.p2align 1
 1409              	.L88:
 852:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1410              		.loc 1 852 0
 1411 001a 0268     		ldr	r2, [r0]
 1412 001c D368     		ldr	r3, [r2, #12]
 1413 001e 23F40073 		bic	r3, r3, #512
 1414 0022 D360     		str	r3, [r2, #12]
 854:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1415              		.loc 1 854 0
 1416 0024 10E0     		b	.L87
 1417              	.L90:
 859:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1418              		.loc 1 859 0
 1419 0026 0268     		ldr	r2, [r0]
 1420 0028 D368     		ldr	r3, [r2, #12]
 1421 002a 23F48063 		bic	r3, r3, #1024
 1422 002e D360     		str	r3, [r2, #12]
 861:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1423              		.loc 1 861 0
 1424 0030 0AE0     		b	.L87
 1425              	.L91:
 866:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1426              		.loc 1 866 0
 1427 0032 0268     		ldr	r2, [r0]
 1428 0034 D368     		ldr	r3, [r2, #12]
 1429 0036 23F40063 		bic	r3, r3, #2048
 1430 003a D360     		str	r3, [r2, #12]
 868:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1431              		.loc 1 868 0
 1432 003c 04E0     		b	.L87
 1433              	.L92:
 873:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1434              		.loc 1 873 0
ARM GAS  /tmp/cchzUtnS.s 			page 74


 1435 003e 0268     		ldr	r2, [r0]
 1436 0040 D368     		ldr	r3, [r2, #12]
 1437 0042 23F48053 		bic	r3, r3, #4096
 1438 0046 D360     		str	r3, [r2, #12]
 1439              	.L87:
 882:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1440              		.loc 1 882 0
 1441 0048 0022     		movs	r2, #0
 1442 004a 2068     		ldr	r0, [r4]
 1443              	.LVL109:
 1444 004c FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1445              	.LVL110:
 885:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1446              		.loc 1 885 0
 1447 0050 2368     		ldr	r3, [r4]
 1448 0052 196A     		ldr	r1, [r3, #32]
 1449 0054 41F21112 		movw	r2, #4369
 1450 0058 1142     		tst	r1, r2
 1451 005a 08D1     		bne	.L93
 885:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1452              		.loc 1 885 0 is_stmt 0 discriminator 1
 1453 005c 196A     		ldr	r1, [r3, #32]
 1454 005e 40F24442 		movw	r2, #1092
 1455 0062 1142     		tst	r1, r2
 1456 0064 03D1     		bne	.L93
 885:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1457              		.loc 1 885 0 discriminator 2
 1458 0066 5A6C     		ldr	r2, [r3, #68]
 1459 0068 22F40042 		bic	r2, r2, #32768
 1460 006c 5A64     		str	r2, [r3, #68]
 1461              	.L93:
 888:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1462              		.loc 1 888 0 is_stmt 1
 1463 006e 2368     		ldr	r3, [r4]
 1464 0070 196A     		ldr	r1, [r3, #32]
 1465 0072 41F21112 		movw	r2, #4369
 1466 0076 1142     		tst	r1, r2
 1467 0078 08D1     		bne	.L94
 888:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1468              		.loc 1 888 0 is_stmt 0 discriminator 1
 1469 007a 196A     		ldr	r1, [r3, #32]
 1470 007c 40F24442 		movw	r2, #1092
 1471 0080 1142     		tst	r1, r2
 1472 0082 03D1     		bne	.L94
 888:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1473              		.loc 1 888 0 discriminator 2
 1474 0084 1A68     		ldr	r2, [r3]
 1475 0086 22F00102 		bic	r2, r2, #1
 1476 008a 1A60     		str	r2, [r3]
 1477              	.L94:
 891:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1478              		.loc 1 891 0 is_stmt 1
 1479 008c 0123     		movs	r3, #1
 1480 008e 84F83D30 		strb	r3, [r4, #61]
 895:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1481              		.loc 1 895 0
 1482 0092 0020     		movs	r0, #0
ARM GAS  /tmp/cchzUtnS.s 			page 75


 1483 0094 10BD     		pop	{r4, pc}
 1484              		.cfi_endproc
 1485              	.LFE151:
 1487 0096 00BF     		.section	.text.HAL_TIMEx_PWMN_Start,"ax",%progbits
 1488              		.align	2
 1489              		.global	HAL_TIMEx_PWMN_Start
 1490              		.thumb
 1491              		.thumb_func
 1493              	HAL_TIMEx_PWMN_Start:
 1494              	.LFB152:
 943:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 1495              		.loc 1 943 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL111:
 1500 0000 10B5     		push	{r4, lr}
 1501              	.LCFI24:
 1502              		.cfi_def_cfa_offset 8
 1503              		.cfi_offset 4, -8
 1504              		.cfi_offset 14, -4
 1505 0002 0446     		mov	r4, r0
 948:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1506              		.loc 1 948 0
 1507 0004 0422     		movs	r2, #4
 1508 0006 0068     		ldr	r0, [r0]
 1509              	.LVL112:
 1510 0008 FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1511              	.LVL113:
 951:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1512              		.loc 1 951 0
 1513 000c 2268     		ldr	r2, [r4]
 1514 000e 536C     		ldr	r3, [r2, #68]
 1515 0010 43F40043 		orr	r3, r3, #32768
 1516 0014 5364     		str	r3, [r2, #68]
 954:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1517              		.loc 1 954 0
 1518 0016 2268     		ldr	r2, [r4]
 1519 0018 1368     		ldr	r3, [r2]
 1520 001a 43F00103 		orr	r3, r3, #1
 1521 001e 1360     		str	r3, [r2]
 958:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1522              		.loc 1 958 0
 1523 0020 0020     		movs	r0, #0
 1524 0022 10BD     		pop	{r4, pc}
 1525              		.cfi_endproc
 1526              	.LFE152:
 1528              		.section	.text.HAL_TIMEx_PWMN_Stop,"ax",%progbits
 1529              		.align	2
 1530              		.global	HAL_TIMEx_PWMN_Stop
 1531              		.thumb
 1532              		.thumb_func
 1534              	HAL_TIMEx_PWMN_Stop:
 1535              	.LFB153:
 972:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 1536              		.loc 1 972 0
 1537              		.cfi_startproc
ARM GAS  /tmp/cchzUtnS.s 			page 76


 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 1540              	.LVL114:
 1541 0000 10B5     		push	{r4, lr}
 1542              	.LCFI25:
 1543              		.cfi_def_cfa_offset 8
 1544              		.cfi_offset 4, -8
 1545              		.cfi_offset 14, -4
 1546 0002 0446     		mov	r4, r0
 977:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1547              		.loc 1 977 0
 1548 0004 0022     		movs	r2, #0
 1549 0006 0068     		ldr	r0, [r0]
 1550              	.LVL115:
 1551 0008 FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1552              	.LVL116:
 980:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1553              		.loc 1 980 0
 1554 000c 2368     		ldr	r3, [r4]
 1555 000e 196A     		ldr	r1, [r3, #32]
 1556 0010 41F21112 		movw	r2, #4369
 1557 0014 1142     		tst	r1, r2
 1558 0016 08D1     		bne	.L99
 980:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1559              		.loc 1 980 0 is_stmt 0 discriminator 1
 1560 0018 196A     		ldr	r1, [r3, #32]
 1561 001a 40F24442 		movw	r2, #1092
 1562 001e 1142     		tst	r1, r2
 1563 0020 03D1     		bne	.L99
 980:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1564              		.loc 1 980 0 discriminator 2
 1565 0022 5A6C     		ldr	r2, [r3, #68]
 1566 0024 22F40042 		bic	r2, r2, #32768
 1567 0028 5A64     		str	r2, [r3, #68]
 1568              	.L99:
 983:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1569              		.loc 1 983 0 is_stmt 1
 1570 002a 2368     		ldr	r3, [r4]
 1571 002c 196A     		ldr	r1, [r3, #32]
 1572 002e 41F21112 		movw	r2, #4369
 1573 0032 1142     		tst	r1, r2
 1574 0034 08D1     		bne	.L100
 983:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1575              		.loc 1 983 0 is_stmt 0 discriminator 1
 1576 0036 196A     		ldr	r1, [r3, #32]
 1577 0038 40F24442 		movw	r2, #1092
 1578 003c 1142     		tst	r1, r2
 1579 003e 03D1     		bne	.L100
 983:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1580              		.loc 1 983 0 discriminator 2
 1581 0040 1A68     		ldr	r2, [r3]
 1582 0042 22F00102 		bic	r2, r2, #1
 1583 0046 1A60     		str	r2, [r3]
 1584              	.L100:
 987:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1585              		.loc 1 987 0 is_stmt 1
 1586 0048 0020     		movs	r0, #0
ARM GAS  /tmp/cchzUtnS.s 			page 77


 1587 004a 10BD     		pop	{r4, pc}
 1588              		.cfi_endproc
 1589              	.LFE153:
 1591              		.section	.text.HAL_TIMEx_PWMN_Start_IT,"ax",%progbits
 1592              		.align	2
 1593              		.global	HAL_TIMEx_PWMN_Start_IT
 1594              		.thumb
 1595              		.thumb_func
 1597              	HAL_TIMEx_PWMN_Start_IT:
 1598              	.LFB154:
1002:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 1599              		.loc 1 1002 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              	.LVL117:
 1604 0000 10B5     		push	{r4, lr}
 1605              	.LCFI26:
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 4, -8
 1608              		.cfi_offset 14, -4
 1609 0002 0446     		mov	r4, r0
1006:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1610              		.loc 1 1006 0
 1611 0004 0C29     		cmp	r1, #12
 1612 0006 1FD8     		bhi	.L103
 1613 0008 DFE801F0 		tbb	[pc, r1]
 1614              	.L105:
 1615 000c 07       		.byte	(.L104-.L105)/2
 1616 000d 1E       		.byte	(.L103-.L105)/2
 1617 000e 1E       		.byte	(.L103-.L105)/2
 1618 000f 1E       		.byte	(.L103-.L105)/2
 1619 0010 0D       		.byte	(.L106-.L105)/2
 1620 0011 1E       		.byte	(.L103-.L105)/2
 1621 0012 1E       		.byte	(.L103-.L105)/2
 1622 0013 1E       		.byte	(.L103-.L105)/2
 1623 0014 13       		.byte	(.L107-.L105)/2
 1624 0015 1E       		.byte	(.L103-.L105)/2
 1625 0016 1E       		.byte	(.L103-.L105)/2
 1626 0017 1E       		.byte	(.L103-.L105)/2
 1627 0018 19       		.byte	(.L108-.L105)/2
 1628 0019 00       		.p2align 1
 1629              	.L104:
1011:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1630              		.loc 1 1011 0
 1631 001a 0268     		ldr	r2, [r0]
 1632 001c D368     		ldr	r3, [r2, #12]
 1633 001e 43F00203 		orr	r3, r3, #2
 1634 0022 D360     		str	r3, [r2, #12]
1013:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1635              		.loc 1 1013 0
 1636 0024 10E0     		b	.L103
 1637              	.L106:
1018:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1638              		.loc 1 1018 0
 1639 0026 0268     		ldr	r2, [r0]
 1640 0028 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/cchzUtnS.s 			page 78


 1641 002a 43F00403 		orr	r3, r3, #4
 1642 002e D360     		str	r3, [r2, #12]
1020:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1643              		.loc 1 1020 0
 1644 0030 0AE0     		b	.L103
 1645              	.L107:
1025:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1646              		.loc 1 1025 0
 1647 0032 0268     		ldr	r2, [r0]
 1648 0034 D368     		ldr	r3, [r2, #12]
 1649 0036 43F00803 		orr	r3, r3, #8
 1650 003a D360     		str	r3, [r2, #12]
1027:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1651              		.loc 1 1027 0
 1652 003c 04E0     		b	.L103
 1653              	.L108:
1032:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1654              		.loc 1 1032 0
 1655 003e 0268     		ldr	r2, [r0]
 1656 0040 D368     		ldr	r3, [r2, #12]
 1657 0042 43F01003 		orr	r3, r3, #16
 1658 0046 D360     		str	r3, [r2, #12]
 1659              	.L103:
1041:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1660              		.loc 1 1041 0
 1661 0048 2268     		ldr	r2, [r4]
 1662 004a D368     		ldr	r3, [r2, #12]
 1663 004c 43F08003 		orr	r3, r3, #128
 1664 0050 D360     		str	r3, [r2, #12]
1044:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1665              		.loc 1 1044 0
 1666 0052 0422     		movs	r2, #4
 1667 0054 2068     		ldr	r0, [r4]
 1668              	.LVL118:
 1669 0056 FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1670              	.LVL119:
1047:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1671              		.loc 1 1047 0
 1672 005a 2268     		ldr	r2, [r4]
 1673 005c 536C     		ldr	r3, [r2, #68]
 1674 005e 43F40043 		orr	r3, r3, #32768
 1675 0062 5364     		str	r3, [r2, #68]
1050:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1676              		.loc 1 1050 0
 1677 0064 2268     		ldr	r2, [r4]
 1678 0066 1368     		ldr	r3, [r2]
 1679 0068 43F00103 		orr	r3, r3, #1
 1680 006c 1360     		str	r3, [r2]
1054:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1681              		.loc 1 1054 0
 1682 006e 0020     		movs	r0, #0
 1683 0070 10BD     		pop	{r4, pc}
 1684              		.cfi_endproc
 1685              	.LFE154:
 1687 0072 00BF     		.section	.text.HAL_TIMEx_PWMN_Stop_IT,"ax",%progbits
 1688              		.align	2
 1689              		.global	HAL_TIMEx_PWMN_Stop_IT
ARM GAS  /tmp/cchzUtnS.s 			page 79


 1690              		.thumb
 1691              		.thumb_func
 1693              	HAL_TIMEx_PWMN_Stop_IT:
 1694              	.LFB155:
1069:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpccer = 0;
 1695              		.loc 1 1069 0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 0
 1698              		@ frame_needed = 0, uses_anonymous_args = 0
 1699              	.LVL120:
 1700 0000 10B5     		push	{r4, lr}
 1701              	.LCFI27:
 1702              		.cfi_def_cfa_offset 8
 1703              		.cfi_offset 4, -8
 1704              		.cfi_offset 14, -4
 1705 0002 0446     		mov	r4, r0
 1706              	.LVL121:
1075:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1707              		.loc 1 1075 0
 1708 0004 0C29     		cmp	r1, #12
 1709 0006 1FD8     		bhi	.L111
 1710 0008 DFE801F0 		tbb	[pc, r1]
 1711              	.L113:
 1712 000c 07       		.byte	(.L112-.L113)/2
 1713 000d 1E       		.byte	(.L111-.L113)/2
 1714 000e 1E       		.byte	(.L111-.L113)/2
 1715 000f 1E       		.byte	(.L111-.L113)/2
 1716 0010 0D       		.byte	(.L114-.L113)/2
 1717 0011 1E       		.byte	(.L111-.L113)/2
 1718 0012 1E       		.byte	(.L111-.L113)/2
 1719 0013 1E       		.byte	(.L111-.L113)/2
 1720 0014 13       		.byte	(.L115-.L113)/2
 1721 0015 1E       		.byte	(.L111-.L113)/2
 1722 0016 1E       		.byte	(.L111-.L113)/2
 1723 0017 1E       		.byte	(.L111-.L113)/2
 1724 0018 19       		.byte	(.L116-.L113)/2
 1725 0019 00       		.p2align 1
 1726              	.L112:
1080:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1727              		.loc 1 1080 0
 1728 001a 0268     		ldr	r2, [r0]
 1729 001c D368     		ldr	r3, [r2, #12]
 1730 001e 23F00203 		bic	r3, r3, #2
 1731 0022 D360     		str	r3, [r2, #12]
1082:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1732              		.loc 1 1082 0
 1733 0024 10E0     		b	.L111
 1734              	.L114:
1087:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1735              		.loc 1 1087 0
 1736 0026 0268     		ldr	r2, [r0]
 1737 0028 D368     		ldr	r3, [r2, #12]
 1738 002a 23F00403 		bic	r3, r3, #4
 1739 002e D360     		str	r3, [r2, #12]
1089:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1740              		.loc 1 1089 0
 1741 0030 0AE0     		b	.L111
ARM GAS  /tmp/cchzUtnS.s 			page 80


 1742              	.L115:
1094:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1743              		.loc 1 1094 0
 1744 0032 0268     		ldr	r2, [r0]
 1745 0034 D368     		ldr	r3, [r2, #12]
 1746 0036 23F00803 		bic	r3, r3, #8
 1747 003a D360     		str	r3, [r2, #12]
1096:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1748              		.loc 1 1096 0
 1749 003c 04E0     		b	.L111
 1750              	.L116:
1101:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1751              		.loc 1 1101 0
 1752 003e 0268     		ldr	r2, [r0]
 1753 0040 D368     		ldr	r3, [r2, #12]
 1754 0042 23F01003 		bic	r3, r3, #16
 1755 0046 D360     		str	r3, [r2, #12]
 1756              	.L111:
1110:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1757              		.loc 1 1110 0
 1758 0048 0022     		movs	r2, #0
 1759 004a 2068     		ldr	r0, [r4]
 1760              	.LVL122:
 1761 004c FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1762              	.LVL123:
1113:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   if ((tmpccer & (TIM_CCER_CC1NE | TIM_CCER_CC2NE | TIM_CCER_CC3NE)) == RESET)
 1763              		.loc 1 1113 0
 1764 0050 2368     		ldr	r3, [r4]
 1765 0052 196A     		ldr	r1, [r3, #32]
 1766              	.LVL124:
1114:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1767              		.loc 1 1114 0
 1768 0054 40F24442 		movw	r2, #1092
 1769 0058 1142     		tst	r1, r2
 1770 005a 03D1     		bne	.L117
1116:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 1771              		.loc 1 1116 0
 1772 005c DA68     		ldr	r2, [r3, #12]
 1773 005e 22F08002 		bic	r2, r2, #128
 1774 0062 DA60     		str	r2, [r3, #12]
 1775              	.L117:
1120:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1776              		.loc 1 1120 0
 1777 0064 2368     		ldr	r3, [r4]
 1778 0066 196A     		ldr	r1, [r3, #32]
 1779              	.LVL125:
 1780 0068 41F21112 		movw	r2, #4369
 1781 006c 1142     		tst	r1, r2
 1782 006e 08D1     		bne	.L118
1120:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1783              		.loc 1 1120 0 is_stmt 0 discriminator 1
 1784 0070 196A     		ldr	r1, [r3, #32]
 1785 0072 40F24442 		movw	r2, #1092
 1786 0076 1142     		tst	r1, r2
 1787 0078 03D1     		bne	.L118
1120:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1788              		.loc 1 1120 0 discriminator 2
ARM GAS  /tmp/cchzUtnS.s 			page 81


 1789 007a 5A6C     		ldr	r2, [r3, #68]
 1790 007c 22F40042 		bic	r2, r2, #32768
 1791 0080 5A64     		str	r2, [r3, #68]
 1792              	.L118:
1123:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1793              		.loc 1 1123 0 is_stmt 1
 1794 0082 2368     		ldr	r3, [r4]
 1795 0084 196A     		ldr	r1, [r3, #32]
 1796 0086 41F21112 		movw	r2, #4369
 1797 008a 1142     		tst	r1, r2
 1798 008c 08D1     		bne	.L119
1123:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1799              		.loc 1 1123 0 is_stmt 0 discriminator 1
 1800 008e 196A     		ldr	r1, [r3, #32]
 1801 0090 40F24442 		movw	r2, #1092
 1802 0094 1142     		tst	r1, r2
 1803 0096 03D1     		bne	.L119
1123:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1804              		.loc 1 1123 0 discriminator 2
 1805 0098 1A68     		ldr	r2, [r3]
 1806 009a 22F00102 		bic	r2, r2, #1
 1807 009e 1A60     		str	r2, [r3]
 1808              	.L119:
1127:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 1809              		.loc 1 1127 0 is_stmt 1
 1810 00a0 0020     		movs	r0, #0
 1811 00a2 10BD     		pop	{r4, pc}
 1812              		.cfi_endproc
 1813              	.LFE155:
 1815              		.section	.text.HAL_TIMEx_PWMN_Start_DMA,"ax",%progbits
 1816              		.align	2
 1817              		.global	HAL_TIMEx_PWMN_Start_DMA
 1818              		.thumb
 1819              		.thumb_func
 1821              	HAL_TIMEx_PWMN_Start_DMA:
 1822              	.LFB156:
1144:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 1823              		.loc 1 1144 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827              	.LVL126:
 1828 0000 70B5     		push	{r4, r5, r6, lr}
 1829              	.LCFI28:
 1830              		.cfi_def_cfa_offset 16
 1831              		.cfi_offset 4, -16
 1832              		.cfi_offset 5, -12
 1833              		.cfi_offset 6, -8
 1834              		.cfi_offset 14, -4
1148:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1835              		.loc 1 1148 0
 1836 0002 90F83D50 		ldrb	r5, [r0, #61]	@ zero_extendqisi2
 1837 0006 EDB2     		uxtb	r5, r5
 1838 0008 022D     		cmp	r5, #2
 1839 000a 75D0     		beq	.L130
1152:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1840              		.loc 1 1152 0
ARM GAS  /tmp/cchzUtnS.s 			page 82


 1841 000c 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1842 0010 E4B2     		uxtb	r4, r4
 1843 0012 012C     		cmp	r4, #1
 1844 0014 0AD1     		bne	.L123
1154:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     {
 1845              		.loc 1 1154 0
 1846 0016 B2FA82F4 		clz	r4, r2
 1847 001a 6409     		lsrs	r4, r4, #5
 1848 001c 002B     		cmp	r3, #0
 1849 001e 08BF     		it	eq
 1850 0020 0024     		moveq	r4, #0
 1851 0022 002C     		cmp	r4, #0
 1852 0024 6AD1     		bne	.L131
1160:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1853              		.loc 1 1160 0
 1854 0026 0224     		movs	r4, #2
 1855 0028 80F83D40 		strb	r4, [r0, #61]
 1856              	.L123:
 1857 002c 1646     		mov	r6, r2
 1858 002e 0D46     		mov	r5, r1
 1859 0030 0446     		mov	r4, r0
1163:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 1860              		.loc 1 1163 0
 1861 0032 0C29     		cmp	r1, #12
 1862 0034 4FD8     		bhi	.L124
 1863 0036 DFE801F0 		tbb	[pc, r1]
 1864              	.LVL127:
 1865              	.L126:
 1866 003a 07       		.byte	(.L125-.L126)/2
 1867 003b 4E       		.byte	(.L124-.L126)/2
 1868 003c 4E       		.byte	(.L124-.L126)/2
 1869 003d 4E       		.byte	(.L124-.L126)/2
 1870 003e 19       		.byte	(.L127-.L126)/2
 1871 003f 4E       		.byte	(.L124-.L126)/2
 1872 0040 4E       		.byte	(.L124-.L126)/2
 1873 0041 4E       		.byte	(.L124-.L126)/2
 1874 0042 2B       		.byte	(.L128-.L126)/2
 1875 0043 4E       		.byte	(.L124-.L126)/2
 1876 0044 4E       		.byte	(.L124-.L126)/2
 1877 0045 4E       		.byte	(.L124-.L126)/2
 1878 0046 3D       		.byte	(.L129-.L126)/2
 1879 0047 00       		.p2align 1
 1880              	.L125:
1168:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 1881              		.loc 1 1168 0
 1882 0048 426A     		ldr	r2, [r0, #36]
 1883 004a 2D49     		ldr	r1, .L133
 1884              	.LVL128:
 1885 004c D163     		str	r1, [r2, #60]
1171:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1886              		.loc 1 1171 0
 1887 004e 426A     		ldr	r2, [r0, #36]
 1888 0050 2C49     		ldr	r1, .L133+4
 1889 0052 D164     		str	r1, [r2, #76]
1174:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1890              		.loc 1 1174 0
 1891 0054 0268     		ldr	r2, [r0]
ARM GAS  /tmp/cchzUtnS.s 			page 83


 1892 0056 3432     		adds	r2, r2, #52
 1893 0058 3146     		mov	r1, r6
 1894 005a 406A     		ldr	r0, [r0, #36]
 1895              	.LVL129:
 1896 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1897              	.LVL130:
1177:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1898              		.loc 1 1177 0
 1899 0060 2268     		ldr	r2, [r4]
 1900 0062 D368     		ldr	r3, [r2, #12]
 1901 0064 43F40073 		orr	r3, r3, #512
 1902 0068 D360     		str	r3, [r2, #12]
1179:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1903              		.loc 1 1179 0
 1904 006a 34E0     		b	.L124
 1905              	.LVL131:
 1906              	.L127:
1184:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 1907              		.loc 1 1184 0
 1908 006c 826A     		ldr	r2, [r0, #40]
 1909 006e 2449     		ldr	r1, .L133
 1910              	.LVL132:
 1911 0070 D163     		str	r1, [r2, #60]
1187:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1912              		.loc 1 1187 0
 1913 0072 826A     		ldr	r2, [r0, #40]
 1914 0074 2349     		ldr	r1, .L133+4
 1915 0076 D164     		str	r1, [r2, #76]
1190:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1916              		.loc 1 1190 0
 1917 0078 0268     		ldr	r2, [r0]
 1918 007a 3832     		adds	r2, r2, #56
 1919 007c 3146     		mov	r1, r6
 1920 007e 806A     		ldr	r0, [r0, #40]
 1921              	.LVL133:
 1922 0080 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1923              	.LVL134:
1193:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1924              		.loc 1 1193 0
 1925 0084 2268     		ldr	r2, [r4]
 1926 0086 D368     		ldr	r3, [r2, #12]
 1927 0088 43F48063 		orr	r3, r3, #1024
 1928 008c D360     		str	r3, [r2, #12]
1195:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1929              		.loc 1 1195 0
 1930 008e 22E0     		b	.L124
 1931              	.LVL135:
 1932              	.L128:
1200:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 1933              		.loc 1 1200 0
 1934 0090 C26A     		ldr	r2, [r0, #44]
 1935 0092 1B49     		ldr	r1, .L133
 1936              	.LVL136:
 1937 0094 D163     		str	r1, [r2, #60]
1203:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1938              		.loc 1 1203 0
 1939 0096 C26A     		ldr	r2, [r0, #44]
ARM GAS  /tmp/cchzUtnS.s 			page 84


 1940 0098 1A49     		ldr	r1, .L133+4
 1941 009a D164     		str	r1, [r2, #76]
1206:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1942              		.loc 1 1206 0
 1943 009c 0268     		ldr	r2, [r0]
 1944 009e 3C32     		adds	r2, r2, #60
 1945 00a0 3146     		mov	r1, r6
 1946 00a2 C06A     		ldr	r0, [r0, #44]
 1947              	.LVL137:
 1948 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1949              	.LVL138:
1209:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1950              		.loc 1 1209 0
 1951 00a8 2268     		ldr	r2, [r4]
 1952 00aa D368     		ldr	r3, [r2, #12]
 1953 00ac 43F40063 		orr	r3, r3, #2048
 1954 00b0 D360     		str	r3, [r2, #12]
1211:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1955              		.loc 1 1211 0
 1956 00b2 10E0     		b	.L124
 1957              	.LVL139:
 1958              	.L129:
1216:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 1959              		.loc 1 1216 0
 1960 00b4 026B     		ldr	r2, [r0, #48]
 1961 00b6 1249     		ldr	r1, .L133
 1962              	.LVL140:
 1963 00b8 D163     		str	r1, [r2, #60]
1219:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1964              		.loc 1 1219 0
 1965 00ba 026B     		ldr	r2, [r0, #48]
 1966 00bc 1149     		ldr	r1, .L133+4
 1967 00be D164     		str	r1, [r2, #76]
1222:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 1968              		.loc 1 1222 0
 1969 00c0 0268     		ldr	r2, [r0]
 1970 00c2 4032     		adds	r2, r2, #64
 1971 00c4 3146     		mov	r1, r6
 1972 00c6 006B     		ldr	r0, [r0, #48]
 1973              	.LVL141:
 1974 00c8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1975              	.LVL142:
1225:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 1976              		.loc 1 1225 0
 1977 00cc 2268     		ldr	r2, [r4]
 1978 00ce D368     		ldr	r3, [r2, #12]
 1979 00d0 43F48053 		orr	r3, r3, #4096
 1980 00d4 D360     		str	r3, [r2, #12]
 1981              	.L124:
1234:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 1982              		.loc 1 1234 0
 1983 00d6 0422     		movs	r2, #4
 1984 00d8 2946     		mov	r1, r5
 1985 00da 2068     		ldr	r0, [r4]
 1986 00dc FFF7FEFF 		bl	TIM_CCxNChannelCmd
 1987              	.LVL143:
1237:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 85


 1988              		.loc 1 1237 0
 1989 00e0 2268     		ldr	r2, [r4]
 1990 00e2 536C     		ldr	r3, [r2, #68]
 1991 00e4 43F40043 		orr	r3, r3, #32768
 1992 00e8 5364     		str	r3, [r2, #68]
1240:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 1993              		.loc 1 1240 0
 1994 00ea 2268     		ldr	r2, [r4]
 1995 00ec 1368     		ldr	r3, [r2]
 1996 00ee 43F00103 		orr	r3, r3, #1
 1997 00f2 1360     		str	r3, [r2]
1243:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 1998              		.loc 1 1243 0
 1999 00f4 0020     		movs	r0, #0
 2000 00f6 70BD     		pop	{r4, r5, r6, pc}
 2001              	.LVL144:
 2002              	.L130:
1150:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 2003              		.loc 1 1150 0
 2004 00f8 0220     		movs	r0, #2
 2005              	.LVL145:
 2006 00fa 70BD     		pop	{r4, r5, r6, pc}
 2007              	.LVL146:
 2008              	.L131:
1156:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 2009              		.loc 1 1156 0
 2010 00fc 0120     		movs	r0, #1
 2011              	.LVL147:
1244:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2012              		.loc 1 1244 0
 2013 00fe 70BD     		pop	{r4, r5, r6, pc}
 2014              	.L134:
 2015              		.align	2
 2016              	.L133:
 2017 0100 00000000 		.word	TIM_DMADelayPulseCplt
 2018 0104 00000000 		.word	TIM_DMAError
 2019              		.cfi_endproc
 2020              	.LFE156:
 2022              		.section	.text.HAL_TIMEx_PWMN_Stop_DMA,"ax",%progbits
 2023              		.align	2
 2024              		.global	HAL_TIMEx_PWMN_Stop_DMA
 2025              		.thumb
 2026              		.thumb_func
 2028              	HAL_TIMEx_PWMN_Stop_DMA:
 2029              	.LFB157:
1259:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2030              		.loc 1 1259 0
 2031              		.cfi_startproc
 2032              		@ args = 0, pretend = 0, frame = 0
 2033              		@ frame_needed = 0, uses_anonymous_args = 0
 2034              	.LVL148:
 2035 0000 10B5     		push	{r4, lr}
 2036              	.LCFI29:
 2037              		.cfi_def_cfa_offset 8
 2038              		.cfi_offset 4, -8
 2039              		.cfi_offset 14, -4
 2040 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cchzUtnS.s 			page 86


1263:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 2041              		.loc 1 1263 0
 2042 0004 0C29     		cmp	r1, #12
 2043 0006 1FD8     		bhi	.L136
 2044 0008 DFE801F0 		tbb	[pc, r1]
 2045              	.L138:
 2046 000c 07       		.byte	(.L137-.L138)/2
 2047 000d 1E       		.byte	(.L136-.L138)/2
 2048 000e 1E       		.byte	(.L136-.L138)/2
 2049 000f 1E       		.byte	(.L136-.L138)/2
 2050 0010 0D       		.byte	(.L139-.L138)/2
 2051 0011 1E       		.byte	(.L136-.L138)/2
 2052 0012 1E       		.byte	(.L136-.L138)/2
 2053 0013 1E       		.byte	(.L136-.L138)/2
 2054 0014 13       		.byte	(.L140-.L138)/2
 2055 0015 1E       		.byte	(.L136-.L138)/2
 2056 0016 1E       		.byte	(.L136-.L138)/2
 2057 0017 1E       		.byte	(.L136-.L138)/2
 2058 0018 19       		.byte	(.L141-.L138)/2
 2059 0019 00       		.p2align 1
 2060              	.L137:
1268:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 2061              		.loc 1 1268 0
 2062 001a 0268     		ldr	r2, [r0]
 2063 001c D368     		ldr	r3, [r2, #12]
 2064 001e 23F40073 		bic	r3, r3, #512
 2065 0022 D360     		str	r3, [r2, #12]
1270:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 2066              		.loc 1 1270 0
 2067 0024 10E0     		b	.L136
 2068              	.L139:
1275:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 2069              		.loc 1 1275 0
 2070 0026 0268     		ldr	r2, [r0]
 2071 0028 D368     		ldr	r3, [r2, #12]
 2072 002a 23F48063 		bic	r3, r3, #1024
 2073 002e D360     		str	r3, [r2, #12]
1277:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 2074              		.loc 1 1277 0
 2075 0030 0AE0     		b	.L136
 2076              	.L140:
1282:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 2077              		.loc 1 1282 0
 2078 0032 0268     		ldr	r2, [r0]
 2079 0034 D368     		ldr	r3, [r2, #12]
 2080 0036 23F40063 		bic	r3, r3, #2048
 2081 003a D360     		str	r3, [r2, #12]
1284:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 2082              		.loc 1 1284 0
 2083 003c 04E0     		b	.L136
 2084              	.L141:
1289:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 2085              		.loc 1 1289 0
 2086 003e 0268     		ldr	r2, [r0]
 2087 0040 D368     		ldr	r3, [r2, #12]
 2088 0042 23F48053 		bic	r3, r3, #4096
 2089 0046 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/cchzUtnS.s 			page 87


 2090              	.L136:
1298:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****      
 2091              		.loc 1 1298 0
 2092 0048 0022     		movs	r2, #0
 2093 004a 2068     		ldr	r0, [r4]
 2094              	.LVL149:
 2095 004c FFF7FEFF 		bl	TIM_CCxNChannelCmd
 2096              	.LVL150:
1301:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2097              		.loc 1 1301 0
 2098 0050 2368     		ldr	r3, [r4]
 2099 0052 196A     		ldr	r1, [r3, #32]
 2100 0054 41F21112 		movw	r2, #4369
 2101 0058 1142     		tst	r1, r2
 2102 005a 08D1     		bne	.L142
1301:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2103              		.loc 1 1301 0 is_stmt 0 discriminator 1
 2104 005c 196A     		ldr	r1, [r3, #32]
 2105 005e 40F24442 		movw	r2, #1092
 2106 0062 1142     		tst	r1, r2
 2107 0064 03D1     		bne	.L142
1301:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2108              		.loc 1 1301 0 discriminator 2
 2109 0066 5A6C     		ldr	r2, [r3, #68]
 2110 0068 22F40042 		bic	r2, r2, #32768
 2111 006c 5A64     		str	r2, [r3, #68]
 2112              	.L142:
1304:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2113              		.loc 1 1304 0 is_stmt 1
 2114 006e 2368     		ldr	r3, [r4]
 2115 0070 196A     		ldr	r1, [r3, #32]
 2116 0072 41F21112 		movw	r2, #4369
 2117 0076 1142     		tst	r1, r2
 2118 0078 08D1     		bne	.L143
1304:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2119              		.loc 1 1304 0 is_stmt 0 discriminator 1
 2120 007a 196A     		ldr	r1, [r3, #32]
 2121 007c 40F24442 		movw	r2, #1092
 2122 0080 1142     		tst	r1, r2
 2123 0082 03D1     		bne	.L143
1304:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2124              		.loc 1 1304 0 discriminator 2
 2125 0084 1A68     		ldr	r2, [r3]
 2126 0086 22F00102 		bic	r2, r2, #1
 2127 008a 1A60     		str	r2, [r3]
 2128              	.L143:
1307:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2129              		.loc 1 1307 0 is_stmt 1
 2130 008c 0123     		movs	r3, #1
 2131 008e 84F83D30 		strb	r3, [r4, #61]
1311:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2132              		.loc 1 1311 0
 2133 0092 0020     		movs	r0, #0
 2134 0094 10BD     		pop	{r4, pc}
 2135              		.cfi_endproc
 2136              	.LFE157:
 2138 0096 00BF     		.section	.text.HAL_TIMEx_OnePulseN_Start,"ax",%progbits
ARM GAS  /tmp/cchzUtnS.s 			page 88


 2139              		.align	2
 2140              		.global	HAL_TIMEx_OnePulseN_Start
 2141              		.thumb
 2142              		.thumb_func
 2144              	HAL_TIMEx_OnePulseN_Start:
 2145              	.LFB158:
1347:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2146              		.loc 1 1347 0
 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 0, uses_anonymous_args = 0
 2150              	.LVL151:
 2151 0000 10B5     		push	{r4, lr}
 2152              	.LCFI30:
 2153              		.cfi_def_cfa_offset 8
 2154              		.cfi_offset 4, -8
 2155              		.cfi_offset 14, -4
 2156 0002 0446     		mov	r4, r0
1352:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2157              		.loc 1 1352 0
 2158 0004 0422     		movs	r2, #4
 2159 0006 0068     		ldr	r0, [r0]
 2160              	.LVL152:
 2161 0008 FFF7FEFF 		bl	TIM_CCxNChannelCmd
 2162              	.LVL153:
1355:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2163              		.loc 1 1355 0
 2164 000c 2268     		ldr	r2, [r4]
 2165 000e 536C     		ldr	r3, [r2, #68]
 2166 0010 43F40043 		orr	r3, r3, #32768
 2167 0014 5364     		str	r3, [r2, #68]
1359:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2168              		.loc 1 1359 0
 2169 0016 0020     		movs	r0, #0
 2170 0018 10BD     		pop	{r4, pc}
 2171              		.cfi_endproc
 2172              	.LFE158:
 2174 001a 00BF     		.section	.text.HAL_TIMEx_OnePulseN_Stop,"ax",%progbits
 2175              		.align	2
 2176              		.global	HAL_TIMEx_OnePulseN_Stop
 2177              		.thumb
 2178              		.thumb_func
 2180              	HAL_TIMEx_OnePulseN_Stop:
 2181              	.LFB159:
1373:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2182              		.loc 1 1373 0
 2183              		.cfi_startproc
 2184              		@ args = 0, pretend = 0, frame = 0
 2185              		@ frame_needed = 0, uses_anonymous_args = 0
 2186              	.LVL154:
 2187 0000 10B5     		push	{r4, lr}
 2188              	.LCFI31:
 2189              		.cfi_def_cfa_offset 8
 2190              		.cfi_offset 4, -8
 2191              		.cfi_offset 14, -4
 2192 0002 0446     		mov	r4, r0
1379:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 89


 2193              		.loc 1 1379 0
 2194 0004 0022     		movs	r2, #0
 2195 0006 0068     		ldr	r0, [r0]
 2196              	.LVL155:
 2197 0008 FFF7FEFF 		bl	TIM_CCxNChannelCmd
 2198              	.LVL156:
1382:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2199              		.loc 1 1382 0
 2200 000c 2368     		ldr	r3, [r4]
 2201 000e 196A     		ldr	r1, [r3, #32]
 2202 0010 41F21112 		movw	r2, #4369
 2203 0014 1142     		tst	r1, r2
 2204 0016 08D1     		bne	.L148
1382:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2205              		.loc 1 1382 0 is_stmt 0 discriminator 1
 2206 0018 196A     		ldr	r1, [r3, #32]
 2207 001a 40F24442 		movw	r2, #1092
 2208 001e 1142     		tst	r1, r2
 2209 0020 03D1     		bne	.L148
1382:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2210              		.loc 1 1382 0 discriminator 2
 2211 0022 5A6C     		ldr	r2, [r3, #68]
 2212 0024 22F40042 		bic	r2, r2, #32768
 2213 0028 5A64     		str	r2, [r3, #68]
 2214              	.L148:
1385:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    
 2215              		.loc 1 1385 0 is_stmt 1
 2216 002a 2368     		ldr	r3, [r4]
 2217 002c 196A     		ldr	r1, [r3, #32]
 2218 002e 41F21112 		movw	r2, #4369
 2219 0032 1142     		tst	r1, r2
 2220 0034 08D1     		bne	.L149
1385:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    
 2221              		.loc 1 1385 0 is_stmt 0 discriminator 1
 2222 0036 196A     		ldr	r1, [r3, #32]
 2223 0038 40F24442 		movw	r2, #1092
 2224 003c 1142     		tst	r1, r2
 2225 003e 03D1     		bne	.L149
1385:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    
 2226              		.loc 1 1385 0 discriminator 2
 2227 0040 1A68     		ldr	r2, [r3]
 2228 0042 22F00102 		bic	r2, r2, #1
 2229 0046 1A60     		str	r2, [r3]
 2230              	.L149:
1389:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2231              		.loc 1 1389 0 is_stmt 1
 2232 0048 0020     		movs	r0, #0
 2233 004a 10BD     		pop	{r4, pc}
 2234              		.cfi_endproc
 2235              	.LFE159:
 2237              		.section	.text.HAL_TIMEx_OnePulseN_Start_IT,"ax",%progbits
 2238              		.align	2
 2239              		.global	HAL_TIMEx_OnePulseN_Start_IT
 2240              		.thumb
 2241              		.thumb_func
 2243              	HAL_TIMEx_OnePulseN_Start_IT:
 2244              	.LFB160:
ARM GAS  /tmp/cchzUtnS.s 			page 90


1403:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2245              		.loc 1 1403 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              	.LVL157:
 2250 0000 10B5     		push	{r4, lr}
 2251              	.LCFI32:
 2252              		.cfi_def_cfa_offset 8
 2253              		.cfi_offset 4, -8
 2254              		.cfi_offset 14, -4
 2255 0002 0446     		mov	r4, r0
1408:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2256              		.loc 1 1408 0
 2257 0004 0268     		ldr	r2, [r0]
 2258 0006 D368     		ldr	r3, [r2, #12]
 2259 0008 43F00203 		orr	r3, r3, #2
 2260 000c D360     		str	r3, [r2, #12]
1411:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2261              		.loc 1 1411 0
 2262 000e 0268     		ldr	r2, [r0]
 2263 0010 D368     		ldr	r3, [r2, #12]
 2264 0012 43F00403 		orr	r3, r3, #4
 2265 0016 D360     		str	r3, [r2, #12]
1414:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2266              		.loc 1 1414 0
 2267 0018 0422     		movs	r2, #4
 2268 001a 0068     		ldr	r0, [r0]
 2269              	.LVL158:
 2270 001c FFF7FEFF 		bl	TIM_CCxNChannelCmd
 2271              	.LVL159:
1417:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2272              		.loc 1 1417 0
 2273 0020 2268     		ldr	r2, [r4]
 2274 0022 536C     		ldr	r3, [r2, #68]
 2275 0024 43F40043 		orr	r3, r3, #32768
 2276 0028 5364     		str	r3, [r2, #68]
1421:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2277              		.loc 1 1421 0
 2278 002a 0020     		movs	r0, #0
 2279 002c 10BD     		pop	{r4, pc}
 2280              		.cfi_endproc
 2281              	.LFE160:
 2283 002e 00BF     		.section	.text.HAL_TIMEx_OnePulseN_Stop_IT,"ax",%progbits
 2284              		.align	2
 2285              		.global	HAL_TIMEx_OnePulseN_Stop_IT
 2286              		.thumb
 2287              		.thumb_func
 2289              	HAL_TIMEx_OnePulseN_Stop_IT:
 2290              	.LFB161:
1435:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2291              		.loc 1 1435 0
 2292              		.cfi_startproc
 2293              		@ args = 0, pretend = 0, frame = 0
 2294              		@ frame_needed = 0, uses_anonymous_args = 0
 2295              	.LVL160:
 2296 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/cchzUtnS.s 			page 91


 2297              	.LCFI33:
 2298              		.cfi_def_cfa_offset 8
 2299              		.cfi_offset 4, -8
 2300              		.cfi_offset 14, -4
 2301 0002 0446     		mov	r4, r0
1440:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2302              		.loc 1 1440 0
 2303 0004 0268     		ldr	r2, [r0]
 2304 0006 D368     		ldr	r3, [r2, #12]
 2305 0008 23F00203 		bic	r3, r3, #2
 2306 000c D360     		str	r3, [r2, #12]
1443:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2307              		.loc 1 1443 0
 2308 000e 0268     		ldr	r2, [r0]
 2309 0010 D368     		ldr	r3, [r2, #12]
 2310 0012 23F00403 		bic	r3, r3, #4
 2311 0016 D360     		str	r3, [r2, #12]
1446:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2312              		.loc 1 1446 0
 2313 0018 0022     		movs	r2, #0
 2314 001a 0068     		ldr	r0, [r0]
 2315              	.LVL161:
 2316 001c FFF7FEFF 		bl	TIM_CCxNChannelCmd
 2317              	.LVL162:
1449:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2318              		.loc 1 1449 0
 2319 0020 2368     		ldr	r3, [r4]
 2320 0022 196A     		ldr	r1, [r3, #32]
 2321 0024 41F21112 		movw	r2, #4369
 2322 0028 1142     		tst	r1, r2
 2323 002a 08D1     		bne	.L154
1449:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2324              		.loc 1 1449 0 is_stmt 0 discriminator 1
 2325 002c 196A     		ldr	r1, [r3, #32]
 2326 002e 40F24442 		movw	r2, #1092
 2327 0032 1142     		tst	r1, r2
 2328 0034 03D1     		bne	.L154
1449:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2329              		.loc 1 1449 0 discriminator 2
 2330 0036 5A6C     		ldr	r2, [r3, #68]
 2331 0038 22F40042 		bic	r2, r2, #32768
 2332 003c 5A64     		str	r2, [r3, #68]
 2333              	.L154:
1452:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2334              		.loc 1 1452 0 is_stmt 1
 2335 003e 2368     		ldr	r3, [r4]
 2336 0040 196A     		ldr	r1, [r3, #32]
 2337 0042 41F21112 		movw	r2, #4369
 2338 0046 1142     		tst	r1, r2
 2339 0048 08D1     		bne	.L155
1452:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2340              		.loc 1 1452 0 is_stmt 0 discriminator 1
 2341 004a 196A     		ldr	r1, [r3, #32]
 2342 004c 40F24442 		movw	r2, #1092
 2343 0050 1142     		tst	r1, r2
 2344 0052 03D1     		bne	.L155
1452:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 92


 2345              		.loc 1 1452 0 discriminator 2
 2346 0054 1A68     		ldr	r2, [r3]
 2347 0056 22F00102 		bic	r2, r2, #1
 2348 005a 1A60     		str	r2, [r3]
 2349              	.L155:
1456:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2350              		.loc 1 1456 0 is_stmt 1
 2351 005c 0020     		movs	r0, #0
 2352 005e 10BD     		pop	{r4, pc}
 2353              		.cfi_endproc
 2354              	.LFE161:
 2356              		.section	.text.HAL_TIMEx_ConfigCommutationEvent,"ax",%progbits
 2357              		.align	2
 2358              		.global	HAL_TIMEx_ConfigCommutationEvent
 2359              		.thumb
 2360              		.thumb_func
 2362              	HAL_TIMEx_ConfigCommutationEvent:
 2363              	.LFB162:
1505:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2364              		.loc 1 1505 0
 2365              		.cfi_startproc
 2366              		@ args = 0, pretend = 0, frame = 0
 2367              		@ frame_needed = 0, uses_anonymous_args = 0
 2368              		@ link register save eliminated.
 2369              	.LVL163:
1510:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2370              		.loc 1 1510 0
 2371 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2372 0004 012B     		cmp	r3, #1
 2373 0006 2AD0     		beq	.L162
1505:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2374              		.loc 1 1505 0 discriminator 2
 2375 0008 10B4     		push	{r4}
 2376              	.LCFI34:
 2377              		.cfi_def_cfa_offset 4
 2378              		.cfi_offset 4, -4
1510:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2379              		.loc 1 1510 0 discriminator 2
 2380 000a 0123     		movs	r3, #1
 2381 000c 80F83C30 		strb	r3, [r0, #60]
1512:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       (InputTrigger == TIM_TS_ITR2) || (InputTrigger == TIM_TS_ITR3))
 2382              		.loc 1 1512 0 discriminator 2
 2383 0010 1029     		cmp	r1, #16
 2384 0012 18BF     		it	ne
 2385 0014 0029     		cmpne	r1, #0
 2386 0016 06D0     		beq	.L159
1513:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {    
 2387              		.loc 1 1513 0
 2388 0018 3029     		cmp	r1, #48
 2389 001a 14BF     		ite	ne
 2390 001c 0023     		movne	r3, #0
 2391 001e 0123     		moveq	r3, #1
 2392 0020 2029     		cmp	r1, #32
 2393 0022 00D0     		beq	.L159
 2394 0024 43B1     		cbz	r3, .L160
 2395              	.L159:
1516:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR |= InputTrigger;
ARM GAS  /tmp/cchzUtnS.s 			page 93


 2396              		.loc 1 1516 0
 2397 0026 0468     		ldr	r4, [r0]
 2398 0028 A368     		ldr	r3, [r4, #8]
 2399 002a 23F07003 		bic	r3, r3, #112
 2400 002e A360     		str	r3, [r4, #8]
1517:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 2401              		.loc 1 1517 0
 2402 0030 0468     		ldr	r4, [r0]
 2403 0032 A368     		ldr	r3, [r4, #8]
 2404 0034 1943     		orrs	r1, r1, r3
 2405              	.LVL164:
 2406 0036 A160     		str	r1, [r4, #8]
 2407              	.L160:
1521:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Commutation event source */
 2408              		.loc 1 1521 0
 2409 0038 0168     		ldr	r1, [r0]
 2410 003a 4B68     		ldr	r3, [r1, #4]
 2411 003c 43F00103 		orr	r3, r3, #1
 2412 0040 4B60     		str	r3, [r1, #4]
1523:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= CommutationSource;
 2413              		.loc 1 1523 0
 2414 0042 0168     		ldr	r1, [r0]
 2415 0044 4B68     		ldr	r3, [r1, #4]
 2416 0046 23F00403 		bic	r3, r3, #4
 2417 004a 4B60     		str	r3, [r1, #4]
1524:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 2418              		.loc 1 1524 0
 2419 004c 0368     		ldr	r3, [r0]
 2420 004e 5968     		ldr	r1, [r3, #4]
 2421 0050 0A43     		orrs	r2, r2, r1
 2422              	.LVL165:
 2423 0052 5A60     		str	r2, [r3, #4]
1526:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2424              		.loc 1 1526 0
 2425 0054 0023     		movs	r3, #0
 2426 0056 80F83C30 		strb	r3, [r0, #60]
1528:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 2427              		.loc 1 1528 0
 2428 005a 1846     		mov	r0, r3
 2429              	.LVL166:
 2430 005c 01E0     		b	.L158
 2431              	.LVL167:
 2432              	.L162:
 2433              	.LCFI35:
 2434              		.cfi_def_cfa_offset 0
 2435              		.cfi_restore 4
1510:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2436              		.loc 1 1510 0
 2437 005e 0220     		movs	r0, #2
 2438              	.LVL168:
 2439 0060 7047     		bx	lr
 2440              	.LVL169:
 2441              	.L158:
 2442              	.LCFI36:
 2443              		.cfi_def_cfa_offset 4
 2444              		.cfi_offset 4, -4
1529:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
ARM GAS  /tmp/cchzUtnS.s 			page 94


 2445              		.loc 1 1529 0
 2446 0062 5DF8044B 		ldr	r4, [sp], #4
 2447              	.LCFI37:
 2448              		.cfi_restore 4
 2449              		.cfi_def_cfa_offset 0
 2450 0066 7047     		bx	lr
 2451              		.cfi_endproc
 2452              	.LFE162:
 2454              		.section	.text.HAL_TIMEx_ConfigCommutationEvent_IT,"ax",%progbits
 2455              		.align	2
 2456              		.global	HAL_TIMEx_ConfigCommutationEvent_IT
 2457              		.thumb
 2458              		.thumb_func
 2460              	HAL_TIMEx_ConfigCommutationEvent_IT:
 2461              	.LFB163:
1555:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2462              		.loc 1 1555 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              		@ link register save eliminated.
 2467              	.LVL170:
1560:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2468              		.loc 1 1560 0
 2469 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2470 0004 012B     		cmp	r3, #1
 2471 0006 2FD0     		beq	.L170
1555:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2472              		.loc 1 1555 0 discriminator 2
 2473 0008 10B4     		push	{r4}
 2474              	.LCFI38:
 2475              		.cfi_def_cfa_offset 4
 2476              		.cfi_offset 4, -4
1560:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2477              		.loc 1 1560 0 discriminator 2
 2478 000a 0123     		movs	r3, #1
 2479 000c 80F83C30 		strb	r3, [r0, #60]
1562:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       (InputTrigger == TIM_TS_ITR2) || (InputTrigger == TIM_TS_ITR3))
 2480              		.loc 1 1562 0 discriminator 2
 2481 0010 1029     		cmp	r1, #16
 2482 0012 18BF     		it	ne
 2483 0014 0029     		cmpne	r1, #0
 2484 0016 06D0     		beq	.L167
1563:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {    
 2485              		.loc 1 1563 0
 2486 0018 3029     		cmp	r1, #48
 2487 001a 14BF     		ite	ne
 2488 001c 0023     		movne	r3, #0
 2489 001e 0123     		moveq	r3, #1
 2490 0020 2029     		cmp	r1, #32
 2491 0022 00D0     		beq	.L167
 2492 0024 43B1     		cbz	r3, .L168
 2493              	.L167:
1566:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR |= InputTrigger;
 2494              		.loc 1 1566 0
 2495 0026 0468     		ldr	r4, [r0]
 2496 0028 A368     		ldr	r3, [r4, #8]
ARM GAS  /tmp/cchzUtnS.s 			page 95


 2497 002a 23F07003 		bic	r3, r3, #112
 2498 002e A360     		str	r3, [r4, #8]
1567:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 2499              		.loc 1 1567 0
 2500 0030 0468     		ldr	r4, [r0]
 2501 0032 A368     		ldr	r3, [r4, #8]
 2502 0034 1943     		orrs	r1, r1, r3
 2503              	.LVL171:
 2504 0036 A160     		str	r1, [r4, #8]
 2505              	.L168:
1571:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Commutation event source */
 2506              		.loc 1 1571 0
 2507 0038 0168     		ldr	r1, [r0]
 2508 003a 4B68     		ldr	r3, [r1, #4]
 2509 003c 43F00103 		orr	r3, r3, #1
 2510 0040 4B60     		str	r3, [r1, #4]
1573:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= CommutationSource;
 2511              		.loc 1 1573 0
 2512 0042 0168     		ldr	r1, [r0]
 2513 0044 4B68     		ldr	r3, [r1, #4]
 2514 0046 23F00403 		bic	r3, r3, #4
 2515 004a 4B60     		str	r3, [r1, #4]
1574:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 2516              		.loc 1 1574 0
 2517 004c 0368     		ldr	r3, [r0]
 2518 004e 5968     		ldr	r1, [r3, #4]
 2519 0050 0A43     		orrs	r2, r2, r1
 2520              	.LVL172:
 2521 0052 5A60     		str	r2, [r3, #4]
1577:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2522              		.loc 1 1577 0
 2523 0054 0268     		ldr	r2, [r0]
 2524 0056 D368     		ldr	r3, [r2, #12]
 2525 0058 43F02003 		orr	r3, r3, #32
 2526 005c D360     		str	r3, [r2, #12]
1579:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2527              		.loc 1 1579 0
 2528 005e 0023     		movs	r3, #0
 2529 0060 80F83C30 		strb	r3, [r0, #60]
1581:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 2530              		.loc 1 1581 0
 2531 0064 1846     		mov	r0, r3
 2532              	.LVL173:
 2533 0066 01E0     		b	.L166
 2534              	.LVL174:
 2535              	.L170:
 2536              	.LCFI39:
 2537              		.cfi_def_cfa_offset 0
 2538              		.cfi_restore 4
1560:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2539              		.loc 1 1560 0
 2540 0068 0220     		movs	r0, #2
 2541              	.LVL175:
 2542 006a 7047     		bx	lr
 2543              	.LVL176:
 2544              	.L166:
 2545              	.LCFI40:
ARM GAS  /tmp/cchzUtnS.s 			page 96


 2546              		.cfi_def_cfa_offset 4
 2547              		.cfi_offset 4, -4
1582:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2548              		.loc 1 1582 0
 2549 006c 5DF8044B 		ldr	r4, [sp], #4
 2550              	.LCFI41:
 2551              		.cfi_restore 4
 2552              		.cfi_def_cfa_offset 0
 2553 0070 7047     		bx	lr
 2554              		.cfi_endproc
 2555              	.LFE163:
 2557 0072 00BF     		.section	.text.HAL_TIMEx_ConfigCommutationEvent_DMA,"ax",%progbits
 2558              		.align	2
 2559              		.global	HAL_TIMEx_ConfigCommutationEvent_DMA
 2560              		.thumb
 2561              		.thumb_func
 2563              	HAL_TIMEx_ConfigCommutationEvent_DMA:
 2564              	.LFB164:
1609:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2565              		.loc 1 1609 0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 0
 2568              		@ frame_needed = 0, uses_anonymous_args = 0
 2569              		@ link register save eliminated.
 2570              	.LVL177:
1614:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2571              		.loc 1 1614 0
 2572 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2573 0004 012B     		cmp	r3, #1
 2574 0006 35D0     		beq	.L178
1609:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 2575              		.loc 1 1609 0 discriminator 2
 2576 0008 10B4     		push	{r4}
 2577              	.LCFI42:
 2578              		.cfi_def_cfa_offset 4
 2579              		.cfi_offset 4, -4
1614:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2580              		.loc 1 1614 0 discriminator 2
 2581 000a 0123     		movs	r3, #1
 2582 000c 80F83C30 		strb	r3, [r0, #60]
1616:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       (InputTrigger == TIM_TS_ITR2) || (InputTrigger == TIM_TS_ITR3))
 2583              		.loc 1 1616 0 discriminator 2
 2584 0010 1029     		cmp	r1, #16
 2585 0012 18BF     		it	ne
 2586 0014 0029     		cmpne	r1, #0
 2587 0016 06D0     		beq	.L175
1617:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {    
 2588              		.loc 1 1617 0
 2589 0018 3029     		cmp	r1, #48
 2590 001a 14BF     		ite	ne
 2591 001c 0023     		movne	r3, #0
 2592 001e 0123     		moveq	r3, #1
 2593 0020 2029     		cmp	r1, #32
 2594 0022 00D0     		beq	.L175
 2595 0024 43B1     		cbz	r3, .L176
 2596              	.L175:
1620:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     htim->Instance->SMCR |= InputTrigger;
ARM GAS  /tmp/cchzUtnS.s 			page 97


 2597              		.loc 1 1620 0
 2598 0026 0468     		ldr	r4, [r0]
 2599 0028 A368     		ldr	r3, [r4, #8]
 2600 002a 23F07003 		bic	r3, r3, #112
 2601 002e A360     		str	r3, [r4, #8]
1621:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 2602              		.loc 1 1621 0
 2603 0030 0468     		ldr	r4, [r0]
 2604 0032 A368     		ldr	r3, [r4, #8]
 2605 0034 1943     		orrs	r1, r1, r3
 2606              	.LVL178:
 2607 0036 A160     		str	r1, [r4, #8]
 2608              	.L176:
1625:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the Commutation event source */
 2609              		.loc 1 1625 0
 2610 0038 0168     		ldr	r1, [r0]
 2611 003a 4B68     		ldr	r3, [r1, #4]
 2612 003c 43F00103 		orr	r3, r3, #1
 2613 0040 4B60     		str	r3, [r1, #4]
1627:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   htim->Instance->CR2 |= CommutationSource;
 2614              		.loc 1 1627 0
 2615 0042 0168     		ldr	r1, [r0]
 2616 0044 4B68     		ldr	r3, [r1, #4]
 2617 0046 23F00403 		bic	r3, r3, #4
 2618 004a 4B60     		str	r3, [r1, #4]
1628:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2619              		.loc 1 1628 0
 2620 004c 0368     		ldr	r3, [r0]
 2621 004e 5968     		ldr	r1, [r3, #4]
 2622 0050 0A43     		orrs	r2, r2, r1
 2623              	.LVL179:
 2624 0052 5A60     		str	r2, [r3, #4]
1632:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set the DMA error callback */
 2625              		.loc 1 1632 0
 2626 0054 436B     		ldr	r3, [r0, #52]
 2627 0056 0A4A     		ldr	r2, .L181
 2628 0058 DA63     		str	r2, [r3, #60]
1634:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2629              		.loc 1 1634 0
 2630 005a 436B     		ldr	r3, [r0, #52]
 2631 005c 094A     		ldr	r2, .L181+4
 2632 005e DA64     		str	r2, [r3, #76]
1637:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2633              		.loc 1 1637 0
 2634 0060 0268     		ldr	r2, [r0]
 2635 0062 D368     		ldr	r3, [r2, #12]
 2636 0064 43F40053 		orr	r3, r3, #8192
 2637 0068 D360     		str	r3, [r2, #12]
1639:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2638              		.loc 1 1639 0
 2639 006a 0023     		movs	r3, #0
 2640 006c 80F83C30 		strb	r3, [r0, #60]
1641:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }  
 2641              		.loc 1 1641 0
 2642 0070 1846     		mov	r0, r3
 2643              	.LVL180:
 2644 0072 01E0     		b	.L174
ARM GAS  /tmp/cchzUtnS.s 			page 98


 2645              	.LVL181:
 2646              	.L178:
 2647              	.LCFI43:
 2648              		.cfi_def_cfa_offset 0
 2649              		.cfi_restore 4
1614:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2650              		.loc 1 1614 0
 2651 0074 0220     		movs	r0, #2
 2652              	.LVL182:
 2653 0076 7047     		bx	lr
 2654              	.LVL183:
 2655              	.L174:
 2656              	.LCFI44:
 2657              		.cfi_def_cfa_offset 4
 2658              		.cfi_offset 4, -4
1642:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2659              		.loc 1 1642 0
 2660 0078 5DF8044B 		ldr	r4, [sp], #4
 2661              	.LCFI45:
 2662              		.cfi_restore 4
 2663              		.cfi_def_cfa_offset 0
 2664 007c 7047     		bx	lr
 2665              	.L182:
 2666 007e 00BF     		.align	2
 2667              	.L181:
 2668 0080 00000000 		.word	TIMEx_DMACommutationCplt
 2669 0084 00000000 		.word	TIM_DMAError
 2670              		.cfi_endproc
 2671              	.LFE164:
 2673              		.section	.text.HAL_TIMEx_MasterConfigSynchronization,"ax",%progbits
 2674              		.align	2
 2675              		.global	HAL_TIMEx_MasterConfigSynchronization
 2676              		.thumb
 2677              		.thumb_func
 2679              	HAL_TIMEx_MasterConfigSynchronization:
 2680              	.LFB165:
1654:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpcr2;  
 2681              		.loc 1 1654 0
 2682              		.cfi_startproc
 2683              		@ args = 0, pretend = 0, frame = 0
 2684              		@ frame_needed = 0, uses_anonymous_args = 0
 2685              		@ link register save eliminated.
 2686              	.LVL184:
1664:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2687              		.loc 1 1664 0
 2688 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2689 0004 012B     		cmp	r3, #1
 2690 0006 20D0     		beq	.L186
1654:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpcr2;  
 2691              		.loc 1 1654 0 discriminator 2
 2692 0008 70B4     		push	{r4, r5, r6}
 2693              	.LCFI46:
 2694              		.cfi_def_cfa_offset 12
 2695              		.cfi_offset 4, -12
 2696              		.cfi_offset 5, -8
 2697              		.cfi_offset 6, -4
1664:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
ARM GAS  /tmp/cchzUtnS.s 			page 99


 2698              		.loc 1 1664 0 discriminator 2
 2699 000a 0123     		movs	r3, #1
 2700 000c 80F83C30 		strb	r3, [r0, #60]
1667:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2701              		.loc 1 1667 0 discriminator 2
 2702 0010 0368     		ldr	r3, [r0]
 2703 0012 5A68     		ldr	r2, [r3, #4]
 2704              	.LVL185:
1670:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2705              		.loc 1 1670 0 discriminator 2
 2706 0014 9D68     		ldr	r5, [r3, #8]
 2707              	.LVL186:
1673:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 2708              		.loc 1 1673 0 discriminator 2
 2709 0016 0F4C     		ldr	r4, .L189
 2710 0018 0F4E     		ldr	r6, .L189+4
 2711 001a A342     		cmp	r3, r4
 2712 001c 18BF     		it	ne
 2713 001e B342     		cmpne	r3, r6
 2714 0020 03D1     		bne	.L185
1679:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     /* Select the TRGO2 source*/
 2715              		.loc 1 1679 0
 2716 0022 22F47002 		bic	r2, r2, #15728640
 2717              	.LVL187:
1681:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 2718              		.loc 1 1681 0
 2719 0026 4C68     		ldr	r4, [r1, #4]
 2720 0028 2243     		orrs	r2, r2, r4
 2721              	.LVL188:
 2722              	.L185:
1685:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Select the TRGO source */
 2723              		.loc 1 1685 0
 2724 002a 22F07002 		bic	r2, r2, #112
 2725              	.LVL189:
1687:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2726              		.loc 1 1687 0
 2727 002e 0C68     		ldr	r4, [r1]
 2728 0030 2243     		orrs	r2, r2, r4
 2729              	.LVL190:
1690:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Set master mode */
 2730              		.loc 1 1690 0
 2731 0032 25F08004 		bic	r4, r5, #128
 2732              	.LVL191:
1692:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2733              		.loc 1 1692 0
 2734 0036 8968     		ldr	r1, [r1, #8]
 2735              	.LVL192:
 2736 0038 2143     		orrs	r1, r1, r4
 2737              	.LVL193:
1695:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2738              		.loc 1 1695 0
 2739 003a 5A60     		str	r2, [r3, #4]
1698:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2740              		.loc 1 1698 0
 2741 003c 0368     		ldr	r3, [r0]
 2742 003e 9960     		str	r1, [r3, #8]
1700:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 100


 2743              		.loc 1 1700 0
 2744 0040 0023     		movs	r3, #0
 2745 0042 80F83C30 		strb	r3, [r0, #60]
1702:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** } 
 2746              		.loc 1 1702 0
 2747 0046 1846     		mov	r0, r3
 2748              	.LVL194:
 2749 0048 01E0     		b	.L184
 2750              	.LVL195:
 2751              	.L186:
 2752              	.LCFI47:
 2753              		.cfi_def_cfa_offset 0
 2754              		.cfi_restore 4
 2755              		.cfi_restore 5
 2756              		.cfi_restore 6
1664:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2757              		.loc 1 1664 0
 2758 004a 0220     		movs	r0, #2
 2759              	.LVL196:
 2760 004c 7047     		bx	lr
 2761              	.LVL197:
 2762              	.L184:
 2763              	.LCFI48:
 2764              		.cfi_def_cfa_offset 12
 2765              		.cfi_offset 4, -12
 2766              		.cfi_offset 5, -8
 2767              		.cfi_offset 6, -4
1703:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                                      
 2768              		.loc 1 1703 0
 2769 004e 70BC     		pop	{r4, r5, r6}
 2770              	.LCFI49:
 2771              		.cfi_restore 6
 2772              		.cfi_restore 5
 2773              		.cfi_restore 4
 2774              		.cfi_def_cfa_offset 0
 2775 0050 7047     		bx	lr
 2776              	.L190:
 2777 0052 00BF     		.align	2
 2778              	.L189:
 2779 0054 00040140 		.word	1073808384
 2780 0058 00000140 		.word	1073807360
 2781              		.cfi_endproc
 2782              	.LFE165:
 2784              		.section	.text.HAL_TIMEx_ConfigBreakDeadTime,"ax",%progbits
 2785              		.align	2
 2786              		.global	HAL_TIMEx_ConfigBreakDeadTime
 2787              		.thumb
 2788              		.thumb_func
 2790              	HAL_TIMEx_ConfigBreakDeadTime:
 2791              	.LFB166:
1716:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpbdtr = 0;
 2792              		.loc 1 1716 0
 2793              		.cfi_startproc
 2794              		@ args = 0, pretend = 0, frame = 0
 2795              		@ frame_needed = 0, uses_anonymous_args = 0
 2796              		@ link register save eliminated.
 2797              	.LVL198:
ARM GAS  /tmp/cchzUtnS.s 			page 101


1734:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2798              		.loc 1 1734 0
 2799 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2800 0004 012B     		cmp	r3, #1
 2801 0006 3ED0     		beq	.L194
1716:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpbdtr = 0;
 2802              		.loc 1 1716 0 discriminator 2
 2803 0008 30B4     		push	{r4, r5}
 2804              	.LCFI50:
 2805              		.cfi_def_cfa_offset 8
 2806              		.cfi_offset 4, -8
 2807              		.cfi_offset 5, -4
1734:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2808              		.loc 1 1734 0 discriminator 2
 2809 000a 0123     		movs	r3, #1
 2810 000c 80F83C30 		strb	r3, [r0, #60]
1739:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
 2811              		.loc 1 1739 0 discriminator 2
 2812 0010 CB68     		ldr	r3, [r1, #12]
 2813              	.LVL199:
1740:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
 2814              		.loc 1 1740 0 discriminator 2
 2815 0012 23F44072 		bic	r2, r3, #768
 2816 0016 8B68     		ldr	r3, [r1, #8]
 2817              	.LVL200:
 2818 0018 1343     		orrs	r3, r3, r2
 2819              	.LVL201:
1741:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
 2820              		.loc 1 1741 0 discriminator 2
 2821 001a 23F48062 		bic	r2, r3, #1024
 2822 001e 4B68     		ldr	r3, [r1, #4]
 2823              	.LVL202:
 2824 0020 1343     		orrs	r3, r3, r2
 2825              	.LVL203:
1742:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
 2826              		.loc 1 1742 0 discriminator 2
 2827 0022 23F40062 		bic	r2, r3, #2048
 2828 0026 0B68     		ldr	r3, [r1]
 2829              	.LVL204:
 2830 0028 1343     		orrs	r3, r3, r2
 2831              	.LVL205:
1743:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
 2832              		.loc 1 1743 0 discriminator 2
 2833 002a 23F48052 		bic	r2, r3, #4096
 2834 002e 0B69     		ldr	r3, [r1, #16]
 2835              	.LVL206:
 2836 0030 1343     		orrs	r3, r3, r2
 2837              	.LVL207:
1744:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
 2838              		.loc 1 1744 0 discriminator 2
 2839 0032 23F40052 		bic	r2, r3, #8192
 2840 0036 4B69     		ldr	r3, [r1, #20]
 2841              	.LVL208:
 2842 0038 1343     		orrs	r3, r3, r2
 2843              	.LVL209:
1745:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_MOE, sBreakDeadTimeConfig->AutomaticOutput);
 2844              		.loc 1 1745 0 discriminator 2
ARM GAS  /tmp/cchzUtnS.s 			page 102


 2845 003a 23F48043 		bic	r3, r3, #16384
 2846              	.LVL210:
 2847 003e 8A6A     		ldr	r2, [r1, #40]
 2848              	.LVL211:
 2849 0040 1343     		orrs	r3, r3, r2
 2850              	.LVL212:
1746:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << BDTR_BKF_SHIFT));
 2851              		.loc 1 1746 0 discriminator 2
 2852 0042 23F40043 		bic	r3, r3, #32768
 2853              	.LVL213:
 2854 0046 1343     		orrs	r3, r3, r2
 2855              	.LVL214:
1747:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2856              		.loc 1 1747 0 discriminator 2
 2857 0048 23F47023 		bic	r3, r3, #983040
 2858              	.LVL215:
 2859 004c 8A69     		ldr	r2, [r1, #24]
 2860              	.LVL216:
 2861 004e 43EA0243 		orr	r3, r3, r2, lsl #16
 2862              	.LVL217:
1749:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 2863              		.loc 1 1749 0 discriminator 2
 2864 0052 0268     		ldr	r2, [r0]
 2865 0054 0E4C     		ldr	r4, .L197
 2866 0056 0F4D     		ldr	r5, .L197+4
 2867 0058 A242     		cmp	r2, r4
 2868 005a 18BF     		it	ne
 2869 005c AA42     		cmpne	r2, r5
 2870 005e 0CD1     		bne	.L193
1756:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     MODIFY_REG(tmpbdtr, TIM_BDTR_BK2E, sBreakDeadTimeConfig->Break2State);
 2871              		.loc 1 1756 0
 2872 0060 23F47003 		bic	r3, r3, #15728640
 2873              	.LVL218:
 2874 0064 4C6A     		ldr	r4, [r1, #36]
 2875 0066 43EA0453 		orr	r3, r3, r4, lsl #20
 2876              	.LVL219:
1757:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     MODIFY_REG(tmpbdtr, TIM_BDTR_BK2P, sBreakDeadTimeConfig->Break2Polarity);
 2877              		.loc 1 1757 0
 2878 006a 23F08073 		bic	r3, r3, #16777216
 2879              	.LVL220:
 2880 006e CC69     		ldr	r4, [r1, #28]
 2881              	.LVL221:
 2882 0070 2343     		orrs	r3, r3, r4
 2883              	.LVL222:
1758:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   }
 2884              		.loc 1 1758 0
 2885 0072 23F00074 		bic	r4, r3, #33554432
 2886 0076 0B6A     		ldr	r3, [r1, #32]
 2887              	.LVL223:
 2888 0078 2343     		orrs	r3, r3, r4
 2889              	.LVL224:
 2890              	.L193:
1764:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2891              		.loc 1 1764 0
 2892 007a 5364     		str	r3, [r2, #68]
1766:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2893              		.loc 1 1766 0
ARM GAS  /tmp/cchzUtnS.s 			page 103


 2894 007c 0023     		movs	r3, #0
 2895              	.LVL225:
 2896 007e 80F83C30 		strb	r3, [r0, #60]
 2897              	.LVL226:
1768:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 2898              		.loc 1 1768 0
 2899 0082 1846     		mov	r0, r3
 2900              	.LVL227:
 2901 0084 01E0     		b	.L192
 2902              	.LVL228:
 2903              	.L194:
 2904              	.LCFI51:
 2905              		.cfi_def_cfa_offset 0
 2906              		.cfi_restore 4
 2907              		.cfi_restore 5
1734:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2908              		.loc 1 1734 0
 2909 0086 0220     		movs	r0, #2
 2910              	.LVL229:
 2911 0088 7047     		bx	lr
 2912              	.LVL230:
 2913              	.L192:
 2914              	.LCFI52:
 2915              		.cfi_def_cfa_offset 8
 2916              		.cfi_offset 4, -8
 2917              		.cfi_offset 5, -4
1769:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #if defined (STM32F765xx) || defined(STM32F767xx) || defined(STM32F769xx) || defined(STM32F777xx) |
 2918              		.loc 1 1769 0
 2919 008a 30BC     		pop	{r4, r5}
 2920              	.LCFI53:
 2921              		.cfi_restore 5
 2922              		.cfi_restore 4
 2923              		.cfi_def_cfa_offset 0
 2924 008c 7047     		bx	lr
 2925              	.L198:
 2926 008e 00BF     		.align	2
 2927              	.L197:
 2928 0090 00040140 		.word	1073808384
 2929 0094 00000140 		.word	1073807360
 2930              		.cfi_endproc
 2931              	.LFE166:
 2933              		.section	.text.HAL_TIMEx_ConfigBreakInput,"ax",%progbits
 2934              		.align	2
 2935              		.global	HAL_TIMEx_ConfigBreakInput
 2936              		.thumb
 2937              		.thumb_func
 2939              	HAL_TIMEx_ConfigBreakInput:
 2940              	.LFB167:
1785:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmporx = 0;
 2941              		.loc 1 1785 0
 2942              		.cfi_startproc
 2943              		@ args = 0, pretend = 0, frame = 0
 2944              		@ frame_needed = 0, uses_anonymous_args = 0
 2945              	.LVL231:
1803:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2946              		.loc 1 1803 0
 2947 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
ARM GAS  /tmp/cchzUtnS.s 			page 104


 2948 0004 012B     		cmp	r3, #1
 2949 0006 4DD0     		beq	.L209
1785:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmporx = 0;
 2950              		.loc 1 1785 0 discriminator 2
 2951 0008 F0B5     		push	{r4, r5, r6, r7, lr}
 2952              	.LCFI54:
 2953              		.cfi_def_cfa_offset 20
 2954              		.cfi_offset 4, -20
 2955              		.cfi_offset 5, -16
 2956              		.cfi_offset 6, -12
 2957              		.cfi_offset 7, -8
 2958              		.cfi_offset 14, -4
1803:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 2959              		.loc 1 1803 0 discriminator 2
 2960 000a 0123     		movs	r3, #1
 2961 000c 80F83C30 		strb	r3, [r0, #60]
1805:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 2962              		.loc 1 1805 0 discriminator 2
 2963 0010 1368     		ldr	r3, [r2]
 2964 0012 012B     		cmp	r3, #1
 2965 0014 0DD0     		beq	.L210
 2966 0016 082B     		cmp	r3, #8
 2967 0018 04D0     		beq	.L203
1790:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2968              		.loc 1 1790 0 discriminator 2
 2969 001a 0024     		movs	r4, #0
1789:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t bkin_polarity_bitpos = 0;
 2970              		.loc 1 1789 0 discriminator 2
 2971 001c A446     		mov	ip, r4
1788:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t bkin_enable_bitpos = 0;
 2972              		.loc 1 1788 0 discriminator 2
 2973 001e 2646     		mov	r6, r4
1787:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t bkin_polarity_mask = 0;
 2974              		.loc 1 1787 0 discriminator 2
 2975 0020 2746     		mov	r7, r4
 2976 0022 0CE0     		b	.L202
 2977              	.L203:
 2978              	.LVL232:
1790:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2979              		.loc 1 1790 0
 2980 0024 0024     		movs	r4, #0
1819:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 2981              		.loc 1 1819 0
 2982 0026 4FF0080C 		mov	ip, #8
1788:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t bkin_enable_bitpos = 0;
 2983              		.loc 1 1788 0
 2984 002a 2646     		mov	r6, r4
1818:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_enable_bitpos = 8;
 2985              		.loc 1 1818 0
 2986 002c 4FF48077 		mov	r7, #256
1821:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 2987              		.loc 1 1821 0
 2988 0030 05E0     		b	.L202
 2989              	.LVL233:
 2990              	.L210:
1812:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 2991              		.loc 1 1812 0
ARM GAS  /tmp/cchzUtnS.s 			page 105


 2992 0032 0924     		movs	r4, #9
1810:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_polarity_mask = TIM1_AF1_BKINP;
 2993              		.loc 1 1810 0
 2994 0034 4FF0000C 		mov	ip, #0
1811:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_polarity_bitpos = 9;
 2995              		.loc 1 1811 0
 2996 0038 4FF40076 		mov	r6, #512
1809:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       bkin_enable_bitpos = 0;
 2997              		.loc 1 1809 0
 2998 003c 0127     		movs	r7, #1
 2999              	.LVL234:
 3000              	.L202:
1827:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 3001              		.loc 1 1827 0
 3002 003e 0129     		cmp	r1, #1
 3003 0040 02D0     		beq	.L205
 3004 0042 0229     		cmp	r1, #2
 3005 0044 15D0     		beq	.L206
 3006 0046 28E0     		b	.L204
 3007              	.L205:
1832:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         
 3008              		.loc 1 1832 0
 3009 0048 D0F800E0 		ldr	lr, [r0]
 3010 004c DEF86050 		ldr	r5, [lr, #96]
 3011              	.LVL235:
1836:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         
 3012              		.loc 1 1836 0
 3013 0050 5168     		ldr	r1, [r2, #4]
 3014              	.LVL236:
 3015 0052 01FA0CF1 		lsl	r1, r1, ip
 3016 0056 6940     		eors	r1, r1, r5
 3017 0058 3940     		ands	r1, r1, r7
 3018 005a 6940     		eors	r1, r1, r5
 3019              	.LVL237:
1838:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
 3020              		.loc 1 1838 0
 3021 005c 082B     		cmp	r3, #8
 3022 005e 05D0     		beq	.L207
 3023              	.LVL238:
1841:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3024              		.loc 1 1841 0
 3025 0060 9368     		ldr	r3, [r2, #8]
 3026 0062 03FA04F4 		lsl	r4, r3, r4
 3027              	.LVL239:
 3028 0066 4C40     		eors	r4, r4, r1
 3029 0068 2640     		ands	r6, r6, r4
 3030              	.LVL240:
 3031 006a 7140     		eors	r1, r1, r6
 3032              	.LVL241:
 3033              	.L207:
1844:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }
 3034              		.loc 1 1844 0
 3035 006c CEF86010 		str	r1, [lr, #96]
1846:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     case TIM_BREAKINPUT_BRK2:
 3036              		.loc 1 1846 0
 3037 0070 13E0     		b	.L204
 3038              	.LVL242:
ARM GAS  /tmp/cchzUtnS.s 			page 106


 3039              	.L206:
1850:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3040              		.loc 1 1850 0
 3041 0072 D0F800E0 		ldr	lr, [r0]
 3042 0076 DEF86450 		ldr	r5, [lr, #100]
 3043              	.LVL243:
1854:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3044              		.loc 1 1854 0
 3045 007a 5168     		ldr	r1, [r2, #4]
 3046              	.LVL244:
 3047 007c 01FA0CF1 		lsl	r1, r1, ip
 3048 0080 6940     		eors	r1, r1, r5
 3049 0082 3940     		ands	r1, r1, r7
 3050 0084 6940     		eors	r1, r1, r5
 3051              	.LVL245:
1856:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
 3052              		.loc 1 1856 0
 3053 0086 082B     		cmp	r3, #8
 3054 0088 05D0     		beq	.L208
 3055              	.LVL246:
1859:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3056              		.loc 1 1859 0
 3057 008a 9368     		ldr	r3, [r2, #8]
 3058 008c 03FA04F4 		lsl	r4, r3, r4
 3059              	.LVL247:
 3060 0090 4C40     		eors	r4, r4, r1
 3061 0092 2640     		ands	r6, r6, r4
 3062              	.LVL248:
 3063 0094 7140     		eors	r1, r1, r6
 3064              	.LVL249:
 3065              	.L208:
1863:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       }
 3066              		.loc 1 1863 0
 3067 0096 CEF86410 		str	r1, [lr, #100]
 3068              	.LVL250:
 3069              	.L204:
1870:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3070              		.loc 1 1870 0
 3071 009a 0023     		movs	r3, #0
 3072 009c 80F83C30 		strb	r3, [r0, #60]
1872:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 3073              		.loc 1 1872 0
 3074 00a0 1846     		mov	r0, r3
 3075              	.LVL251:
 3076 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 3077              	.LVL252:
 3078              	.L209:
 3079              	.LCFI55:
 3080              		.cfi_def_cfa_offset 0
 3081              		.cfi_restore 4
 3082              		.cfi_restore 5
 3083              		.cfi_restore 6
 3084              		.cfi_restore 7
 3085              		.cfi_restore 14
1803:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3086              		.loc 1 1803 0
 3087 00a4 0220     		movs	r0, #2
ARM GAS  /tmp/cchzUtnS.s 			page 107


 3088              	.LVL253:
 3089 00a6 7047     		bx	lr
 3090              		.cfi_endproc
 3091              	.LFE167:
 3093              		.section	.text.HAL_TIMEx_RemapConfig,"ax",%progbits
 3094              		.align	2
 3095              		.global	HAL_TIMEx_RemapConfig
 3096              		.thumb
 3097              		.thumb_func
 3099              	HAL_TIMEx_RemapConfig:
 3100              	.LFB168:
1898:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   __HAL_LOCK(htim);
 3101              		.loc 1 1898 0
 3102              		.cfi_startproc
 3103              		@ args = 0, pretend = 0, frame = 0
 3104              		@ frame_needed = 0, uses_anonymous_args = 0
 3105              		@ link register save eliminated.
 3106              	.LVL254:
1899:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3107              		.loc 1 1899 0
 3108 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3109 0004 012B     		cmp	r3, #1
 3110 0006 09D0     		beq	.L215
1906:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3111              		.loc 1 1906 0 discriminator 2
 3112 0008 0368     		ldr	r3, [r0]
 3113 000a 1965     		str	r1, [r3, #80]
1908:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3114              		.loc 1 1908 0 discriminator 2
 3115 000c 0123     		movs	r3, #1
 3116 000e 80F83D30 		strb	r3, [r0, #61]
1910:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3117              		.loc 1 1910 0 discriminator 2
 3118 0012 0023     		movs	r3, #0
 3119 0014 80F83C30 		strb	r3, [r0, #60]
1912:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 3120              		.loc 1 1912 0 discriminator 2
 3121 0018 1846     		mov	r0, r3
 3122              	.LVL255:
 3123 001a 7047     		bx	lr
 3124              	.LVL256:
 3125              	.L215:
1899:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3126              		.loc 1 1899 0
 3127 001c 0220     		movs	r0, #2
 3128              	.LVL257:
1913:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3129              		.loc 1 1913 0
 3130 001e 7047     		bx	lr
 3131              		.cfi_endproc
 3132              	.LFE168:
 3134              		.section	.text.HAL_TIMEx_GroupChannel5,"ax",%progbits
 3135              		.align	2
 3136              		.global	HAL_TIMEx_GroupChannel5
 3137              		.thumb
 3138              		.thumb_func
 3140              	HAL_TIMEx_GroupChannel5:
ARM GAS  /tmp/cchzUtnS.s 			page 108


 3141              	.LFB169:
1927:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check parameters */
 3142              		.loc 1 1927 0
 3143              		.cfi_startproc
 3144              		@ args = 0, pretend = 0, frame = 0
 3145              		@ frame_needed = 0, uses_anonymous_args = 0
 3146              		@ link register save eliminated.
 3147              	.LVL258:
1933:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3148              		.loc 1 1933 0
 3149 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3150 0004 012B     		cmp	r3, #1
 3151 0006 16D0     		beq	.L218
1927:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check parameters */
 3152              		.loc 1 1927 0 discriminator 2
 3153 0008 10B4     		push	{r4}
 3154              	.LCFI56:
 3155              		.cfi_def_cfa_offset 4
 3156              		.cfi_offset 4, -4
1933:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3157              		.loc 1 1933 0 discriminator 2
 3158 000a 0122     		movs	r2, #1
 3159 000c 80F83C20 		strb	r2, [r0, #60]
1935:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3160              		.loc 1 1935 0 discriminator 2
 3161 0010 0223     		movs	r3, #2
 3162 0012 80F83D30 		strb	r3, [r0, #61]
1938:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3163              		.loc 1 1938 0 discriminator 2
 3164 0016 0468     		ldr	r4, [r0]
 3165 0018 A36D     		ldr	r3, [r4, #88]
 3166 001a 23F06043 		bic	r3, r3, #-536870912
 3167 001e A365     		str	r3, [r4, #88]
1941:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                                    
 3168              		.loc 1 1941 0 discriminator 2
 3169 0020 0368     		ldr	r3, [r0]
 3170 0022 9C6D     		ldr	r4, [r3, #88]
 3171 0024 2143     		orrs	r1, r1, r4
 3172              	.LVL259:
 3173 0026 9965     		str	r1, [r3, #88]
1943:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3174              		.loc 1 1943 0 discriminator 2
 3175 0028 80F83D20 		strb	r2, [r0, #61]
1945:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3176              		.loc 1 1945 0 discriminator 2
 3177 002c 0023     		movs	r3, #0
 3178 002e 80F83C30 		strb	r3, [r0, #60]
1947:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 3179              		.loc 1 1947 0 discriminator 2
 3180 0032 1846     		mov	r0, r3
 3181              	.LVL260:
 3182 0034 01E0     		b	.L217
 3183              	.LVL261:
 3184              	.L218:
 3185              	.LCFI57:
 3186              		.cfi_def_cfa_offset 0
 3187              		.cfi_restore 4
ARM GAS  /tmp/cchzUtnS.s 			page 109


1933:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3188              		.loc 1 1933 0
 3189 0036 0220     		movs	r0, #2
 3190              	.LVL262:
 3191 0038 7047     		bx	lr
 3192              	.LVL263:
 3193              	.L217:
 3194              	.LCFI58:
 3195              		.cfi_def_cfa_offset 4
 3196              		.cfi_offset 4, -4
1948:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** /**
 3197              		.loc 1 1948 0
 3198 003a 5DF8044B 		ldr	r4, [sp], #4
 3199              	.LCFI59:
 3200              		.cfi_restore 4
 3201              		.cfi_def_cfa_offset 0
 3202 003e 7047     		bx	lr
 3203              		.cfi_endproc
 3204              	.LFE169:
 3206              		.section	.text.HAL_TIMEx_CommutationCallback,"ax",%progbits
 3207              		.align	2
 3208              		.weak	HAL_TIMEx_CommutationCallback
 3209              		.thumb
 3210              		.thumb_func
 3212              	HAL_TIMEx_CommutationCallback:
 3213              	.LFB170:
1976:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Prevent unused argument(s) compilation warning */
 3214              		.loc 1 1976 0
 3215              		.cfi_startproc
 3216              		@ args = 0, pretend = 0, frame = 0
 3217              		@ frame_needed = 0, uses_anonymous_args = 0
 3218              		@ link register save eliminated.
 3219              	.LVL264:
 3220 0000 7047     		bx	lr
 3221              		.cfi_endproc
 3222              	.LFE170:
 3224 0002 00BF     		.section	.text.TIMEx_DMACommutationCplt,"ax",%progbits
 3225              		.align	2
 3226              		.global	TIMEx_DMACommutationCplt
 3227              		.thumb
 3228              		.thumb_func
 3230              	TIMEx_DMACommutationCplt:
 3231              	.LFB173:
2042:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3232              		.loc 1 2042 0
 3233              		.cfi_startproc
 3234              		@ args = 0, pretend = 0, frame = 0
 3235              		@ frame_needed = 0, uses_anonymous_args = 0
 3236              	.LVL265:
2042:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3237              		.loc 1 2042 0
 3238 0000 08B5     		push	{r3, lr}
 3239              	.LCFI60:
 3240              		.cfi_def_cfa_offset 8
 3241              		.cfi_offset 3, -8
 3242              		.cfi_offset 14, -4
2043:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
ARM GAS  /tmp/cchzUtnS.s 			page 110


 3243              		.loc 1 2043 0
 3244 0002 806B     		ldr	r0, [r0, #56]
 3245              	.LVL266:
2045:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3246              		.loc 1 2045 0
 3247 0004 0123     		movs	r3, #1
 3248 0006 80F83D30 		strb	r3, [r0, #61]
2050:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 3249              		.loc 1 2050 0
 3250 000a FFF7FEFF 		bl	HAL_TIMEx_CommutationCallback
 3251              	.LVL267:
 3252 000e 08BD     		pop	{r3, pc}
 3253              		.cfi_endproc
 3254              	.LFE173:
 3256              		.section	.text.HAL_TIMEx_BreakCallback,"ax",%progbits
 3257              		.align	2
 3258              		.weak	HAL_TIMEx_BreakCallback
 3259              		.thumb
 3260              		.thumb_func
 3262              	HAL_TIMEx_BreakCallback:
 3263              	.LFB171:
1992:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Prevent unused argument(s) compilation warning */
 3264              		.loc 1 1992 0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 0
 3267              		@ frame_needed = 0, uses_anonymous_args = 0
 3268              		@ link register save eliminated.
 3269              	.LVL268:
 3270 0000 7047     		bx	lr
 3271              		.cfi_endproc
 3272              	.LFE171:
 3274 0002 00BF     		.section	.text.HAL_TIMEx_HallSensor_GetState,"ax",%progbits
 3275              		.align	2
 3276              		.global	HAL_TIMEx_HallSensor_GetState
 3277              		.thumb
 3278              		.thumb_func
 3280              	HAL_TIMEx_HallSensor_GetState:
 3281              	.LFB172:
2027:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   return htim->State;
 3282              		.loc 1 2027 0
 3283              		.cfi_startproc
 3284              		@ args = 0, pretend = 0, frame = 0
 3285              		@ frame_needed = 0, uses_anonymous_args = 0
 3286              		@ link register save eliminated.
 3287              	.LVL269:
2028:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 3288              		.loc 1 2028 0
 3289 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 3290              	.LVL270:
2029:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3291              		.loc 1 2029 0
 3292 0004 7047     		bx	lr
 3293              		.cfi_endproc
 3294              	.LFE172:
 3296 0006 00BF     		.section	.text.HAL_TIM_ConfigOCrefClear,"ax",%progbits
 3297              		.align	2
 3298              		.global	HAL_TIM_ConfigOCrefClear
ARM GAS  /tmp/cchzUtnS.s 			page 111


 3299              		.thumb
 3300              		.thumb_func
 3302              	HAL_TIM_ConfigOCrefClear:
 3303              	.LFB174:
2075:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpsmcr = 0;
 3304              		.loc 1 2075 0
 3305              		.cfi_startproc
 3306              		@ args = 0, pretend = 0, frame = 0
 3307              		@ frame_needed = 0, uses_anonymous_args = 0
 3308              	.LVL271:
2083:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3309              		.loc 1 2083 0
 3310 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3311 0004 012B     		cmp	r3, #1
 3312 0006 7DD0     		beq	.L245
2075:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   uint32_t tmpsmcr = 0;
 3313              		.loc 1 2075 0 discriminator 2
 3314 0008 70B5     		push	{r4, r5, r6, lr}
 3315              	.LCFI61:
 3316              		.cfi_def_cfa_offset 16
 3317              		.cfi_offset 4, -16
 3318              		.cfi_offset 5, -12
 3319              		.cfi_offset 6, -8
 3320              		.cfi_offset 14, -4
 3321 000a 1646     		mov	r6, r2
 3322 000c 0D46     		mov	r5, r1
 3323 000e 0446     		mov	r4, r0
2083:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3324              		.loc 1 2083 0 discriminator 2
 3325 0010 0123     		movs	r3, #1
 3326 0012 80F83C30 		strb	r3, [r0, #60]
2085:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 3327              		.loc 1 2085 0 discriminator 2
 3328 0016 4B68     		ldr	r3, [r1, #4]
 3329 0018 13B1     		cbz	r3, .L229
 3330 001a 012B     		cmp	r3, #1
 3331 001c 06D0     		beq	.L230
 3332 001e 0BE0     		b	.L228
 3333              	.L229:
2090:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3334              		.loc 1 2090 0
 3335 0020 0268     		ldr	r2, [r0]
 3336              	.LVL272:
 3337 0022 9368     		ldr	r3, [r2, #8]
 3338              	.LVL273:
2093:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3339              		.loc 1 2093 0
 3340 0024 23F47F43 		bic	r3, r3, #65280
 3341              	.LVL274:
2096:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****    }
 3342              		.loc 1 2096 0
 3343 0028 9360     		str	r3, [r2, #8]
2098:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3344              		.loc 1 2098 0
 3345 002a 05E0     		b	.L228
 3346              	.LVL275:
 3347              	.L230:
ARM GAS  /tmp/cchzUtnS.s 			page 112


2107:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****                         sClearInputConfig->ClearInputPrescaler,
 3348              		.loc 1 2107 0
 3349 002c 0B69     		ldr	r3, [r1, #16]
 3350 002e 8A68     		ldr	r2, [r1, #8]
 3351              	.LVL276:
 3352 0030 C968     		ldr	r1, [r1, #12]
 3353              	.LVL277:
 3354 0032 0068     		ldr	r0, [r0]
 3355              	.LVL278:
 3356 0034 FFF7FEFF 		bl	TIM_ETR_SetConfig
 3357              	.LVL279:
 3358              	.L228:
2117:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   { 
 3359              		.loc 1 2117 0
 3360 0038 142E     		cmp	r6, #20
 3361 003a 5FD8     		bhi	.L231
 3362 003c DFE806F0 		tbb	[pc, r6]
 3363              	.L233:
 3364 0040 0B       		.byte	(.L232-.L233)/2
 3365 0041 5E       		.byte	(.L231-.L233)/2
 3366 0042 5E       		.byte	(.L231-.L233)/2
 3367 0043 5E       		.byte	(.L231-.L233)/2
 3368 0044 19       		.byte	(.L234-.L233)/2
 3369 0045 5E       		.byte	(.L231-.L233)/2
 3370 0046 5E       		.byte	(.L231-.L233)/2
 3371 0047 5E       		.byte	(.L231-.L233)/2
 3372 0048 27       		.byte	(.L235-.L233)/2
 3373 0049 5E       		.byte	(.L231-.L233)/2
 3374 004a 5E       		.byte	(.L231-.L233)/2
 3375 004b 5E       		.byte	(.L231-.L233)/2
 3376 004c 35       		.byte	(.L236-.L233)/2
 3377 004d 5E       		.byte	(.L231-.L233)/2
 3378 004e 5E       		.byte	(.L231-.L233)/2
 3379 004f 5E       		.byte	(.L231-.L233)/2
 3380 0050 43       		.byte	(.L237-.L233)/2
 3381 0051 5E       		.byte	(.L231-.L233)/2
 3382 0052 5E       		.byte	(.L231-.L233)/2
 3383 0053 5E       		.byte	(.L231-.L233)/2
 3384 0054 51       		.byte	(.L238-.L233)/2
 3385 0055 00       		.p2align 1
 3386              	.L232:
2121:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
 3387              		.loc 1 2121 0
 3388 0056 2B68     		ldr	r3, [r5]
 3389 0058 2BB1     		cbz	r3, .L239
2124:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3390              		.loc 1 2124 0
 3391 005a 2268     		ldr	r2, [r4]
 3392 005c 9369     		ldr	r3, [r2, #24]
 3393 005e 43F08003 		orr	r3, r3, #128
 3394 0062 9361     		str	r3, [r2, #24]
 3395 0064 4AE0     		b	.L231
 3396              	.L239:
2129:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3397              		.loc 1 2129 0
 3398 0066 2268     		ldr	r2, [r4]
 3399 0068 9369     		ldr	r3, [r2, #24]
ARM GAS  /tmp/cchzUtnS.s 			page 113


 3400 006a 23F08003 		bic	r3, r3, #128
 3401 006e 9361     		str	r3, [r2, #24]
 3402 0070 44E0     		b	.L231
 3403              	.L234:
2135:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
 3404              		.loc 1 2135 0
 3405 0072 2B68     		ldr	r3, [r5]
 3406 0074 2BB1     		cbz	r3, .L240
2138:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3407              		.loc 1 2138 0
 3408 0076 2268     		ldr	r2, [r4]
 3409 0078 9369     		ldr	r3, [r2, #24]
 3410 007a 43F40043 		orr	r3, r3, #32768
 3411 007e 9361     		str	r3, [r2, #24]
 3412 0080 3CE0     		b	.L231
 3413              	.L240:
2143:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3414              		.loc 1 2143 0
 3415 0082 2268     		ldr	r2, [r4]
 3416 0084 9369     		ldr	r3, [r2, #24]
 3417 0086 23F40043 		bic	r3, r3, #32768
 3418 008a 9361     		str	r3, [r2, #24]
 3419 008c 36E0     		b	.L231
 3420              	.L235:
2149:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
 3421              		.loc 1 2149 0
 3422 008e 2B68     		ldr	r3, [r5]
 3423 0090 2BB1     		cbz	r3, .L241
2152:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3424              		.loc 1 2152 0
 3425 0092 2268     		ldr	r2, [r4]
 3426 0094 D369     		ldr	r3, [r2, #28]
 3427 0096 43F08003 		orr	r3, r3, #128
 3428 009a D361     		str	r3, [r2, #28]
 3429 009c 2EE0     		b	.L231
 3430              	.L241:
2157:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3431              		.loc 1 2157 0
 3432 009e 2268     		ldr	r2, [r4]
 3433 00a0 D369     		ldr	r3, [r2, #28]
 3434 00a2 23F08003 		bic	r3, r3, #128
 3435 00a6 D361     		str	r3, [r2, #28]
 3436 00a8 28E0     		b	.L231
 3437              	.L236:
2163:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
 3438              		.loc 1 2163 0
 3439 00aa 2B68     		ldr	r3, [r5]
 3440 00ac 2BB1     		cbz	r3, .L242
2166:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3441              		.loc 1 2166 0
 3442 00ae 2268     		ldr	r2, [r4]
 3443 00b0 D369     		ldr	r3, [r2, #28]
 3444 00b2 43F40043 		orr	r3, r3, #32768
 3445 00b6 D361     		str	r3, [r2, #28]
 3446 00b8 20E0     		b	.L231
 3447              	.L242:
2171:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
ARM GAS  /tmp/cchzUtnS.s 			page 114


 3448              		.loc 1 2171 0
 3449 00ba 2268     		ldr	r2, [r4]
 3450 00bc D369     		ldr	r3, [r2, #28]
 3451 00be 23F40043 		bic	r3, r3, #32768
 3452 00c2 D361     		str	r3, [r2, #28]
 3453 00c4 1AE0     		b	.L231
 3454              	.L237:
2177:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
 3455              		.loc 1 2177 0
 3456 00c6 2B68     		ldr	r3, [r5]
 3457 00c8 2BB1     		cbz	r3, .L243
2180:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3458              		.loc 1 2180 0
 3459 00ca 2268     		ldr	r2, [r4]
 3460 00cc 536D     		ldr	r3, [r2, #84]
 3461 00ce 43F08003 		orr	r3, r3, #128
 3462 00d2 5365     		str	r3, [r2, #84]
 3463 00d4 12E0     		b	.L231
 3464              	.L243:
2185:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3465              		.loc 1 2185 0
 3466 00d6 2268     		ldr	r2, [r4]
 3467 00d8 536D     		ldr	r3, [r2, #84]
 3468 00da 23F08003 		bic	r3, r3, #128
 3469 00de 5365     		str	r3, [r2, #84]
 3470 00e0 0CE0     		b	.L231
 3471              	.L238:
2191:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         {
 3472              		.loc 1 2191 0
 3473 00e2 2B68     		ldr	r3, [r5]
 3474 00e4 2BB1     		cbz	r3, .L244
2194:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3475              		.loc 1 2194 0
 3476 00e6 2268     		ldr	r2, [r4]
 3477 00e8 536D     		ldr	r3, [r2, #84]
 3478 00ea 43F40043 		orr	r3, r3, #32768
 3479 00ee 5365     		str	r3, [r2, #84]
 3480 00f0 04E0     		b	.L231
 3481              	.L244:
2199:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****         }
 3482              		.loc 1 2199 0
 3483 00f2 2268     		ldr	r2, [r4]
 3484 00f4 536D     		ldr	r3, [r2, #84]
 3485 00f6 23F40043 		bic	r3, r3, #32768
 3486 00fa 5365     		str	r3, [r2, #84]
 3487              	.L231:
2207:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3488              		.loc 1 2207 0
 3489 00fc 0020     		movs	r0, #0
 3490 00fe 84F83C00 		strb	r0, [r4, #60]
2209:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 3491              		.loc 1 2209 0
 3492 0102 70BD     		pop	{r4, r5, r6, pc}
 3493              	.LVL280:
 3494              	.L245:
 3495              	.LCFI62:
 3496              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cchzUtnS.s 			page 115


 3497              		.cfi_restore 4
 3498              		.cfi_restore 5
 3499              		.cfi_restore 6
 3500              		.cfi_restore 14
2083:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3501              		.loc 1 2083 0
 3502 0104 0220     		movs	r0, #2
 3503              	.LVL281:
 3504 0106 7047     		bx	lr
 3505              		.cfi_endproc
 3506              	.LFE174:
 3508              		.section	.text.HAL_TIM_OC_ConfigChannel,"ax",%progbits
 3509              		.align	2
 3510              		.global	HAL_TIM_OC_ConfigChannel
 3511              		.thumb
 3512              		.thumb_func
 3514              	HAL_TIM_OC_ConfigChannel:
 3515              	.LFB175:
2228:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 3516              		.loc 1 2228 0
 3517              		.cfi_startproc
 3518              		@ args = 0, pretend = 0, frame = 0
 3519              		@ frame_needed = 0, uses_anonymous_args = 0
 3520              	.LVL282:
2235:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3521              		.loc 1 2235 0
 3522 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3523 0004 012B     		cmp	r3, #1
 3524 0006 34D0     		beq	.L258
2228:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 3525              		.loc 1 2228 0 discriminator 2
 3526 0008 10B5     		push	{r4, lr}
 3527              	.LCFI63:
 3528              		.cfi_def_cfa_offset 8
 3529              		.cfi_offset 4, -8
 3530              		.cfi_offset 14, -4
 3531 000a 0446     		mov	r4, r0
2235:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3532              		.loc 1 2235 0 discriminator 2
 3533 000c 0123     		movs	r3, #1
 3534 000e 80F83C30 		strb	r3, [r0, #60]
2237:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3535              		.loc 1 2237 0 discriminator 2
 3536 0012 0223     		movs	r3, #2
 3537 0014 80F83D30 		strb	r3, [r0, #61]
2239:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 3538              		.loc 1 2239 0 discriminator 2
 3539 0018 142A     		cmp	r2, #20
 3540 001a 23D8     		bhi	.L250
 3541 001c DFE802F0 		tbb	[pc, r2]
 3542              	.L252:
 3543 0020 0B       		.byte	(.L251-.L252)/2
 3544 0021 22       		.byte	(.L250-.L252)/2
 3545 0022 22       		.byte	(.L250-.L252)/2
 3546 0023 22       		.byte	(.L250-.L252)/2
 3547 0024 0F       		.byte	(.L253-.L252)/2
 3548 0025 22       		.byte	(.L250-.L252)/2
ARM GAS  /tmp/cchzUtnS.s 			page 116


 3549 0026 22       		.byte	(.L250-.L252)/2
 3550 0027 22       		.byte	(.L250-.L252)/2
 3551 0028 13       		.byte	(.L254-.L252)/2
 3552 0029 22       		.byte	(.L250-.L252)/2
 3553 002a 22       		.byte	(.L250-.L252)/2
 3554 002b 22       		.byte	(.L250-.L252)/2
 3555 002c 17       		.byte	(.L255-.L252)/2
 3556 002d 22       		.byte	(.L250-.L252)/2
 3557 002e 22       		.byte	(.L250-.L252)/2
 3558 002f 22       		.byte	(.L250-.L252)/2
 3559 0030 1B       		.byte	(.L256-.L252)/2
 3560 0031 22       		.byte	(.L250-.L252)/2
 3561 0032 22       		.byte	(.L250-.L252)/2
 3562 0033 22       		.byte	(.L250-.L252)/2
 3563 0034 1F       		.byte	(.L257-.L252)/2
 3564 0035 00       		.p2align 1
 3565              	.L251:
2247:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3566              		.loc 1 2247 0
 3567 0036 0068     		ldr	r0, [r0]
 3568              	.LVL283:
 3569 0038 FFF7FEFF 		bl	TIM_OC1_SetConfig
 3570              	.LVL284:
2249:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3571              		.loc 1 2249 0
 3572 003c 12E0     		b	.L250
 3573              	.LVL285:
 3574              	.L253:
2257:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3575              		.loc 1 2257 0
 3576 003e 0068     		ldr	r0, [r0]
 3577              	.LVL286:
 3578 0040 FFF7FEFF 		bl	TIM_OC2_SetConfig
 3579              	.LVL287:
2259:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3580              		.loc 1 2259 0
 3581 0044 0EE0     		b	.L250
 3582              	.LVL288:
 3583              	.L254:
2267:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3584              		.loc 1 2267 0
 3585 0046 0068     		ldr	r0, [r0]
 3586              	.LVL289:
 3587 0048 FFF7FEFF 		bl	TIM_OC3_SetConfig
 3588              	.LVL290:
2269:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3589              		.loc 1 2269 0
 3590 004c 0AE0     		b	.L250
 3591              	.LVL291:
 3592              	.L255:
2277:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3593              		.loc 1 2277 0
 3594 004e 0068     		ldr	r0, [r0]
 3595              	.LVL292:
 3596 0050 FFF7FEFF 		bl	TIM_OC4_SetConfig
 3597              	.LVL293:
2279:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
ARM GAS  /tmp/cchzUtnS.s 			page 117


 3598              		.loc 1 2279 0
 3599 0054 06E0     		b	.L250
 3600              	.LVL294:
 3601              	.L256:
2287:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3602              		.loc 1 2287 0
 3603 0056 0068     		ldr	r0, [r0]
 3604              	.LVL295:
 3605 0058 FFF7FEFF 		bl	TIM_OC5_SetConfig
 3606              	.LVL296:
2289:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3607              		.loc 1 2289 0
 3608 005c 02E0     		b	.L250
 3609              	.LVL297:
 3610              	.L257:
2297:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3611              		.loc 1 2297 0
 3612 005e 0068     		ldr	r0, [r0]
 3613              	.LVL298:
 3614 0060 FFF7FEFF 		bl	TIM_OC6_SetConfig
 3615              	.LVL299:
 3616              	.L250:
2305:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3617              		.loc 1 2305 0
 3618 0064 0123     		movs	r3, #1
 3619 0066 84F83D30 		strb	r3, [r4, #61]
2307:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3620              		.loc 1 2307 0
 3621 006a 0020     		movs	r0, #0
 3622 006c 84F83C00 		strb	r0, [r4, #60]
2309:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 3623              		.loc 1 2309 0
 3624 0070 10BD     		pop	{r4, pc}
 3625              	.LVL300:
 3626              	.L258:
 3627              	.LCFI64:
 3628              		.cfi_def_cfa_offset 0
 3629              		.cfi_restore 4
 3630              		.cfi_restore 14
2235:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3631              		.loc 1 2235 0
 3632 0072 0220     		movs	r0, #2
 3633              	.LVL301:
 3634 0074 7047     		bx	lr
 3635              		.cfi_endproc
 3636              	.LFE175:
 3638 0076 00BF     		.section	.text.HAL_TIM_PWM_ConfigChannel,"ax",%progbits
 3639              		.align	2
 3640              		.global	HAL_TIM_PWM_ConfigChannel
 3641              		.thumb
 3642              		.thumb_func
 3644              	HAL_TIM_PWM_ConfigChannel:
 3645              	.LFB176:
2330:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   /* Check the parameters */
 3646              		.loc 1 2330 0
 3647              		.cfi_startproc
 3648              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cchzUtnS.s 			page 118


 3649              		@ frame_needed = 0, uses_anonymous_args = 0
 3650              	.LVL302:
 3651 0000 38B5     		push	{r3, r4, r5, lr}
 3652              	.LCFI65:
 3653              		.cfi_def_cfa_offset 16
 3654              		.cfi_offset 3, -16
 3655              		.cfi_offset 4, -12
 3656              		.cfi_offset 5, -8
 3657              		.cfi_offset 14, -4
2338:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3658              		.loc 1 2338 0
 3659 0002 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3660 0006 012B     		cmp	r3, #1
 3661 0008 00F09380 		beq	.L271
 3662 000c 0D46     		mov	r5, r1
 3663 000e 0446     		mov	r4, r0
2338:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3664              		.loc 1 2338 0 is_stmt 0 discriminator 2
 3665 0010 0123     		movs	r3, #1
 3666 0012 80F83C30 		strb	r3, [r0, #60]
2340:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3667              		.loc 1 2340 0 is_stmt 1 discriminator 2
 3668 0016 0223     		movs	r3, #2
 3669 0018 80F83D30 		strb	r3, [r0, #61]
2342:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   {
 3670              		.loc 1 2342 0 discriminator 2
 3671 001c 142A     		cmp	r2, #20
 3672 001e 00F28180 		bhi	.L263
 3673 0022 DFE802F0 		tbb	[pc, r2]
 3674              	.L265:
 3675 0026 0B       		.byte	(.L264-.L265)/2
 3676 0027 7F       		.byte	(.L263-.L265)/2
 3677 0028 7F       		.byte	(.L263-.L265)/2
 3678 0029 7F       		.byte	(.L263-.L265)/2
 3679 002a 1E       		.byte	(.L266-.L265)/2
 3680 002b 7F       		.byte	(.L263-.L265)/2
 3681 002c 7F       		.byte	(.L263-.L265)/2
 3682 002d 7F       		.byte	(.L263-.L265)/2
 3683 002e 32       		.byte	(.L267-.L265)/2
 3684 002f 7F       		.byte	(.L263-.L265)/2
 3685 0030 7F       		.byte	(.L263-.L265)/2
 3686 0031 7F       		.byte	(.L263-.L265)/2
 3687 0032 45       		.byte	(.L268-.L265)/2
 3688 0033 7F       		.byte	(.L263-.L265)/2
 3689 0034 7F       		.byte	(.L263-.L265)/2
 3690 0035 7F       		.byte	(.L263-.L265)/2
 3691 0036 59       		.byte	(.L269-.L265)/2
 3692 0037 7F       		.byte	(.L263-.L265)/2
 3693 0038 7F       		.byte	(.L263-.L265)/2
 3694 0039 7F       		.byte	(.L263-.L265)/2
 3695 003a 6C       		.byte	(.L270-.L265)/2
 3696 003b 00       		.p2align 1
 3697              	.L264:
2350:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3698              		.loc 1 2350 0
 3699 003c 0068     		ldr	r0, [r0]
 3700              	.LVL303:
ARM GAS  /tmp/cchzUtnS.s 			page 119


 3701 003e FFF7FEFF 		bl	TIM_OC1_SetConfig
 3702              	.LVL304:
2353:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3703              		.loc 1 2353 0
 3704 0042 2268     		ldr	r2, [r4]
 3705 0044 9369     		ldr	r3, [r2, #24]
 3706 0046 43F00803 		orr	r3, r3, #8
 3707 004a 9361     		str	r3, [r2, #24]
2356:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
 3708              		.loc 1 2356 0
 3709 004c 2268     		ldr	r2, [r4]
 3710 004e 9369     		ldr	r3, [r2, #24]
 3711 0050 23F00403 		bic	r3, r3, #4
 3712 0054 9361     		str	r3, [r2, #24]
2357:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3713              		.loc 1 2357 0
 3714 0056 2268     		ldr	r2, [r4]
 3715 0058 9169     		ldr	r1, [r2, #24]
 3716 005a 2B69     		ldr	r3, [r5, #16]
 3717 005c 0B43     		orrs	r3, r3, r1
 3718 005e 9361     		str	r3, [r2, #24]
2359:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3719              		.loc 1 2359 0
 3720 0060 60E0     		b	.L263
 3721              	.LVL305:
 3722              	.L266:
2367:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3723              		.loc 1 2367 0
 3724 0062 0068     		ldr	r0, [r0]
 3725              	.LVL306:
 3726 0064 FFF7FEFF 		bl	TIM_OC2_SetConfig
 3727              	.LVL307:
2370:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3728              		.loc 1 2370 0
 3729 0068 2268     		ldr	r2, [r4]
 3730 006a 9369     		ldr	r3, [r2, #24]
 3731 006c 43F40063 		orr	r3, r3, #2048
 3732 0070 9361     		str	r3, [r2, #24]
2373:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8;
 3733              		.loc 1 2373 0
 3734 0072 2268     		ldr	r2, [r4]
 3735 0074 9369     		ldr	r3, [r2, #24]
 3736 0076 23F48063 		bic	r3, r3, #1024
 3737 007a 9361     		str	r3, [r2, #24]
2374:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3738              		.loc 1 2374 0
 3739 007c 2268     		ldr	r2, [r4]
 3740 007e 9369     		ldr	r3, [r2, #24]
 3741 0080 2969     		ldr	r1, [r5, #16]
 3742 0082 43EA0123 		orr	r3, r3, r1, lsl #8
 3743 0086 9361     		str	r3, [r2, #24]
2376:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3744              		.loc 1 2376 0
 3745 0088 4CE0     		b	.L263
 3746              	.LVL308:
 3747              	.L267:
2384:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
ARM GAS  /tmp/cchzUtnS.s 			page 120


 3748              		.loc 1 2384 0
 3749 008a 0068     		ldr	r0, [r0]
 3750              	.LVL309:
 3751 008c FFF7FEFF 		bl	TIM_OC3_SetConfig
 3752              	.LVL310:
2387:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3753              		.loc 1 2387 0
 3754 0090 2268     		ldr	r2, [r4]
 3755 0092 D369     		ldr	r3, [r2, #28]
 3756 0094 43F00803 		orr	r3, r3, #8
 3757 0098 D361     		str	r3, [r2, #28]
2390:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;  
 3758              		.loc 1 2390 0
 3759 009a 2268     		ldr	r2, [r4]
 3760 009c D369     		ldr	r3, [r2, #28]
 3761 009e 23F00403 		bic	r3, r3, #4
 3762 00a2 D361     		str	r3, [r2, #28]
2391:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3763              		.loc 1 2391 0
 3764 00a4 2268     		ldr	r2, [r4]
 3765 00a6 D169     		ldr	r1, [r2, #28]
 3766 00a8 2B69     		ldr	r3, [r5, #16]
 3767 00aa 0B43     		orrs	r3, r3, r1
 3768 00ac D361     		str	r3, [r2, #28]
2393:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3769              		.loc 1 2393 0
 3770 00ae 39E0     		b	.L263
 3771              	.LVL311:
 3772              	.L268:
2401:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3773              		.loc 1 2401 0
 3774 00b0 0068     		ldr	r0, [r0]
 3775              	.LVL312:
 3776 00b2 FFF7FEFF 		bl	TIM_OC4_SetConfig
 3777              	.LVL313:
2404:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3778              		.loc 1 2404 0
 3779 00b6 2268     		ldr	r2, [r4]
 3780 00b8 D369     		ldr	r3, [r2, #28]
 3781 00ba 43F40063 		orr	r3, r3, #2048
 3782 00be D361     		str	r3, [r2, #28]
2407:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8;  
 3783              		.loc 1 2407 0
 3784 00c0 2268     		ldr	r2, [r4]
 3785 00c2 D369     		ldr	r3, [r2, #28]
 3786 00c4 23F48063 		bic	r3, r3, #1024
 3787 00c8 D361     		str	r3, [r2, #28]
2408:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3788              		.loc 1 2408 0
 3789 00ca 2268     		ldr	r2, [r4]
 3790 00cc D369     		ldr	r3, [r2, #28]
 3791 00ce 2969     		ldr	r1, [r5, #16]
 3792 00d0 43EA0123 		orr	r3, r3, r1, lsl #8
 3793 00d4 D361     		str	r3, [r2, #28]
2410:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3794              		.loc 1 2410 0
 3795 00d6 25E0     		b	.L263
ARM GAS  /tmp/cchzUtnS.s 			page 121


 3796              	.LVL314:
 3797              	.L269:
2418:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3798              		.loc 1 2418 0
 3799 00d8 0068     		ldr	r0, [r0]
 3800              	.LVL315:
 3801 00da FFF7FEFF 		bl	TIM_OC5_SetConfig
 3802              	.LVL316:
2421:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3803              		.loc 1 2421 0
 3804 00de 2268     		ldr	r2, [r4]
 3805 00e0 536D     		ldr	r3, [r2, #84]
 3806 00e2 43F00803 		orr	r3, r3, #8
 3807 00e6 5365     		str	r3, [r2, #84]
2424:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR3 |= sConfig->OCFastMode;  
 3808              		.loc 1 2424 0
 3809 00e8 2268     		ldr	r2, [r4]
 3810 00ea 536D     		ldr	r3, [r2, #84]
 3811 00ec 23F00403 		bic	r3, r3, #4
 3812 00f0 5365     		str	r3, [r2, #84]
2425:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3813              		.loc 1 2425 0
 3814 00f2 2268     		ldr	r2, [r4]
 3815 00f4 516D     		ldr	r1, [r2, #84]
 3816 00f6 2B69     		ldr	r3, [r5, #16]
 3817 00f8 0B43     		orrs	r3, r3, r1
 3818 00fa 5365     		str	r3, [r2, #84]
2427:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3819              		.loc 1 2427 0
 3820 00fc 12E0     		b	.L263
 3821              	.LVL317:
 3822              	.L270:
2435:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3823              		.loc 1 2435 0
 3824 00fe 0068     		ldr	r0, [r0]
 3825              	.LVL318:
 3826 0100 FFF7FEFF 		bl	TIM_OC6_SetConfig
 3827              	.LVL319:
2438:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       
 3828              		.loc 1 2438 0
 3829 0104 2268     		ldr	r2, [r4]
 3830 0106 536D     		ldr	r3, [r2, #84]
 3831 0108 43F40063 		orr	r3, r3, #2048
 3832 010c 5365     		str	r3, [r2, #84]
2441:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****       htim->Instance->CCMR3 |= sConfig->OCFastMode << 8;  
 3833              		.loc 1 2441 0
 3834 010e 2268     		ldr	r2, [r4]
 3835 0110 536D     		ldr	r3, [r2, #84]
 3836 0112 23F48063 		bic	r3, r3, #1024
 3837 0116 5365     		str	r3, [r2, #84]
2442:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     }
 3838              		.loc 1 2442 0
 3839 0118 2268     		ldr	r2, [r4]
 3840 011a 536D     		ldr	r3, [r2, #84]
 3841 011c 2969     		ldr	r1, [r5, #16]
 3842 011e 43EA0123 		orr	r3, r3, r1, lsl #8
 3843 0122 5365     		str	r3, [r2, #84]
ARM GAS  /tmp/cchzUtnS.s 			page 122


 3844              	.L263:
2450:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****     
 3845              		.loc 1 2450 0
 3846 0124 0123     		movs	r3, #1
 3847 0126 84F83D30 		strb	r3, [r4, #61]
2452:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3848              		.loc 1 2452 0
 3849 012a 0020     		movs	r0, #0
 3850 012c 84F83C00 		strb	r0, [r4, #60]
2454:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** }
 3851              		.loc 1 2454 0
 3852 0130 38BD     		pop	{r3, r4, r5, pc}
 3853              	.LVL320:
 3854              	.L271:
2338:HALLIB/Src/stm32f7xx_hal_tim_ex.c ****   
 3855              		.loc 1 2338 0
 3856 0132 0220     		movs	r0, #2
 3857              	.LVL321:
2455:HALLIB/Src/stm32f7xx_hal_tim_ex.c **** 
 3858              		.loc 1 2455 0
 3859 0134 38BD     		pop	{r3, r4, r5, pc}
 3860              		.cfi_endproc
 3861              	.LFE176:
 3863 0136 00BF     		.text
 3864              	.Letext0:
 3865              		.file 2 "/opt/5.4.2016q3/arm-none-eabi/include/machine/_default_types.h"
 3866              		.file 3 "/opt/5.4.2016q3/arm-none-eabi/include/sys/_stdint.h"
 3867              		.file 4 "Inc/stm32f767xx.h"
 3868              		.file 5 "Inc/stm32f7xx.h"
 3869              		.file 6 "HALLIB/Inc/stm32f7xx_hal_def.h"
 3870              		.file 7 "HALLIB/Inc/stm32f7xx_hal_dma.h"
 3871              		.file 8 "HALLIB/Inc/stm32f7xx_hal_tim.h"
 3872              		.file 9 "HALLIB/Inc/stm32f7xx_hal_tim_ex.h"
 3873              		.file 10 "CORE/core_cm7.h"
ARM GAS  /tmp/cchzUtnS.s 			page 123


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_tim_ex.c
     /tmp/cchzUtnS.s:21     .text.TIM_CCxNChannelCmd:00000000 $t
     /tmp/cchzUtnS.s:25     .text.TIM_CCxNChannelCmd:00000000 TIM_CCxNChannelCmd
     /tmp/cchzUtnS.s:64     .text.TIM_OC5_SetConfig:00000000 $t
     /tmp/cchzUtnS.s:68     .text.TIM_OC5_SetConfig:00000000 TIM_OC5_SetConfig
     /tmp/cchzUtnS.s:148    .text.TIM_OC5_SetConfig:00000048 $d
     /tmp/cchzUtnS.s:155    .text.TIM_OC6_SetConfig:00000000 $t
     /tmp/cchzUtnS.s:159    .text.TIM_OC6_SetConfig:00000000 TIM_OC6_SetConfig
     /tmp/cchzUtnS.s:240    .text.TIM_OC6_SetConfig:00000048 $d
     /tmp/cchzUtnS.s:247    .text.HAL_TIMEx_HallSensor_MspInit:00000000 $t
     /tmp/cchzUtnS.s:252    .text.HAL_TIMEx_HallSensor_MspInit:00000000 HAL_TIMEx_HallSensor_MspInit
     /tmp/cchzUtnS.s:265    .text.HAL_TIMEx_HallSensor_Init:00000000 $t
     /tmp/cchzUtnS.s:270    .text.HAL_TIMEx_HallSensor_Init:00000000 HAL_TIMEx_HallSensor_Init
     /tmp/cchzUtnS.s:424    .text.HAL_TIMEx_HallSensor_Init:000000c4 $d
     /tmp/cchzUtnS.s:429    .text.HAL_TIMEx_HallSensor_MspDeInit:00000000 $t
     /tmp/cchzUtnS.s:434    .text.HAL_TIMEx_HallSensor_MspDeInit:00000000 HAL_TIMEx_HallSensor_MspDeInit
     /tmp/cchzUtnS.s:447    .text.HAL_TIMEx_HallSensor_DeInit:00000000 $t
     /tmp/cchzUtnS.s:452    .text.HAL_TIMEx_HallSensor_DeInit:00000000 HAL_TIMEx_HallSensor_DeInit
     /tmp/cchzUtnS.s:501    .text.HAL_TIMEx_HallSensor_Start:00000000 $t
     /tmp/cchzUtnS.s:506    .text.HAL_TIMEx_HallSensor_Start:00000000 HAL_TIMEx_HallSensor_Start
     /tmp/cchzUtnS.s:538    .text.HAL_TIMEx_HallSensor_Stop:00000000 $t
     /tmp/cchzUtnS.s:543    .text.HAL_TIMEx_HallSensor_Stop:00000000 HAL_TIMEx_HallSensor_Stop
     /tmp/cchzUtnS.s:586    .text.HAL_TIMEx_HallSensor_Start_IT:00000000 $t
     /tmp/cchzUtnS.s:591    .text.HAL_TIMEx_HallSensor_Start_IT:00000000 HAL_TIMEx_HallSensor_Start_IT
     /tmp/cchzUtnS.s:628    .text.HAL_TIMEx_HallSensor_Stop_IT:00000000 $t
     /tmp/cchzUtnS.s:633    .text.HAL_TIMEx_HallSensor_Stop_IT:00000000 HAL_TIMEx_HallSensor_Stop_IT
     /tmp/cchzUtnS.s:681    .text.HAL_TIMEx_HallSensor_Start_DMA:00000000 $t
     /tmp/cchzUtnS.s:686    .text.HAL_TIMEx_HallSensor_Start_DMA:00000000 HAL_TIMEx_HallSensor_Start_DMA
     /tmp/cchzUtnS.s:778    .text.HAL_TIMEx_HallSensor_Start_DMA:00000074 $d
     /tmp/cchzUtnS.s:784    .text.HAL_TIMEx_HallSensor_Stop_DMA:00000000 $t
     /tmp/cchzUtnS.s:789    .text.HAL_TIMEx_HallSensor_Stop_DMA:00000000 HAL_TIMEx_HallSensor_Stop_DMA
     /tmp/cchzUtnS.s:837    .text.HAL_TIMEx_OCN_Start:00000000 $t
     /tmp/cchzUtnS.s:842    .text.HAL_TIMEx_OCN_Start:00000000 HAL_TIMEx_OCN_Start
     /tmp/cchzUtnS.s:878    .text.HAL_TIMEx_OCN_Stop:00000000 $t
     /tmp/cchzUtnS.s:883    .text.HAL_TIMEx_OCN_Stop:00000000 HAL_TIMEx_OCN_Stop
     /tmp/cchzUtnS.s:941    .text.HAL_TIMEx_OCN_Start_IT:00000000 $t
     /tmp/cchzUtnS.s:946    .text.HAL_TIMEx_OCN_Start_IT:00000000 HAL_TIMEx_OCN_Start_IT
     /tmp/cchzUtnS.s:964    .text.HAL_TIMEx_OCN_Start_IT:0000000c $d
     /tmp/cchzUtnS.s:1037   .text.HAL_TIMEx_OCN_Stop_IT:00000000 $t
     /tmp/cchzUtnS.s:1042   .text.HAL_TIMEx_OCN_Stop_IT:00000000 HAL_TIMEx_OCN_Stop_IT
     /tmp/cchzUtnS.s:1061   .text.HAL_TIMEx_OCN_Stop_IT:0000000c $d
     /tmp/cchzUtnS.s:1165   .text.HAL_TIMEx_OCN_Start_DMA:00000000 $t
     /tmp/cchzUtnS.s:1170   .text.HAL_TIMEx_OCN_Start_DMA:00000000 HAL_TIMEx_OCN_Start_DMA
     /tmp/cchzUtnS.s:1215   .text.HAL_TIMEx_OCN_Start_DMA:0000003a $d
     /tmp/cchzUtnS.s:1366   .text.HAL_TIMEx_OCN_Start_DMA:00000100 $d
     /tmp/cchzUtnS.s:1372   .text.HAL_TIMEx_OCN_Stop_DMA:00000000 $t
     /tmp/cchzUtnS.s:1377   .text.HAL_TIMEx_OCN_Stop_DMA:00000000 HAL_TIMEx_OCN_Stop_DMA
     /tmp/cchzUtnS.s:1395   .text.HAL_TIMEx_OCN_Stop_DMA:0000000c $d
     /tmp/cchzUtnS.s:1488   .text.HAL_TIMEx_PWMN_Start:00000000 $t
     /tmp/cchzUtnS.s:1493   .text.HAL_TIMEx_PWMN_Start:00000000 HAL_TIMEx_PWMN_Start
     /tmp/cchzUtnS.s:1529   .text.HAL_TIMEx_PWMN_Stop:00000000 $t
     /tmp/cchzUtnS.s:1534   .text.HAL_TIMEx_PWMN_Stop:00000000 HAL_TIMEx_PWMN_Stop
     /tmp/cchzUtnS.s:1592   .text.HAL_TIMEx_PWMN_Start_IT:00000000 $t
     /tmp/cchzUtnS.s:1597   .text.HAL_TIMEx_PWMN_Start_IT:00000000 HAL_TIMEx_PWMN_Start_IT
     /tmp/cchzUtnS.s:1615   .text.HAL_TIMEx_PWMN_Start_IT:0000000c $d
     /tmp/cchzUtnS.s:1688   .text.HAL_TIMEx_PWMN_Stop_IT:00000000 $t
ARM GAS  /tmp/cchzUtnS.s 			page 124


     /tmp/cchzUtnS.s:1693   .text.HAL_TIMEx_PWMN_Stop_IT:00000000 HAL_TIMEx_PWMN_Stop_IT
     /tmp/cchzUtnS.s:1712   .text.HAL_TIMEx_PWMN_Stop_IT:0000000c $d
     /tmp/cchzUtnS.s:1816   .text.HAL_TIMEx_PWMN_Start_DMA:00000000 $t
     /tmp/cchzUtnS.s:1821   .text.HAL_TIMEx_PWMN_Start_DMA:00000000 HAL_TIMEx_PWMN_Start_DMA
     /tmp/cchzUtnS.s:1866   .text.HAL_TIMEx_PWMN_Start_DMA:0000003a $d
     /tmp/cchzUtnS.s:2017   .text.HAL_TIMEx_PWMN_Start_DMA:00000100 $d
     /tmp/cchzUtnS.s:2023   .text.HAL_TIMEx_PWMN_Stop_DMA:00000000 $t
     /tmp/cchzUtnS.s:2028   .text.HAL_TIMEx_PWMN_Stop_DMA:00000000 HAL_TIMEx_PWMN_Stop_DMA
     /tmp/cchzUtnS.s:2046   .text.HAL_TIMEx_PWMN_Stop_DMA:0000000c $d
     /tmp/cchzUtnS.s:2139   .text.HAL_TIMEx_OnePulseN_Start:00000000 $t
     /tmp/cchzUtnS.s:2144   .text.HAL_TIMEx_OnePulseN_Start:00000000 HAL_TIMEx_OnePulseN_Start
     /tmp/cchzUtnS.s:2175   .text.HAL_TIMEx_OnePulseN_Stop:00000000 $t
     /tmp/cchzUtnS.s:2180   .text.HAL_TIMEx_OnePulseN_Stop:00000000 HAL_TIMEx_OnePulseN_Stop
     /tmp/cchzUtnS.s:2238   .text.HAL_TIMEx_OnePulseN_Start_IT:00000000 $t
     /tmp/cchzUtnS.s:2243   .text.HAL_TIMEx_OnePulseN_Start_IT:00000000 HAL_TIMEx_OnePulseN_Start_IT
     /tmp/cchzUtnS.s:2284   .text.HAL_TIMEx_OnePulseN_Stop_IT:00000000 $t
     /tmp/cchzUtnS.s:2289   .text.HAL_TIMEx_OnePulseN_Stop_IT:00000000 HAL_TIMEx_OnePulseN_Stop_IT
     /tmp/cchzUtnS.s:2357   .text.HAL_TIMEx_ConfigCommutationEvent:00000000 $t
     /tmp/cchzUtnS.s:2362   .text.HAL_TIMEx_ConfigCommutationEvent:00000000 HAL_TIMEx_ConfigCommutationEvent
     /tmp/cchzUtnS.s:2455   .text.HAL_TIMEx_ConfigCommutationEvent_IT:00000000 $t
     /tmp/cchzUtnS.s:2460   .text.HAL_TIMEx_ConfigCommutationEvent_IT:00000000 HAL_TIMEx_ConfigCommutationEvent_IT
     /tmp/cchzUtnS.s:2558   .text.HAL_TIMEx_ConfigCommutationEvent_DMA:00000000 $t
     /tmp/cchzUtnS.s:2563   .text.HAL_TIMEx_ConfigCommutationEvent_DMA:00000000 HAL_TIMEx_ConfigCommutationEvent_DMA
     /tmp/cchzUtnS.s:2668   .text.HAL_TIMEx_ConfigCommutationEvent_DMA:00000080 $d
     /tmp/cchzUtnS.s:3230   .text.TIMEx_DMACommutationCplt:00000000 TIMEx_DMACommutationCplt
     /tmp/cchzUtnS.s:2674   .text.HAL_TIMEx_MasterConfigSynchronization:00000000 $t
     /tmp/cchzUtnS.s:2679   .text.HAL_TIMEx_MasterConfigSynchronization:00000000 HAL_TIMEx_MasterConfigSynchronization
     /tmp/cchzUtnS.s:2779   .text.HAL_TIMEx_MasterConfigSynchronization:00000054 $d
     /tmp/cchzUtnS.s:2785   .text.HAL_TIMEx_ConfigBreakDeadTime:00000000 $t
     /tmp/cchzUtnS.s:2790   .text.HAL_TIMEx_ConfigBreakDeadTime:00000000 HAL_TIMEx_ConfigBreakDeadTime
     /tmp/cchzUtnS.s:2928   .text.HAL_TIMEx_ConfigBreakDeadTime:00000090 $d
     /tmp/cchzUtnS.s:2934   .text.HAL_TIMEx_ConfigBreakInput:00000000 $t
     /tmp/cchzUtnS.s:2939   .text.HAL_TIMEx_ConfigBreakInput:00000000 HAL_TIMEx_ConfigBreakInput
     /tmp/cchzUtnS.s:3094   .text.HAL_TIMEx_RemapConfig:00000000 $t
     /tmp/cchzUtnS.s:3099   .text.HAL_TIMEx_RemapConfig:00000000 HAL_TIMEx_RemapConfig
     /tmp/cchzUtnS.s:3135   .text.HAL_TIMEx_GroupChannel5:00000000 $t
     /tmp/cchzUtnS.s:3140   .text.HAL_TIMEx_GroupChannel5:00000000 HAL_TIMEx_GroupChannel5
     /tmp/cchzUtnS.s:3207   .text.HAL_TIMEx_CommutationCallback:00000000 $t
     /tmp/cchzUtnS.s:3212   .text.HAL_TIMEx_CommutationCallback:00000000 HAL_TIMEx_CommutationCallback
     /tmp/cchzUtnS.s:3225   .text.TIMEx_DMACommutationCplt:00000000 $t
     /tmp/cchzUtnS.s:3257   .text.HAL_TIMEx_BreakCallback:00000000 $t
     /tmp/cchzUtnS.s:3262   .text.HAL_TIMEx_BreakCallback:00000000 HAL_TIMEx_BreakCallback
     /tmp/cchzUtnS.s:3275   .text.HAL_TIMEx_HallSensor_GetState:00000000 $t
     /tmp/cchzUtnS.s:3280   .text.HAL_TIMEx_HallSensor_GetState:00000000 HAL_TIMEx_HallSensor_GetState
     /tmp/cchzUtnS.s:3297   .text.HAL_TIM_ConfigOCrefClear:00000000 $t
     /tmp/cchzUtnS.s:3302   .text.HAL_TIM_ConfigOCrefClear:00000000 HAL_TIM_ConfigOCrefClear
     /tmp/cchzUtnS.s:3364   .text.HAL_TIM_ConfigOCrefClear:00000040 $d
     /tmp/cchzUtnS.s:3509   .text.HAL_TIM_OC_ConfigChannel:00000000 $t
     /tmp/cchzUtnS.s:3514   .text.HAL_TIM_OC_ConfigChannel:00000000 HAL_TIM_OC_ConfigChannel
     /tmp/cchzUtnS.s:3543   .text.HAL_TIM_OC_ConfigChannel:00000020 $d
     /tmp/cchzUtnS.s:3639   .text.HAL_TIM_PWM_ConfigChannel:00000000 $t
     /tmp/cchzUtnS.s:3644   .text.HAL_TIM_PWM_ConfigChannel:00000000 HAL_TIM_PWM_ConfigChannel
     /tmp/cchzUtnS.s:3675   .text.HAL_TIM_PWM_ConfigChannel:00000026 $d
                     .debug_frame:00000010 $d
     /tmp/cchzUtnS.s:977    .text.HAL_TIMEx_OCN_Start_IT:00000019 $d
     /tmp/cchzUtnS.s:977    .text.HAL_TIMEx_OCN_Start_IT:0000001a $t
     /tmp/cchzUtnS.s:1074   .text.HAL_TIMEx_OCN_Stop_IT:00000019 $d
ARM GAS  /tmp/cchzUtnS.s 			page 125


     /tmp/cchzUtnS.s:1074   .text.HAL_TIMEx_OCN_Stop_IT:0000001a $t
     /tmp/cchzUtnS.s:1228   .text.HAL_TIMEx_OCN_Start_DMA:00000047 $d
     /tmp/cchzUtnS.s:1228   .text.HAL_TIMEx_OCN_Start_DMA:00000048 $t
     /tmp/cchzUtnS.s:1408   .text.HAL_TIMEx_OCN_Stop_DMA:00000019 $d
     /tmp/cchzUtnS.s:1408   .text.HAL_TIMEx_OCN_Stop_DMA:0000001a $t
     /tmp/cchzUtnS.s:1628   .text.HAL_TIMEx_PWMN_Start_IT:00000019 $d
     /tmp/cchzUtnS.s:1628   .text.HAL_TIMEx_PWMN_Start_IT:0000001a $t
     /tmp/cchzUtnS.s:1725   .text.HAL_TIMEx_PWMN_Stop_IT:00000019 $d
     /tmp/cchzUtnS.s:1725   .text.HAL_TIMEx_PWMN_Stop_IT:0000001a $t
     /tmp/cchzUtnS.s:1879   .text.HAL_TIMEx_PWMN_Start_DMA:00000047 $d
     /tmp/cchzUtnS.s:1879   .text.HAL_TIMEx_PWMN_Start_DMA:00000048 $t
     /tmp/cchzUtnS.s:2059   .text.HAL_TIMEx_PWMN_Stop_DMA:00000019 $d
     /tmp/cchzUtnS.s:2059   .text.HAL_TIMEx_PWMN_Stop_DMA:0000001a $t
     /tmp/cchzUtnS.s:3385   .text.HAL_TIM_ConfigOCrefClear:00000055 $d
     /tmp/cchzUtnS.s:3385   .text.HAL_TIM_ConfigOCrefClear:00000056 $t
     /tmp/cchzUtnS.s:3564   .text.HAL_TIM_OC_ConfigChannel:00000035 $d
     /tmp/cchzUtnS.s:3564   .text.HAL_TIM_OC_ConfigChannel:00000036 $t
     /tmp/cchzUtnS.s:3696   .text.HAL_TIM_PWM_ConfigChannel:0000003b $d
     /tmp/cchzUtnS.s:3696   .text.HAL_TIM_PWM_ConfigChannel:0000003c $t

UNDEFINED SYMBOLS
TIM_Base_SetConfig
TIM_TI1_SetConfig
TIM_OC2_SetConfig
TIM_CCxChannelCmd
HAL_DMA_Start_IT
TIM_DMACaptureCplt
TIM_DMAError
TIM_DMADelayPulseCplt
TIM_ETR_SetConfig
TIM_OC1_SetConfig
TIM_OC3_SetConfig
TIM_OC4_SetConfig
